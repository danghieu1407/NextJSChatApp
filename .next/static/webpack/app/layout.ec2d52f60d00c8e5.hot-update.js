/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "?da34":
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "?5ddf":
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* (ignored) */

/***/ }),

/***/ "(app-pages-browser)/./node_modules/abort-controller/browser.js":
/*!**************************************************!*\
  !*** ./node_modules/abort-controller/browser.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/*globals self, window */\n\n\n/*eslint-disable @mysticatea/prettier */\nconst { AbortController, AbortSignal } =\n    typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    /* otherwise */ undefined\n/*eslint-enable @mysticatea/prettier */\n\nmodule.exports = AbortController\nmodule.exports.AbortSignal = AbortSignal\nmodule.exports[\"default\"] = AbortController\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9hYm9ydC1jb250cm9sbGVyL2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDWTs7QUFFWjtBQUNBLFFBQVEsK0JBQStCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMEJBQTBCO0FBQzFCLHlCQUFzQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvYWJvcnQtY29udHJvbGxlci9icm93c2VyLmpzP2MzOTkiXSwic291cmNlc0NvbnRlbnQiOlsiLypnbG9iYWxzIHNlbGYsIHdpbmRvdyAqL1xuXCJ1c2Ugc3RyaWN0XCJcblxuLyplc2xpbnQtZGlzYWJsZSBAbXlzdGljYXRlYS9wcmV0dGllciAqL1xuY29uc3QgeyBBYm9ydENvbnRyb2xsZXIsIEFib3J0U2lnbmFsIH0gPVxuICAgIHR5cGVvZiBzZWxmICE9PSBcInVuZGVmaW5lZFwiID8gc2VsZiA6XG4gICAgdHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6XG4gICAgLyogb3RoZXJ3aXNlICovIHVuZGVmaW5lZFxuLyplc2xpbnQtZW5hYmxlIEBteXN0aWNhdGVhL3ByZXR0aWVyICovXG5cbm1vZHVsZS5leHBvcnRzID0gQWJvcnRDb250cm9sbGVyXG5tb2R1bGUuZXhwb3J0cy5BYm9ydFNpZ25hbCA9IEFib3J0U2lnbmFsXG5tb2R1bGUuZXhwb3J0cy5kZWZhdWx0ID0gQWJvcnRDb250cm9sbGVyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/abort-controller/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/is-base64/is-base64.js":
/*!*********************************************!*\
  !*** ./node_modules/is-base64/is-base64.js ***!
  \*********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts(";(function(root) {\n  'use strict';\n\n  function isBase64(v, opts) {\n    if (v instanceof Boolean || typeof v === 'boolean') {\n      return false\n    }\n\n    if (!(opts instanceof Object)) {\n      opts = {}\n    }\n\n    if (opts.allowEmpty === false && v === '') {\n      return false\n    }\n\n    var regex = '(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?'\n    var mimeRegex = '(data:\\\\w+\\\\/[a-zA-Z\\\\+\\\\-\\\\.]+;base64,)'\n\n    if (opts.mimeRequired === true) {\n      regex =  mimeRegex + regex\n    } else if (opts.allowMime === true) {\n      regex = mimeRegex + '?' + regex\n    }\n\n    if (opts.paddingRequired === false) {\n      regex = '(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}(==)?|[A-Za-z0-9+\\\\/]{3}=?)?'\n    }\n\n    return (new RegExp('^' + regex + '$', 'gi')).test(v)\n  }\n\n  if (true) {\n    if ( true && module.exports) {\n      exports = module.exports = isBase64\n    }\n    exports.isBase64 = isBase64\n  } else {}\n})(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9pcy1iYXNlNjQvaXMtYmFzZTY0LmpzIiwibWFwcGluZ3MiOiJBQUFBLENBQUM7QUFDRDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLG9DQUFvQyxFQUFFLHFCQUFxQixFQUFFLGtCQUFrQixFQUFFO0FBQ2pGLHFEQUFxRDs7QUFFckQ7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0Esa0NBQWtDLEVBQUUscUJBQXFCLEVBQUUsc0JBQXNCLEVBQUU7QUFDbkY7O0FBRUE7QUFDQTs7QUFFQSxNQUFNLElBQThCO0FBQ3BDLFFBQVEsS0FBNkI7QUFDckM7QUFDQTtBQUNBLElBQUksZ0JBQWdCO0FBQ3BCLElBQUksS0FBSyxFQU1OO0FBQ0gsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvaXMtYmFzZTY0L2lzLWJhc2U2NC5qcz9hMjA1Il0sInNvdXJjZXNDb250ZW50IjpbIjsoZnVuY3Rpb24ocm9vdCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgZnVuY3Rpb24gaXNCYXNlNjQodiwgb3B0cykge1xuICAgIGlmICh2IGluc3RhbmNlb2YgQm9vbGVhbiB8fCB0eXBlb2YgdiA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG5cbiAgICBpZiAoIShvcHRzIGluc3RhbmNlb2YgT2JqZWN0KSkge1xuICAgICAgb3B0cyA9IHt9XG4gICAgfVxuXG4gICAgaWYgKG9wdHMuYWxsb3dFbXB0eSA9PT0gZmFsc2UgJiYgdiA9PT0gJycpIHtcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cblxuICAgIHZhciByZWdleCA9ICcoPzpbQS1aYS16MC05K1xcXFwvXXs0fSkqKD86W0EtWmEtejAtOStcXFxcL117Mn09PXxbQS1aYS16MC05K1xcL117M309KT8nXG4gICAgdmFyIG1pbWVSZWdleCA9ICcoZGF0YTpcXFxcdytcXFxcL1thLXpBLVpcXFxcK1xcXFwtXFxcXC5dKztiYXNlNjQsKSdcblxuICAgIGlmIChvcHRzLm1pbWVSZXF1aXJlZCA9PT0gdHJ1ZSkge1xuICAgICAgcmVnZXggPSAgbWltZVJlZ2V4ICsgcmVnZXhcbiAgICB9IGVsc2UgaWYgKG9wdHMuYWxsb3dNaW1lID09PSB0cnVlKSB7XG4gICAgICByZWdleCA9IG1pbWVSZWdleCArICc/JyArIHJlZ2V4XG4gICAgfVxuXG4gICAgaWYgKG9wdHMucGFkZGluZ1JlcXVpcmVkID09PSBmYWxzZSkge1xuICAgICAgcmVnZXggPSAnKD86W0EtWmEtejAtOStcXFxcL117NH0pKig/OltBLVphLXowLTkrXFxcXC9dezJ9KD09KT98W0EtWmEtejAtOStcXFxcL117M309Pyk/J1xuICAgIH1cblxuICAgIHJldHVybiAobmV3IFJlZ0V4cCgnXicgKyByZWdleCArICckJywgJ2dpJykpLnRlc3QodilcbiAgfVxuXG4gIGlmICh0eXBlb2YgZXhwb3J0cyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcbiAgICAgIGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGlzQmFzZTY0XG4gICAgfVxuICAgIGV4cG9ydHMuaXNCYXNlNjQgPSBpc0Jhc2U2NFxuICB9IGVsc2UgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShbXSwgZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gaXNCYXNlNjRcbiAgICB9KVxuICB9IGVsc2Uge1xuICAgIHJvb3QuaXNCYXNlNjQgPSBpc0Jhc2U2NFxuICB9XG59KSh0aGlzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/is-base64/is-base64.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/globals.css":
/*!*************************!*\
  !*** ./app/globals.css ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"feb573cf29df\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9nbG9iYWxzLmNzcyIsIm1hcHBpbmdzIjoiO0FBQUEsK0RBQWUsY0FBYztBQUM3QixJQUFJLElBQVUsSUFBSSxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2dsb2JhbHMuY3NzP2I3M2QiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgXCJmZWI1NzNjZjI5ZGZcIlxuaWYgKG1vZHVsZS5ob3QpIHsgbW9kdWxlLmhvdC5hY2NlcHQoKSB9XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/hooks/useActiveChannel.ts":
/*!***************************************!*\
  !*** ./app/hooks/useActiveChannel.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _useActiveList__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./useActiveList */ \"(app-pages-browser)/./app/hooks/useActiveList.ts\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _libs_pusher__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../libs/pusher */ \"(app-pages-browser)/./app/libs/pusher.ts\");\n\n\n\nconst useActiveChannel = ()=>{\n    const { set, add, remove } = (0,_useActiveList__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    const [activeChannel, setActiveChannel] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        let channel = activeChannel;\n        if (!channel) {\n            channel = _libs_pusher__WEBPACK_IMPORTED_MODULE_2__.pusherClient;\n        }\n    }, []);\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useActiveChannel);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9ob29rcy91c2VBY3RpdmVDaGFubmVsLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQzRDO0FBQ0E7QUFDRTtBQUU5QyxNQUFNSSxtQkFBbUI7SUFDckIsTUFBTSxFQUFFQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsTUFBTSxFQUFFLEdBQUdQLDBEQUFhQTtJQUMxQyxNQUFNLENBQUNRLGVBQWVDLGlCQUFpQixHQUFHUCwrQ0FBUUEsQ0FBaUI7SUFFbkVELGdEQUFTQSxDQUFDO1FBQ04sSUFBSVMsVUFBVUY7UUFDZCxJQUFJLENBQUNFLFNBQVM7WUFDVkEsVUFBVVAsc0RBQVlBO1FBQzFCO0lBQ0osR0FBRyxFQUFFO0FBQ1Q7QUFFQSwrREFBZUMsZ0JBQWdCQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2FwcC9ob29rcy91c2VBY3RpdmVDaGFubmVsLnRzPzU1M2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbm5lbCB9IGZyb20gXCJwdXNoZXItanNcIjtcclxuaW1wb3J0IHVzZUFjdGl2ZUxpc3QgZnJvbSBcIi4vdXNlQWN0aXZlTGlzdFwiO1xyXG5pbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IHB1c2hlckNsaWVudCB9IGZyb20gXCIuLi9saWJzL3B1c2hlclwiO1xyXG5cclxuY29uc3QgdXNlQWN0aXZlQ2hhbm5lbCA9ICgpID0+IHtcclxuICAgIGNvbnN0IHsgc2V0LCBhZGQsIHJlbW92ZSB9ID0gdXNlQWN0aXZlTGlzdCgpO1xyXG4gICAgY29uc3QgW2FjdGl2ZUNoYW5uZWwsIHNldEFjdGl2ZUNoYW5uZWxdID0gdXNlU3RhdGU8Q2hhbm5lbCB8IG51bGw+KG51bGwpO1xyXG5cclxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgbGV0IGNoYW5uZWwgPSBhY3RpdmVDaGFubmVsO1xyXG4gICAgICAgIGlmICghY2hhbm5lbCkge1xyXG4gICAgICAgICAgICBjaGFubmVsID0gcHVzaGVyQ2xpZW50XHJcbiAgICAgICAgfVxyXG4gICAgfSwgW10pO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCB1c2VBY3RpdmVDaGFubmVsOyJdLCJuYW1lcyI6WyJ1c2VBY3RpdmVMaXN0IiwidXNlRWZmZWN0IiwidXNlU3RhdGUiLCJwdXNoZXJDbGllbnQiLCJ1c2VBY3RpdmVDaGFubmVsIiwic2V0IiwiYWRkIiwicmVtb3ZlIiwiYWN0aXZlQ2hhbm5lbCIsInNldEFjdGl2ZUNoYW5uZWwiLCJjaGFubmVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/hooks/useActiveChannel.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/libs/pusher.ts":
/*!****************************!*\
  !*** ./app/libs/pusher.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pusherClient: function() { return /* binding */ pusherClient; },\n/* harmony export */   pusherSever: function() { return /* binding */ pusherSever; }\n/* harmony export */ });\n/* harmony import */ var pusher__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! pusher */ \"(app-pages-browser)/./node_modules/pusher/lib/pusher.js\");\n/* harmony import */ var pusher__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(pusher__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var pusher_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pusher-js */ \"(app-pages-browser)/./node_modules/pusher-js/dist/web/pusher.js\");\n/* harmony import */ var pusher_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(pusher_js__WEBPACK_IMPORTED_MODULE_1__);\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n\n\nconst pusherSever = new (pusher__WEBPACK_IMPORTED_MODULE_0___default())({\n    appId: process.env.PUSHER_APP_ID,\n    key: \"1971ad4aba4bc21cd651\",\n    secret: process.env.PUSHER_SECRET,\n    cluster: \"ap1\",\n    useTLS: true\n});\nconst pusherClient = new (pusher_js__WEBPACK_IMPORTED_MODULE_1___default())(\"1971ad4aba4bc21cd651\", {\n    channelAuthorization: {\n        endpoint: \"/api/pusher/auth\",\n        transport: \"ajax\"\n    },\n    cluster: \"ap1\"\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9saWJzL3B1c2hlci50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWlDO0FBQ0k7QUFFOUIsTUFBTUUsY0FBYyxJQUFJRiwrQ0FBV0EsQ0FBQztJQUN2Q0csT0FBT0MsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDQyxhQUFhO0lBQ2hDQyxLQUFLSCxzQkFBc0M7SUFDM0NLLFFBQVFMLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0ssYUFBYTtJQUNqQ0MsU0FBUztJQUNUQyxRQUFRO0FBQ1osR0FBRztBQUVJLE1BQU1DLGVBQWUsSUFBSVosa0RBQVlBLENBQ3hDRyxzQkFBc0MsRUFDdEM7SUFDSVUsc0JBQXNCO1FBQ2xCQyxVQUFVO1FBQ1ZDLFdBQVc7SUFDZjtJQUNBTCxTQUFTO0FBQ2IsR0FDSCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvbGlicy9wdXNoZXIudHM/YWEzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUHVzaGVyU2V2ZXIgZnJvbSBcInB1c2hlclwiO1xyXG5pbXBvcnQgUHVoc2VyQ2xpZW50IGZyb20gXCJwdXNoZXItanNcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBwdXNoZXJTZXZlciA9IG5ldyBQdXNoZXJTZXZlcih7XHJcbiAgICBhcHBJZDogcHJvY2Vzcy5lbnYuUFVTSEVSX0FQUF9JRCEsXHJcbiAgICBrZXk6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1BVU0hFUl9BUFBfS0VZISxcclxuICAgIHNlY3JldDogcHJvY2Vzcy5lbnYuUFVTSEVSX1NFQ1JFVCEsXHJcbiAgICBjbHVzdGVyOiAnYXAxJyxcclxuICAgIHVzZVRMUzogdHJ1ZSxcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgcHVzaGVyQ2xpZW50ID0gbmV3IFB1aHNlckNsaWVudChcclxuICAgIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1BVU0hFUl9BUFBfS0VZISxcclxuICAgIHtcclxuICAgICAgICBjaGFubmVsQXV0aG9yaXphdGlvbjoge1xyXG4gICAgICAgICAgICBlbmRwb2ludDogJy9hcGkvcHVzaGVyL2F1dGgnLFxyXG4gICAgICAgICAgICB0cmFuc3BvcnQ6ICdhamF4J1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2x1c3RlcjogJ2FwMScsXHJcbiAgICB9XHJcbikgIl0sIm5hbWVzIjpbIlB1c2hlclNldmVyIiwiUHVoc2VyQ2xpZW50IiwicHVzaGVyU2V2ZXIiLCJhcHBJZCIsInByb2Nlc3MiLCJlbnYiLCJQVVNIRVJfQVBQX0lEIiwia2V5IiwiTkVYVF9QVUJMSUNfUFVTSEVSX0FQUF9LRVkiLCJzZWNyZXQiLCJQVVNIRVJfU0VDUkVUIiwiY2x1c3RlciIsInVzZVRMUyIsInB1c2hlckNsaWVudCIsImNoYW5uZWxBdXRob3JpemF0aW9uIiwiZW5kcG9pbnQiLCJ0cmFuc3BvcnQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/libs/pusher.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/next/dist/compiled/buffer/index.js ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={675:function(e,r){\"use strict\";r.byteLength=byteLength;r.toByteArray=toByteArray;r.fromByteArray=fromByteArray;var t=[];var f=[];var n=typeof Uint8Array!==\"undefined\"?Uint8Array:Array;var i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(var o=0,u=i.length;o<u;++o){t[o]=i[o];f[i.charCodeAt(o)]=o}f[\"-\".charCodeAt(0)]=62;f[\"_\".charCodeAt(0)]=63;function getLens(e){var r=e.length;if(r%4>0){throw new Error(\"Invalid string. Length must be a multiple of 4\")}var t=e.indexOf(\"=\");if(t===-1)t=r;var f=t===r?0:4-t%4;return[t,f]}function byteLength(e){var r=getLens(e);var t=r[0];var f=r[1];return(t+f)*3/4-f}function _byteLength(e,r,t){return(r+t)*3/4-t}function toByteArray(e){var r;var t=getLens(e);var i=t[0];var o=t[1];var u=new n(_byteLength(e,i,o));var a=0;var s=o>0?i-4:i;var h;for(h=0;h<s;h+=4){r=f[e.charCodeAt(h)]<<18|f[e.charCodeAt(h+1)]<<12|f[e.charCodeAt(h+2)]<<6|f[e.charCodeAt(h+3)];u[a++]=r>>16&255;u[a++]=r>>8&255;u[a++]=r&255}if(o===2){r=f[e.charCodeAt(h)]<<2|f[e.charCodeAt(h+1)]>>4;u[a++]=r&255}if(o===1){r=f[e.charCodeAt(h)]<<10|f[e.charCodeAt(h+1)]<<4|f[e.charCodeAt(h+2)]>>2;u[a++]=r>>8&255;u[a++]=r&255}return u}function tripletToBase64(e){return t[e>>18&63]+t[e>>12&63]+t[e>>6&63]+t[e&63]}function encodeChunk(e,r,t){var f;var n=[];for(var i=r;i<t;i+=3){f=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(e[i+2]&255);n.push(tripletToBase64(f))}return n.join(\"\")}function fromByteArray(e){var r;var f=e.length;var n=f%3;var i=[];var o=16383;for(var u=0,a=f-n;u<a;u+=o){i.push(encodeChunk(e,u,u+o>a?a:u+o))}if(n===1){r=e[f-1];i.push(t[r>>2]+t[r<<4&63]+\"==\")}else if(n===2){r=(e[f-2]<<8)+e[f-1];i.push(t[r>>10]+t[r>>4&63]+t[r<<2&63]+\"=\")}return i.join(\"\")}},72:function(e,r,t){\"use strict\";\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */var f=t(675);var n=t(783);var i=typeof Symbol===\"function\"&&typeof Symbol.for===\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;r.Buffer=Buffer;r.SlowBuffer=SlowBuffer;r.INSPECT_MAX_BYTES=50;var o=2147483647;r.kMaxLength=o;Buffer.TYPED_ARRAY_SUPPORT=typedArraySupport();if(!Buffer.TYPED_ARRAY_SUPPORT&&typeof console!==\"undefined\"&&typeof console.error===\"function\"){console.error(\"This browser lacks typed array (Uint8Array) support which is required by \"+\"`buffer` v5.x. Use `buffer` v4.x if you require old browser support.\")}function typedArraySupport(){try{var e=new Uint8Array(1);var r={foo:function(){return 42}};Object.setPrototypeOf(r,Uint8Array.prototype);Object.setPrototypeOf(e,r);return e.foo()===42}catch(e){return false}}Object.defineProperty(Buffer.prototype,\"parent\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.buffer}});Object.defineProperty(Buffer.prototype,\"offset\",{enumerable:true,get:function(){if(!Buffer.isBuffer(this))return undefined;return this.byteOffset}});function createBuffer(e){if(e>o){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}var r=new Uint8Array(e);Object.setPrototypeOf(r,Buffer.prototype);return r}function Buffer(e,r,t){if(typeof e===\"number\"){if(typeof r===\"string\"){throw new TypeError('The \"string\" argument must be of type string. Received type number')}return allocUnsafe(e)}return from(e,r,t)}Buffer.poolSize=8192;function from(e,r,t){if(typeof e===\"string\"){return fromString(e,r)}if(ArrayBuffer.isView(e)){return fromArrayLike(e)}if(e==null){throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}if(isInstance(e,ArrayBuffer)||e&&isInstance(e.buffer,ArrayBuffer)){return fromArrayBuffer(e,r,t)}if(typeof SharedArrayBuffer!==\"undefined\"&&(isInstance(e,SharedArrayBuffer)||e&&isInstance(e.buffer,SharedArrayBuffer))){return fromArrayBuffer(e,r,t)}if(typeof e===\"number\"){throw new TypeError('The \"value\" argument must not be of type number. Received type number')}var f=e.valueOf&&e.valueOf();if(f!=null&&f!==e){return Buffer.from(f,r,t)}var n=fromObject(e);if(n)return n;if(typeof Symbol!==\"undefined\"&&Symbol.toPrimitive!=null&&typeof e[Symbol.toPrimitive]===\"function\"){return Buffer.from(e[Symbol.toPrimitive](\"string\"),r,t)}throw new TypeError(\"The first argument must be one of type string, Buffer, ArrayBuffer, Array, \"+\"or Array-like Object. Received type \"+typeof e)}Buffer.from=function(e,r,t){return from(e,r,t)};Object.setPrototypeOf(Buffer.prototype,Uint8Array.prototype);Object.setPrototypeOf(Buffer,Uint8Array);function assertSize(e){if(typeof e!==\"number\"){throw new TypeError('\"size\" argument must be of type number')}else if(e<0){throw new RangeError('The value \"'+e+'\" is invalid for option \"size\"')}}function alloc(e,r,t){assertSize(e);if(e<=0){return createBuffer(e)}if(r!==undefined){return typeof t===\"string\"?createBuffer(e).fill(r,t):createBuffer(e).fill(r)}return createBuffer(e)}Buffer.alloc=function(e,r,t){return alloc(e,r,t)};function allocUnsafe(e){assertSize(e);return createBuffer(e<0?0:checked(e)|0)}Buffer.allocUnsafe=function(e){return allocUnsafe(e)};Buffer.allocUnsafeSlow=function(e){return allocUnsafe(e)};function fromString(e,r){if(typeof r!==\"string\"||r===\"\"){r=\"utf8\"}if(!Buffer.isEncoding(r)){throw new TypeError(\"Unknown encoding: \"+r)}var t=byteLength(e,r)|0;var f=createBuffer(t);var n=f.write(e,r);if(n!==t){f=f.slice(0,n)}return f}function fromArrayLike(e){var r=e.length<0?0:checked(e.length)|0;var t=createBuffer(r);for(var f=0;f<r;f+=1){t[f]=e[f]&255}return t}function fromArrayBuffer(e,r,t){if(r<0||e.byteLength<r){throw new RangeError('\"offset\" is outside of buffer bounds')}if(e.byteLength<r+(t||0)){throw new RangeError('\"length\" is outside of buffer bounds')}var f;if(r===undefined&&t===undefined){f=new Uint8Array(e)}else if(t===undefined){f=new Uint8Array(e,r)}else{f=new Uint8Array(e,r,t)}Object.setPrototypeOf(f,Buffer.prototype);return f}function fromObject(e){if(Buffer.isBuffer(e)){var r=checked(e.length)|0;var t=createBuffer(r);if(t.length===0){return t}e.copy(t,0,0,r);return t}if(e.length!==undefined){if(typeof e.length!==\"number\"||numberIsNaN(e.length)){return createBuffer(0)}return fromArrayLike(e)}if(e.type===\"Buffer\"&&Array.isArray(e.data)){return fromArrayLike(e.data)}}function checked(e){if(e>=o){throw new RangeError(\"Attempt to allocate Buffer larger than maximum \"+\"size: 0x\"+o.toString(16)+\" bytes\")}return e|0}function SlowBuffer(e){if(+e!=e){e=0}return Buffer.alloc(+e)}Buffer.isBuffer=function isBuffer(e){return e!=null&&e._isBuffer===true&&e!==Buffer.prototype};Buffer.compare=function compare(e,r){if(isInstance(e,Uint8Array))e=Buffer.from(e,e.offset,e.byteLength);if(isInstance(r,Uint8Array))r=Buffer.from(r,r.offset,r.byteLength);if(!Buffer.isBuffer(e)||!Buffer.isBuffer(r)){throw new TypeError('The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array')}if(e===r)return 0;var t=e.length;var f=r.length;for(var n=0,i=Math.min(t,f);n<i;++n){if(e[n]!==r[n]){t=e[n];f=r[n];break}}if(t<f)return-1;if(f<t)return 1;return 0};Buffer.isEncoding=function isEncoding(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return true;default:return false}};Buffer.concat=function concat(e,r){if(!Array.isArray(e)){throw new TypeError('\"list\" argument must be an Array of Buffers')}if(e.length===0){return Buffer.alloc(0)}var t;if(r===undefined){r=0;for(t=0;t<e.length;++t){r+=e[t].length}}var f=Buffer.allocUnsafe(r);var n=0;for(t=0;t<e.length;++t){var i=e[t];if(isInstance(i,Uint8Array)){i=Buffer.from(i)}if(!Buffer.isBuffer(i)){throw new TypeError('\"list\" argument must be an Array of Buffers')}i.copy(f,n);n+=i.length}return f};function byteLength(e,r){if(Buffer.isBuffer(e)){return e.length}if(ArrayBuffer.isView(e)||isInstance(e,ArrayBuffer)){return e.byteLength}if(typeof e!==\"string\"){throw new TypeError('The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. '+\"Received type \"+typeof e)}var t=e.length;var f=arguments.length>2&&arguments[2]===true;if(!f&&t===0)return 0;var n=false;for(;;){switch(r){case\"ascii\":case\"latin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return utf8ToBytes(e).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"base64\":return base64ToBytes(e).length;default:if(n){return f?-1:utf8ToBytes(e).length}r=(\"\"+r).toLowerCase();n=true}}}Buffer.byteLength=byteLength;function slowToString(e,r,t){var f=false;if(r===undefined||r<0){r=0}if(r>this.length){return\"\"}if(t===undefined||t>this.length){t=this.length}if(t<=0){return\"\"}t>>>=0;r>>>=0;if(t<=r){return\"\"}if(!e)e=\"utf8\";while(true){switch(e){case\"hex\":return hexSlice(this,r,t);case\"utf8\":case\"utf-8\":return utf8Slice(this,r,t);case\"ascii\":return asciiSlice(this,r,t);case\"latin1\":case\"binary\":return latin1Slice(this,r,t);case\"base64\":return base64Slice(this,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return utf16leSlice(this,r,t);default:if(f)throw new TypeError(\"Unknown encoding: \"+e);e=(e+\"\").toLowerCase();f=true}}}Buffer.prototype._isBuffer=true;function swap(e,r,t){var f=e[r];e[r]=e[t];e[t]=f}Buffer.prototype.swap16=function swap16(){var e=this.length;if(e%2!==0){throw new RangeError(\"Buffer size must be a multiple of 16-bits\")}for(var r=0;r<e;r+=2){swap(this,r,r+1)}return this};Buffer.prototype.swap32=function swap32(){var e=this.length;if(e%4!==0){throw new RangeError(\"Buffer size must be a multiple of 32-bits\")}for(var r=0;r<e;r+=4){swap(this,r,r+3);swap(this,r+1,r+2)}return this};Buffer.prototype.swap64=function swap64(){var e=this.length;if(e%8!==0){throw new RangeError(\"Buffer size must be a multiple of 64-bits\")}for(var r=0;r<e;r+=8){swap(this,r,r+7);swap(this,r+1,r+6);swap(this,r+2,r+5);swap(this,r+3,r+4)}return this};Buffer.prototype.toString=function toString(){var e=this.length;if(e===0)return\"\";if(arguments.length===0)return utf8Slice(this,0,e);return slowToString.apply(this,arguments)};Buffer.prototype.toLocaleString=Buffer.prototype.toString;Buffer.prototype.equals=function equals(e){if(!Buffer.isBuffer(e))throw new TypeError(\"Argument must be a Buffer\");if(this===e)return true;return Buffer.compare(this,e)===0};Buffer.prototype.inspect=function inspect(){var e=\"\";var t=r.INSPECT_MAX_BYTES;e=this.toString(\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim();if(this.length>t)e+=\" ... \";return\"<Buffer \"+e+\">\"};if(i){Buffer.prototype[i]=Buffer.prototype.inspect}Buffer.prototype.compare=function compare(e,r,t,f,n){if(isInstance(e,Uint8Array)){e=Buffer.from(e,e.offset,e.byteLength)}if(!Buffer.isBuffer(e)){throw new TypeError('The \"target\" argument must be one of type Buffer or Uint8Array. '+\"Received type \"+typeof e)}if(r===undefined){r=0}if(t===undefined){t=e?e.length:0}if(f===undefined){f=0}if(n===undefined){n=this.length}if(r<0||t>e.length||f<0||n>this.length){throw new RangeError(\"out of range index\")}if(f>=n&&r>=t){return 0}if(f>=n){return-1}if(r>=t){return 1}r>>>=0;t>>>=0;f>>>=0;n>>>=0;if(this===e)return 0;var i=n-f;var o=t-r;var u=Math.min(i,o);var a=this.slice(f,n);var s=e.slice(r,t);for(var h=0;h<u;++h){if(a[h]!==s[h]){i=a[h];o=s[h];break}}if(i<o)return-1;if(o<i)return 1;return 0};function bidirectionalIndexOf(e,r,t,f,n){if(e.length===0)return-1;if(typeof t===\"string\"){f=t;t=0}else if(t>2147483647){t=2147483647}else if(t<-2147483648){t=-2147483648}t=+t;if(numberIsNaN(t)){t=n?0:e.length-1}if(t<0)t=e.length+t;if(t>=e.length){if(n)return-1;else t=e.length-1}else if(t<0){if(n)t=0;else return-1}if(typeof r===\"string\"){r=Buffer.from(r,f)}if(Buffer.isBuffer(r)){if(r.length===0){return-1}return arrayIndexOf(e,r,t,f,n)}else if(typeof r===\"number\"){r=r&255;if(typeof Uint8Array.prototype.indexOf===\"function\"){if(n){return Uint8Array.prototype.indexOf.call(e,r,t)}else{return Uint8Array.prototype.lastIndexOf.call(e,r,t)}}return arrayIndexOf(e,[r],t,f,n)}throw new TypeError(\"val must be string, number or Buffer\")}function arrayIndexOf(e,r,t,f,n){var i=1;var o=e.length;var u=r.length;if(f!==undefined){f=String(f).toLowerCase();if(f===\"ucs2\"||f===\"ucs-2\"||f===\"utf16le\"||f===\"utf-16le\"){if(e.length<2||r.length<2){return-1}i=2;o/=2;u/=2;t/=2}}function read(e,r){if(i===1){return e[r]}else{return e.readUInt16BE(r*i)}}var a;if(n){var s=-1;for(a=t;a<o;a++){if(read(e,a)===read(r,s===-1?0:a-s)){if(s===-1)s=a;if(a-s+1===u)return s*i}else{if(s!==-1)a-=a-s;s=-1}}}else{if(t+u>o)t=o-u;for(a=t;a>=0;a--){var h=true;for(var c=0;c<u;c++){if(read(e,a+c)!==read(r,c)){h=false;break}}if(h)return a}}return-1}Buffer.prototype.includes=function includes(e,r,t){return this.indexOf(e,r,t)!==-1};Buffer.prototype.indexOf=function indexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,true)};Buffer.prototype.lastIndexOf=function lastIndexOf(e,r,t){return bidirectionalIndexOf(this,e,r,t,false)};function hexWrite(e,r,t,f){t=Number(t)||0;var n=e.length-t;if(!f){f=n}else{f=Number(f);if(f>n){f=n}}var i=r.length;if(f>i/2){f=i/2}for(var o=0;o<f;++o){var u=parseInt(r.substr(o*2,2),16);if(numberIsNaN(u))return o;e[t+o]=u}return o}function utf8Write(e,r,t,f){return blitBuffer(utf8ToBytes(r,e.length-t),e,t,f)}function asciiWrite(e,r,t,f){return blitBuffer(asciiToBytes(r),e,t,f)}function latin1Write(e,r,t,f){return asciiWrite(e,r,t,f)}function base64Write(e,r,t,f){return blitBuffer(base64ToBytes(r),e,t,f)}function ucs2Write(e,r,t,f){return blitBuffer(utf16leToBytes(r,e.length-t),e,t,f)}Buffer.prototype.write=function write(e,r,t,f){if(r===undefined){f=\"utf8\";t=this.length;r=0}else if(t===undefined&&typeof r===\"string\"){f=r;t=this.length;r=0}else if(isFinite(r)){r=r>>>0;if(isFinite(t)){t=t>>>0;if(f===undefined)f=\"utf8\"}else{f=t;t=undefined}}else{throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\")}var n=this.length-r;if(t===undefined||t>n)t=n;if(e.length>0&&(t<0||r<0)||r>this.length){throw new RangeError(\"Attempt to write outside buffer bounds\")}if(!f)f=\"utf8\";var i=false;for(;;){switch(f){case\"hex\":return hexWrite(this,e,r,t);case\"utf8\":case\"utf-8\":return utf8Write(this,e,r,t);case\"ascii\":return asciiWrite(this,e,r,t);case\"latin1\":case\"binary\":return latin1Write(this,e,r,t);case\"base64\":return base64Write(this,e,r,t);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return ucs2Write(this,e,r,t);default:if(i)throw new TypeError(\"Unknown encoding: \"+f);f=(\"\"+f).toLowerCase();i=true}}};Buffer.prototype.toJSON=function toJSON(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};function base64Slice(e,r,t){if(r===0&&t===e.length){return f.fromByteArray(e)}else{return f.fromByteArray(e.slice(r,t))}}function utf8Slice(e,r,t){t=Math.min(e.length,t);var f=[];var n=r;while(n<t){var i=e[n];var o=null;var u=i>239?4:i>223?3:i>191?2:1;if(n+u<=t){var a,s,h,c;switch(u){case 1:if(i<128){o=i}break;case 2:a=e[n+1];if((a&192)===128){c=(i&31)<<6|a&63;if(c>127){o=c}}break;case 3:a=e[n+1];s=e[n+2];if((a&192)===128&&(s&192)===128){c=(i&15)<<12|(a&63)<<6|s&63;if(c>2047&&(c<55296||c>57343)){o=c}}break;case 4:a=e[n+1];s=e[n+2];h=e[n+3];if((a&192)===128&&(s&192)===128&&(h&192)===128){c=(i&15)<<18|(a&63)<<12|(s&63)<<6|h&63;if(c>65535&&c<1114112){o=c}}}}if(o===null){o=65533;u=1}else if(o>65535){o-=65536;f.push(o>>>10&1023|55296);o=56320|o&1023}f.push(o);n+=u}return decodeCodePointsArray(f)}var u=4096;function decodeCodePointsArray(e){var r=e.length;if(r<=u){return String.fromCharCode.apply(String,e)}var t=\"\";var f=0;while(f<r){t+=String.fromCharCode.apply(String,e.slice(f,f+=u))}return t}function asciiSlice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n]&127)}return f}function latin1Slice(e,r,t){var f=\"\";t=Math.min(e.length,t);for(var n=r;n<t;++n){f+=String.fromCharCode(e[n])}return f}function hexSlice(e,r,t){var f=e.length;if(!r||r<0)r=0;if(!t||t<0||t>f)t=f;var n=\"\";for(var i=r;i<t;++i){n+=s[e[i]]}return n}function utf16leSlice(e,r,t){var f=e.slice(r,t);var n=\"\";for(var i=0;i<f.length;i+=2){n+=String.fromCharCode(f[i]+f[i+1]*256)}return n}Buffer.prototype.slice=function slice(e,r){var t=this.length;e=~~e;r=r===undefined?t:~~r;if(e<0){e+=t;if(e<0)e=0}else if(e>t){e=t}if(r<0){r+=t;if(r<0)r=0}else if(r>t){r=t}if(r<e)r=e;var f=this.subarray(e,r);Object.setPrototypeOf(f,Buffer.prototype);return f};function checkOffset(e,r,t){if(e%1!==0||e<0)throw new RangeError(\"offset is not uint\");if(e+r>t)throw new RangeError(\"Trying to access beyond buffer length\")}Buffer.prototype.readUIntLE=function readUIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}return f};Buffer.prototype.readUIntBE=function readUIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t){checkOffset(e,r,this.length)}var f=this[e+--r];var n=1;while(r>0&&(n*=256)){f+=this[e+--r]*n}return f};Buffer.prototype.readUInt8=function readUInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);return this[e]};Buffer.prototype.readUInt16LE=function readUInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]|this[e+1]<<8};Buffer.prototype.readUInt16BE=function readUInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);return this[e]<<8|this[e+1]};Buffer.prototype.readUInt32LE=function readUInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216};Buffer.prototype.readUInt32BE=function readUInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])};Buffer.prototype.readIntLE=function readIntLE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=this[e];var n=1;var i=0;while(++i<r&&(n*=256)){f+=this[e+i]*n}n*=128;if(f>=n)f-=Math.pow(2,8*r);return f};Buffer.prototype.readIntBE=function readIntBE(e,r,t){e=e>>>0;r=r>>>0;if(!t)checkOffset(e,r,this.length);var f=r;var n=1;var i=this[e+--f];while(f>0&&(n*=256)){i+=this[e+--f]*n}n*=128;if(i>=n)i-=Math.pow(2,8*r);return i};Buffer.prototype.readInt8=function readInt8(e,r){e=e>>>0;if(!r)checkOffset(e,1,this.length);if(!(this[e]&128))return this[e];return(255-this[e]+1)*-1};Buffer.prototype.readInt16LE=function readInt16LE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e]|this[e+1]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt16BE=function readInt16BE(e,r){e=e>>>0;if(!r)checkOffset(e,2,this.length);var t=this[e+1]|this[e]<<8;return t&32768?t|4294901760:t};Buffer.prototype.readInt32LE=function readInt32LE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24};Buffer.prototype.readInt32BE=function readInt32BE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]};Buffer.prototype.readFloatLE=function readFloatLE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,true,23,4)};Buffer.prototype.readFloatBE=function readFloatBE(e,r){e=e>>>0;if(!r)checkOffset(e,4,this.length);return n.read(this,e,false,23,4)};Buffer.prototype.readDoubleLE=function readDoubleLE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,true,52,8)};Buffer.prototype.readDoubleBE=function readDoubleBE(e,r){e=e>>>0;if(!r)checkOffset(e,8,this.length);return n.read(this,e,false,52,8)};function checkInt(e,r,t,f,n,i){if(!Buffer.isBuffer(e))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(r>n||r<i)throw new RangeError('\"value\" argument is out of bounds');if(t+f>e.length)throw new RangeError(\"Index out of range\")}Buffer.prototype.writeUIntLE=function writeUIntLE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=1;var o=0;this[r]=e&255;while(++o<t&&(i*=256)){this[r+o]=e/i&255}return r+t};Buffer.prototype.writeUIntBE=function writeUIntBE(e,r,t,f){e=+e;r=r>>>0;t=t>>>0;if(!f){var n=Math.pow(2,8*t)-1;checkInt(this,e,r,t,n,0)}var i=t-1;var o=1;this[r+i]=e&255;while(--i>=0&&(o*=256)){this[r+i]=e/o&255}return r+t};Buffer.prototype.writeUInt8=function writeUInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,255,0);this[r]=e&255;return r+1};Buffer.prototype.writeUInt16LE=function writeUInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeUInt16BE=function writeUInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,65535,0);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeUInt32LE=function writeUInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r+3]=e>>>24;this[r+2]=e>>>16;this[r+1]=e>>>8;this[r]=e&255;return r+4};Buffer.prototype.writeUInt32BE=function writeUInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,4294967295,0);this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};Buffer.prototype.writeIntLE=function writeIntLE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=0;var o=1;var u=0;this[r]=e&255;while(++i<t&&(o*=256)){if(e<0&&u===0&&this[r+i-1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeIntBE=function writeIntBE(e,r,t,f){e=+e;r=r>>>0;if(!f){var n=Math.pow(2,8*t-1);checkInt(this,e,r,t,n-1,-n)}var i=t-1;var o=1;var u=0;this[r+i]=e&255;while(--i>=0&&(o*=256)){if(e<0&&u===0&&this[r+i+1]!==0){u=1}this[r+i]=(e/o>>0)-u&255}return r+t};Buffer.prototype.writeInt8=function writeInt8(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,1,127,-128);if(e<0)e=255+e+1;this[r]=e&255;return r+1};Buffer.prototype.writeInt16LE=function writeInt16LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e&255;this[r+1]=e>>>8;return r+2};Buffer.prototype.writeInt16BE=function writeInt16BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,2,32767,-32768);this[r]=e>>>8;this[r+1]=e&255;return r+2};Buffer.prototype.writeInt32LE=function writeInt32LE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);this[r]=e&255;this[r+1]=e>>>8;this[r+2]=e>>>16;this[r+3]=e>>>24;return r+4};Buffer.prototype.writeInt32BE=function writeInt32BE(e,r,t){e=+e;r=r>>>0;if(!t)checkInt(this,e,r,4,2147483647,-2147483648);if(e<0)e=4294967295+e+1;this[r]=e>>>24;this[r+1]=e>>>16;this[r+2]=e>>>8;this[r+3]=e&255;return r+4};function checkIEEE754(e,r,t,f,n,i){if(t+f>e.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\"Index out of range\")}function writeFloat(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,4,34028234663852886e22,-34028234663852886e22)}n.write(e,r,t,f,23,4);return t+4}Buffer.prototype.writeFloatLE=function writeFloatLE(e,r,t){return writeFloat(this,e,r,true,t)};Buffer.prototype.writeFloatBE=function writeFloatBE(e,r,t){return writeFloat(this,e,r,false,t)};function writeDouble(e,r,t,f,i){r=+r;t=t>>>0;if(!i){checkIEEE754(e,r,t,8,17976931348623157e292,-17976931348623157e292)}n.write(e,r,t,f,52,8);return t+8}Buffer.prototype.writeDoubleLE=function writeDoubleLE(e,r,t){return writeDouble(this,e,r,true,t)};Buffer.prototype.writeDoubleBE=function writeDoubleBE(e,r,t){return writeDouble(this,e,r,false,t)};Buffer.prototype.copy=function copy(e,r,t,f){if(!Buffer.isBuffer(e))throw new TypeError(\"argument should be a Buffer\");if(!t)t=0;if(!f&&f!==0)f=this.length;if(r>=e.length)r=e.length;if(!r)r=0;if(f>0&&f<t)f=t;if(f===t)return 0;if(e.length===0||this.length===0)return 0;if(r<0){throw new RangeError(\"targetStart out of bounds\")}if(t<0||t>=this.length)throw new RangeError(\"Index out of range\");if(f<0)throw new RangeError(\"sourceEnd out of bounds\");if(f>this.length)f=this.length;if(e.length-r<f-t){f=e.length-r+t}var n=f-t;if(this===e&&typeof Uint8Array.prototype.copyWithin===\"function\"){this.copyWithin(r,t,f)}else if(this===e&&t<r&&r<f){for(var i=n-1;i>=0;--i){e[i+r]=this[i+t]}}else{Uint8Array.prototype.set.call(e,this.subarray(t,f),r)}return n};Buffer.prototype.fill=function fill(e,r,t,f){if(typeof e===\"string\"){if(typeof r===\"string\"){f=r;r=0;t=this.length}else if(typeof t===\"string\"){f=t;t=this.length}if(f!==undefined&&typeof f!==\"string\"){throw new TypeError(\"encoding must be a string\")}if(typeof f===\"string\"&&!Buffer.isEncoding(f)){throw new TypeError(\"Unknown encoding: \"+f)}if(e.length===1){var n=e.charCodeAt(0);if(f===\"utf8\"&&n<128||f===\"latin1\"){e=n}}}else if(typeof e===\"number\"){e=e&255}else if(typeof e===\"boolean\"){e=Number(e)}if(r<0||this.length<r||this.length<t){throw new RangeError(\"Out of range index\")}if(t<=r){return this}r=r>>>0;t=t===undefined?this.length:t>>>0;if(!e)e=0;var i;if(typeof e===\"number\"){for(i=r;i<t;++i){this[i]=e}}else{var o=Buffer.isBuffer(e)?e:Buffer.from(e,f);var u=o.length;if(u===0){throw new TypeError('The value \"'+e+'\" is invalid for argument \"value\"')}for(i=0;i<t-r;++i){this[i+r]=o[i%u]}}return this};var a=/[^+/0-9A-Za-z-_]/g;function base64clean(e){e=e.split(\"=\")[0];e=e.trim().replace(a,\"\");if(e.length<2)return\"\";while(e.length%4!==0){e=e+\"=\"}return e}function utf8ToBytes(e,r){r=r||Infinity;var t;var f=e.length;var n=null;var i=[];for(var o=0;o<f;++o){t=e.charCodeAt(o);if(t>55295&&t<57344){if(!n){if(t>56319){if((r-=3)>-1)i.push(239,191,189);continue}else if(o+1===f){if((r-=3)>-1)i.push(239,191,189);continue}n=t;continue}if(t<56320){if((r-=3)>-1)i.push(239,191,189);n=t;continue}t=(n-55296<<10|t-56320)+65536}else if(n){if((r-=3)>-1)i.push(239,191,189)}n=null;if(t<128){if((r-=1)<0)break;i.push(t)}else if(t<2048){if((r-=2)<0)break;i.push(t>>6|192,t&63|128)}else if(t<65536){if((r-=3)<0)break;i.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((r-=4)<0)break;i.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else{throw new Error(\"Invalid code point\")}}return i}function asciiToBytes(e){var r=[];for(var t=0;t<e.length;++t){r.push(e.charCodeAt(t)&255)}return r}function utf16leToBytes(e,r){var t,f,n;var i=[];for(var o=0;o<e.length;++o){if((r-=2)<0)break;t=e.charCodeAt(o);f=t>>8;n=t%256;i.push(n);i.push(f)}return i}function base64ToBytes(e){return f.toByteArray(base64clean(e))}function blitBuffer(e,r,t,f){for(var n=0;n<f;++n){if(n+t>=r.length||n>=e.length)break;r[n+t]=e[n]}return n}function isInstance(e,r){return e instanceof r||e!=null&&e.constructor!=null&&e.constructor.name!=null&&e.constructor.name===r.name}function numberIsNaN(e){return e!==e}var s=function(){var e=\"0123456789abcdef\";var r=new Array(256);for(var t=0;t<16;++t){var f=t*16;for(var n=0;n<16;++n){r[f+n]=e[t]+e[n]}}return r}()},783:function(e,r){\n/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nr.read=function(e,r,t,f,n){var i,o;var u=n*8-f-1;var a=(1<<u)-1;var s=a>>1;var h=-7;var c=t?n-1:0;var l=t?-1:1;var p=e[r+c];c+=l;i=p&(1<<-h)-1;p>>=-h;h+=u;for(;h>0;i=i*256+e[r+c],c+=l,h-=8){}o=i&(1<<-h)-1;i>>=-h;h+=f;for(;h>0;o=o*256+e[r+c],c+=l,h-=8){}if(i===0){i=1-s}else if(i===a){return o?NaN:(p?-1:1)*Infinity}else{o=o+Math.pow(2,f);i=i-s}return(p?-1:1)*o*Math.pow(2,i-f)};r.write=function(e,r,t,f,n,i){var o,u,a;var s=i*8-n-1;var h=(1<<s)-1;var c=h>>1;var l=n===23?Math.pow(2,-24)-Math.pow(2,-77):0;var p=f?0:i-1;var y=f?1:-1;var g=r<0||r===0&&1/r<0?1:0;r=Math.abs(r);if(isNaN(r)||r===Infinity){u=isNaN(r)?1:0;o=h}else{o=Math.floor(Math.log(r)/Math.LN2);if(r*(a=Math.pow(2,-o))<1){o--;a*=2}if(o+c>=1){r+=l/a}else{r+=l*Math.pow(2,1-c)}if(r*a>=2){o++;a/=2}if(o+c>=h){u=0;o=h}else if(o+c>=1){u=(r*a-1)*Math.pow(2,n);o=o+c}else{u=r*Math.pow(2,c-1)*Math.pow(2,n);o=0}}for(;n>=8;e[t+p]=u&255,p+=y,u/=256,n-=8){}o=o<<n|u;s+=n;for(;s>0;e[t+p]=o&255,p+=y,o/=256,s-=8){}e[t+p-y]|=g*128}}};var r={};function __nccwpck_require__(t){var f=r[t];if(f!==undefined){return f.exports}var n=r[t]={exports:{}};var i=true;try{e[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(72);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/crypto-browserify/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/crypto-browserify/index.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n(function(){var e={7160:function(e,t,r){var i=t;i.bignum=r(711);i.define=r(495).define;i.base=r(853);i.constants=r(7335);i.decoders=r(6701);i.encoders=r(3418)},495:function(e,t,r){var i=r(7160);var n=r(3782);var a=t;a.define=function define(e,t){return new Entity(e,t)};function Entity(e,t){this.name=e;this.body=t;this.decoders={};this.encoders={}}Entity.prototype._createNamed=function createNamed(e){var t;try{t=r(6144).runInThisContext(\"(function \"+this.name+\"(entity) {\\n\"+\"  this._initNamed(entity);\\n\"+\"})\")}catch(e){t=function(e){this._initNamed(e)}}n(t,e);t.prototype._initNamed=function initnamed(t){e.call(this,t)};return new t(this)};Entity.prototype._getDecoder=function _getDecoder(e){e=e||\"der\";if(!this.decoders.hasOwnProperty(e))this.decoders[e]=this._createNamed(i.decoders[e]);return this.decoders[e]};Entity.prototype.decode=function decode(e,t,r){return this._getDecoder(t).decode(e,r)};Entity.prototype._getEncoder=function _getEncoder(e){e=e||\"der\";if(!this.encoders.hasOwnProperty(e))this.encoders[e]=this._createNamed(i.encoders[e]);return this.encoders[e]};Entity.prototype.encode=function encode(e,t,r){return this._getEncoder(t).encode(e,r)}},6483:function(e,t,r){var i=r(3782);var n=r(853).Reporter;var a=r(4300).Buffer;function DecoderBuffer(e,t){n.call(this,t);if(!a.isBuffer(e)){this.error(\"Input not Buffer\");return}this.base=e;this.offset=0;this.length=e.length}i(DecoderBuffer,n);t.C=DecoderBuffer;DecoderBuffer.prototype.save=function save(){return{offset:this.offset,reporter:n.prototype.save.call(this)}};DecoderBuffer.prototype.restore=function restore(e){var t=new DecoderBuffer(this.base);t.offset=e.offset;t.length=this.offset;this.offset=e.offset;n.prototype.restore.call(this,e.reporter);return t};DecoderBuffer.prototype.isEmpty=function isEmpty(){return this.offset===this.length};DecoderBuffer.prototype.readUInt8=function readUInt8(e){if(this.offset+1<=this.length)return this.base.readUInt8(this.offset++,true);else return this.error(e||\"DecoderBuffer overrun\")};DecoderBuffer.prototype.skip=function skip(e,t){if(!(this.offset+e<=this.length))return this.error(t||\"DecoderBuffer overrun\");var r=new DecoderBuffer(this.base);r._reporterState=this._reporterState;r.offset=this.offset;r.length=this.offset+e;this.offset+=e;return r};DecoderBuffer.prototype.raw=function raw(e){return this.base.slice(e?e.offset:this.offset,this.length)};function EncoderBuffer(e,t){if(Array.isArray(e)){this.length=0;this.value=e.map((function(e){if(!(e instanceof EncoderBuffer))e=new EncoderBuffer(e,t);this.length+=e.length;return e}),this)}else if(typeof e===\"number\"){if(!(0<=e&&e<=255))return t.error(\"non-byte EncoderBuffer value\");this.value=e;this.length=1}else if(typeof e===\"string\"){this.value=e;this.length=a.byteLength(e)}else if(a.isBuffer(e)){this.value=e;this.length=e.length}else{return t.error(\"Unsupported type: \"+typeof e)}}t.R=EncoderBuffer;EncoderBuffer.prototype.join=function join(e,t){if(!e)e=new a(this.length);if(!t)t=0;if(this.length===0)return e;if(Array.isArray(this.value)){this.value.forEach((function(r){r.join(e,t);t+=r.length}))}else{if(typeof this.value===\"number\")e[t]=this.value;else if(typeof this.value===\"string\")e.write(this.value,t);else if(a.isBuffer(this.value))this.value.copy(e,t);t+=this.length}return e}},853:function(e,t,r){var i=t;i.Reporter=r(1293).b;i.DecoderBuffer=r(6483).C;i.EncoderBuffer=r(6483).R;i.Node=r(9374)},9374:function(e,t,r){var i=r(853).Reporter;var n=r(853).EncoderBuffer;var a=r(853).DecoderBuffer;var s=r(3523);var o=[\"seq\",\"seqof\",\"set\",\"setof\",\"objid\",\"bool\",\"gentime\",\"utctime\",\"null_\",\"enum\",\"int\",\"objDesc\",\"bitstr\",\"bmpstr\",\"charstr\",\"genstr\",\"graphstr\",\"ia5str\",\"iso646str\",\"numstr\",\"octstr\",\"printstr\",\"t61str\",\"unistr\",\"utf8str\",\"videostr\"];var h=[\"key\",\"obj\",\"use\",\"optional\",\"explicit\",\"implicit\",\"def\",\"choice\",\"any\",\"contains\"].concat(o);var u=[\"_peekTag\",\"_decodeTag\",\"_use\",\"_decodeStr\",\"_decodeObjid\",\"_decodeTime\",\"_decodeNull\",\"_decodeInt\",\"_decodeBool\",\"_decodeList\",\"_encodeComposite\",\"_encodeStr\",\"_encodeObjid\",\"_encodeTime\",\"_encodeNull\",\"_encodeInt\",\"_encodeBool\"];function Node(e,t){var r={};this._baseState=r;r.enc=e;r.parent=t||null;r.children=null;r.tag=null;r.args=null;r.reverseArgs=null;r.choice=null;r.optional=false;r.any=false;r.obj=false;r.use=null;r.useDecoder=null;r.key=null;r[\"default\"]=null;r.explicit=null;r.implicit=null;r.contains=null;if(!r.parent){r.children=[];this._wrap()}}e.exports=Node;var d=[\"enc\",\"parent\",\"children\",\"tag\",\"args\",\"reverseArgs\",\"choice\",\"optional\",\"any\",\"obj\",\"use\",\"alteredUse\",\"key\",\"default\",\"explicit\",\"implicit\",\"contains\"];Node.prototype.clone=function clone(){var e=this._baseState;var t={};d.forEach((function(r){t[r]=e[r]}));var r=new this.constructor(t.parent);r._baseState=t;return r};Node.prototype._wrap=function wrap(){var e=this._baseState;h.forEach((function(t){this[t]=function _wrappedMethod(){var r=new this.constructor(this);e.children.push(r);return r[t].apply(r,arguments)}}),this)};Node.prototype._init=function init(e){var t=this._baseState;s(t.parent===null);e.call(this);t.children=t.children.filter((function(e){return e._baseState.parent===this}),this);s.equal(t.children.length,1,\"Root node can have only one child\")};Node.prototype._useArgs=function useArgs(e){var t=this._baseState;var r=e.filter((function(e){return e instanceof this.constructor}),this);e=e.filter((function(e){return!(e instanceof this.constructor)}),this);if(r.length!==0){s(t.children===null);t.children=r;r.forEach((function(e){e._baseState.parent=this}),this)}if(e.length!==0){s(t.args===null);t.args=e;t.reverseArgs=e.map((function(e){if(typeof e!==\"object\"||e.constructor!==Object)return e;var t={};Object.keys(e).forEach((function(r){if(r==(r|0))r|=0;var i=e[r];t[i]=r}));return t}))}};u.forEach((function(e){Node.prototype[e]=function _overrided(){var t=this._baseState;throw new Error(e+\" not implemented for encoding: \"+t.enc)}}));o.forEach((function(e){Node.prototype[e]=function _tagMethod(){var t=this._baseState;var r=Array.prototype.slice.call(arguments);s(t.tag===null);t.tag=e;this._useArgs(r);return this}}));Node.prototype.use=function use(e){s(e);var t=this._baseState;s(t.use===null);t.use=e;return this};Node.prototype.optional=function optional(){var e=this._baseState;e.optional=true;return this};Node.prototype.def=function def(e){var t=this._baseState;s(t[\"default\"]===null);t[\"default\"]=e;t.optional=true;return this};Node.prototype.explicit=function explicit(e){var t=this._baseState;s(t.explicit===null&&t.implicit===null);t.explicit=e;return this};Node.prototype.implicit=function implicit(e){var t=this._baseState;s(t.explicit===null&&t.implicit===null);t.implicit=e;return this};Node.prototype.obj=function obj(){var e=this._baseState;var t=Array.prototype.slice.call(arguments);e.obj=true;if(t.length!==0)this._useArgs(t);return this};Node.prototype.key=function key(e){var t=this._baseState;s(t.key===null);t.key=e;return this};Node.prototype.any=function any(){var e=this._baseState;e.any=true;return this};Node.prototype.choice=function choice(e){var t=this._baseState;s(t.choice===null);t.choice=e;this._useArgs(Object.keys(e).map((function(t){return e[t]})));return this};Node.prototype.contains=function contains(e){var t=this._baseState;s(t.use===null);t.contains=e;return this};Node.prototype._decode=function decode(e,t){var r=this._baseState;if(r.parent===null)return e.wrapResult(r.children[0]._decode(e,t));var i=r[\"default\"];var n=true;var s=null;if(r.key!==null)s=e.enterKey(r.key);if(r.optional){var o=null;if(r.explicit!==null)o=r.explicit;else if(r.implicit!==null)o=r.implicit;else if(r.tag!==null)o=r.tag;if(o===null&&!r.any){var h=e.save();try{if(r.choice===null)this._decodeGeneric(r.tag,e,t);else this._decodeChoice(e,t);n=true}catch(e){n=false}e.restore(h)}else{n=this._peekTag(e,o,r.any);if(e.isError(n))return n}}var u;if(r.obj&&n)u=e.enterObject();if(n){if(r.explicit!==null){var d=this._decodeTag(e,r.explicit);if(e.isError(d))return d;e=d}var c=e.offset;if(r.use===null&&r.choice===null){if(r.any)var h=e.save();var l=this._decodeTag(e,r.implicit!==null?r.implicit:r.tag,r.any);if(e.isError(l))return l;if(r.any)i=e.raw(h);else e=l}if(t&&t.track&&r.tag!==null)t.track(e.path(),c,e.length,\"tagged\");if(t&&t.track&&r.tag!==null)t.track(e.path(),e.offset,e.length,\"content\");if(r.any)i=i;else if(r.choice===null)i=this._decodeGeneric(r.tag,e,t);else i=this._decodeChoice(e,t);if(e.isError(i))return i;if(!r.any&&r.choice===null&&r.children!==null){r.children.forEach((function decodeChildren(r){r._decode(e,t)}))}if(r.contains&&(r.tag===\"octstr\"||r.tag===\"bitstr\")){var p=new a(i);i=this._getUse(r.contains,e._reporterState.obj)._decode(p,t)}}if(r.obj&&n)i=e.leaveObject(u);if(r.key!==null&&(i!==null||n===true))e.leaveKey(s,r.key,i);else if(s!==null)e.exitKey(s);return i};Node.prototype._decodeGeneric=function decodeGeneric(e,t,r){var i=this._baseState;if(e===\"seq\"||e===\"set\")return null;if(e===\"seqof\"||e===\"setof\")return this._decodeList(t,e,i.args[0],r);else if(/str$/.test(e))return this._decodeStr(t,e,r);else if(e===\"objid\"&&i.args)return this._decodeObjid(t,i.args[0],i.args[1],r);else if(e===\"objid\")return this._decodeObjid(t,null,null,r);else if(e===\"gentime\"||e===\"utctime\")return this._decodeTime(t,e,r);else if(e===\"null_\")return this._decodeNull(t,r);else if(e===\"bool\")return this._decodeBool(t,r);else if(e===\"objDesc\")return this._decodeStr(t,e,r);else if(e===\"int\"||e===\"enum\")return this._decodeInt(t,i.args&&i.args[0],r);if(i.use!==null){return this._getUse(i.use,t._reporterState.obj)._decode(t,r)}else{return t.error(\"unknown tag: \"+e)}};Node.prototype._getUse=function _getUse(e,t){var r=this._baseState;r.useDecoder=this._use(e,t);s(r.useDecoder._baseState.parent===null);r.useDecoder=r.useDecoder._baseState.children[0];if(r.implicit!==r.useDecoder._baseState.implicit){r.useDecoder=r.useDecoder.clone();r.useDecoder._baseState.implicit=r.implicit}return r.useDecoder};Node.prototype._decodeChoice=function decodeChoice(e,t){var r=this._baseState;var i=null;var n=false;Object.keys(r.choice).some((function(a){var s=e.save();var o=r.choice[a];try{var h=o._decode(e,t);if(e.isError(h))return false;i={type:a,value:h};n=true}catch(t){e.restore(s);return false}return true}),this);if(!n)return e.error(\"Choice not matched\");return i};Node.prototype._createEncoderBuffer=function createEncoderBuffer(e){return new n(e,this.reporter)};Node.prototype._encode=function encode(e,t,r){var i=this._baseState;if(i[\"default\"]!==null&&i[\"default\"]===e)return;var n=this._encodeValue(e,t,r);if(n===undefined)return;if(this._skipDefault(n,t,r))return;return n};Node.prototype._encodeValue=function encode(e,t,r){var n=this._baseState;if(n.parent===null)return n.children[0]._encode(e,t||new i);var a=null;this.reporter=t;if(n.optional&&e===undefined){if(n[\"default\"]!==null)e=n[\"default\"];else return}var s=null;var o=false;if(n.any){a=this._createEncoderBuffer(e)}else if(n.choice){a=this._encodeChoice(e,t)}else if(n.contains){s=this._getUse(n.contains,r)._encode(e,t);o=true}else if(n.children){s=n.children.map((function(r){if(r._baseState.tag===\"null_\")return r._encode(null,t,e);if(r._baseState.key===null)return t.error(\"Child should have a key\");var i=t.enterKey(r._baseState.key);if(typeof e!==\"object\")return t.error(\"Child expected, but input is not object\");var n=r._encode(e[r._baseState.key],t,e);t.leaveKey(i);return n}),this).filter((function(e){return e}));s=this._createEncoderBuffer(s)}else{if(n.tag===\"seqof\"||n.tag===\"setof\"){if(!(n.args&&n.args.length===1))return t.error(\"Too many args for : \"+n.tag);if(!Array.isArray(e))return t.error(\"seqof/setof, but data is not Array\");var h=this.clone();h._baseState.implicit=null;s=this._createEncoderBuffer(e.map((function(r){var i=this._baseState;return this._getUse(i.args[0],e)._encode(r,t)}),h))}else if(n.use!==null){a=this._getUse(n.use,r)._encode(e,t)}else{s=this._encodePrimitive(n.tag,e);o=true}}var a;if(!n.any&&n.choice===null){var u=n.implicit!==null?n.implicit:n.tag;var d=n.implicit===null?\"universal\":\"context\";if(u===null){if(n.use===null)t.error(\"Tag could be omitted only for .use()\")}else{if(n.use===null)a=this._encodeComposite(u,o,d,s)}}if(n.explicit!==null)a=this._encodeComposite(n.explicit,false,\"context\",a);return a};Node.prototype._encodeChoice=function encodeChoice(e,t){var r=this._baseState;var i=r.choice[e.type];if(!i){s(false,e.type+\" not found in \"+JSON.stringify(Object.keys(r.choice)))}return i._encode(e.value,t)};Node.prototype._encodePrimitive=function encodePrimitive(e,t){var r=this._baseState;if(/str$/.test(e))return this._encodeStr(t,e);else if(e===\"objid\"&&r.args)return this._encodeObjid(t,r.reverseArgs[0],r.args[1]);else if(e===\"objid\")return this._encodeObjid(t,null,null);else if(e===\"gentime\"||e===\"utctime\")return this._encodeTime(t,e);else if(e===\"null_\")return this._encodeNull();else if(e===\"int\"||e===\"enum\")return this._encodeInt(t,r.args&&r.reverseArgs[0]);else if(e===\"bool\")return this._encodeBool(t);else if(e===\"objDesc\")return this._encodeStr(t,e);else throw new Error(\"Unsupported tag: \"+e)};Node.prototype._isNumstr=function isNumstr(e){return/^[0-9 ]*$/.test(e)};Node.prototype._isPrintstr=function isPrintstr(e){return/^[A-Za-z0-9 '\\(\\)\\+,\\-\\.\\/:=\\?]*$/.test(e)}},1293:function(e,t,r){var i=r(3782);function Reporter(e){this._reporterState={obj:null,path:[],options:e||{},errors:[]}}t.b=Reporter;Reporter.prototype.isError=function isError(e){return e instanceof ReporterError};Reporter.prototype.save=function save(){var e=this._reporterState;return{obj:e.obj,pathLen:e.path.length}};Reporter.prototype.restore=function restore(e){var t=this._reporterState;t.obj=e.obj;t.path=t.path.slice(0,e.pathLen)};Reporter.prototype.enterKey=function enterKey(e){return this._reporterState.path.push(e)};Reporter.prototype.exitKey=function exitKey(e){var t=this._reporterState;t.path=t.path.slice(0,e-1)};Reporter.prototype.leaveKey=function leaveKey(e,t,r){var i=this._reporterState;this.exitKey(e);if(i.obj!==null)i.obj[t]=r};Reporter.prototype.path=function path(){return this._reporterState.path.join(\"/\")};Reporter.prototype.enterObject=function enterObject(){var e=this._reporterState;var t=e.obj;e.obj={};return t};Reporter.prototype.leaveObject=function leaveObject(e){var t=this._reporterState;var r=t.obj;t.obj=e;return r};Reporter.prototype.error=function error(e){var t;var r=this._reporterState;var i=e instanceof ReporterError;if(i){t=e}else{t=new ReporterError(r.path.map((function(e){return\"[\"+JSON.stringify(e)+\"]\"})).join(\"\"),e.message||e,e.stack)}if(!r.options.partial)throw t;if(!i)r.errors.push(t);return t};Reporter.prototype.wrapResult=function wrapResult(e){var t=this._reporterState;if(!t.options.partial)return e;return{result:this.isError(e)?null:e,errors:t.errors}};function ReporterError(e,t){this.path=e;this.rethrow(t)}i(ReporterError,Error);ReporterError.prototype.rethrow=function rethrow(e){this.message=e+\" at: \"+(this.path||\"(shallow)\");if(Error.captureStackTrace)Error.captureStackTrace(this,ReporterError);if(!this.stack){try{throw new Error(this.message)}catch(e){this.stack=e.stack}}return this}},9791:function(e,t,r){var i=r(7335);t.tagClass={0:\"universal\",1:\"application\",2:\"context\",3:\"private\"};t.tagClassByName=i._reverse(t.tagClass);t.tag={0:\"end\",1:\"bool\",2:\"int\",3:\"bitstr\",4:\"octstr\",5:\"null_\",6:\"objid\",7:\"objDesc\",8:\"external\",9:\"real\",10:\"enum\",11:\"embed\",12:\"utf8str\",13:\"relativeOid\",16:\"seq\",17:\"set\",18:\"numstr\",19:\"printstr\",20:\"t61str\",21:\"videostr\",22:\"ia5str\",23:\"utctime\",24:\"gentime\",25:\"graphstr\",26:\"iso646str\",27:\"genstr\",28:\"unistr\",29:\"charstr\",30:\"bmpstr\"};t.tagByName=i._reverse(t.tag)},7335:function(e,t,r){var i=t;i._reverse=function reverse(e){var t={};Object.keys(e).forEach((function(r){if((r|0)==r)r=r|0;var i=e[r];t[i]=r}));return t};i.der=r(9791)},2259:function(e,t,r){var i=r(3782);var n=r(7160);var a=n.base;var s=n.bignum;var o=n.constants.der;function DERDecoder(e){this.enc=\"der\";this.name=e.name;this.entity=e;this.tree=new DERNode;this.tree._init(e.body)}e.exports=DERDecoder;DERDecoder.prototype.decode=function decode(e,t){if(!(e instanceof a.DecoderBuffer))e=new a.DecoderBuffer(e,t);return this.tree._decode(e,t)};function DERNode(e){a.Node.call(this,\"der\",e)}i(DERNode,a.Node);DERNode.prototype._peekTag=function peekTag(e,t,r){if(e.isEmpty())return false;var i=e.save();var n=derDecodeTag(e,'Failed to peek tag: \"'+t+'\"');if(e.isError(n))return n;e.restore(i);return n.tag===t||n.tagStr===t||n.tagStr+\"of\"===t||r};DERNode.prototype._decodeTag=function decodeTag(e,t,r){var i=derDecodeTag(e,'Failed to decode tag of \"'+t+'\"');if(e.isError(i))return i;var n=derDecodeLen(e,i.primitive,'Failed to get length of \"'+t+'\"');if(e.isError(n))return n;if(!r&&i.tag!==t&&i.tagStr!==t&&i.tagStr+\"of\"!==t){return e.error('Failed to match tag: \"'+t+'\"')}if(i.primitive||n!==null)return e.skip(n,'Failed to match body of: \"'+t+'\"');var a=e.save();var s=this._skipUntilEnd(e,'Failed to skip indefinite length body: \"'+this.tag+'\"');if(e.isError(s))return s;n=e.offset-a.offset;e.restore(a);return e.skip(n,'Failed to match body of: \"'+t+'\"')};DERNode.prototype._skipUntilEnd=function skipUntilEnd(e,t){while(true){var r=derDecodeTag(e,t);if(e.isError(r))return r;var i=derDecodeLen(e,r.primitive,t);if(e.isError(i))return i;var n;if(r.primitive||i!==null)n=e.skip(i);else n=this._skipUntilEnd(e,t);if(e.isError(n))return n;if(r.tagStr===\"end\")break}};DERNode.prototype._decodeList=function decodeList(e,t,r,i){var n=[];while(!e.isEmpty()){var a=this._peekTag(e,\"end\");if(e.isError(a))return a;var s=r.decode(e,\"der\",i);if(e.isError(s)&&a)break;n.push(s)}return n};DERNode.prototype._decodeStr=function decodeStr(e,t){if(t===\"bitstr\"){var r=e.readUInt8();if(e.isError(r))return r;return{unused:r,data:e.raw()}}else if(t===\"bmpstr\"){var i=e.raw();if(i.length%2===1)return e.error(\"Decoding of string type: bmpstr length mismatch\");var n=\"\";for(var a=0;a<i.length/2;a++){n+=String.fromCharCode(i.readUInt16BE(a*2))}return n}else if(t===\"numstr\"){var s=e.raw().toString(\"ascii\");if(!this._isNumstr(s)){return e.error(\"Decoding of string type: \"+\"numstr unsupported characters\")}return s}else if(t===\"octstr\"){return e.raw()}else if(t===\"objDesc\"){return e.raw()}else if(t===\"printstr\"){var o=e.raw().toString(\"ascii\");if(!this._isPrintstr(o)){return e.error(\"Decoding of string type: \"+\"printstr unsupported characters\")}return o}else if(/str$/.test(t)){return e.raw().toString()}else{return e.error(\"Decoding of string type: \"+t+\" unsupported\")}};DERNode.prototype._decodeObjid=function decodeObjid(e,t,r){var i;var n=[];var a=0;while(!e.isEmpty()){var s=e.readUInt8();a<<=7;a|=s&127;if((s&128)===0){n.push(a);a=0}}if(s&128)n.push(a);var o=n[0]/40|0;var h=n[0]%40;if(r)i=n;else i=[o,h].concat(n.slice(1));if(t){var u=t[i.join(\" \")];if(u===undefined)u=t[i.join(\".\")];if(u!==undefined)i=u}return i};DERNode.prototype._decodeTime=function decodeTime(e,t){var r=e.raw().toString();if(t===\"gentime\"){var i=r.slice(0,4)|0;var n=r.slice(4,6)|0;var a=r.slice(6,8)|0;var s=r.slice(8,10)|0;var o=r.slice(10,12)|0;var h=r.slice(12,14)|0}else if(t===\"utctime\"){var i=r.slice(0,2)|0;var n=r.slice(2,4)|0;var a=r.slice(4,6)|0;var s=r.slice(6,8)|0;var o=r.slice(8,10)|0;var h=r.slice(10,12)|0;if(i<70)i=2e3+i;else i=1900+i}else{return e.error(\"Decoding \"+t+\" time is not supported yet\")}return Date.UTC(i,n-1,a,s,o,h,0)};DERNode.prototype._decodeNull=function decodeNull(e){return null};DERNode.prototype._decodeBool=function decodeBool(e){var t=e.readUInt8();if(e.isError(t))return t;else return t!==0};DERNode.prototype._decodeInt=function decodeInt(e,t){var r=e.raw();var i=new s(r);if(t)i=t[i.toString(10)]||i;return i};DERNode.prototype._use=function use(e,t){if(typeof e===\"function\")e=e(t);return e._getDecoder(\"der\").tree};function derDecodeTag(e,t){var r=e.readUInt8(t);if(e.isError(r))return r;var i=o.tagClass[r>>6];var n=(r&32)===0;if((r&31)===31){var a=r;r=0;while((a&128)===128){a=e.readUInt8(t);if(e.isError(a))return a;r<<=7;r|=a&127}}else{r&=31}var s=o.tag[r];return{cls:i,primitive:n,tag:r,tagStr:s}}function derDecodeLen(e,t,r){var i=e.readUInt8(r);if(e.isError(i))return i;if(!t&&i===128)return null;if((i&128)===0){return i}var n=i&127;if(n>4)return e.error(\"length octect is too long\");i=0;for(var a=0;a<n;a++){i<<=8;var s=e.readUInt8(r);if(e.isError(s))return s;i|=s}return i}},6701:function(e,t,r){var i=t;i.der=r(2259);i.pem=r(8527)},8527:function(e,t,r){var i=r(3782);var n=r(4300).Buffer;var a=r(2259);function PEMDecoder(e){a.call(this,e);this.enc=\"pem\"}i(PEMDecoder,a);e.exports=PEMDecoder;PEMDecoder.prototype.decode=function decode(e,t){var r=e.toString().split(/[\\r\\n]+/g);var i=t.label.toUpperCase();var s=/^-----(BEGIN|END) ([^-]+)-----$/;var o=-1;var h=-1;for(var u=0;u<r.length;u++){var d=r[u].match(s);if(d===null)continue;if(d[2]!==i)continue;if(o===-1){if(d[1]!==\"BEGIN\")break;o=u}else{if(d[1]!==\"END\")break;h=u;break}}if(o===-1||h===-1)throw new Error(\"PEM section not found for: \"+i);var c=r.slice(o+1,h).join(\"\");c.replace(/[^a-z0-9\\+\\/=]+/gi,\"\");var l=new n(c,\"base64\");return a.prototype.decode.call(this,l,t)}},7804:function(e,t,r){var i=r(3782);var n=r(4300).Buffer;var a=r(7160);var s=a.base;var o=a.constants.der;function DEREncoder(e){this.enc=\"der\";this.name=e.name;this.entity=e;this.tree=new DERNode;this.tree._init(e.body)}e.exports=DEREncoder;DEREncoder.prototype.encode=function encode(e,t){return this.tree._encode(e,t).join()};function DERNode(e){s.Node.call(this,\"der\",e)}i(DERNode,s.Node);DERNode.prototype._encodeComposite=function encodeComposite(e,t,r,i){var a=encodeTag(e,t,r,this.reporter);if(i.length<128){var s=new n(2);s[0]=a;s[1]=i.length;return this._createEncoderBuffer([s,i])}var o=1;for(var h=i.length;h>=256;h>>=8)o++;var s=new n(1+1+o);s[0]=a;s[1]=128|o;for(var h=1+o,u=i.length;u>0;h--,u>>=8)s[h]=u&255;return this._createEncoderBuffer([s,i])};DERNode.prototype._encodeStr=function encodeStr(e,t){if(t===\"bitstr\"){return this._createEncoderBuffer([e.unused|0,e.data])}else if(t===\"bmpstr\"){var r=new n(e.length*2);for(var i=0;i<e.length;i++){r.writeUInt16BE(e.charCodeAt(i),i*2)}return this._createEncoderBuffer(r)}else if(t===\"numstr\"){if(!this._isNumstr(e)){return this.reporter.error(\"Encoding of string type: numstr supports \"+\"only digits and space\")}return this._createEncoderBuffer(e)}else if(t===\"printstr\"){if(!this._isPrintstr(e)){return this.reporter.error(\"Encoding of string type: printstr supports \"+\"only latin upper and lower case letters, \"+\"digits, space, apostrophe, left and rigth \"+\"parenthesis, plus sign, comma, hyphen, \"+\"dot, slash, colon, equal sign, \"+\"question mark\")}return this._createEncoderBuffer(e)}else if(/str$/.test(t)){return this._createEncoderBuffer(e)}else if(t===\"objDesc\"){return this._createEncoderBuffer(e)}else{return this.reporter.error(\"Encoding of string type: \"+t+\" unsupported\")}};DERNode.prototype._encodeObjid=function encodeObjid(e,t,r){if(typeof e===\"string\"){if(!t)return this.reporter.error(\"string objid given, but no values map found\");if(!t.hasOwnProperty(e))return this.reporter.error(\"objid not found in values map\");e=t[e].split(/[\\s\\.]+/g);for(var i=0;i<e.length;i++)e[i]|=0}else if(Array.isArray(e)){e=e.slice();for(var i=0;i<e.length;i++)e[i]|=0}if(!Array.isArray(e)){return this.reporter.error(\"objid() should be either array or string, \"+\"got: \"+JSON.stringify(e))}if(!r){if(e[1]>=40)return this.reporter.error(\"Second objid identifier OOB\");e.splice(0,2,e[0]*40+e[1])}var a=0;for(var i=0;i<e.length;i++){var s=e[i];for(a++;s>=128;s>>=7)a++}var o=new n(a);var h=o.length-1;for(var i=e.length-1;i>=0;i--){var s=e[i];o[h--]=s&127;while((s>>=7)>0)o[h--]=128|s&127}return this._createEncoderBuffer(o)};function two(e){if(e<10)return\"0\"+e;else return e}DERNode.prototype._encodeTime=function encodeTime(e,t){var r;var i=new Date(e);if(t===\"gentime\"){r=[two(i.getFullYear()),two(i.getUTCMonth()+1),two(i.getUTCDate()),two(i.getUTCHours()),two(i.getUTCMinutes()),two(i.getUTCSeconds()),\"Z\"].join(\"\")}else if(t===\"utctime\"){r=[two(i.getFullYear()%100),two(i.getUTCMonth()+1),two(i.getUTCDate()),two(i.getUTCHours()),two(i.getUTCMinutes()),two(i.getUTCSeconds()),\"Z\"].join(\"\")}else{this.reporter.error(\"Encoding \"+t+\" time is not supported yet\")}return this._encodeStr(r,\"octstr\")};DERNode.prototype._encodeNull=function encodeNull(){return this._createEncoderBuffer(\"\")};DERNode.prototype._encodeInt=function encodeInt(e,t){if(typeof e===\"string\"){if(!t)return this.reporter.error(\"String int or enum given, but no values map\");if(!t.hasOwnProperty(e)){return this.reporter.error(\"Values map doesn't contain: \"+JSON.stringify(e))}e=t[e]}if(typeof e!==\"number\"&&!n.isBuffer(e)){var r=e.toArray();if(!e.sign&&r[0]&128){r.unshift(0)}e=new n(r)}if(n.isBuffer(e)){var i=e.length;if(e.length===0)i++;var a=new n(i);e.copy(a);if(e.length===0)a[0]=0;return this._createEncoderBuffer(a)}if(e<128)return this._createEncoderBuffer(e);if(e<256)return this._createEncoderBuffer([0,e]);var i=1;for(var s=e;s>=256;s>>=8)i++;var a=new Array(i);for(var s=a.length-1;s>=0;s--){a[s]=e&255;e>>=8}if(a[0]&128){a.unshift(0)}return this._createEncoderBuffer(new n(a))};DERNode.prototype._encodeBool=function encodeBool(e){return this._createEncoderBuffer(e?255:0)};DERNode.prototype._use=function use(e,t){if(typeof e===\"function\")e=e(t);return e._getEncoder(\"der\").tree};DERNode.prototype._skipDefault=function skipDefault(e,t,r){var i=this._baseState;var n;if(i[\"default\"]===null)return false;var a=e.join();if(i.defaultBuffer===undefined)i.defaultBuffer=this._encodeValue(i[\"default\"],t,r).join();if(a.length!==i.defaultBuffer.length)return false;for(n=0;n<a.length;n++)if(a[n]!==i.defaultBuffer[n])return false;return true};function encodeTag(e,t,r,i){var n;if(e===\"seqof\")e=\"seq\";else if(e===\"setof\")e=\"set\";if(o.tagByName.hasOwnProperty(e))n=o.tagByName[e];else if(typeof e===\"number\"&&(e|0)===e)n=e;else return i.error(\"Unknown tag: \"+e);if(n>=31)return i.error(\"Multi-octet tag encoding unsupported\");if(!t)n|=32;n|=o.tagClassByName[r||\"universal\"]<<6;return n}},3418:function(e,t,r){var i=t;i.der=r(7804);i.pem=r(1564)},1564:function(e,t,r){var i=r(3782);var n=r(7804);function PEMEncoder(e){n.call(this,e);this.enc=\"pem\"}i(PEMEncoder,n);e.exports=PEMEncoder;PEMEncoder.prototype.encode=function encode(e,t){var r=n.prototype.encode.call(this,e);var i=r.toString(\"base64\");var a=[\"-----BEGIN \"+t.label+\"-----\"];for(var s=0;s<i.length;s+=64)a.push(i.slice(s,s+64));a.push(\"-----END \"+t.label+\"-----\");return a.join(\"\\n\")}},711:function(e,t,r){e=r.nmd(e);(function(e,t){\"use strict\";function assert(e,t){if(!e)throw new Error(t||\"Assertion failed\")}function inherits(e,t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}function BN(e,t,r){if(BN.isBN(e)){return e}this.negative=0;this.words=null;this.length=0;this.red=null;if(e!==null){if(t===\"le\"||t===\"be\"){r=t;t=10}this._init(e||0,t||10,r||\"be\")}}if(typeof e===\"object\"){e.exports=BN}else{t.BN=BN}BN.BN=BN;BN.wordSize=26;var i;try{i=r(4300).Buffer}catch(e){}BN.isBN=function isBN(e){if(e instanceof BN){return true}return e!==null&&typeof e===\"object\"&&e.constructor.wordSize===BN.wordSize&&Array.isArray(e.words)};BN.max=function max(e,t){if(e.cmp(t)>0)return e;return t};BN.min=function min(e,t){if(e.cmp(t)<0)return e;return t};BN.prototype._init=function init(e,t,r){if(typeof e===\"number\"){return this._initNumber(e,t,r)}if(typeof e===\"object\"){return this._initArray(e,t,r)}if(t===\"hex\"){t=16}assert(t===(t|0)&&t>=2&&t<=36);e=e.toString().replace(/\\s+/g,\"\");var i=0;if(e[0]===\"-\"){i++}if(t===16){this._parseHex(e,i)}else{this._parseBase(e,t,i)}if(e[0]===\"-\"){this.negative=1}this.strip();if(r!==\"le\")return;this._initArray(this.toArray(),t,r)};BN.prototype._initNumber=function _initNumber(e,t,r){if(e<0){this.negative=1;e=-e}if(e<67108864){this.words=[e&67108863];this.length=1}else if(e<4503599627370496){this.words=[e&67108863,e/67108864&67108863];this.length=2}else{assert(e<9007199254740992);this.words=[e&67108863,e/67108864&67108863,1];this.length=3}if(r!==\"le\")return;this._initArray(this.toArray(),t,r)};BN.prototype._initArray=function _initArray(e,t,r){assert(typeof e.length===\"number\");if(e.length<=0){this.words=[0];this.length=1;return this}this.length=Math.ceil(e.length/3);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var n,a;var s=0;if(r===\"be\"){for(i=e.length-1,n=0;i>=0;i-=3){a=e[i]|e[i-1]<<8|e[i-2]<<16;this.words[n]|=a<<s&67108863;this.words[n+1]=a>>>26-s&67108863;s+=24;if(s>=26){s-=26;n++}}}else if(r===\"le\"){for(i=0,n=0;i<e.length;i+=3){a=e[i]|e[i+1]<<8|e[i+2]<<16;this.words[n]|=a<<s&67108863;this.words[n+1]=a>>>26-s&67108863;s+=24;if(s>=26){s-=26;n++}}}return this.strip()};function parseHex(e,t,r){var i=0;var n=Math.min(e.length,r);for(var a=t;a<n;a++){var s=e.charCodeAt(a)-48;i<<=4;if(s>=49&&s<=54){i|=s-49+10}else if(s>=17&&s<=22){i|=s-17+10}else{i|=s&15}}return i}BN.prototype._parseHex=function _parseHex(e,t){this.length=Math.ceil((e.length-t)/6);this.words=new Array(this.length);for(var r=0;r<this.length;r++){this.words[r]=0}var i,n;var a=0;for(r=e.length-6,i=0;r>=t;r-=6){n=parseHex(e,r,r+6);this.words[i]|=n<<a&67108863;this.words[i+1]|=n>>>26-a&4194303;a+=24;if(a>=26){a-=26;i++}}if(r+6!==t){n=parseHex(e,t,r+6);this.words[i]|=n<<a&67108863;this.words[i+1]|=n>>>26-a&4194303}this.strip()};function parseBase(e,t,r,i){var n=0;var a=Math.min(e.length,r);for(var s=t;s<a;s++){var o=e.charCodeAt(s)-48;n*=i;if(o>=49){n+=o-49+10}else if(o>=17){n+=o-17+10}else{n+=o}}return n}BN.prototype._parseBase=function _parseBase(e,t,r){this.words=[0];this.length=1;for(var i=0,n=1;n<=67108863;n*=t){i++}i--;n=n/t|0;var a=e.length-r;var s=a%i;var o=Math.min(a,a-s)+r;var h=0;for(var u=r;u<o;u+=i){h=parseBase(e,u,u+i,t);this.imuln(n);if(this.words[0]+h<67108864){this.words[0]+=h}else{this._iaddn(h)}}if(s!==0){var d=1;h=parseBase(e,u,e.length,t);for(u=0;u<s;u++){d*=t}this.imuln(d);if(this.words[0]+h<67108864){this.words[0]+=h}else{this._iaddn(h)}}};BN.prototype.copy=function copy(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++){e.words[t]=this.words[t]}e.length=this.length;e.negative=this.negative;e.red=this.red};BN.prototype.clone=function clone(){var e=new BN(null);this.copy(e);return e};BN.prototype._expand=function _expand(e){while(this.length<e){this.words[this.length++]=0}return this};BN.prototype.strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--}return this._normSign()};BN.prototype._normSign=function _normSign(){if(this.length===1&&this.words[0]===0){this.negative=0}return this};BN.prototype.inspect=function inspect(){return(this.red?\"<BN-R: \":\"<BN: \")+this.toString(16)+\">\"};var n=[\"\",\"0\",\"00\",\"000\",\"0000\",\"00000\",\"000000\",\"0000000\",\"00000000\",\"000000000\",\"0000000000\",\"00000000000\",\"000000000000\",\"0000000000000\",\"00000000000000\",\"000000000000000\",\"0000000000000000\",\"00000000000000000\",\"000000000000000000\",\"0000000000000000000\",\"00000000000000000000\",\"000000000000000000000\",\"0000000000000000000000\",\"00000000000000000000000\",\"000000000000000000000000\",\"0000000000000000000000000\"];var a=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var s=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];BN.prototype.toString=function toString(e,t){e=e||10;t=t|0||1;var r;if(e===16||e===\"hex\"){r=\"\";var i=0;var o=0;for(var h=0;h<this.length;h++){var u=this.words[h];var d=((u<<i|o)&16777215).toString(16);o=u>>>24-i&16777215;if(o!==0||h!==this.length-1){r=n[6-d.length]+d+r}else{r=d+r}i+=2;if(i>=26){i-=26;h--}}if(o!==0){r=o.toString(16)+r}while(r.length%t!==0){r=\"0\"+r}if(this.negative!==0){r=\"-\"+r}return r}if(e===(e|0)&&e>=2&&e<=36){var c=a[e];var l=s[e];r=\"\";var p=this.clone();p.negative=0;while(!p.isZero()){var v=p.modn(l).toString(e);p=p.idivn(l);if(!p.isZero()){r=n[c-v.length]+v+r}else{r=v+r}}if(this.isZero()){r=\"0\"+r}while(r.length%t!==0){r=\"0\"+r}if(this.negative!==0){r=\"-\"+r}return r}assert(false,\"Base should be between 2 and 36\")};BN.prototype.toNumber=function toNumber(){var e=this.words[0];if(this.length===2){e+=this.words[1]*67108864}else if(this.length===3&&this.words[2]===1){e+=4503599627370496+this.words[1]*67108864}else if(this.length>2){assert(false,\"Number can only safely store up to 53 bits\")}return this.negative!==0?-e:e};BN.prototype.toJSON=function toJSON(){return this.toString(16)};BN.prototype.toBuffer=function toBuffer(e,t){assert(typeof i!==\"undefined\");return this.toArrayLike(i,e,t)};BN.prototype.toArray=function toArray(e,t){return this.toArrayLike(Array,e,t)};BN.prototype.toArrayLike=function toArrayLike(e,t,r){var i=this.byteLength();var n=r||Math.max(1,i);assert(i<=n,\"byte array longer than desired length\");assert(n>0,\"Requested array length <= 0\");this.strip();var a=t===\"le\";var s=new e(n);var o,h;var u=this.clone();if(!a){for(h=0;h<n-i;h++){s[h]=0}for(h=0;!u.isZero();h++){o=u.andln(255);u.iushrn(8);s[n-h-1]=o}}else{for(h=0;!u.isZero();h++){o=u.andln(255);u.iushrn(8);s[h]=o}for(;h<n;h++){s[h]=0}}return s};if(Math.clz32){BN.prototype._countBits=function _countBits(e){return 32-Math.clz32(e)}}else{BN.prototype._countBits=function _countBits(e){var t=e;var r=0;if(t>=4096){r+=13;t>>>=13}if(t>=64){r+=7;t>>>=7}if(t>=8){r+=4;t>>>=4}if(t>=2){r+=2;t>>>=2}return r+t}}BN.prototype._zeroBits=function _zeroBits(e){if(e===0)return 26;var t=e;var r=0;if((t&8191)===0){r+=13;t>>>=13}if((t&127)===0){r+=7;t>>>=7}if((t&15)===0){r+=4;t>>>=4}if((t&3)===0){r+=2;t>>>=2}if((t&1)===0){r++}return r};BN.prototype.bitLength=function bitLength(){var e=this.words[this.length-1];var t=this._countBits(e);return(this.length-1)*26+t};function toBitArray(e){var t=new Array(e.bitLength());for(var r=0;r<t.length;r++){var i=r/26|0;var n=r%26;t[r]=(e.words[i]&1<<n)>>>n}return t}BN.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var e=0;for(var t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);e+=r;if(r!==26)break}return e};BN.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8)};BN.prototype.toTwos=function toTwos(e){if(this.negative!==0){return this.abs().inotn(e).iaddn(1)}return this.clone()};BN.prototype.fromTwos=function fromTwos(e){if(this.testn(e-1)){return this.notn(e).iaddn(1).ineg()}return this.clone()};BN.prototype.isNeg=function isNeg(){return this.negative!==0};BN.prototype.neg=function neg(){return this.clone().ineg()};BN.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1}return this};BN.prototype.iuor=function iuor(e){while(this.length<e.length){this.words[this.length++]=0}for(var t=0;t<e.length;t++){this.words[t]=this.words[t]|e.words[t]}return this.strip()};BN.prototype.ior=function ior(e){assert((this.negative|e.negative)===0);return this.iuor(e)};BN.prototype.or=function or(e){if(this.length>e.length)return this.clone().ior(e);return e.clone().ior(this)};BN.prototype.uor=function uor(e){if(this.length>e.length)return this.clone().iuor(e);return e.clone().iuor(this)};BN.prototype.iuand=function iuand(e){var t;if(this.length>e.length){t=e}else{t=this}for(var r=0;r<t.length;r++){this.words[r]=this.words[r]&e.words[r]}this.length=t.length;return this.strip()};BN.prototype.iand=function iand(e){assert((this.negative|e.negative)===0);return this.iuand(e)};BN.prototype.and=function and(e){if(this.length>e.length)return this.clone().iand(e);return e.clone().iand(this)};BN.prototype.uand=function uand(e){if(this.length>e.length)return this.clone().iuand(e);return e.clone().iuand(this)};BN.prototype.iuxor=function iuxor(e){var t;var r;if(this.length>e.length){t=this;r=e}else{t=e;r=this}for(var i=0;i<r.length;i++){this.words[i]=t.words[i]^r.words[i]}if(this!==t){for(;i<t.length;i++){this.words[i]=t.words[i]}}this.length=t.length;return this.strip()};BN.prototype.ixor=function ixor(e){assert((this.negative|e.negative)===0);return this.iuxor(e)};BN.prototype.xor=function xor(e){if(this.length>e.length)return this.clone().ixor(e);return e.clone().ixor(this)};BN.prototype.uxor=function uxor(e){if(this.length>e.length)return this.clone().iuxor(e);return e.clone().iuxor(this)};BN.prototype.inotn=function inotn(e){assert(typeof e===\"number\"&&e>=0);var t=Math.ceil(e/26)|0;var r=e%26;this._expand(t);if(r>0){t--}for(var i=0;i<t;i++){this.words[i]=~this.words[i]&67108863}if(r>0){this.words[i]=~this.words[i]&67108863>>26-r}return this.strip()};BN.prototype.notn=function notn(e){return this.clone().inotn(e)};BN.prototype.setn=function setn(e,t){assert(typeof e===\"number\"&&e>=0);var r=e/26|0;var i=e%26;this._expand(r+1);if(t){this.words[r]=this.words[r]|1<<i}else{this.words[r]=this.words[r]&~(1<<i)}return this.strip()};BN.prototype.iadd=function iadd(e){var t;if(this.negative!==0&&e.negative===0){this.negative=0;t=this.isub(e);this.negative^=1;return this._normSign()}else if(this.negative===0&&e.negative!==0){e.negative=0;t=this.isub(e);e.negative=1;return t._normSign()}var r,i;if(this.length>e.length){r=this;i=e}else{r=e;i=this}var n=0;for(var a=0;a<i.length;a++){t=(r.words[a]|0)+(i.words[a]|0)+n;this.words[a]=t&67108863;n=t>>>26}for(;n!==0&&a<r.length;a++){t=(r.words[a]|0)+n;this.words[a]=t&67108863;n=t>>>26}this.length=r.length;if(n!==0){this.words[this.length]=n;this.length++}else if(r!==this){for(;a<r.length;a++){this.words[a]=r.words[a]}}return this};BN.prototype.add=function add(e){var t;if(e.negative!==0&&this.negative===0){e.negative=0;t=this.sub(e);e.negative^=1;return t}else if(e.negative===0&&this.negative!==0){this.negative=0;t=e.sub(this);this.negative=1;return t}if(this.length>e.length)return this.clone().iadd(e);return e.clone().iadd(this)};BN.prototype.isub=function isub(e){if(e.negative!==0){e.negative=0;var t=this.iadd(e);e.negative=1;return t._normSign()}else if(this.negative!==0){this.negative=0;this.iadd(e);this.negative=1;return this._normSign()}var r=this.cmp(e);if(r===0){this.negative=0;this.length=1;this.words[0]=0;return this}var i,n;if(r>0){i=this;n=e}else{i=e;n=this}var a=0;for(var s=0;s<n.length;s++){t=(i.words[s]|0)-(n.words[s]|0)+a;a=t>>26;this.words[s]=t&67108863}for(;a!==0&&s<i.length;s++){t=(i.words[s]|0)+a;a=t>>26;this.words[s]=t&67108863}if(a===0&&s<i.length&&i!==this){for(;s<i.length;s++){this.words[s]=i.words[s]}}this.length=Math.max(this.length,s);if(i!==this){this.negative=1}return this.strip()};BN.prototype.sub=function sub(e){return this.clone().isub(e)};function smallMulTo(e,t,r){r.negative=t.negative^e.negative;var i=e.length+t.length|0;r.length=i;i=i-1|0;var n=e.words[0]|0;var a=t.words[0]|0;var s=n*a;var o=s&67108863;var h=s/67108864|0;r.words[0]=o;for(var u=1;u<i;u++){var d=h>>>26;var c=h&67108863;var l=Math.min(u,t.length-1);for(var p=Math.max(0,u-e.length+1);p<=l;p++){var v=u-p|0;n=e.words[v]|0;a=t.words[p]|0;s=n*a+c;d+=s/67108864|0;c=s&67108863}r.words[u]=c|0;h=d|0}if(h!==0){r.words[u]=h|0}else{r.length--}return r.strip()}var o=function comb10MulTo(e,t,r){var i=e.words;var n=t.words;var a=r.words;var s=0;var o;var h;var u;var d=i[0]|0;var c=d&8191;var l=d>>>13;var p=i[1]|0;var v=p&8191;var b=p>>>13;var m=i[2]|0;var y=m&8191;var g=m>>>13;var _=i[3]|0;var w=_&8191;var M=_>>>13;var B=i[4]|0;var E=B&8191;var k=B>>>13;var A=i[5]|0;var N=A&8191;var P=A>>>13;var x=i[6]|0;var I=x&8191;var C=x>>>13;var D=i[7]|0;var T=D&8191;var j=D>>>13;var q=i[8]|0;var O=q&8191;var H=q>>>13;var L=i[9]|0;var z=L&8191;var F=L>>>13;var U=n[0]|0;var W=U&8191;var V=U>>>13;var G=n[1]|0;var J=G&8191;var Z=G>>>13;var X=n[2]|0;var Y=X&8191;var $=X>>>13;var Q=n[3]|0;var ee=Q&8191;var te=Q>>>13;var re=n[4]|0;var ie=re&8191;var ne=re>>>13;var ae=n[5]|0;var fe=ae&8191;var se=ae>>>13;var oe=n[6]|0;var he=oe&8191;var ue=oe>>>13;var de=n[7]|0;var ce=de&8191;var le=de>>>13;var pe=n[8]|0;var ve=pe&8191;var be=pe>>>13;var me=n[9]|0;var ye=me&8191;var ge=me>>>13;r.negative=e.negative^t.negative;r.length=19;o=Math.imul(c,W);h=Math.imul(c,V);h=h+Math.imul(l,W)|0;u=Math.imul(l,V);var _e=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(_e>>>26)|0;_e&=67108863;o=Math.imul(v,W);h=Math.imul(v,V);h=h+Math.imul(b,W)|0;u=Math.imul(b,V);o=o+Math.imul(c,J)|0;h=h+Math.imul(c,Z)|0;h=h+Math.imul(l,J)|0;u=u+Math.imul(l,Z)|0;var we=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(we>>>26)|0;we&=67108863;o=Math.imul(y,W);h=Math.imul(y,V);h=h+Math.imul(g,W)|0;u=Math.imul(g,V);o=o+Math.imul(v,J)|0;h=h+Math.imul(v,Z)|0;h=h+Math.imul(b,J)|0;u=u+Math.imul(b,Z)|0;o=o+Math.imul(c,Y)|0;h=h+Math.imul(c,$)|0;h=h+Math.imul(l,Y)|0;u=u+Math.imul(l,$)|0;var Me=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Me>>>26)|0;Me&=67108863;o=Math.imul(w,W);h=Math.imul(w,V);h=h+Math.imul(M,W)|0;u=Math.imul(M,V);o=o+Math.imul(y,J)|0;h=h+Math.imul(y,Z)|0;h=h+Math.imul(g,J)|0;u=u+Math.imul(g,Z)|0;o=o+Math.imul(v,Y)|0;h=h+Math.imul(v,$)|0;h=h+Math.imul(b,Y)|0;u=u+Math.imul(b,$)|0;o=o+Math.imul(c,ee)|0;h=h+Math.imul(c,te)|0;h=h+Math.imul(l,ee)|0;u=u+Math.imul(l,te)|0;var Se=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Se>>>26)|0;Se&=67108863;o=Math.imul(E,W);h=Math.imul(E,V);h=h+Math.imul(k,W)|0;u=Math.imul(k,V);o=o+Math.imul(w,J)|0;h=h+Math.imul(w,Z)|0;h=h+Math.imul(M,J)|0;u=u+Math.imul(M,Z)|0;o=o+Math.imul(y,Y)|0;h=h+Math.imul(y,$)|0;h=h+Math.imul(g,Y)|0;u=u+Math.imul(g,$)|0;o=o+Math.imul(v,ee)|0;h=h+Math.imul(v,te)|0;h=h+Math.imul(b,ee)|0;u=u+Math.imul(b,te)|0;o=o+Math.imul(c,ie)|0;h=h+Math.imul(c,ne)|0;h=h+Math.imul(l,ie)|0;u=u+Math.imul(l,ne)|0;var Be=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Be>>>26)|0;Be&=67108863;o=Math.imul(N,W);h=Math.imul(N,V);h=h+Math.imul(P,W)|0;u=Math.imul(P,V);o=o+Math.imul(E,J)|0;h=h+Math.imul(E,Z)|0;h=h+Math.imul(k,J)|0;u=u+Math.imul(k,Z)|0;o=o+Math.imul(w,Y)|0;h=h+Math.imul(w,$)|0;h=h+Math.imul(M,Y)|0;u=u+Math.imul(M,$)|0;o=o+Math.imul(y,ee)|0;h=h+Math.imul(y,te)|0;h=h+Math.imul(g,ee)|0;u=u+Math.imul(g,te)|0;o=o+Math.imul(v,ie)|0;h=h+Math.imul(v,ne)|0;h=h+Math.imul(b,ie)|0;u=u+Math.imul(b,ne)|0;o=o+Math.imul(c,fe)|0;h=h+Math.imul(c,se)|0;h=h+Math.imul(l,fe)|0;u=u+Math.imul(l,se)|0;var Ee=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ee>>>26)|0;Ee&=67108863;o=Math.imul(I,W);h=Math.imul(I,V);h=h+Math.imul(C,W)|0;u=Math.imul(C,V);o=o+Math.imul(N,J)|0;h=h+Math.imul(N,Z)|0;h=h+Math.imul(P,J)|0;u=u+Math.imul(P,Z)|0;o=o+Math.imul(E,Y)|0;h=h+Math.imul(E,$)|0;h=h+Math.imul(k,Y)|0;u=u+Math.imul(k,$)|0;o=o+Math.imul(w,ee)|0;h=h+Math.imul(w,te)|0;h=h+Math.imul(M,ee)|0;u=u+Math.imul(M,te)|0;o=o+Math.imul(y,ie)|0;h=h+Math.imul(y,ne)|0;h=h+Math.imul(g,ie)|0;u=u+Math.imul(g,ne)|0;o=o+Math.imul(v,fe)|0;h=h+Math.imul(v,se)|0;h=h+Math.imul(b,fe)|0;u=u+Math.imul(b,se)|0;o=o+Math.imul(c,he)|0;h=h+Math.imul(c,ue)|0;h=h+Math.imul(l,he)|0;u=u+Math.imul(l,ue)|0;var ke=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(ke>>>26)|0;ke&=67108863;o=Math.imul(T,W);h=Math.imul(T,V);h=h+Math.imul(j,W)|0;u=Math.imul(j,V);o=o+Math.imul(I,J)|0;h=h+Math.imul(I,Z)|0;h=h+Math.imul(C,J)|0;u=u+Math.imul(C,Z)|0;o=o+Math.imul(N,Y)|0;h=h+Math.imul(N,$)|0;h=h+Math.imul(P,Y)|0;u=u+Math.imul(P,$)|0;o=o+Math.imul(E,ee)|0;h=h+Math.imul(E,te)|0;h=h+Math.imul(k,ee)|0;u=u+Math.imul(k,te)|0;o=o+Math.imul(w,ie)|0;h=h+Math.imul(w,ne)|0;h=h+Math.imul(M,ie)|0;u=u+Math.imul(M,ne)|0;o=o+Math.imul(y,fe)|0;h=h+Math.imul(y,se)|0;h=h+Math.imul(g,fe)|0;u=u+Math.imul(g,se)|0;o=o+Math.imul(v,he)|0;h=h+Math.imul(v,ue)|0;h=h+Math.imul(b,he)|0;u=u+Math.imul(b,ue)|0;o=o+Math.imul(c,ce)|0;h=h+Math.imul(c,le)|0;h=h+Math.imul(l,ce)|0;u=u+Math.imul(l,le)|0;var Ae=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ae>>>26)|0;Ae&=67108863;o=Math.imul(O,W);h=Math.imul(O,V);h=h+Math.imul(H,W)|0;u=Math.imul(H,V);o=o+Math.imul(T,J)|0;h=h+Math.imul(T,Z)|0;h=h+Math.imul(j,J)|0;u=u+Math.imul(j,Z)|0;o=o+Math.imul(I,Y)|0;h=h+Math.imul(I,$)|0;h=h+Math.imul(C,Y)|0;u=u+Math.imul(C,$)|0;o=o+Math.imul(N,ee)|0;h=h+Math.imul(N,te)|0;h=h+Math.imul(P,ee)|0;u=u+Math.imul(P,te)|0;o=o+Math.imul(E,ie)|0;h=h+Math.imul(E,ne)|0;h=h+Math.imul(k,ie)|0;u=u+Math.imul(k,ne)|0;o=o+Math.imul(w,fe)|0;h=h+Math.imul(w,se)|0;h=h+Math.imul(M,fe)|0;u=u+Math.imul(M,se)|0;o=o+Math.imul(y,he)|0;h=h+Math.imul(y,ue)|0;h=h+Math.imul(g,he)|0;u=u+Math.imul(g,ue)|0;o=o+Math.imul(v,ce)|0;h=h+Math.imul(v,le)|0;h=h+Math.imul(b,ce)|0;u=u+Math.imul(b,le)|0;o=o+Math.imul(c,ve)|0;h=h+Math.imul(c,be)|0;h=h+Math.imul(l,ve)|0;u=u+Math.imul(l,be)|0;var Ne=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ne>>>26)|0;Ne&=67108863;o=Math.imul(z,W);h=Math.imul(z,V);h=h+Math.imul(F,W)|0;u=Math.imul(F,V);o=o+Math.imul(O,J)|0;h=h+Math.imul(O,Z)|0;h=h+Math.imul(H,J)|0;u=u+Math.imul(H,Z)|0;o=o+Math.imul(T,Y)|0;h=h+Math.imul(T,$)|0;h=h+Math.imul(j,Y)|0;u=u+Math.imul(j,$)|0;o=o+Math.imul(I,ee)|0;h=h+Math.imul(I,te)|0;h=h+Math.imul(C,ee)|0;u=u+Math.imul(C,te)|0;o=o+Math.imul(N,ie)|0;h=h+Math.imul(N,ne)|0;h=h+Math.imul(P,ie)|0;u=u+Math.imul(P,ne)|0;o=o+Math.imul(E,fe)|0;h=h+Math.imul(E,se)|0;h=h+Math.imul(k,fe)|0;u=u+Math.imul(k,se)|0;o=o+Math.imul(w,he)|0;h=h+Math.imul(w,ue)|0;h=h+Math.imul(M,he)|0;u=u+Math.imul(M,ue)|0;o=o+Math.imul(y,ce)|0;h=h+Math.imul(y,le)|0;h=h+Math.imul(g,ce)|0;u=u+Math.imul(g,le)|0;o=o+Math.imul(v,ve)|0;h=h+Math.imul(v,be)|0;h=h+Math.imul(b,ve)|0;u=u+Math.imul(b,be)|0;o=o+Math.imul(c,ye)|0;h=h+Math.imul(c,ge)|0;h=h+Math.imul(l,ye)|0;u=u+Math.imul(l,ge)|0;var Re=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Re>>>26)|0;Re&=67108863;o=Math.imul(z,J);h=Math.imul(z,Z);h=h+Math.imul(F,J)|0;u=Math.imul(F,Z);o=o+Math.imul(O,Y)|0;h=h+Math.imul(O,$)|0;h=h+Math.imul(H,Y)|0;u=u+Math.imul(H,$)|0;o=o+Math.imul(T,ee)|0;h=h+Math.imul(T,te)|0;h=h+Math.imul(j,ee)|0;u=u+Math.imul(j,te)|0;o=o+Math.imul(I,ie)|0;h=h+Math.imul(I,ne)|0;h=h+Math.imul(C,ie)|0;u=u+Math.imul(C,ne)|0;o=o+Math.imul(N,fe)|0;h=h+Math.imul(N,se)|0;h=h+Math.imul(P,fe)|0;u=u+Math.imul(P,se)|0;o=o+Math.imul(E,he)|0;h=h+Math.imul(E,ue)|0;h=h+Math.imul(k,he)|0;u=u+Math.imul(k,ue)|0;o=o+Math.imul(w,ce)|0;h=h+Math.imul(w,le)|0;h=h+Math.imul(M,ce)|0;u=u+Math.imul(M,le)|0;o=o+Math.imul(y,ve)|0;h=h+Math.imul(y,be)|0;h=h+Math.imul(g,ve)|0;u=u+Math.imul(g,be)|0;o=o+Math.imul(v,ye)|0;h=h+Math.imul(v,ge)|0;h=h+Math.imul(b,ye)|0;u=u+Math.imul(b,ge)|0;var Pe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Pe>>>26)|0;Pe&=67108863;o=Math.imul(z,Y);h=Math.imul(z,$);h=h+Math.imul(F,Y)|0;u=Math.imul(F,$);o=o+Math.imul(O,ee)|0;h=h+Math.imul(O,te)|0;h=h+Math.imul(H,ee)|0;u=u+Math.imul(H,te)|0;o=o+Math.imul(T,ie)|0;h=h+Math.imul(T,ne)|0;h=h+Math.imul(j,ie)|0;u=u+Math.imul(j,ne)|0;o=o+Math.imul(I,fe)|0;h=h+Math.imul(I,se)|0;h=h+Math.imul(C,fe)|0;u=u+Math.imul(C,se)|0;o=o+Math.imul(N,he)|0;h=h+Math.imul(N,ue)|0;h=h+Math.imul(P,he)|0;u=u+Math.imul(P,ue)|0;o=o+Math.imul(E,ce)|0;h=h+Math.imul(E,le)|0;h=h+Math.imul(k,ce)|0;u=u+Math.imul(k,le)|0;o=o+Math.imul(w,ve)|0;h=h+Math.imul(w,be)|0;h=h+Math.imul(M,ve)|0;u=u+Math.imul(M,be)|0;o=o+Math.imul(y,ye)|0;h=h+Math.imul(y,ge)|0;h=h+Math.imul(g,ye)|0;u=u+Math.imul(g,ge)|0;var xe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(xe>>>26)|0;xe&=67108863;o=Math.imul(z,ee);h=Math.imul(z,te);h=h+Math.imul(F,ee)|0;u=Math.imul(F,te);o=o+Math.imul(O,ie)|0;h=h+Math.imul(O,ne)|0;h=h+Math.imul(H,ie)|0;u=u+Math.imul(H,ne)|0;o=o+Math.imul(T,fe)|0;h=h+Math.imul(T,se)|0;h=h+Math.imul(j,fe)|0;u=u+Math.imul(j,se)|0;o=o+Math.imul(I,he)|0;h=h+Math.imul(I,ue)|0;h=h+Math.imul(C,he)|0;u=u+Math.imul(C,ue)|0;o=o+Math.imul(N,ce)|0;h=h+Math.imul(N,le)|0;h=h+Math.imul(P,ce)|0;u=u+Math.imul(P,le)|0;o=o+Math.imul(E,ve)|0;h=h+Math.imul(E,be)|0;h=h+Math.imul(k,ve)|0;u=u+Math.imul(k,be)|0;o=o+Math.imul(w,ye)|0;h=h+Math.imul(w,ge)|0;h=h+Math.imul(M,ye)|0;u=u+Math.imul(M,ge)|0;var Ie=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ie>>>26)|0;Ie&=67108863;o=Math.imul(z,ie);h=Math.imul(z,ne);h=h+Math.imul(F,ie)|0;u=Math.imul(F,ne);o=o+Math.imul(O,fe)|0;h=h+Math.imul(O,se)|0;h=h+Math.imul(H,fe)|0;u=u+Math.imul(H,se)|0;o=o+Math.imul(T,he)|0;h=h+Math.imul(T,ue)|0;h=h+Math.imul(j,he)|0;u=u+Math.imul(j,ue)|0;o=o+Math.imul(I,ce)|0;h=h+Math.imul(I,le)|0;h=h+Math.imul(C,ce)|0;u=u+Math.imul(C,le)|0;o=o+Math.imul(N,ve)|0;h=h+Math.imul(N,be)|0;h=h+Math.imul(P,ve)|0;u=u+Math.imul(P,be)|0;o=o+Math.imul(E,ye)|0;h=h+Math.imul(E,ge)|0;h=h+Math.imul(k,ye)|0;u=u+Math.imul(k,ge)|0;var Ce=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ce>>>26)|0;Ce&=67108863;o=Math.imul(z,fe);h=Math.imul(z,se);h=h+Math.imul(F,fe)|0;u=Math.imul(F,se);o=o+Math.imul(O,he)|0;h=h+Math.imul(O,ue)|0;h=h+Math.imul(H,he)|0;u=u+Math.imul(H,ue)|0;o=o+Math.imul(T,ce)|0;h=h+Math.imul(T,le)|0;h=h+Math.imul(j,ce)|0;u=u+Math.imul(j,le)|0;o=o+Math.imul(I,ve)|0;h=h+Math.imul(I,be)|0;h=h+Math.imul(C,ve)|0;u=u+Math.imul(C,be)|0;o=o+Math.imul(N,ye)|0;h=h+Math.imul(N,ge)|0;h=h+Math.imul(P,ye)|0;u=u+Math.imul(P,ge)|0;var De=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(De>>>26)|0;De&=67108863;o=Math.imul(z,he);h=Math.imul(z,ue);h=h+Math.imul(F,he)|0;u=Math.imul(F,ue);o=o+Math.imul(O,ce)|0;h=h+Math.imul(O,le)|0;h=h+Math.imul(H,ce)|0;u=u+Math.imul(H,le)|0;o=o+Math.imul(T,ve)|0;h=h+Math.imul(T,be)|0;h=h+Math.imul(j,ve)|0;u=u+Math.imul(j,be)|0;o=o+Math.imul(I,ye)|0;h=h+Math.imul(I,ge)|0;h=h+Math.imul(C,ye)|0;u=u+Math.imul(C,ge)|0;var Te=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Te>>>26)|0;Te&=67108863;o=Math.imul(z,ce);h=Math.imul(z,le);h=h+Math.imul(F,ce)|0;u=Math.imul(F,le);o=o+Math.imul(O,ve)|0;h=h+Math.imul(O,be)|0;h=h+Math.imul(H,ve)|0;u=u+Math.imul(H,be)|0;o=o+Math.imul(T,ye)|0;h=h+Math.imul(T,ge)|0;h=h+Math.imul(j,ye)|0;u=u+Math.imul(j,ge)|0;var je=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(je>>>26)|0;je&=67108863;o=Math.imul(z,ve);h=Math.imul(z,be);h=h+Math.imul(F,ve)|0;u=Math.imul(F,be);o=o+Math.imul(O,ye)|0;h=h+Math.imul(O,ge)|0;h=h+Math.imul(H,ye)|0;u=u+Math.imul(H,ge)|0;var qe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(qe>>>26)|0;qe&=67108863;o=Math.imul(z,ye);h=Math.imul(z,ge);h=h+Math.imul(F,ye)|0;u=Math.imul(F,ge);var Oe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Oe>>>26)|0;Oe&=67108863;a[0]=_e;a[1]=we;a[2]=Me;a[3]=Se;a[4]=Be;a[5]=Ee;a[6]=ke;a[7]=Ae;a[8]=Ne;a[9]=Re;a[10]=Pe;a[11]=xe;a[12]=Ie;a[13]=Ce;a[14]=De;a[15]=Te;a[16]=je;a[17]=qe;a[18]=Oe;if(s!==0){a[19]=s;r.length++}return r};if(!Math.imul){o=smallMulTo}function bigMulTo(e,t,r){r.negative=t.negative^e.negative;r.length=e.length+t.length;var i=0;var n=0;for(var a=0;a<r.length-1;a++){var s=n;n=0;var o=i&67108863;var h=Math.min(a,t.length-1);for(var u=Math.max(0,a-e.length+1);u<=h;u++){var d=a-u;var c=e.words[d]|0;var l=t.words[u]|0;var p=c*l;var v=p&67108863;s=s+(p/67108864|0)|0;v=v+o|0;o=v&67108863;s=s+(v>>>26)|0;n+=s>>>26;s&=67108863}r.words[a]=o;i=s;s=n}if(i!==0){r.words[a]=i}else{r.length--}return r.strip()}function jumboMulTo(e,t,r){var i=new FFTM;return i.mulp(e,t,r)}BN.prototype.mulTo=function mulTo(e,t){var r;var i=this.length+e.length;if(this.length===10&&e.length===10){r=o(this,e,t)}else if(i<63){r=smallMulTo(this,e,t)}else if(i<1024){r=bigMulTo(this,e,t)}else{r=jumboMulTo(this,e,t)}return r};function FFTM(e,t){this.x=e;this.y=t}FFTM.prototype.makeRBT=function makeRBT(e){var t=new Array(e);var r=BN.prototype._countBits(e)-1;for(var i=0;i<e;i++){t[i]=this.revBin(i,r,e)}return t};FFTM.prototype.revBin=function revBin(e,t,r){if(e===0||e===r-1)return e;var i=0;for(var n=0;n<t;n++){i|=(e&1)<<t-n-1;e>>=1}return i};FFTM.prototype.permute=function permute(e,t,r,i,n,a){for(var s=0;s<a;s++){i[s]=t[e[s]];n[s]=r[e[s]]}};FFTM.prototype.transform=function transform(e,t,r,i,n,a){this.permute(a,e,t,r,i,n);for(var s=1;s<n;s<<=1){var o=s<<1;var h=Math.cos(2*Math.PI/o);var u=Math.sin(2*Math.PI/o);for(var d=0;d<n;d+=o){var c=h;var l=u;for(var p=0;p<s;p++){var v=r[d+p];var b=i[d+p];var m=r[d+p+s];var y=i[d+p+s];var g=c*m-l*y;y=c*y+l*m;m=g;r[d+p]=v+m;i[d+p]=b+y;r[d+p+s]=v-m;i[d+p+s]=b-y;if(p!==o){g=h*c-u*l;l=h*l+u*c;c=g}}}}};FFTM.prototype.guessLen13b=function guessLen13b(e,t){var r=Math.max(t,e)|1;var i=r&1;var n=0;for(r=r/2|0;r;r=r>>>1){n++}return 1<<n+1+i};FFTM.prototype.conjugate=function conjugate(e,t,r){if(r<=1)return;for(var i=0;i<r/2;i++){var n=e[i];e[i]=e[r-i-1];e[r-i-1]=n;n=t[i];t[i]=-t[r-i-1];t[r-i-1]=-n}};FFTM.prototype.normalize13b=function normalize13b(e,t){var r=0;for(var i=0;i<t/2;i++){var n=Math.round(e[2*i+1]/t)*8192+Math.round(e[2*i]/t)+r;e[i]=n&67108863;if(n<67108864){r=0}else{r=n/67108864|0}}return e};FFTM.prototype.convert13b=function convert13b(e,t,r,i){var n=0;for(var a=0;a<t;a++){n=n+(e[a]|0);r[2*a]=n&8191;n=n>>>13;r[2*a+1]=n&8191;n=n>>>13}for(a=2*t;a<i;++a){r[a]=0}assert(n===0);assert((n&~8191)===0)};FFTM.prototype.stub=function stub(e){var t=new Array(e);for(var r=0;r<e;r++){t[r]=0}return t};FFTM.prototype.mulp=function mulp(e,t,r){var i=2*this.guessLen13b(e.length,t.length);var n=this.makeRBT(i);var a=this.stub(i);var s=new Array(i);var o=new Array(i);var h=new Array(i);var u=new Array(i);var d=new Array(i);var c=new Array(i);var l=r.words;l.length=i;this.convert13b(e.words,e.length,s,i);this.convert13b(t.words,t.length,u,i);this.transform(s,a,o,h,i,n);this.transform(u,a,d,c,i,n);for(var p=0;p<i;p++){var v=o[p]*d[p]-h[p]*c[p];h[p]=o[p]*c[p]+h[p]*d[p];o[p]=v}this.conjugate(o,h,i);this.transform(o,h,l,a,i,n);this.conjugate(l,a,i);this.normalize13b(l,i);r.negative=e.negative^t.negative;r.length=e.length+t.length;return r.strip()};BN.prototype.mul=function mul(e){var t=new BN(null);t.words=new Array(this.length+e.length);return this.mulTo(e,t)};BN.prototype.mulf=function mulf(e){var t=new BN(null);t.words=new Array(this.length+e.length);return jumboMulTo(this,e,t)};BN.prototype.imul=function imul(e){return this.clone().mulTo(e,this)};BN.prototype.imuln=function imuln(e){assert(typeof e===\"number\");assert(e<67108864);var t=0;for(var r=0;r<this.length;r++){var i=(this.words[r]|0)*e;var n=(i&67108863)+(t&67108863);t>>=26;t+=i/67108864|0;t+=n>>>26;this.words[r]=n&67108863}if(t!==0){this.words[r]=t;this.length++}return this};BN.prototype.muln=function muln(e){return this.clone().imuln(e)};BN.prototype.sqr=function sqr(){return this.mul(this)};BN.prototype.isqr=function isqr(){return this.imul(this.clone())};BN.prototype.pow=function pow(e){var t=toBitArray(e);if(t.length===0)return new BN(1);var r=this;for(var i=0;i<t.length;i++,r=r.sqr()){if(t[i]!==0)break}if(++i<t.length){for(var n=r.sqr();i<t.length;i++,n=n.sqr()){if(t[i]===0)continue;r=r.mul(n)}}return r};BN.prototype.iushln=function iushln(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;var i=67108863>>>26-t<<26-t;var n;if(t!==0){var a=0;for(n=0;n<this.length;n++){var s=this.words[n]&i;var o=(this.words[n]|0)-s<<t;this.words[n]=o|a;a=s>>>26-t}if(a){this.words[n]=a;this.length++}}if(r!==0){for(n=this.length-1;n>=0;n--){this.words[n+r]=this.words[n]}for(n=0;n<r;n++){this.words[n]=0}this.length+=r}return this.strip()};BN.prototype.ishln=function ishln(e){assert(this.negative===0);return this.iushln(e)};BN.prototype.iushrn=function iushrn(e,t,r){assert(typeof e===\"number\"&&e>=0);var i;if(t){i=(t-t%26)/26}else{i=0}var n=e%26;var a=Math.min((e-n)/26,this.length);var s=67108863^67108863>>>n<<n;var o=r;i-=a;i=Math.max(0,i);if(o){for(var h=0;h<a;h++){o.words[h]=this.words[h]}o.length=a}if(a===0){}else if(this.length>a){this.length-=a;for(h=0;h<this.length;h++){this.words[h]=this.words[h+a]}}else{this.words[0]=0;this.length=1}var u=0;for(h=this.length-1;h>=0&&(u!==0||h>=i);h--){var d=this.words[h]|0;this.words[h]=u<<26-n|d>>>n;u=d&s}if(o&&u!==0){o.words[o.length++]=u}if(this.length===0){this.words[0]=0;this.length=1}return this.strip()};BN.prototype.ishrn=function ishrn(e,t,r){assert(this.negative===0);return this.iushrn(e,t,r)};BN.prototype.shln=function shln(e){return this.clone().ishln(e)};BN.prototype.ushln=function ushln(e){return this.clone().iushln(e)};BN.prototype.shrn=function shrn(e){return this.clone().ishrn(e)};BN.prototype.ushrn=function ushrn(e){return this.clone().iushrn(e)};BN.prototype.testn=function testn(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;var i=1<<t;if(this.length<=r)return false;var n=this.words[r];return!!(n&i)};BN.prototype.imaskn=function imaskn(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;assert(this.negative===0,\"imaskn works only with positive numbers\");if(this.length<=r){return this}if(t!==0){r++}this.length=Math.min(r,this.length);if(t!==0){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this.strip()};BN.prototype.maskn=function maskn(e){return this.clone().imaskn(e)};BN.prototype.iaddn=function iaddn(e){assert(typeof e===\"number\");assert(e<67108864);if(e<0)return this.isubn(-e);if(this.negative!==0){if(this.length===1&&(this.words[0]|0)<e){this.words[0]=e-(this.words[0]|0);this.negative=0;return this}this.negative=0;this.isubn(e);this.negative=1;return this}return this._iaddn(e)};BN.prototype._iaddn=function _iaddn(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++){this.words[t]-=67108864;if(t===this.length-1){this.words[t+1]=1}else{this.words[t+1]++}}this.length=Math.max(this.length,t+1);return this};BN.prototype.isubn=function isubn(e){assert(typeof e===\"number\");assert(e<67108864);if(e<0)return this.iaddn(-e);if(this.negative!==0){this.negative=0;this.iaddn(e);this.negative=1;return this}this.words[0]-=e;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1}else{for(var t=0;t<this.length&&this.words[t]<0;t++){this.words[t]+=67108864;this.words[t+1]-=1}}return this.strip()};BN.prototype.addn=function addn(e){return this.clone().iaddn(e)};BN.prototype.subn=function subn(e){return this.clone().isubn(e)};BN.prototype.iabs=function iabs(){this.negative=0;return this};BN.prototype.abs=function abs(){return this.clone().iabs()};BN.prototype._ishlnsubmul=function _ishlnsubmul(e,t,r){var i=e.length+r;var n;this._expand(i);var a;var s=0;for(n=0;n<e.length;n++){a=(this.words[n+r]|0)+s;var o=(e.words[n]|0)*t;a-=o&67108863;s=(a>>26)-(o/67108864|0);this.words[n+r]=a&67108863}for(;n<this.length-r;n++){a=(this.words[n+r]|0)+s;s=a>>26;this.words[n+r]=a&67108863}if(s===0)return this.strip();assert(s===-1);s=0;for(n=0;n<this.length;n++){a=-(this.words[n]|0)+s;s=a>>26;this.words[n]=a&67108863}this.negative=1;return this.strip()};BN.prototype._wordDiv=function _wordDiv(e,t){var r=this.length-e.length;var i=this.clone();var n=e;var a=n.words[n.length-1]|0;var s=this._countBits(a);r=26-s;if(r!==0){n=n.ushln(r);i.iushln(r);a=n.words[n.length-1]|0}var o=i.length-n.length;var h;if(t!==\"mod\"){h=new BN(null);h.length=o+1;h.words=new Array(h.length);for(var u=0;u<h.length;u++){h.words[u]=0}}var d=i.clone()._ishlnsubmul(n,1,o);if(d.negative===0){i=d;if(h){h.words[o]=1}}for(var c=o-1;c>=0;c--){var l=(i.words[n.length+c]|0)*67108864+(i.words[n.length+c-1]|0);l=Math.min(l/a|0,67108863);i._ishlnsubmul(n,l,c);while(i.negative!==0){l--;i.negative=0;i._ishlnsubmul(n,1,c);if(!i.isZero()){i.negative^=1}}if(h){h.words[c]=l}}if(h){h.strip()}i.strip();if(t!==\"div\"&&r!==0){i.iushrn(r)}return{div:h||null,mod:i}};BN.prototype.divmod=function divmod(e,t,r){assert(!e.isZero());if(this.isZero()){return{div:new BN(0),mod:new BN(0)}}var i,n,a;if(this.negative!==0&&e.negative===0){a=this.neg().divmod(e,t);if(t!==\"mod\"){i=a.div.neg()}if(t!==\"div\"){n=a.mod.neg();if(r&&n.negative!==0){n.iadd(e)}}return{div:i,mod:n}}if(this.negative===0&&e.negative!==0){a=this.divmod(e.neg(),t);if(t!==\"mod\"){i=a.div.neg()}return{div:i,mod:a.mod}}if((this.negative&e.negative)!==0){a=this.neg().divmod(e.neg(),t);if(t!==\"div\"){n=a.mod.neg();if(r&&n.negative!==0){n.isub(e)}}return{div:a.div,mod:n}}if(e.length>this.length||this.cmp(e)<0){return{div:new BN(0),mod:this}}if(e.length===1){if(t===\"div\"){return{div:this.divn(e.words[0]),mod:null}}if(t===\"mod\"){return{div:null,mod:new BN(this.modn(e.words[0]))}}return{div:this.divn(e.words[0]),mod:new BN(this.modn(e.words[0]))}}return this._wordDiv(e,t)};BN.prototype.div=function div(e){return this.divmod(e,\"div\",false).div};BN.prototype.mod=function mod(e){return this.divmod(e,\"mod\",false).mod};BN.prototype.umod=function umod(e){return this.divmod(e,\"mod\",true).mod};BN.prototype.divRound=function divRound(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=t.div.negative!==0?t.mod.isub(e):t.mod;var i=e.ushrn(1);var n=e.andln(1);var a=r.cmp(i);if(a<0||n===1&&a===0)return t.div;return t.div.negative!==0?t.div.isubn(1):t.div.iaddn(1)};BN.prototype.modn=function modn(e){assert(e<=67108863);var t=(1<<26)%e;var r=0;for(var i=this.length-1;i>=0;i--){r=(t*r+(this.words[i]|0))%e}return r};BN.prototype.idivn=function idivn(e){assert(e<=67108863);var t=0;for(var r=this.length-1;r>=0;r--){var i=(this.words[r]|0)+t*67108864;this.words[r]=i/e|0;t=i%e}return this.strip()};BN.prototype.divn=function divn(e){return this.clone().idivn(e)};BN.prototype.egcd=function egcd(e){assert(e.negative===0);assert(!e.isZero());var t=this;var r=e.clone();if(t.negative!==0){t=t.umod(e)}else{t=t.clone()}var i=new BN(1);var n=new BN(0);var a=new BN(0);var s=new BN(1);var o=0;while(t.isEven()&&r.isEven()){t.iushrn(1);r.iushrn(1);++o}var h=r.clone();var u=t.clone();while(!t.isZero()){for(var d=0,c=1;(t.words[0]&c)===0&&d<26;++d,c<<=1);if(d>0){t.iushrn(d);while(d-- >0){if(i.isOdd()||n.isOdd()){i.iadd(h);n.isub(u)}i.iushrn(1);n.iushrn(1)}}for(var l=0,p=1;(r.words[0]&p)===0&&l<26;++l,p<<=1);if(l>0){r.iushrn(l);while(l-- >0){if(a.isOdd()||s.isOdd()){a.iadd(h);s.isub(u)}a.iushrn(1);s.iushrn(1)}}if(t.cmp(r)>=0){t.isub(r);i.isub(a);n.isub(s)}else{r.isub(t);a.isub(i);s.isub(n)}}return{a:a,b:s,gcd:r.iushln(o)}};BN.prototype._invmp=function _invmp(e){assert(e.negative===0);assert(!e.isZero());var t=this;var r=e.clone();if(t.negative!==0){t=t.umod(e)}else{t=t.clone()}var i=new BN(1);var n=new BN(0);var a=r.clone();while(t.cmpn(1)>0&&r.cmpn(1)>0){for(var s=0,o=1;(t.words[0]&o)===0&&s<26;++s,o<<=1);if(s>0){t.iushrn(s);while(s-- >0){if(i.isOdd()){i.iadd(a)}i.iushrn(1)}}for(var h=0,u=1;(r.words[0]&u)===0&&h<26;++h,u<<=1);if(h>0){r.iushrn(h);while(h-- >0){if(n.isOdd()){n.iadd(a)}n.iushrn(1)}}if(t.cmp(r)>=0){t.isub(r);i.isub(n)}else{r.isub(t);n.isub(i)}}var d;if(t.cmpn(1)===0){d=i}else{d=n}if(d.cmpn(0)<0){d.iadd(e)}return d};BN.prototype.gcd=function gcd(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone();var r=e.clone();t.negative=0;r.negative=0;for(var i=0;t.isEven()&&r.isEven();i++){t.iushrn(1);r.iushrn(1)}do{while(t.isEven()){t.iushrn(1)}while(r.isEven()){r.iushrn(1)}var n=t.cmp(r);if(n<0){var a=t;t=r;r=a}else if(n===0||r.cmpn(1)===0){break}t.isub(r)}while(true);return r.iushln(i)};BN.prototype.invm=function invm(e){return this.egcd(e).a.umod(e)};BN.prototype.isEven=function isEven(){return(this.words[0]&1)===0};BN.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1};BN.prototype.andln=function andln(e){return this.words[0]&e};BN.prototype.bincn=function bincn(e){assert(typeof e===\"number\");var t=e%26;var r=(e-t)/26;var i=1<<t;if(this.length<=r){this._expand(r+1);this.words[r]|=i;return this}var n=i;for(var a=r;n!==0&&a<this.length;a++){var s=this.words[a]|0;s+=n;n=s>>>26;s&=67108863;this.words[a]=s}if(n!==0){this.words[a]=n;this.length++}return this};BN.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0};BN.prototype.cmpn=function cmpn(e){var t=e<0;if(this.negative!==0&&!t)return-1;if(this.negative===0&&t)return 1;this.strip();var r;if(this.length>1){r=1}else{if(t){e=-e}assert(e<=67108863,\"Number is too big\");var i=this.words[0]|0;r=i===e?0:i<e?-1:1}if(this.negative!==0)return-r|0;return r};BN.prototype.cmp=function cmp(e){if(this.negative!==0&&e.negative===0)return-1;if(this.negative===0&&e.negative!==0)return 1;var t=this.ucmp(e);if(this.negative!==0)return-t|0;return t};BN.prototype.ucmp=function ucmp(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;var t=0;for(var r=this.length-1;r>=0;r--){var i=this.words[r]|0;var n=e.words[r]|0;if(i===n)continue;if(i<n){t=-1}else if(i>n){t=1}break}return t};BN.prototype.gtn=function gtn(e){return this.cmpn(e)===1};BN.prototype.gt=function gt(e){return this.cmp(e)===1};BN.prototype.gten=function gten(e){return this.cmpn(e)>=0};BN.prototype.gte=function gte(e){return this.cmp(e)>=0};BN.prototype.ltn=function ltn(e){return this.cmpn(e)===-1};BN.prototype.lt=function lt(e){return this.cmp(e)===-1};BN.prototype.lten=function lten(e){return this.cmpn(e)<=0};BN.prototype.lte=function lte(e){return this.cmp(e)<=0};BN.prototype.eqn=function eqn(e){return this.cmpn(e)===0};BN.prototype.eq=function eq(e){return this.cmp(e)===0};BN.red=function red(e){return new Red(e)};BN.prototype.toRed=function toRed(e){assert(!this.red,\"Already a number in reduction context\");assert(this.negative===0,\"red works only with positives\");return e.convertTo(this)._forceRed(e)};BN.prototype.fromRed=function fromRed(){assert(this.red,\"fromRed works only with numbers in reduction context\");return this.red.convertFrom(this)};BN.prototype._forceRed=function _forceRed(e){this.red=e;return this};BN.prototype.forceRed=function forceRed(e){assert(!this.red,\"Already a number in reduction context\");return this._forceRed(e)};BN.prototype.redAdd=function redAdd(e){assert(this.red,\"redAdd works only with red numbers\");return this.red.add(this,e)};BN.prototype.redIAdd=function redIAdd(e){assert(this.red,\"redIAdd works only with red numbers\");return this.red.iadd(this,e)};BN.prototype.redSub=function redSub(e){assert(this.red,\"redSub works only with red numbers\");return this.red.sub(this,e)};BN.prototype.redISub=function redISub(e){assert(this.red,\"redISub works only with red numbers\");return this.red.isub(this,e)};BN.prototype.redShl=function redShl(e){assert(this.red,\"redShl works only with red numbers\");return this.red.shl(this,e)};BN.prototype.redMul=function redMul(e){assert(this.red,\"redMul works only with red numbers\");this.red._verify2(this,e);return this.red.mul(this,e)};BN.prototype.redIMul=function redIMul(e){assert(this.red,\"redMul works only with red numbers\");this.red._verify2(this,e);return this.red.imul(this,e)};BN.prototype.redSqr=function redSqr(){assert(this.red,\"redSqr works only with red numbers\");this.red._verify1(this);return this.red.sqr(this)};BN.prototype.redISqr=function redISqr(){assert(this.red,\"redISqr works only with red numbers\");this.red._verify1(this);return this.red.isqr(this)};BN.prototype.redSqrt=function redSqrt(){assert(this.red,\"redSqrt works only with red numbers\");this.red._verify1(this);return this.red.sqrt(this)};BN.prototype.redInvm=function redInvm(){assert(this.red,\"redInvm works only with red numbers\");this.red._verify1(this);return this.red.invm(this)};BN.prototype.redNeg=function redNeg(){assert(this.red,\"redNeg works only with red numbers\");this.red._verify1(this);return this.red.neg(this)};BN.prototype.redPow=function redPow(e){assert(this.red&&!e.red,\"redPow(normalNum)\");this.red._verify1(this);return this.red.pow(this,e)};var h={k256:null,p224:null,p192:null,p25519:null};function MPrime(e,t){this.name=e;this.p=new BN(t,16);this.n=this.p.bitLength();this.k=new BN(1).iushln(this.n).isub(this.p);this.tmp=this._tmp()}MPrime.prototype._tmp=function _tmp(){var e=new BN(null);e.words=new Array(Math.ceil(this.n/13));return e};MPrime.prototype.ireduce=function ireduce(e){var t=e;var r;do{this.split(t,this.tmp);t=this.imulK(t);t=t.iadd(this.tmp);r=t.bitLength()}while(r>this.n);var i=r<this.n?-1:t.ucmp(this.p);if(i===0){t.words[0]=0;t.length=1}else if(i>0){t.isub(this.p)}else{if(t.strip!==undefined){t.strip()}else{t._strip()}}return t};MPrime.prototype.split=function split(e,t){e.iushrn(this.n,0,t)};MPrime.prototype.imulK=function imulK(e){return e.imul(this.k)};function K256(){MPrime.call(this,\"k256\",\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\")}inherits(K256,MPrime);K256.prototype.split=function split(e,t){var r=4194303;var i=Math.min(e.length,9);for(var n=0;n<i;n++){t.words[n]=e.words[n]}t.length=i;if(e.length<=9){e.words[0]=0;e.length=1;return}var a=e.words[9];t.words[t.length++]=a&r;for(n=10;n<e.length;n++){var s=e.words[n]|0;e.words[n-10]=(s&r)<<4|a>>>22;a=s}a>>>=22;e.words[n-10]=a;if(a===0&&e.length>10){e.length-=10}else{e.length-=9}};K256.prototype.imulK=function imulK(e){e.words[e.length]=0;e.words[e.length+1]=0;e.length+=2;var t=0;for(var r=0;r<e.length;r++){var i=e.words[r]|0;t+=i*977;e.words[r]=t&67108863;t=i*64+(t/67108864|0)}if(e.words[e.length-1]===0){e.length--;if(e.words[e.length-1]===0){e.length--}}return e};function P224(){MPrime.call(this,\"p224\",\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\")}inherits(P224,MPrime);function P192(){MPrime.call(this,\"p192\",\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\")}inherits(P192,MPrime);function P25519(){MPrime.call(this,\"25519\",\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\")}inherits(P25519,MPrime);P25519.prototype.imulK=function imulK(e){var t=0;for(var r=0;r<e.length;r++){var i=(e.words[r]|0)*19+t;var n=i&67108863;i>>>=26;e.words[r]=n;t=i}if(t!==0){e.words[e.length++]=t}return e};BN._prime=function prime(e){if(h[e])return h[e];var prime;if(e===\"k256\"){prime=new K256}else if(e===\"p224\"){prime=new P224}else if(e===\"p192\"){prime=new P192}else if(e===\"p25519\"){prime=new P25519}else{throw new Error(\"Unknown prime \"+e)}h[e]=prime;return prime};function Red(e){if(typeof e===\"string\"){var t=BN._prime(e);this.m=t.p;this.prime=t}else{assert(e.gtn(1),\"modulus must be greater than 1\");this.m=e;this.prime=null}}Red.prototype._verify1=function _verify1(e){assert(e.negative===0,\"red works only with positives\");assert(e.red,\"red works only with red numbers\")};Red.prototype._verify2=function _verify2(e,t){assert((e.negative|t.negative)===0,\"red works only with positives\");assert(e.red&&e.red===t.red,\"red works only with red numbers\")};Red.prototype.imod=function imod(e){if(this.prime)return this.prime.ireduce(e)._forceRed(this);return e.umod(this.m)._forceRed(this)};Red.prototype.neg=function neg(e){if(e.isZero()){return e.clone()}return this.m.sub(e)._forceRed(this)};Red.prototype.add=function add(e,t){this._verify2(e,t);var r=e.add(t);if(r.cmp(this.m)>=0){r.isub(this.m)}return r._forceRed(this)};Red.prototype.iadd=function iadd(e,t){this._verify2(e,t);var r=e.iadd(t);if(r.cmp(this.m)>=0){r.isub(this.m)}return r};Red.prototype.sub=function sub(e,t){this._verify2(e,t);var r=e.sub(t);if(r.cmpn(0)<0){r.iadd(this.m)}return r._forceRed(this)};Red.prototype.isub=function isub(e,t){this._verify2(e,t);var r=e.isub(t);if(r.cmpn(0)<0){r.iadd(this.m)}return r};Red.prototype.shl=function shl(e,t){this._verify1(e);return this.imod(e.ushln(t))};Red.prototype.imul=function imul(e,t){this._verify2(e,t);return this.imod(e.imul(t))};Red.prototype.mul=function mul(e,t){this._verify2(e,t);return this.imod(e.mul(t))};Red.prototype.isqr=function isqr(e){return this.imul(e,e.clone())};Red.prototype.sqr=function sqr(e){return this.mul(e,e)};Red.prototype.sqrt=function sqrt(e){if(e.isZero())return e.clone();var t=this.m.andln(3);assert(t%2===1);if(t===3){var r=this.m.add(new BN(1)).iushrn(2);return this.pow(e,r)}var i=this.m.subn(1);var n=0;while(!i.isZero()&&i.andln(1)===0){n++;i.iushrn(1)}assert(!i.isZero());var a=new BN(1).toRed(this);var s=a.redNeg();var o=this.m.subn(1).iushrn(1);var h=this.m.bitLength();h=new BN(2*h*h).toRed(this);while(this.pow(h,o).cmp(s)!==0){h.redIAdd(s)}var u=this.pow(h,i);var d=this.pow(e,i.addn(1).iushrn(1));var c=this.pow(e,i);var l=n;while(c.cmp(a)!==0){var p=c;for(var v=0;p.cmp(a)!==0;v++){p=p.redSqr()}assert(v<l);var b=this.pow(u,new BN(1).iushln(l-v-1));d=d.redMul(b);u=b.redSqr();c=c.redMul(u);l=v}return d};Red.prototype.invm=function invm(e){var t=e._invmp(this.m);if(t.negative!==0){t.negative=0;return this.imod(t).redNeg()}else{return this.imod(t)}};Red.prototype.pow=function pow(e,t){if(t.isZero())return new BN(1).toRed(this);if(t.cmpn(1)===0)return e.clone();var r=4;var i=new Array(1<<r);i[0]=new BN(1).toRed(this);i[1]=e;for(var n=2;n<i.length;n++){i[n]=this.mul(i[n-1],e)}var a=i[0];var s=0;var o=0;var h=t.bitLength()%26;if(h===0){h=26}for(n=t.length-1;n>=0;n--){var u=t.words[n];for(var d=h-1;d>=0;d--){var c=u>>d&1;if(a!==i[0]){a=this.sqr(a)}if(c===0&&s===0){o=0;continue}s<<=1;s|=c;o++;if(o!==r&&(n!==0||d!==0))continue;a=this.mul(a,i[s]);o=0;s=0}h=26}return a};Red.prototype.convertTo=function convertTo(e){var t=e.umod(this.m);return t===e?t.clone():t};Red.prototype.convertFrom=function convertFrom(e){var t=e.clone();t.red=null;return t};BN.mont=function mont(e){return new Mont(e)};function Mont(e){Red.call(this,e);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26}this.r=new BN(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv)}inherits(Mont,Red);Mont.prototype.convertTo=function convertTo(e){return this.imod(e.ushln(this.shift))};Mont.prototype.convertFrom=function convertFrom(e){var t=this.imod(e.mul(this.rinv));t.red=null;return t};Mont.prototype.imul=function imul(e,t){if(e.isZero()||t.isZero()){e.words[0]=0;e.length=1;return e}var r=e.imul(t);var i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var n=r.isub(i).iushrn(this.shift);var a=n;if(n.cmp(this.m)>=0){a=n.isub(this.m)}else if(n.cmpn(0)<0){a=n.iadd(this.m)}return a._forceRed(this)};Mont.prototype.mul=function mul(e,t){if(e.isZero()||t.isZero())return new BN(0)._forceRed(this);var r=e.mul(t);var i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var n=r.isub(i).iushrn(this.shift);var a=n;if(n.cmp(this.m)>=0){a=n.isub(this.m)}else if(n.cmpn(0)<0){a=n.iadd(this.m)}return a._forceRed(this)};Mont.prototype.invm=function invm(e){var t=this.imod(e._invmp(this.m).mul(this.r2));return t._forceRed(this)}})( false||e,this)},1670:function(e,t,r){e=r.nmd(e);(function(e,t){\"use strict\";function assert(e,t){if(!e)throw new Error(t||\"Assertion failed\")}function inherits(e,t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}function BN(e,t,r){if(BN.isBN(e)){return e}this.negative=0;this.words=null;this.length=0;this.red=null;if(e!==null){if(t===\"le\"||t===\"be\"){r=t;t=10}this._init(e||0,t||10,r||\"be\")}}if(typeof e===\"object\"){e.exports=BN}else{t.BN=BN}BN.BN=BN;BN.wordSize=26;var i;try{i=r(4300).Buffer}catch(e){}BN.isBN=function isBN(e){if(e instanceof BN){return true}return e!==null&&typeof e===\"object\"&&e.constructor.wordSize===BN.wordSize&&Array.isArray(e.words)};BN.max=function max(e,t){if(e.cmp(t)>0)return e;return t};BN.min=function min(e,t){if(e.cmp(t)<0)return e;return t};BN.prototype._init=function init(e,t,r){if(typeof e===\"number\"){return this._initNumber(e,t,r)}if(typeof e===\"object\"){return this._initArray(e,t,r)}if(t===\"hex\"){t=16}assert(t===(t|0)&&t>=2&&t<=36);e=e.toString().replace(/\\s+/g,\"\");var i=0;if(e[0]===\"-\"){i++}if(t===16){this._parseHex(e,i)}else{this._parseBase(e,t,i)}if(e[0]===\"-\"){this.negative=1}this._strip();if(r!==\"le\")return;this._initArray(this.toArray(),t,r)};BN.prototype._initNumber=function _initNumber(e,t,r){if(e<0){this.negative=1;e=-e}if(e<67108864){this.words=[e&67108863];this.length=1}else if(e<4503599627370496){this.words=[e&67108863,e/67108864&67108863];this.length=2}else{assert(e<9007199254740992);this.words=[e&67108863,e/67108864&67108863,1];this.length=3}if(r!==\"le\")return;this._initArray(this.toArray(),t,r)};BN.prototype._initArray=function _initArray(e,t,r){assert(typeof e.length===\"number\");if(e.length<=0){this.words=[0];this.length=1;return this}this.length=Math.ceil(e.length/3);this.words=new Array(this.length);for(var i=0;i<this.length;i++){this.words[i]=0}var n,a;var s=0;if(r===\"be\"){for(i=e.length-1,n=0;i>=0;i-=3){a=e[i]|e[i-1]<<8|e[i-2]<<16;this.words[n]|=a<<s&67108863;this.words[n+1]=a>>>26-s&67108863;s+=24;if(s>=26){s-=26;n++}}}else if(r===\"le\"){for(i=0,n=0;i<e.length;i+=3){a=e[i]|e[i+1]<<8|e[i+2]<<16;this.words[n]|=a<<s&67108863;this.words[n+1]=a>>>26-s&67108863;s+=24;if(s>=26){s-=26;n++}}}return this._strip()};function parseHex(e,t,r){var i=0;var n=Math.min(e.length,r);var a=0;for(var s=t;s<n;s++){var o=e.charCodeAt(s)-48;i<<=4;var h;if(o>=49&&o<=54){h=o-49+10}else if(o>=17&&o<=22){h=o-17+10}else{h=o}i|=h;a|=h}assert(!(a&240),\"Invalid character in \"+e);return i}BN.prototype._parseHex=function _parseHex(e,t){this.length=Math.ceil((e.length-t)/6);this.words=new Array(this.length);for(var r=0;r<this.length;r++){this.words[r]=0}var i,n;var a=0;for(r=e.length-6,i=0;r>=t;r-=6){n=parseHex(e,r,r+6);this.words[i]|=n<<a&67108863;this.words[i+1]|=n>>>26-a&4194303;a+=24;if(a>=26){a-=26;i++}}if(r+6!==t){n=parseHex(e,t,r+6);this.words[i]|=n<<a&67108863;this.words[i+1]|=n>>>26-a&4194303}this._strip()};function parseBase(e,t,r,i){var n=0;var a=0;var s=Math.min(e.length,r);for(var o=t;o<s;o++){var h=e.charCodeAt(o)-48;n*=i;if(h>=49){a=h-49+10}else if(h>=17){a=h-17+10}else{a=h}assert(h>=0&&a<i,\"Invalid character\");n+=a}return n}BN.prototype._parseBase=function _parseBase(e,t,r){this.words=[0];this.length=1;for(var i=0,n=1;n<=67108863;n*=t){i++}i--;n=n/t|0;var a=e.length-r;var s=a%i;var o=Math.min(a,a-s)+r;var h=0;for(var u=r;u<o;u+=i){h=parseBase(e,u,u+i,t);this.imuln(n);if(this.words[0]+h<67108864){this.words[0]+=h}else{this._iaddn(h)}}if(s!==0){var d=1;h=parseBase(e,u,e.length,t);for(u=0;u<s;u++){d*=t}this.imuln(d);if(this.words[0]+h<67108864){this.words[0]+=h}else{this._iaddn(h)}}};BN.prototype.copy=function copy(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++){e.words[t]=this.words[t]}e.length=this.length;e.negative=this.negative;e.red=this.red};function move(e,t){e.words=t.words;e.length=t.length;e.negative=t.negative;e.red=t.red}BN.prototype._move=function _move(e){move(e,this)};BN.prototype.clone=function clone(){var e=new BN(null);this.copy(e);return e};BN.prototype._expand=function _expand(e){while(this.length<e){this.words[this.length++]=0}return this};BN.prototype._strip=function strip(){while(this.length>1&&this.words[this.length-1]===0){this.length--}return this._normSign()};BN.prototype._normSign=function _normSign(){if(this.length===1&&this.words[0]===0){this.negative=0}return this};if(typeof Symbol!==\"undefined\"&&typeof Symbol.for===\"function\"){BN.prototype[Symbol.for(\"nodejs.util.inspect.custom\")]=inspect}else{BN.prototype.inspect=inspect}function inspect(){return(this.red?\"<BN-R: \":\"<BN: \")+this.toString(16)+\">\"}var n=[\"\",\"0\",\"00\",\"000\",\"0000\",\"00000\",\"000000\",\"0000000\",\"00000000\",\"000000000\",\"0000000000\",\"00000000000\",\"000000000000\",\"0000000000000\",\"00000000000000\",\"000000000000000\",\"0000000000000000\",\"00000000000000000\",\"000000000000000000\",\"0000000000000000000\",\"00000000000000000000\",\"000000000000000000000\",\"0000000000000000000000\",\"00000000000000000000000\",\"000000000000000000000000\",\"0000000000000000000000000\"];var a=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5];var s=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];BN.prototype.toString=function toString(e,t){e=e||10;t=t|0||1;var r;if(e===16||e===\"hex\"){r=\"\";var i=0;var o=0;for(var h=0;h<this.length;h++){var u=this.words[h];var d=((u<<i|o)&16777215).toString(16);o=u>>>24-i&16777215;if(o!==0||h!==this.length-1){r=n[6-d.length]+d+r}else{r=d+r}i+=2;if(i>=26){i-=26;h--}}if(o!==0){r=o.toString(16)+r}while(r.length%t!==0){r=\"0\"+r}if(this.negative!==0){r=\"-\"+r}return r}if(e===(e|0)&&e>=2&&e<=36){var c=a[e];var l=s[e];r=\"\";var p=this.clone();p.negative=0;while(!p.isZero()){var v=p.modrn(l).toString(e);p=p.idivn(l);if(!p.isZero()){r=n[c-v.length]+v+r}else{r=v+r}}if(this.isZero()){r=\"0\"+r}while(r.length%t!==0){r=\"0\"+r}if(this.negative!==0){r=\"-\"+r}return r}assert(false,\"Base should be between 2 and 36\")};BN.prototype.toNumber=function toNumber(){var e=this.words[0];if(this.length===2){e+=this.words[1]*67108864}else if(this.length===3&&this.words[2]===1){e+=4503599627370496+this.words[1]*67108864}else if(this.length>2){assert(false,\"Number can only safely store up to 53 bits\")}return this.negative!==0?-e:e};BN.prototype.toJSON=function toJSON(){return this.toString(16,2)};if(i){BN.prototype.toBuffer=function toBuffer(e,t){return this.toArrayLike(i,e,t)}}BN.prototype.toArray=function toArray(e,t){return this.toArrayLike(Array,e,t)};var o=function allocate(e,t){if(e.allocUnsafe){return e.allocUnsafe(t)}return new e(t)};BN.prototype.toArrayLike=function toArrayLike(e,t,r){this._strip();var i=this.byteLength();var n=r||Math.max(1,i);assert(i<=n,\"byte array longer than desired length\");assert(n>0,\"Requested array length <= 0\");var a=o(e,n);var s=t===\"le\"?\"LE\":\"BE\";this[\"_toArrayLike\"+s](a,i);return a};BN.prototype._toArrayLikeLE=function _toArrayLikeLE(e,t){var r=0;var i=0;for(var n=0,a=0;n<this.length;n++){var s=this.words[n]<<a|i;e[r++]=s&255;if(r<e.length){e[r++]=s>>8&255}if(r<e.length){e[r++]=s>>16&255}if(a===6){if(r<e.length){e[r++]=s>>24&255}i=0;a=0}else{i=s>>>24;a+=2}}if(r<e.length){e[r++]=i;while(r<e.length){e[r++]=0}}};BN.prototype._toArrayLikeBE=function _toArrayLikeBE(e,t){var r=e.length-1;var i=0;for(var n=0,a=0;n<this.length;n++){var s=this.words[n]<<a|i;e[r--]=s&255;if(r>=0){e[r--]=s>>8&255}if(r>=0){e[r--]=s>>16&255}if(a===6){if(r>=0){e[r--]=s>>24&255}i=0;a=0}else{i=s>>>24;a+=2}}if(r>=0){e[r--]=i;while(r>=0){e[r--]=0}}};if(Math.clz32){BN.prototype._countBits=function _countBits(e){return 32-Math.clz32(e)}}else{BN.prototype._countBits=function _countBits(e){var t=e;var r=0;if(t>=4096){r+=13;t>>>=13}if(t>=64){r+=7;t>>>=7}if(t>=8){r+=4;t>>>=4}if(t>=2){r+=2;t>>>=2}return r+t}}BN.prototype._zeroBits=function _zeroBits(e){if(e===0)return 26;var t=e;var r=0;if((t&8191)===0){r+=13;t>>>=13}if((t&127)===0){r+=7;t>>>=7}if((t&15)===0){r+=4;t>>>=4}if((t&3)===0){r+=2;t>>>=2}if((t&1)===0){r++}return r};BN.prototype.bitLength=function bitLength(){var e=this.words[this.length-1];var t=this._countBits(e);return(this.length-1)*26+t};function toBitArray(e){var t=new Array(e.bitLength());for(var r=0;r<t.length;r++){var i=r/26|0;var n=r%26;t[r]=e.words[i]>>>n&1}return t}BN.prototype.zeroBits=function zeroBits(){if(this.isZero())return 0;var e=0;for(var t=0;t<this.length;t++){var r=this._zeroBits(this.words[t]);e+=r;if(r!==26)break}return e};BN.prototype.byteLength=function byteLength(){return Math.ceil(this.bitLength()/8)};BN.prototype.toTwos=function toTwos(e){if(this.negative!==0){return this.abs().inotn(e).iaddn(1)}return this.clone()};BN.prototype.fromTwos=function fromTwos(e){if(this.testn(e-1)){return this.notn(e).iaddn(1).ineg()}return this.clone()};BN.prototype.isNeg=function isNeg(){return this.negative!==0};BN.prototype.neg=function neg(){return this.clone().ineg()};BN.prototype.ineg=function ineg(){if(!this.isZero()){this.negative^=1}return this};BN.prototype.iuor=function iuor(e){while(this.length<e.length){this.words[this.length++]=0}for(var t=0;t<e.length;t++){this.words[t]=this.words[t]|e.words[t]}return this._strip()};BN.prototype.ior=function ior(e){assert((this.negative|e.negative)===0);return this.iuor(e)};BN.prototype.or=function or(e){if(this.length>e.length)return this.clone().ior(e);return e.clone().ior(this)};BN.prototype.uor=function uor(e){if(this.length>e.length)return this.clone().iuor(e);return e.clone().iuor(this)};BN.prototype.iuand=function iuand(e){var t;if(this.length>e.length){t=e}else{t=this}for(var r=0;r<t.length;r++){this.words[r]=this.words[r]&e.words[r]}this.length=t.length;return this._strip()};BN.prototype.iand=function iand(e){assert((this.negative|e.negative)===0);return this.iuand(e)};BN.prototype.and=function and(e){if(this.length>e.length)return this.clone().iand(e);return e.clone().iand(this)};BN.prototype.uand=function uand(e){if(this.length>e.length)return this.clone().iuand(e);return e.clone().iuand(this)};BN.prototype.iuxor=function iuxor(e){var t;var r;if(this.length>e.length){t=this;r=e}else{t=e;r=this}for(var i=0;i<r.length;i++){this.words[i]=t.words[i]^r.words[i]}if(this!==t){for(;i<t.length;i++){this.words[i]=t.words[i]}}this.length=t.length;return this._strip()};BN.prototype.ixor=function ixor(e){assert((this.negative|e.negative)===0);return this.iuxor(e)};BN.prototype.xor=function xor(e){if(this.length>e.length)return this.clone().ixor(e);return e.clone().ixor(this)};BN.prototype.uxor=function uxor(e){if(this.length>e.length)return this.clone().iuxor(e);return e.clone().iuxor(this)};BN.prototype.inotn=function inotn(e){assert(typeof e===\"number\"&&e>=0);var t=Math.ceil(e/26)|0;var r=e%26;this._expand(t);if(r>0){t--}for(var i=0;i<t;i++){this.words[i]=~this.words[i]&67108863}if(r>0){this.words[i]=~this.words[i]&67108863>>26-r}return this._strip()};BN.prototype.notn=function notn(e){return this.clone().inotn(e)};BN.prototype.setn=function setn(e,t){assert(typeof e===\"number\"&&e>=0);var r=e/26|0;var i=e%26;this._expand(r+1);if(t){this.words[r]=this.words[r]|1<<i}else{this.words[r]=this.words[r]&~(1<<i)}return this._strip()};BN.prototype.iadd=function iadd(e){var t;if(this.negative!==0&&e.negative===0){this.negative=0;t=this.isub(e);this.negative^=1;return this._normSign()}else if(this.negative===0&&e.negative!==0){e.negative=0;t=this.isub(e);e.negative=1;return t._normSign()}var r,i;if(this.length>e.length){r=this;i=e}else{r=e;i=this}var n=0;for(var a=0;a<i.length;a++){t=(r.words[a]|0)+(i.words[a]|0)+n;this.words[a]=t&67108863;n=t>>>26}for(;n!==0&&a<r.length;a++){t=(r.words[a]|0)+n;this.words[a]=t&67108863;n=t>>>26}this.length=r.length;if(n!==0){this.words[this.length]=n;this.length++}else if(r!==this){for(;a<r.length;a++){this.words[a]=r.words[a]}}return this};BN.prototype.add=function add(e){var t;if(e.negative!==0&&this.negative===0){e.negative=0;t=this.sub(e);e.negative^=1;return t}else if(e.negative===0&&this.negative!==0){this.negative=0;t=e.sub(this);this.negative=1;return t}if(this.length>e.length)return this.clone().iadd(e);return e.clone().iadd(this)};BN.prototype.isub=function isub(e){if(e.negative!==0){e.negative=0;var t=this.iadd(e);e.negative=1;return t._normSign()}else if(this.negative!==0){this.negative=0;this.iadd(e);this.negative=1;return this._normSign()}var r=this.cmp(e);if(r===0){this.negative=0;this.length=1;this.words[0]=0;return this}var i,n;if(r>0){i=this;n=e}else{i=e;n=this}var a=0;for(var s=0;s<n.length;s++){t=(i.words[s]|0)-(n.words[s]|0)+a;a=t>>26;this.words[s]=t&67108863}for(;a!==0&&s<i.length;s++){t=(i.words[s]|0)+a;a=t>>26;this.words[s]=t&67108863}if(a===0&&s<i.length&&i!==this){for(;s<i.length;s++){this.words[s]=i.words[s]}}this.length=Math.max(this.length,s);if(i!==this){this.negative=1}return this._strip()};BN.prototype.sub=function sub(e){return this.clone().isub(e)};function smallMulTo(e,t,r){r.negative=t.negative^e.negative;var i=e.length+t.length|0;r.length=i;i=i-1|0;var n=e.words[0]|0;var a=t.words[0]|0;var s=n*a;var o=s&67108863;var h=s/67108864|0;r.words[0]=o;for(var u=1;u<i;u++){var d=h>>>26;var c=h&67108863;var l=Math.min(u,t.length-1);for(var p=Math.max(0,u-e.length+1);p<=l;p++){var v=u-p|0;n=e.words[v]|0;a=t.words[p]|0;s=n*a+c;d+=s/67108864|0;c=s&67108863}r.words[u]=c|0;h=d|0}if(h!==0){r.words[u]=h|0}else{r.length--}return r._strip()}var h=function comb10MulTo(e,t,r){var i=e.words;var n=t.words;var a=r.words;var s=0;var o;var h;var u;var d=i[0]|0;var c=d&8191;var l=d>>>13;var p=i[1]|0;var v=p&8191;var b=p>>>13;var m=i[2]|0;var y=m&8191;var g=m>>>13;var _=i[3]|0;var w=_&8191;var M=_>>>13;var B=i[4]|0;var E=B&8191;var k=B>>>13;var A=i[5]|0;var N=A&8191;var P=A>>>13;var x=i[6]|0;var I=x&8191;var C=x>>>13;var D=i[7]|0;var T=D&8191;var j=D>>>13;var q=i[8]|0;var O=q&8191;var H=q>>>13;var L=i[9]|0;var z=L&8191;var F=L>>>13;var U=n[0]|0;var W=U&8191;var V=U>>>13;var G=n[1]|0;var J=G&8191;var Z=G>>>13;var X=n[2]|0;var Y=X&8191;var $=X>>>13;var Q=n[3]|0;var ee=Q&8191;var te=Q>>>13;var re=n[4]|0;var ie=re&8191;var ne=re>>>13;var ae=n[5]|0;var fe=ae&8191;var se=ae>>>13;var oe=n[6]|0;var he=oe&8191;var ue=oe>>>13;var de=n[7]|0;var ce=de&8191;var le=de>>>13;var pe=n[8]|0;var ve=pe&8191;var be=pe>>>13;var me=n[9]|0;var ye=me&8191;var ge=me>>>13;r.negative=e.negative^t.negative;r.length=19;o=Math.imul(c,W);h=Math.imul(c,V);h=h+Math.imul(l,W)|0;u=Math.imul(l,V);var _e=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(_e>>>26)|0;_e&=67108863;o=Math.imul(v,W);h=Math.imul(v,V);h=h+Math.imul(b,W)|0;u=Math.imul(b,V);o=o+Math.imul(c,J)|0;h=h+Math.imul(c,Z)|0;h=h+Math.imul(l,J)|0;u=u+Math.imul(l,Z)|0;var we=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(we>>>26)|0;we&=67108863;o=Math.imul(y,W);h=Math.imul(y,V);h=h+Math.imul(g,W)|0;u=Math.imul(g,V);o=o+Math.imul(v,J)|0;h=h+Math.imul(v,Z)|0;h=h+Math.imul(b,J)|0;u=u+Math.imul(b,Z)|0;o=o+Math.imul(c,Y)|0;h=h+Math.imul(c,$)|0;h=h+Math.imul(l,Y)|0;u=u+Math.imul(l,$)|0;var Me=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Me>>>26)|0;Me&=67108863;o=Math.imul(w,W);h=Math.imul(w,V);h=h+Math.imul(M,W)|0;u=Math.imul(M,V);o=o+Math.imul(y,J)|0;h=h+Math.imul(y,Z)|0;h=h+Math.imul(g,J)|0;u=u+Math.imul(g,Z)|0;o=o+Math.imul(v,Y)|0;h=h+Math.imul(v,$)|0;h=h+Math.imul(b,Y)|0;u=u+Math.imul(b,$)|0;o=o+Math.imul(c,ee)|0;h=h+Math.imul(c,te)|0;h=h+Math.imul(l,ee)|0;u=u+Math.imul(l,te)|0;var Se=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Se>>>26)|0;Se&=67108863;o=Math.imul(E,W);h=Math.imul(E,V);h=h+Math.imul(k,W)|0;u=Math.imul(k,V);o=o+Math.imul(w,J)|0;h=h+Math.imul(w,Z)|0;h=h+Math.imul(M,J)|0;u=u+Math.imul(M,Z)|0;o=o+Math.imul(y,Y)|0;h=h+Math.imul(y,$)|0;h=h+Math.imul(g,Y)|0;u=u+Math.imul(g,$)|0;o=o+Math.imul(v,ee)|0;h=h+Math.imul(v,te)|0;h=h+Math.imul(b,ee)|0;u=u+Math.imul(b,te)|0;o=o+Math.imul(c,ie)|0;h=h+Math.imul(c,ne)|0;h=h+Math.imul(l,ie)|0;u=u+Math.imul(l,ne)|0;var Be=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Be>>>26)|0;Be&=67108863;o=Math.imul(N,W);h=Math.imul(N,V);h=h+Math.imul(P,W)|0;u=Math.imul(P,V);o=o+Math.imul(E,J)|0;h=h+Math.imul(E,Z)|0;h=h+Math.imul(k,J)|0;u=u+Math.imul(k,Z)|0;o=o+Math.imul(w,Y)|0;h=h+Math.imul(w,$)|0;h=h+Math.imul(M,Y)|0;u=u+Math.imul(M,$)|0;o=o+Math.imul(y,ee)|0;h=h+Math.imul(y,te)|0;h=h+Math.imul(g,ee)|0;u=u+Math.imul(g,te)|0;o=o+Math.imul(v,ie)|0;h=h+Math.imul(v,ne)|0;h=h+Math.imul(b,ie)|0;u=u+Math.imul(b,ne)|0;o=o+Math.imul(c,fe)|0;h=h+Math.imul(c,se)|0;h=h+Math.imul(l,fe)|0;u=u+Math.imul(l,se)|0;var Ee=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ee>>>26)|0;Ee&=67108863;o=Math.imul(I,W);h=Math.imul(I,V);h=h+Math.imul(C,W)|0;u=Math.imul(C,V);o=o+Math.imul(N,J)|0;h=h+Math.imul(N,Z)|0;h=h+Math.imul(P,J)|0;u=u+Math.imul(P,Z)|0;o=o+Math.imul(E,Y)|0;h=h+Math.imul(E,$)|0;h=h+Math.imul(k,Y)|0;u=u+Math.imul(k,$)|0;o=o+Math.imul(w,ee)|0;h=h+Math.imul(w,te)|0;h=h+Math.imul(M,ee)|0;u=u+Math.imul(M,te)|0;o=o+Math.imul(y,ie)|0;h=h+Math.imul(y,ne)|0;h=h+Math.imul(g,ie)|0;u=u+Math.imul(g,ne)|0;o=o+Math.imul(v,fe)|0;h=h+Math.imul(v,se)|0;h=h+Math.imul(b,fe)|0;u=u+Math.imul(b,se)|0;o=o+Math.imul(c,he)|0;h=h+Math.imul(c,ue)|0;h=h+Math.imul(l,he)|0;u=u+Math.imul(l,ue)|0;var ke=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(ke>>>26)|0;ke&=67108863;o=Math.imul(T,W);h=Math.imul(T,V);h=h+Math.imul(j,W)|0;u=Math.imul(j,V);o=o+Math.imul(I,J)|0;h=h+Math.imul(I,Z)|0;h=h+Math.imul(C,J)|0;u=u+Math.imul(C,Z)|0;o=o+Math.imul(N,Y)|0;h=h+Math.imul(N,$)|0;h=h+Math.imul(P,Y)|0;u=u+Math.imul(P,$)|0;o=o+Math.imul(E,ee)|0;h=h+Math.imul(E,te)|0;h=h+Math.imul(k,ee)|0;u=u+Math.imul(k,te)|0;o=o+Math.imul(w,ie)|0;h=h+Math.imul(w,ne)|0;h=h+Math.imul(M,ie)|0;u=u+Math.imul(M,ne)|0;o=o+Math.imul(y,fe)|0;h=h+Math.imul(y,se)|0;h=h+Math.imul(g,fe)|0;u=u+Math.imul(g,se)|0;o=o+Math.imul(v,he)|0;h=h+Math.imul(v,ue)|0;h=h+Math.imul(b,he)|0;u=u+Math.imul(b,ue)|0;o=o+Math.imul(c,ce)|0;h=h+Math.imul(c,le)|0;h=h+Math.imul(l,ce)|0;u=u+Math.imul(l,le)|0;var Ae=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ae>>>26)|0;Ae&=67108863;o=Math.imul(O,W);h=Math.imul(O,V);h=h+Math.imul(H,W)|0;u=Math.imul(H,V);o=o+Math.imul(T,J)|0;h=h+Math.imul(T,Z)|0;h=h+Math.imul(j,J)|0;u=u+Math.imul(j,Z)|0;o=o+Math.imul(I,Y)|0;h=h+Math.imul(I,$)|0;h=h+Math.imul(C,Y)|0;u=u+Math.imul(C,$)|0;o=o+Math.imul(N,ee)|0;h=h+Math.imul(N,te)|0;h=h+Math.imul(P,ee)|0;u=u+Math.imul(P,te)|0;o=o+Math.imul(E,ie)|0;h=h+Math.imul(E,ne)|0;h=h+Math.imul(k,ie)|0;u=u+Math.imul(k,ne)|0;o=o+Math.imul(w,fe)|0;h=h+Math.imul(w,se)|0;h=h+Math.imul(M,fe)|0;u=u+Math.imul(M,se)|0;o=o+Math.imul(y,he)|0;h=h+Math.imul(y,ue)|0;h=h+Math.imul(g,he)|0;u=u+Math.imul(g,ue)|0;o=o+Math.imul(v,ce)|0;h=h+Math.imul(v,le)|0;h=h+Math.imul(b,ce)|0;u=u+Math.imul(b,le)|0;o=o+Math.imul(c,ve)|0;h=h+Math.imul(c,be)|0;h=h+Math.imul(l,ve)|0;u=u+Math.imul(l,be)|0;var Ne=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ne>>>26)|0;Ne&=67108863;o=Math.imul(z,W);h=Math.imul(z,V);h=h+Math.imul(F,W)|0;u=Math.imul(F,V);o=o+Math.imul(O,J)|0;h=h+Math.imul(O,Z)|0;h=h+Math.imul(H,J)|0;u=u+Math.imul(H,Z)|0;o=o+Math.imul(T,Y)|0;h=h+Math.imul(T,$)|0;h=h+Math.imul(j,Y)|0;u=u+Math.imul(j,$)|0;o=o+Math.imul(I,ee)|0;h=h+Math.imul(I,te)|0;h=h+Math.imul(C,ee)|0;u=u+Math.imul(C,te)|0;o=o+Math.imul(N,ie)|0;h=h+Math.imul(N,ne)|0;h=h+Math.imul(P,ie)|0;u=u+Math.imul(P,ne)|0;o=o+Math.imul(E,fe)|0;h=h+Math.imul(E,se)|0;h=h+Math.imul(k,fe)|0;u=u+Math.imul(k,se)|0;o=o+Math.imul(w,he)|0;h=h+Math.imul(w,ue)|0;h=h+Math.imul(M,he)|0;u=u+Math.imul(M,ue)|0;o=o+Math.imul(y,ce)|0;h=h+Math.imul(y,le)|0;h=h+Math.imul(g,ce)|0;u=u+Math.imul(g,le)|0;o=o+Math.imul(v,ve)|0;h=h+Math.imul(v,be)|0;h=h+Math.imul(b,ve)|0;u=u+Math.imul(b,be)|0;o=o+Math.imul(c,ye)|0;h=h+Math.imul(c,ge)|0;h=h+Math.imul(l,ye)|0;u=u+Math.imul(l,ge)|0;var Re=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Re>>>26)|0;Re&=67108863;o=Math.imul(z,J);h=Math.imul(z,Z);h=h+Math.imul(F,J)|0;u=Math.imul(F,Z);o=o+Math.imul(O,Y)|0;h=h+Math.imul(O,$)|0;h=h+Math.imul(H,Y)|0;u=u+Math.imul(H,$)|0;o=o+Math.imul(T,ee)|0;h=h+Math.imul(T,te)|0;h=h+Math.imul(j,ee)|0;u=u+Math.imul(j,te)|0;o=o+Math.imul(I,ie)|0;h=h+Math.imul(I,ne)|0;h=h+Math.imul(C,ie)|0;u=u+Math.imul(C,ne)|0;o=o+Math.imul(N,fe)|0;h=h+Math.imul(N,se)|0;h=h+Math.imul(P,fe)|0;u=u+Math.imul(P,se)|0;o=o+Math.imul(E,he)|0;h=h+Math.imul(E,ue)|0;h=h+Math.imul(k,he)|0;u=u+Math.imul(k,ue)|0;o=o+Math.imul(w,ce)|0;h=h+Math.imul(w,le)|0;h=h+Math.imul(M,ce)|0;u=u+Math.imul(M,le)|0;o=o+Math.imul(y,ve)|0;h=h+Math.imul(y,be)|0;h=h+Math.imul(g,ve)|0;u=u+Math.imul(g,be)|0;o=o+Math.imul(v,ye)|0;h=h+Math.imul(v,ge)|0;h=h+Math.imul(b,ye)|0;u=u+Math.imul(b,ge)|0;var Pe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Pe>>>26)|0;Pe&=67108863;o=Math.imul(z,Y);h=Math.imul(z,$);h=h+Math.imul(F,Y)|0;u=Math.imul(F,$);o=o+Math.imul(O,ee)|0;h=h+Math.imul(O,te)|0;h=h+Math.imul(H,ee)|0;u=u+Math.imul(H,te)|0;o=o+Math.imul(T,ie)|0;h=h+Math.imul(T,ne)|0;h=h+Math.imul(j,ie)|0;u=u+Math.imul(j,ne)|0;o=o+Math.imul(I,fe)|0;h=h+Math.imul(I,se)|0;h=h+Math.imul(C,fe)|0;u=u+Math.imul(C,se)|0;o=o+Math.imul(N,he)|0;h=h+Math.imul(N,ue)|0;h=h+Math.imul(P,he)|0;u=u+Math.imul(P,ue)|0;o=o+Math.imul(E,ce)|0;h=h+Math.imul(E,le)|0;h=h+Math.imul(k,ce)|0;u=u+Math.imul(k,le)|0;o=o+Math.imul(w,ve)|0;h=h+Math.imul(w,be)|0;h=h+Math.imul(M,ve)|0;u=u+Math.imul(M,be)|0;o=o+Math.imul(y,ye)|0;h=h+Math.imul(y,ge)|0;h=h+Math.imul(g,ye)|0;u=u+Math.imul(g,ge)|0;var xe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(xe>>>26)|0;xe&=67108863;o=Math.imul(z,ee);h=Math.imul(z,te);h=h+Math.imul(F,ee)|0;u=Math.imul(F,te);o=o+Math.imul(O,ie)|0;h=h+Math.imul(O,ne)|0;h=h+Math.imul(H,ie)|0;u=u+Math.imul(H,ne)|0;o=o+Math.imul(T,fe)|0;h=h+Math.imul(T,se)|0;h=h+Math.imul(j,fe)|0;u=u+Math.imul(j,se)|0;o=o+Math.imul(I,he)|0;h=h+Math.imul(I,ue)|0;h=h+Math.imul(C,he)|0;u=u+Math.imul(C,ue)|0;o=o+Math.imul(N,ce)|0;h=h+Math.imul(N,le)|0;h=h+Math.imul(P,ce)|0;u=u+Math.imul(P,le)|0;o=o+Math.imul(E,ve)|0;h=h+Math.imul(E,be)|0;h=h+Math.imul(k,ve)|0;u=u+Math.imul(k,be)|0;o=o+Math.imul(w,ye)|0;h=h+Math.imul(w,ge)|0;h=h+Math.imul(M,ye)|0;u=u+Math.imul(M,ge)|0;var Ie=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ie>>>26)|0;Ie&=67108863;o=Math.imul(z,ie);h=Math.imul(z,ne);h=h+Math.imul(F,ie)|0;u=Math.imul(F,ne);o=o+Math.imul(O,fe)|0;h=h+Math.imul(O,se)|0;h=h+Math.imul(H,fe)|0;u=u+Math.imul(H,se)|0;o=o+Math.imul(T,he)|0;h=h+Math.imul(T,ue)|0;h=h+Math.imul(j,he)|0;u=u+Math.imul(j,ue)|0;o=o+Math.imul(I,ce)|0;h=h+Math.imul(I,le)|0;h=h+Math.imul(C,ce)|0;u=u+Math.imul(C,le)|0;o=o+Math.imul(N,ve)|0;h=h+Math.imul(N,be)|0;h=h+Math.imul(P,ve)|0;u=u+Math.imul(P,be)|0;o=o+Math.imul(E,ye)|0;h=h+Math.imul(E,ge)|0;h=h+Math.imul(k,ye)|0;u=u+Math.imul(k,ge)|0;var Ce=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Ce>>>26)|0;Ce&=67108863;o=Math.imul(z,fe);h=Math.imul(z,se);h=h+Math.imul(F,fe)|0;u=Math.imul(F,se);o=o+Math.imul(O,he)|0;h=h+Math.imul(O,ue)|0;h=h+Math.imul(H,he)|0;u=u+Math.imul(H,ue)|0;o=o+Math.imul(T,ce)|0;h=h+Math.imul(T,le)|0;h=h+Math.imul(j,ce)|0;u=u+Math.imul(j,le)|0;o=o+Math.imul(I,ve)|0;h=h+Math.imul(I,be)|0;h=h+Math.imul(C,ve)|0;u=u+Math.imul(C,be)|0;o=o+Math.imul(N,ye)|0;h=h+Math.imul(N,ge)|0;h=h+Math.imul(P,ye)|0;u=u+Math.imul(P,ge)|0;var De=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(De>>>26)|0;De&=67108863;o=Math.imul(z,he);h=Math.imul(z,ue);h=h+Math.imul(F,he)|0;u=Math.imul(F,ue);o=o+Math.imul(O,ce)|0;h=h+Math.imul(O,le)|0;h=h+Math.imul(H,ce)|0;u=u+Math.imul(H,le)|0;o=o+Math.imul(T,ve)|0;h=h+Math.imul(T,be)|0;h=h+Math.imul(j,ve)|0;u=u+Math.imul(j,be)|0;o=o+Math.imul(I,ye)|0;h=h+Math.imul(I,ge)|0;h=h+Math.imul(C,ye)|0;u=u+Math.imul(C,ge)|0;var Te=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Te>>>26)|0;Te&=67108863;o=Math.imul(z,ce);h=Math.imul(z,le);h=h+Math.imul(F,ce)|0;u=Math.imul(F,le);o=o+Math.imul(O,ve)|0;h=h+Math.imul(O,be)|0;h=h+Math.imul(H,ve)|0;u=u+Math.imul(H,be)|0;o=o+Math.imul(T,ye)|0;h=h+Math.imul(T,ge)|0;h=h+Math.imul(j,ye)|0;u=u+Math.imul(j,ge)|0;var je=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(je>>>26)|0;je&=67108863;o=Math.imul(z,ve);h=Math.imul(z,be);h=h+Math.imul(F,ve)|0;u=Math.imul(F,be);o=o+Math.imul(O,ye)|0;h=h+Math.imul(O,ge)|0;h=h+Math.imul(H,ye)|0;u=u+Math.imul(H,ge)|0;var qe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(qe>>>26)|0;qe&=67108863;o=Math.imul(z,ye);h=Math.imul(z,ge);h=h+Math.imul(F,ye)|0;u=Math.imul(F,ge);var Oe=(s+o|0)+((h&8191)<<13)|0;s=(u+(h>>>13)|0)+(Oe>>>26)|0;Oe&=67108863;a[0]=_e;a[1]=we;a[2]=Me;a[3]=Se;a[4]=Be;a[5]=Ee;a[6]=ke;a[7]=Ae;a[8]=Ne;a[9]=Re;a[10]=Pe;a[11]=xe;a[12]=Ie;a[13]=Ce;a[14]=De;a[15]=Te;a[16]=je;a[17]=qe;a[18]=Oe;if(s!==0){a[19]=s;r.length++}return r};if(!Math.imul){h=smallMulTo}function bigMulTo(e,t,r){r.negative=t.negative^e.negative;r.length=e.length+t.length;var i=0;var n=0;for(var a=0;a<r.length-1;a++){var s=n;n=0;var o=i&67108863;var h=Math.min(a,t.length-1);for(var u=Math.max(0,a-e.length+1);u<=h;u++){var d=a-u;var c=e.words[d]|0;var l=t.words[u]|0;var p=c*l;var v=p&67108863;s=s+(p/67108864|0)|0;v=v+o|0;o=v&67108863;s=s+(v>>>26)|0;n+=s>>>26;s&=67108863}r.words[a]=o;i=s;s=n}if(i!==0){r.words[a]=i}else{r.length--}return r._strip()}function jumboMulTo(e,t,r){return bigMulTo(e,t,r)}BN.prototype.mulTo=function mulTo(e,t){var r;var i=this.length+e.length;if(this.length===10&&e.length===10){r=h(this,e,t)}else if(i<63){r=smallMulTo(this,e,t)}else if(i<1024){r=bigMulTo(this,e,t)}else{r=jumboMulTo(this,e,t)}return r};function FFTM(e,t){this.x=e;this.y=t}FFTM.prototype.makeRBT=function makeRBT(e){var t=new Array(e);var r=BN.prototype._countBits(e)-1;for(var i=0;i<e;i++){t[i]=this.revBin(i,r,e)}return t};FFTM.prototype.revBin=function revBin(e,t,r){if(e===0||e===r-1)return e;var i=0;for(var n=0;n<t;n++){i|=(e&1)<<t-n-1;e>>=1}return i};FFTM.prototype.permute=function permute(e,t,r,i,n,a){for(var s=0;s<a;s++){i[s]=t[e[s]];n[s]=r[e[s]]}};FFTM.prototype.transform=function transform(e,t,r,i,n,a){this.permute(a,e,t,r,i,n);for(var s=1;s<n;s<<=1){var o=s<<1;var h=Math.cos(2*Math.PI/o);var u=Math.sin(2*Math.PI/o);for(var d=0;d<n;d+=o){var c=h;var l=u;for(var p=0;p<s;p++){var v=r[d+p];var b=i[d+p];var m=r[d+p+s];var y=i[d+p+s];var g=c*m-l*y;y=c*y+l*m;m=g;r[d+p]=v+m;i[d+p]=b+y;r[d+p+s]=v-m;i[d+p+s]=b-y;if(p!==o){g=h*c-u*l;l=h*l+u*c;c=g}}}}};FFTM.prototype.guessLen13b=function guessLen13b(e,t){var r=Math.max(t,e)|1;var i=r&1;var n=0;for(r=r/2|0;r;r=r>>>1){n++}return 1<<n+1+i};FFTM.prototype.conjugate=function conjugate(e,t,r){if(r<=1)return;for(var i=0;i<r/2;i++){var n=e[i];e[i]=e[r-i-1];e[r-i-1]=n;n=t[i];t[i]=-t[r-i-1];t[r-i-1]=-n}};FFTM.prototype.normalize13b=function normalize13b(e,t){var r=0;for(var i=0;i<t/2;i++){var n=Math.round(e[2*i+1]/t)*8192+Math.round(e[2*i]/t)+r;e[i]=n&67108863;if(n<67108864){r=0}else{r=n/67108864|0}}return e};FFTM.prototype.convert13b=function convert13b(e,t,r,i){var n=0;for(var a=0;a<t;a++){n=n+(e[a]|0);r[2*a]=n&8191;n=n>>>13;r[2*a+1]=n&8191;n=n>>>13}for(a=2*t;a<i;++a){r[a]=0}assert(n===0);assert((n&~8191)===0)};FFTM.prototype.stub=function stub(e){var t=new Array(e);for(var r=0;r<e;r++){t[r]=0}return t};FFTM.prototype.mulp=function mulp(e,t,r){var i=2*this.guessLen13b(e.length,t.length);var n=this.makeRBT(i);var a=this.stub(i);var s=new Array(i);var o=new Array(i);var h=new Array(i);var u=new Array(i);var d=new Array(i);var c=new Array(i);var l=r.words;l.length=i;this.convert13b(e.words,e.length,s,i);this.convert13b(t.words,t.length,u,i);this.transform(s,a,o,h,i,n);this.transform(u,a,d,c,i,n);for(var p=0;p<i;p++){var v=o[p]*d[p]-h[p]*c[p];h[p]=o[p]*c[p]+h[p]*d[p];o[p]=v}this.conjugate(o,h,i);this.transform(o,h,l,a,i,n);this.conjugate(l,a,i);this.normalize13b(l,i);r.negative=e.negative^t.negative;r.length=e.length+t.length;return r._strip()};BN.prototype.mul=function mul(e){var t=new BN(null);t.words=new Array(this.length+e.length);return this.mulTo(e,t)};BN.prototype.mulf=function mulf(e){var t=new BN(null);t.words=new Array(this.length+e.length);return jumboMulTo(this,e,t)};BN.prototype.imul=function imul(e){return this.clone().mulTo(e,this)};BN.prototype.imuln=function imuln(e){var t=e<0;if(t)e=-e;assert(typeof e===\"number\");assert(e<67108864);var r=0;for(var i=0;i<this.length;i++){var n=(this.words[i]|0)*e;var a=(n&67108863)+(r&67108863);r>>=26;r+=n/67108864|0;r+=a>>>26;this.words[i]=a&67108863}if(r!==0){this.words[i]=r;this.length++}return t?this.ineg():this};BN.prototype.muln=function muln(e){return this.clone().imuln(e)};BN.prototype.sqr=function sqr(){return this.mul(this)};BN.prototype.isqr=function isqr(){return this.imul(this.clone())};BN.prototype.pow=function pow(e){var t=toBitArray(e);if(t.length===0)return new BN(1);var r=this;for(var i=0;i<t.length;i++,r=r.sqr()){if(t[i]!==0)break}if(++i<t.length){for(var n=r.sqr();i<t.length;i++,n=n.sqr()){if(t[i]===0)continue;r=r.mul(n)}}return r};BN.prototype.iushln=function iushln(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;var i=67108863>>>26-t<<26-t;var n;if(t!==0){var a=0;for(n=0;n<this.length;n++){var s=this.words[n]&i;var o=(this.words[n]|0)-s<<t;this.words[n]=o|a;a=s>>>26-t}if(a){this.words[n]=a;this.length++}}if(r!==0){for(n=this.length-1;n>=0;n--){this.words[n+r]=this.words[n]}for(n=0;n<r;n++){this.words[n]=0}this.length+=r}return this._strip()};BN.prototype.ishln=function ishln(e){assert(this.negative===0);return this.iushln(e)};BN.prototype.iushrn=function iushrn(e,t,r){assert(typeof e===\"number\"&&e>=0);var i;if(t){i=(t-t%26)/26}else{i=0}var n=e%26;var a=Math.min((e-n)/26,this.length);var s=67108863^67108863>>>n<<n;var o=r;i-=a;i=Math.max(0,i);if(o){for(var h=0;h<a;h++){o.words[h]=this.words[h]}o.length=a}if(a===0){}else if(this.length>a){this.length-=a;for(h=0;h<this.length;h++){this.words[h]=this.words[h+a]}}else{this.words[0]=0;this.length=1}var u=0;for(h=this.length-1;h>=0&&(u!==0||h>=i);h--){var d=this.words[h]|0;this.words[h]=u<<26-n|d>>>n;u=d&s}if(o&&u!==0){o.words[o.length++]=u}if(this.length===0){this.words[0]=0;this.length=1}return this._strip()};BN.prototype.ishrn=function ishrn(e,t,r){assert(this.negative===0);return this.iushrn(e,t,r)};BN.prototype.shln=function shln(e){return this.clone().ishln(e)};BN.prototype.ushln=function ushln(e){return this.clone().iushln(e)};BN.prototype.shrn=function shrn(e){return this.clone().ishrn(e)};BN.prototype.ushrn=function ushrn(e){return this.clone().iushrn(e)};BN.prototype.testn=function testn(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;var i=1<<t;if(this.length<=r)return false;var n=this.words[r];return!!(n&i)};BN.prototype.imaskn=function imaskn(e){assert(typeof e===\"number\"&&e>=0);var t=e%26;var r=(e-t)/26;assert(this.negative===0,\"imaskn works only with positive numbers\");if(this.length<=r){return this}if(t!==0){r++}this.length=Math.min(r,this.length);if(t!==0){var i=67108863^67108863>>>t<<t;this.words[this.length-1]&=i}return this._strip()};BN.prototype.maskn=function maskn(e){return this.clone().imaskn(e)};BN.prototype.iaddn=function iaddn(e){assert(typeof e===\"number\");assert(e<67108864);if(e<0)return this.isubn(-e);if(this.negative!==0){if(this.length===1&&(this.words[0]|0)<=e){this.words[0]=e-(this.words[0]|0);this.negative=0;return this}this.negative=0;this.isubn(e);this.negative=1;return this}return this._iaddn(e)};BN.prototype._iaddn=function _iaddn(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++){this.words[t]-=67108864;if(t===this.length-1){this.words[t+1]=1}else{this.words[t+1]++}}this.length=Math.max(this.length,t+1);return this};BN.prototype.isubn=function isubn(e){assert(typeof e===\"number\");assert(e<67108864);if(e<0)return this.iaddn(-e);if(this.negative!==0){this.negative=0;this.iaddn(e);this.negative=1;return this}this.words[0]-=e;if(this.length===1&&this.words[0]<0){this.words[0]=-this.words[0];this.negative=1}else{for(var t=0;t<this.length&&this.words[t]<0;t++){this.words[t]+=67108864;this.words[t+1]-=1}}return this._strip()};BN.prototype.addn=function addn(e){return this.clone().iaddn(e)};BN.prototype.subn=function subn(e){return this.clone().isubn(e)};BN.prototype.iabs=function iabs(){this.negative=0;return this};BN.prototype.abs=function abs(){return this.clone().iabs()};BN.prototype._ishlnsubmul=function _ishlnsubmul(e,t,r){var i=e.length+r;var n;this._expand(i);var a;var s=0;for(n=0;n<e.length;n++){a=(this.words[n+r]|0)+s;var o=(e.words[n]|0)*t;a-=o&67108863;s=(a>>26)-(o/67108864|0);this.words[n+r]=a&67108863}for(;n<this.length-r;n++){a=(this.words[n+r]|0)+s;s=a>>26;this.words[n+r]=a&67108863}if(s===0)return this._strip();assert(s===-1);s=0;for(n=0;n<this.length;n++){a=-(this.words[n]|0)+s;s=a>>26;this.words[n]=a&67108863}this.negative=1;return this._strip()};BN.prototype._wordDiv=function _wordDiv(e,t){var r=this.length-e.length;var i=this.clone();var n=e;var a=n.words[n.length-1]|0;var s=this._countBits(a);r=26-s;if(r!==0){n=n.ushln(r);i.iushln(r);a=n.words[n.length-1]|0}var o=i.length-n.length;var h;if(t!==\"mod\"){h=new BN(null);h.length=o+1;h.words=new Array(h.length);for(var u=0;u<h.length;u++){h.words[u]=0}}var d=i.clone()._ishlnsubmul(n,1,o);if(d.negative===0){i=d;if(h){h.words[o]=1}}for(var c=o-1;c>=0;c--){var l=(i.words[n.length+c]|0)*67108864+(i.words[n.length+c-1]|0);l=Math.min(l/a|0,67108863);i._ishlnsubmul(n,l,c);while(i.negative!==0){l--;i.negative=0;i._ishlnsubmul(n,1,c);if(!i.isZero()){i.negative^=1}}if(h){h.words[c]=l}}if(h){h._strip()}i._strip();if(t!==\"div\"&&r!==0){i.iushrn(r)}return{div:h||null,mod:i}};BN.prototype.divmod=function divmod(e,t,r){assert(!e.isZero());if(this.isZero()){return{div:new BN(0),mod:new BN(0)}}var i,n,a;if(this.negative!==0&&e.negative===0){a=this.neg().divmod(e,t);if(t!==\"mod\"){i=a.div.neg()}if(t!==\"div\"){n=a.mod.neg();if(r&&n.negative!==0){n.iadd(e)}}return{div:i,mod:n}}if(this.negative===0&&e.negative!==0){a=this.divmod(e.neg(),t);if(t!==\"mod\"){i=a.div.neg()}return{div:i,mod:a.mod}}if((this.negative&e.negative)!==0){a=this.neg().divmod(e.neg(),t);if(t!==\"div\"){n=a.mod.neg();if(r&&n.negative!==0){n.isub(e)}}return{div:a.div,mod:n}}if(e.length>this.length||this.cmp(e)<0){return{div:new BN(0),mod:this}}if(e.length===1){if(t===\"div\"){return{div:this.divn(e.words[0]),mod:null}}if(t===\"mod\"){return{div:null,mod:new BN(this.modrn(e.words[0]))}}return{div:this.divn(e.words[0]),mod:new BN(this.modrn(e.words[0]))}}return this._wordDiv(e,t)};BN.prototype.div=function div(e){return this.divmod(e,\"div\",false).div};BN.prototype.mod=function mod(e){return this.divmod(e,\"mod\",false).mod};BN.prototype.umod=function umod(e){return this.divmod(e,\"mod\",true).mod};BN.prototype.divRound=function divRound(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var r=t.div.negative!==0?t.mod.isub(e):t.mod;var i=e.ushrn(1);var n=e.andln(1);var a=r.cmp(i);if(a<0||n===1&&a===0)return t.div;return t.div.negative!==0?t.div.isubn(1):t.div.iaddn(1)};BN.prototype.modrn=function modrn(e){var t=e<0;if(t)e=-e;assert(e<=67108863);var r=(1<<26)%e;var i=0;for(var n=this.length-1;n>=0;n--){i=(r*i+(this.words[n]|0))%e}return t?-i:i};BN.prototype.modn=function modn(e){return this.modrn(e)};BN.prototype.idivn=function idivn(e){var t=e<0;if(t)e=-e;assert(e<=67108863);var r=0;for(var i=this.length-1;i>=0;i--){var n=(this.words[i]|0)+r*67108864;this.words[i]=n/e|0;r=n%e}this._strip();return t?this.ineg():this};BN.prototype.divn=function divn(e){return this.clone().idivn(e)};BN.prototype.egcd=function egcd(e){assert(e.negative===0);assert(!e.isZero());var t=this;var r=e.clone();if(t.negative!==0){t=t.umod(e)}else{t=t.clone()}var i=new BN(1);var n=new BN(0);var a=new BN(0);var s=new BN(1);var o=0;while(t.isEven()&&r.isEven()){t.iushrn(1);r.iushrn(1);++o}var h=r.clone();var u=t.clone();while(!t.isZero()){for(var d=0,c=1;(t.words[0]&c)===0&&d<26;++d,c<<=1);if(d>0){t.iushrn(d);while(d-- >0){if(i.isOdd()||n.isOdd()){i.iadd(h);n.isub(u)}i.iushrn(1);n.iushrn(1)}}for(var l=0,p=1;(r.words[0]&p)===0&&l<26;++l,p<<=1);if(l>0){r.iushrn(l);while(l-- >0){if(a.isOdd()||s.isOdd()){a.iadd(h);s.isub(u)}a.iushrn(1);s.iushrn(1)}}if(t.cmp(r)>=0){t.isub(r);i.isub(a);n.isub(s)}else{r.isub(t);a.isub(i);s.isub(n)}}return{a:a,b:s,gcd:r.iushln(o)}};BN.prototype._invmp=function _invmp(e){assert(e.negative===0);assert(!e.isZero());var t=this;var r=e.clone();if(t.negative!==0){t=t.umod(e)}else{t=t.clone()}var i=new BN(1);var n=new BN(0);var a=r.clone();while(t.cmpn(1)>0&&r.cmpn(1)>0){for(var s=0,o=1;(t.words[0]&o)===0&&s<26;++s,o<<=1);if(s>0){t.iushrn(s);while(s-- >0){if(i.isOdd()){i.iadd(a)}i.iushrn(1)}}for(var h=0,u=1;(r.words[0]&u)===0&&h<26;++h,u<<=1);if(h>0){r.iushrn(h);while(h-- >0){if(n.isOdd()){n.iadd(a)}n.iushrn(1)}}if(t.cmp(r)>=0){t.isub(r);i.isub(n)}else{r.isub(t);n.isub(i)}}var d;if(t.cmpn(1)===0){d=i}else{d=n}if(d.cmpn(0)<0){d.iadd(e)}return d};BN.prototype.gcd=function gcd(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone();var r=e.clone();t.negative=0;r.negative=0;for(var i=0;t.isEven()&&r.isEven();i++){t.iushrn(1);r.iushrn(1)}do{while(t.isEven()){t.iushrn(1)}while(r.isEven()){r.iushrn(1)}var n=t.cmp(r);if(n<0){var a=t;t=r;r=a}else if(n===0||r.cmpn(1)===0){break}t.isub(r)}while(true);return r.iushln(i)};BN.prototype.invm=function invm(e){return this.egcd(e).a.umod(e)};BN.prototype.isEven=function isEven(){return(this.words[0]&1)===0};BN.prototype.isOdd=function isOdd(){return(this.words[0]&1)===1};BN.prototype.andln=function andln(e){return this.words[0]&e};BN.prototype.bincn=function bincn(e){assert(typeof e===\"number\");var t=e%26;var r=(e-t)/26;var i=1<<t;if(this.length<=r){this._expand(r+1);this.words[r]|=i;return this}var n=i;for(var a=r;n!==0&&a<this.length;a++){var s=this.words[a]|0;s+=n;n=s>>>26;s&=67108863;this.words[a]=s}if(n!==0){this.words[a]=n;this.length++}return this};BN.prototype.isZero=function isZero(){return this.length===1&&this.words[0]===0};BN.prototype.cmpn=function cmpn(e){var t=e<0;if(this.negative!==0&&!t)return-1;if(this.negative===0&&t)return 1;this._strip();var r;if(this.length>1){r=1}else{if(t){e=-e}assert(e<=67108863,\"Number is too big\");var i=this.words[0]|0;r=i===e?0:i<e?-1:1}if(this.negative!==0)return-r|0;return r};BN.prototype.cmp=function cmp(e){if(this.negative!==0&&e.negative===0)return-1;if(this.negative===0&&e.negative!==0)return 1;var t=this.ucmp(e);if(this.negative!==0)return-t|0;return t};BN.prototype.ucmp=function ucmp(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;var t=0;for(var r=this.length-1;r>=0;r--){var i=this.words[r]|0;var n=e.words[r]|0;if(i===n)continue;if(i<n){t=-1}else if(i>n){t=1}break}return t};BN.prototype.gtn=function gtn(e){return this.cmpn(e)===1};BN.prototype.gt=function gt(e){return this.cmp(e)===1};BN.prototype.gten=function gten(e){return this.cmpn(e)>=0};BN.prototype.gte=function gte(e){return this.cmp(e)>=0};BN.prototype.ltn=function ltn(e){return this.cmpn(e)===-1};BN.prototype.lt=function lt(e){return this.cmp(e)===-1};BN.prototype.lten=function lten(e){return this.cmpn(e)<=0};BN.prototype.lte=function lte(e){return this.cmp(e)<=0};BN.prototype.eqn=function eqn(e){return this.cmpn(e)===0};BN.prototype.eq=function eq(e){return this.cmp(e)===0};BN.red=function red(e){return new Red(e)};BN.prototype.toRed=function toRed(e){assert(!this.red,\"Already a number in reduction context\");assert(this.negative===0,\"red works only with positives\");return e.convertTo(this)._forceRed(e)};BN.prototype.fromRed=function fromRed(){assert(this.red,\"fromRed works only with numbers in reduction context\");return this.red.convertFrom(this)};BN.prototype._forceRed=function _forceRed(e){this.red=e;return this};BN.prototype.forceRed=function forceRed(e){assert(!this.red,\"Already a number in reduction context\");return this._forceRed(e)};BN.prototype.redAdd=function redAdd(e){assert(this.red,\"redAdd works only with red numbers\");return this.red.add(this,e)};BN.prototype.redIAdd=function redIAdd(e){assert(this.red,\"redIAdd works only with red numbers\");return this.red.iadd(this,e)};BN.prototype.redSub=function redSub(e){assert(this.red,\"redSub works only with red numbers\");return this.red.sub(this,e)};BN.prototype.redISub=function redISub(e){assert(this.red,\"redISub works only with red numbers\");return this.red.isub(this,e)};BN.prototype.redShl=function redShl(e){assert(this.red,\"redShl works only with red numbers\");return this.red.shl(this,e)};BN.prototype.redMul=function redMul(e){assert(this.red,\"redMul works only with red numbers\");this.red._verify2(this,e);return this.red.mul(this,e)};BN.prototype.redIMul=function redIMul(e){assert(this.red,\"redMul works only with red numbers\");this.red._verify2(this,e);return this.red.imul(this,e)};BN.prototype.redSqr=function redSqr(){assert(this.red,\"redSqr works only with red numbers\");this.red._verify1(this);return this.red.sqr(this)};BN.prototype.redISqr=function redISqr(){assert(this.red,\"redISqr works only with red numbers\");this.red._verify1(this);return this.red.isqr(this)};BN.prototype.redSqrt=function redSqrt(){assert(this.red,\"redSqrt works only with red numbers\");this.red._verify1(this);return this.red.sqrt(this)};BN.prototype.redInvm=function redInvm(){assert(this.red,\"redInvm works only with red numbers\");this.red._verify1(this);return this.red.invm(this)};BN.prototype.redNeg=function redNeg(){assert(this.red,\"redNeg works only with red numbers\");this.red._verify1(this);return this.red.neg(this)};BN.prototype.redPow=function redPow(e){assert(this.red&&!e.red,\"redPow(normalNum)\");this.red._verify1(this);return this.red.pow(this,e)};var u={k256:null,p224:null,p192:null,p25519:null};function MPrime(e,t){this.name=e;this.p=new BN(t,16);this.n=this.p.bitLength();this.k=new BN(1).iushln(this.n).isub(this.p);this.tmp=this._tmp()}MPrime.prototype._tmp=function _tmp(){var e=new BN(null);e.words=new Array(Math.ceil(this.n/13));return e};MPrime.prototype.ireduce=function ireduce(e){var t=e;var r;do{this.split(t,this.tmp);t=this.imulK(t);t=t.iadd(this.tmp);r=t.bitLength()}while(r>this.n);var i=r<this.n?-1:t.ucmp(this.p);if(i===0){t.words[0]=0;t.length=1}else if(i>0){t.isub(this.p)}else{if(t.strip!==undefined){t.strip()}else{t._strip()}}return t};MPrime.prototype.split=function split(e,t){e.iushrn(this.n,0,t)};MPrime.prototype.imulK=function imulK(e){return e.imul(this.k)};function K256(){MPrime.call(this,\"k256\",\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\")}inherits(K256,MPrime);K256.prototype.split=function split(e,t){var r=4194303;var i=Math.min(e.length,9);for(var n=0;n<i;n++){t.words[n]=e.words[n]}t.length=i;if(e.length<=9){e.words[0]=0;e.length=1;return}var a=e.words[9];t.words[t.length++]=a&r;for(n=10;n<e.length;n++){var s=e.words[n]|0;e.words[n-10]=(s&r)<<4|a>>>22;a=s}a>>>=22;e.words[n-10]=a;if(a===0&&e.length>10){e.length-=10}else{e.length-=9}};K256.prototype.imulK=function imulK(e){e.words[e.length]=0;e.words[e.length+1]=0;e.length+=2;var t=0;for(var r=0;r<e.length;r++){var i=e.words[r]|0;t+=i*977;e.words[r]=t&67108863;t=i*64+(t/67108864|0)}if(e.words[e.length-1]===0){e.length--;if(e.words[e.length-1]===0){e.length--}}return e};function P224(){MPrime.call(this,\"p224\",\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\")}inherits(P224,MPrime);function P192(){MPrime.call(this,\"p192\",\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\")}inherits(P192,MPrime);function P25519(){MPrime.call(this,\"25519\",\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\")}inherits(P25519,MPrime);P25519.prototype.imulK=function imulK(e){var t=0;for(var r=0;r<e.length;r++){var i=(e.words[r]|0)*19+t;var n=i&67108863;i>>>=26;e.words[r]=n;t=i}if(t!==0){e.words[e.length++]=t}return e};BN._prime=function prime(e){if(u[e])return u[e];var prime;if(e===\"k256\"){prime=new K256}else if(e===\"p224\"){prime=new P224}else if(e===\"p192\"){prime=new P192}else if(e===\"p25519\"){prime=new P25519}else{throw new Error(\"Unknown prime \"+e)}u[e]=prime;return prime};function Red(e){if(typeof e===\"string\"){var t=BN._prime(e);this.m=t.p;this.prime=t}else{assert(e.gtn(1),\"modulus must be greater than 1\");this.m=e;this.prime=null}}Red.prototype._verify1=function _verify1(e){assert(e.negative===0,\"red works only with positives\");assert(e.red,\"red works only with red numbers\")};Red.prototype._verify2=function _verify2(e,t){assert((e.negative|t.negative)===0,\"red works only with positives\");assert(e.red&&e.red===t.red,\"red works only with red numbers\")};Red.prototype.imod=function imod(e){if(this.prime)return this.prime.ireduce(e)._forceRed(this);move(e,e.umod(this.m)._forceRed(this));return e};Red.prototype.neg=function neg(e){if(e.isZero()){return e.clone()}return this.m.sub(e)._forceRed(this)};Red.prototype.add=function add(e,t){this._verify2(e,t);var r=e.add(t);if(r.cmp(this.m)>=0){r.isub(this.m)}return r._forceRed(this)};Red.prototype.iadd=function iadd(e,t){this._verify2(e,t);var r=e.iadd(t);if(r.cmp(this.m)>=0){r.isub(this.m)}return r};Red.prototype.sub=function sub(e,t){this._verify2(e,t);var r=e.sub(t);if(r.cmpn(0)<0){r.iadd(this.m)}return r._forceRed(this)};Red.prototype.isub=function isub(e,t){this._verify2(e,t);var r=e.isub(t);if(r.cmpn(0)<0){r.iadd(this.m)}return r};Red.prototype.shl=function shl(e,t){this._verify1(e);return this.imod(e.ushln(t))};Red.prototype.imul=function imul(e,t){this._verify2(e,t);return this.imod(e.imul(t))};Red.prototype.mul=function mul(e,t){this._verify2(e,t);return this.imod(e.mul(t))};Red.prototype.isqr=function isqr(e){return this.imul(e,e.clone())};Red.prototype.sqr=function sqr(e){return this.mul(e,e)};Red.prototype.sqrt=function sqrt(e){if(e.isZero())return e.clone();var t=this.m.andln(3);assert(t%2===1);if(t===3){var r=this.m.add(new BN(1)).iushrn(2);return this.pow(e,r)}var i=this.m.subn(1);var n=0;while(!i.isZero()&&i.andln(1)===0){n++;i.iushrn(1)}assert(!i.isZero());var a=new BN(1).toRed(this);var s=a.redNeg();var o=this.m.subn(1).iushrn(1);var h=this.m.bitLength();h=new BN(2*h*h).toRed(this);while(this.pow(h,o).cmp(s)!==0){h.redIAdd(s)}var u=this.pow(h,i);var d=this.pow(e,i.addn(1).iushrn(1));var c=this.pow(e,i);var l=n;while(c.cmp(a)!==0){var p=c;for(var v=0;p.cmp(a)!==0;v++){p=p.redSqr()}assert(v<l);var b=this.pow(u,new BN(1).iushln(l-v-1));d=d.redMul(b);u=b.redSqr();c=c.redMul(u);l=v}return d};Red.prototype.invm=function invm(e){var t=e._invmp(this.m);if(t.negative!==0){t.negative=0;return this.imod(t).redNeg()}else{return this.imod(t)}};Red.prototype.pow=function pow(e,t){if(t.isZero())return new BN(1).toRed(this);if(t.cmpn(1)===0)return e.clone();var r=4;var i=new Array(1<<r);i[0]=new BN(1).toRed(this);i[1]=e;for(var n=2;n<i.length;n++){i[n]=this.mul(i[n-1],e)}var a=i[0];var s=0;var o=0;var h=t.bitLength()%26;if(h===0){h=26}for(n=t.length-1;n>=0;n--){var u=t.words[n];for(var d=h-1;d>=0;d--){var c=u>>d&1;if(a!==i[0]){a=this.sqr(a)}if(c===0&&s===0){o=0;continue}s<<=1;s|=c;o++;if(o!==r&&(n!==0||d!==0))continue;a=this.mul(a,i[s]);o=0;s=0}h=26}return a};Red.prototype.convertTo=function convertTo(e){var t=e.umod(this.m);return t===e?t.clone():t};Red.prototype.convertFrom=function convertFrom(e){var t=e.clone();t.red=null;return t};BN.mont=function mont(e){return new Mont(e)};function Mont(e){Red.call(this,e);this.shift=this.m.bitLength();if(this.shift%26!==0){this.shift+=26-this.shift%26}this.r=new BN(1).iushln(this.shift);this.r2=this.imod(this.r.sqr());this.rinv=this.r._invmp(this.m);this.minv=this.rinv.mul(this.r).isubn(1).div(this.m);this.minv=this.minv.umod(this.r);this.minv=this.r.sub(this.minv)}inherits(Mont,Red);Mont.prototype.convertTo=function convertTo(e){return this.imod(e.ushln(this.shift))};Mont.prototype.convertFrom=function convertFrom(e){var t=this.imod(e.mul(this.rinv));t.red=null;return t};Mont.prototype.imul=function imul(e,t){if(e.isZero()||t.isZero()){e.words[0]=0;e.length=1;return e}var r=e.imul(t);var i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var n=r.isub(i).iushrn(this.shift);var a=n;if(n.cmp(this.m)>=0){a=n.isub(this.m)}else if(n.cmpn(0)<0){a=n.iadd(this.m)}return a._forceRed(this)};Mont.prototype.mul=function mul(e,t){if(e.isZero()||t.isZero())return new BN(0)._forceRed(this);var r=e.mul(t);var i=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);var n=r.isub(i).iushrn(this.shift);var a=n;if(n.cmp(this.m)>=0){a=n.isub(this.m)}else if(n.cmpn(0)<0){a=n.iadd(this.m)}return a._forceRed(this)};Mont.prototype.invm=function invm(e){var t=this.imod(e._invmp(this.m).mul(this.r2));return t._forceRed(this)}})( false||e,this)},3500:function(e,t,r){var i;e.exports=function rand(e){if(!i)i=new Rand(null);return i.generate(e)};function Rand(e){this.rand=e}e.exports.Rand=Rand;Rand.prototype.generate=function generate(e){return this._rand(e)};Rand.prototype._rand=function _rand(e){if(this.rand.getBytes)return this.rand.getBytes(e);var t=new Uint8Array(e);for(var r=0;r<t.length;r++)t[r]=this.rand.getByte();return t};if(typeof self===\"object\"){if(self.crypto&&self.crypto.getRandomValues){Rand.prototype._rand=function _rand(e){var t=new Uint8Array(e);self.crypto.getRandomValues(t);return t}}else if(self.msCrypto&&self.msCrypto.getRandomValues){Rand.prototype._rand=function _rand(e){var t=new Uint8Array(e);self.msCrypto.getRandomValues(t);return t}}else if(typeof window===\"object\"){Rand.prototype._rand=function(){throw new Error(\"Not implemented yet\")}}}else{try{var n=r(6113);if(typeof n.randomBytes!==\"function\")throw new Error(\"Not supported\");Rand.prototype._rand=function _rand(e){return n.randomBytes(e)}}catch(e){}}},1387:function(e,t,r){var i=r(6911).Buffer;function asUInt32Array(e){if(!i.isBuffer(e))e=i.from(e);var t=e.length/4|0;var r=new Array(t);for(var n=0;n<t;n++){r[n]=e.readUInt32BE(n*4)}return r}function scrubVec(e){for(var t=0;t<e.length;e++){e[t]=0}}function cryptBlock(e,t,r,i,n){var a=r[0];var s=r[1];var o=r[2];var h=r[3];var u=e[0]^t[0];var d=e[1]^t[1];var c=e[2]^t[2];var l=e[3]^t[3];var p,v,b,m;var y=4;for(var g=1;g<n;g++){p=a[u>>>24]^s[d>>>16&255]^o[c>>>8&255]^h[l&255]^t[y++];v=a[d>>>24]^s[c>>>16&255]^o[l>>>8&255]^h[u&255]^t[y++];b=a[c>>>24]^s[l>>>16&255]^o[u>>>8&255]^h[d&255]^t[y++];m=a[l>>>24]^s[u>>>16&255]^o[d>>>8&255]^h[c&255]^t[y++];u=p;d=v;c=b;l=m}p=(i[u>>>24]<<24|i[d>>>16&255]<<16|i[c>>>8&255]<<8|i[l&255])^t[y++];v=(i[d>>>24]<<24|i[c>>>16&255]<<16|i[l>>>8&255]<<8|i[u&255])^t[y++];b=(i[c>>>24]<<24|i[l>>>16&255]<<16|i[u>>>8&255]<<8|i[d&255])^t[y++];m=(i[l>>>24]<<24|i[u>>>16&255]<<16|i[d>>>8&255]<<8|i[c&255])^t[y++];p=p>>>0;v=v>>>0;b=b>>>0;m=m>>>0;return[p,v,b,m]}var n=[0,1,2,4,8,16,32,64,128,27,54];var a=function(){var e=new Array(256);for(var t=0;t<256;t++){if(t<128){e[t]=t<<1}else{e[t]=t<<1^283}}var r=[];var i=[];var n=[[],[],[],[]];var a=[[],[],[],[]];var s=0;var o=0;for(var h=0;h<256;++h){var u=o^o<<1^o<<2^o<<3^o<<4;u=u>>>8^u&255^99;r[s]=u;i[u]=s;var d=e[s];var c=e[d];var l=e[c];var p=e[u]*257^u*16843008;n[0][s]=p<<24|p>>>8;n[1][s]=p<<16|p>>>16;n[2][s]=p<<8|p>>>24;n[3][s]=p;p=l*16843009^c*65537^d*257^s*16843008;a[0][u]=p<<24|p>>>8;a[1][u]=p<<16|p>>>16;a[2][u]=p<<8|p>>>24;a[3][u]=p;if(s===0){s=o=1}else{s=d^e[e[e[l^d]]];o^=e[e[o]]}}return{SBOX:r,INV_SBOX:i,SUB_MIX:n,INV_SUB_MIX:a}}();function AES(e){this._key=asUInt32Array(e);this._reset()}AES.blockSize=4*4;AES.keySize=256/8;AES.prototype.blockSize=AES.blockSize;AES.prototype.keySize=AES.keySize;AES.prototype._reset=function(){var e=this._key;var t=e.length;var r=t+6;var i=(r+1)*4;var s=[];for(var o=0;o<t;o++){s[o]=e[o]}for(o=t;o<i;o++){var h=s[o-1];if(o%t===0){h=h<<8|h>>>24;h=a.SBOX[h>>>24]<<24|a.SBOX[h>>>16&255]<<16|a.SBOX[h>>>8&255]<<8|a.SBOX[h&255];h^=n[o/t|0]<<24}else if(t>6&&o%t===4){h=a.SBOX[h>>>24]<<24|a.SBOX[h>>>16&255]<<16|a.SBOX[h>>>8&255]<<8|a.SBOX[h&255]}s[o]=s[o-t]^h}var u=[];for(var d=0;d<i;d++){var c=i-d;var l=s[c-(d%4?0:4)];if(d<4||c<=4){u[d]=l}else{u[d]=a.INV_SUB_MIX[0][a.SBOX[l>>>24]]^a.INV_SUB_MIX[1][a.SBOX[l>>>16&255]]^a.INV_SUB_MIX[2][a.SBOX[l>>>8&255]]^a.INV_SUB_MIX[3][a.SBOX[l&255]]}}this._nRounds=r;this._keySchedule=s;this._invKeySchedule=u};AES.prototype.encryptBlockRaw=function(e){e=asUInt32Array(e);return cryptBlock(e,this._keySchedule,a.SUB_MIX,a.SBOX,this._nRounds)};AES.prototype.encryptBlock=function(e){var t=this.encryptBlockRaw(e);var r=i.allocUnsafe(16);r.writeUInt32BE(t[0],0);r.writeUInt32BE(t[1],4);r.writeUInt32BE(t[2],8);r.writeUInt32BE(t[3],12);return r};AES.prototype.decryptBlock=function(e){e=asUInt32Array(e);var t=e[1];e[1]=e[3];e[3]=t;var r=cryptBlock(e,this._invKeySchedule,a.INV_SUB_MIX,a.INV_SBOX,this._nRounds);var n=i.allocUnsafe(16);n.writeUInt32BE(r[0],0);n.writeUInt32BE(r[3],4);n.writeUInt32BE(r[2],8);n.writeUInt32BE(r[1],12);return n};AES.prototype.scrub=function(){scrubVec(this._keySchedule);scrubVec(this._invKeySchedule);scrubVec(this._key)};e.exports.AES=AES},6624:function(e,t,r){var i=r(1387);var n=r(6911).Buffer;var a=r(1043);var s=r(3782);var o=r(7225);var h=r(4734);var u=r(598);function xorTest(e,t){var r=0;if(e.length!==t.length)r++;var i=Math.min(e.length,t.length);for(var n=0;n<i;++n){r+=e[n]^t[n]}return r}function calcIv(e,t,r){if(t.length===12){e._finID=n.concat([t,n.from([0,0,0,1])]);return n.concat([t,n.from([0,0,0,2])])}var i=new o(r);var a=t.length;var s=a%16;i.update(t);if(s){s=16-s;i.update(n.alloc(s,0))}i.update(n.alloc(8,0));var h=a*8;var d=n.alloc(8);d.writeUIntBE(h,0,8);i.update(d);e._finID=i.state;var c=n.from(e._finID);u(c);return c}function StreamCipher(e,t,r,s){a.call(this);var h=n.alloc(4,0);this._cipher=new i.AES(t);var u=this._cipher.encryptBlock(h);this._ghash=new o(u);r=calcIv(this,r,u);this._prev=n.from(r);this._cache=n.allocUnsafe(0);this._secCache=n.allocUnsafe(0);this._decrypt=s;this._alen=0;this._len=0;this._mode=e;this._authTag=null;this._called=false}s(StreamCipher,a);StreamCipher.prototype._update=function(e){if(!this._called&&this._alen){var t=16-this._alen%16;if(t<16){t=n.alloc(t,0);this._ghash.update(t)}}this._called=true;var r=this._mode.encrypt(this,e);if(this._decrypt){this._ghash.update(e)}else{this._ghash.update(r)}this._len+=e.length;return r};StreamCipher.prototype._final=function(){if(this._decrypt&&!this._authTag)throw new Error(\"Unsupported state or unable to authenticate data\");var e=h(this._ghash.final(this._alen*8,this._len*8),this._cipher.encryptBlock(this._finID));if(this._decrypt&&xorTest(e,this._authTag))throw new Error(\"Unsupported state or unable to authenticate data\");this._authTag=e;this._cipher.scrub()};StreamCipher.prototype.getAuthTag=function getAuthTag(){if(this._decrypt||!n.isBuffer(this._authTag))throw new Error(\"Attempting to get auth tag in unsupported state\");return this._authTag};StreamCipher.prototype.setAuthTag=function setAuthTag(e){if(!this._decrypt)throw new Error(\"Attempting to set auth tag in unsupported state\");this._authTag=e};StreamCipher.prototype.setAAD=function setAAD(e){if(this._called)throw new Error(\"Attempting to set AAD in unsupported state\");this._ghash.update(e);this._alen+=e.length};e.exports=StreamCipher},6594:function(e,t,r){var i=r(2);var n=r(2598);var a=r(5866);function getCiphers(){return Object.keys(a)}t.createCipher=t.Cipher=i.createCipher;t.createCipheriv=t.Cipheriv=i.createCipheriv;t.createDecipher=t.Decipher=n.createDecipher;t.createDecipheriv=t.Decipheriv=n.createDecipheriv;t.listCiphers=t.getCiphers=getCiphers},2598:function(e,t,r){var i=r(6624);var n=r(6911).Buffer;var a=r(6370);var s=r(126);var o=r(1043);var h=r(1387);var u=r(8368);var d=r(3782);function Decipher(e,t,r){o.call(this);this._cache=new Splitter;this._last=void 0;this._cipher=new h.AES(t);this._prev=n.from(r);this._mode=e;this._autopadding=true}d(Decipher,o);Decipher.prototype._update=function(e){this._cache.add(e);var t;var r;var i=[];while(t=this._cache.get(this._autopadding)){r=this._mode.decrypt(this,t);i.push(r)}return n.concat(i)};Decipher.prototype._final=function(){var e=this._cache.flush();if(this._autopadding){return unpad(this._mode.decrypt(this,e))}else if(e){throw new Error(\"data not multiple of block length\")}};Decipher.prototype.setAutoPadding=function(e){this._autopadding=!!e;return this};function Splitter(){this.cache=n.allocUnsafe(0)}Splitter.prototype.add=function(e){this.cache=n.concat([this.cache,e])};Splitter.prototype.get=function(e){var t;if(e){if(this.cache.length>16){t=this.cache.slice(0,16);this.cache=this.cache.slice(16);return t}}else{if(this.cache.length>=16){t=this.cache.slice(0,16);this.cache=this.cache.slice(16);return t}}return null};Splitter.prototype.flush=function(){if(this.cache.length)return this.cache};function unpad(e){var t=e[15];if(t<1||t>16){throw new Error(\"unable to decrypt data\")}var r=-1;while(++r<t){if(e[r+(16-t)]!==t){throw new Error(\"unable to decrypt data\")}}if(t===16)return;return e.slice(0,16-t)}function createDecipheriv(e,t,r){var o=a[e.toLowerCase()];if(!o)throw new TypeError(\"invalid suite type\");if(typeof r===\"string\")r=n.from(r);if(o.mode!==\"GCM\"&&r.length!==o.iv)throw new TypeError(\"invalid iv length \"+r.length);if(typeof t===\"string\")t=n.from(t);if(t.length!==o.key/8)throw new TypeError(\"invalid key length \"+t.length);if(o.type===\"stream\"){return new s(o.module,t,r,true)}else if(o.type===\"auth\"){return new i(o.module,t,r,true)}return new Decipher(o.module,t,r)}function createDecipher(e,t){var r=a[e.toLowerCase()];if(!r)throw new TypeError(\"invalid suite type\");var i=u(t,false,r.key,r.iv);return createDecipheriv(e,i.key,i.iv)}t.createDecipher=createDecipher;t.createDecipheriv=createDecipheriv},2:function(e,t,r){var i=r(6370);var n=r(6624);var a=r(6911).Buffer;var s=r(126);var o=r(1043);var h=r(1387);var u=r(8368);var d=r(3782);function Cipher(e,t,r){o.call(this);this._cache=new Splitter;this._cipher=new h.AES(t);this._prev=a.from(r);this._mode=e;this._autopadding=true}d(Cipher,o);Cipher.prototype._update=function(e){this._cache.add(e);var t;var r;var i=[];while(t=this._cache.get()){r=this._mode.encrypt(this,t);i.push(r)}return a.concat(i)};var c=a.alloc(16,16);Cipher.prototype._final=function(){var e=this._cache.flush();if(this._autopadding){e=this._mode.encrypt(this,e);this._cipher.scrub();return e}if(!e.equals(c)){this._cipher.scrub();throw new Error(\"data not multiple of block length\")}};Cipher.prototype.setAutoPadding=function(e){this._autopadding=!!e;return this};function Splitter(){this.cache=a.allocUnsafe(0)}Splitter.prototype.add=function(e){this.cache=a.concat([this.cache,e])};Splitter.prototype.get=function(){if(this.cache.length>15){var e=this.cache.slice(0,16);this.cache=this.cache.slice(16);return e}return null};Splitter.prototype.flush=function(){var e=16-this.cache.length;var t=a.allocUnsafe(e);var r=-1;while(++r<e){t.writeUInt8(e,r)}return a.concat([this.cache,t])};function createCipheriv(e,t,r){var o=i[e.toLowerCase()];if(!o)throw new TypeError(\"invalid suite type\");if(typeof t===\"string\")t=a.from(t);if(t.length!==o.key/8)throw new TypeError(\"invalid key length \"+t.length);if(typeof r===\"string\")r=a.from(r);if(o.mode!==\"GCM\"&&r.length!==o.iv)throw new TypeError(\"invalid iv length \"+r.length);if(o.type===\"stream\"){return new s(o.module,t,r)}else if(o.type===\"auth\"){return new n(o.module,t,r)}return new Cipher(o.module,t,r)}function createCipher(e,t){var r=i[e.toLowerCase()];if(!r)throw new TypeError(\"invalid suite type\");var n=u(t,false,r.key,r.iv);return createCipheriv(e,n.key,n.iv)}t.createCipheriv=createCipheriv;t.createCipher=createCipher},7225:function(e,t,r){var i=r(6911).Buffer;var n=i.alloc(16,0);function toArray(e){return[e.readUInt32BE(0),e.readUInt32BE(4),e.readUInt32BE(8),e.readUInt32BE(12)]}function fromArray(e){var t=i.allocUnsafe(16);t.writeUInt32BE(e[0]>>>0,0);t.writeUInt32BE(e[1]>>>0,4);t.writeUInt32BE(e[2]>>>0,8);t.writeUInt32BE(e[3]>>>0,12);return t}function GHASH(e){this.h=e;this.state=i.alloc(16,0);this.cache=i.allocUnsafe(0)}GHASH.prototype.ghash=function(e){var t=-1;while(++t<e.length){this.state[t]^=e[t]}this._multiply()};GHASH.prototype._multiply=function(){var e=toArray(this.h);var t=[0,0,0,0];var r,i,n;var a=-1;while(++a<128){i=(this.state[~~(a/8)]&1<<7-a%8)!==0;if(i){t[0]^=e[0];t[1]^=e[1];t[2]^=e[2];t[3]^=e[3]}n=(e[3]&1)!==0;for(r=3;r>0;r--){e[r]=e[r]>>>1|(e[r-1]&1)<<31}e[0]=e[0]>>>1;if(n){e[0]=e[0]^225<<24}}this.state=fromArray(t)};GHASH.prototype.update=function(e){this.cache=i.concat([this.cache,e]);var t;while(this.cache.length>=16){t=this.cache.slice(0,16);this.cache=this.cache.slice(16);this.ghash(t)}};GHASH.prototype.final=function(e,t){if(this.cache.length){this.ghash(i.concat([this.cache,n],16))}this.ghash(fromArray([0,e,0,t]));return this.state};e.exports=GHASH},598:function(e){function incr32(e){var t=e.length;var r;while(t--){r=e.readUInt8(t);if(r===255){e.writeUInt8(0,t)}else{r++;e.writeUInt8(r,t);break}}}e.exports=incr32},9825:function(e,t,r){var i=r(4734);t.encrypt=function(e,t){var r=i(t,e._prev);e._prev=e._cipher.encryptBlock(r);return e._prev};t.decrypt=function(e,t){var r=e._prev;e._prev=t;var n=e._cipher.decryptBlock(t);return i(n,r)}},321:function(e,t,r){var i=r(6911).Buffer;var n=r(4734);function encryptStart(e,t,r){var a=t.length;var s=n(t,e._cache);e._cache=e._cache.slice(a);e._prev=i.concat([e._prev,r?t:s]);return s}t.encrypt=function(e,t,r){var n=i.allocUnsafe(0);var a;while(t.length){if(e._cache.length===0){e._cache=e._cipher.encryptBlock(e._prev);e._prev=i.allocUnsafe(0)}if(e._cache.length<=t.length){a=e._cache.length;n=i.concat([n,encryptStart(e,t.slice(0,a),r)]);t=t.slice(a)}else{n=i.concat([n,encryptStart(e,t,r)]);break}}return n}},3147:function(e,t,r){var i=r(6911).Buffer;function encryptByte(e,t,r){var i;var n=-1;var a=8;var s=0;var o,h;while(++n<a){i=e._cipher.encryptBlock(e._prev);o=t&1<<7-n?128:0;h=i[0]^o;s+=(h&128)>>n%8;e._prev=shiftIn(e._prev,r?o:h)}return s}function shiftIn(e,t){var r=e.length;var n=-1;var a=i.allocUnsafe(e.length);e=i.concat([e,i.from([t])]);while(++n<r){a[n]=e[n]<<1|e[n+1]>>7}return a}t.encrypt=function(e,t,r){var n=t.length;var a=i.allocUnsafe(n);var s=-1;while(++s<n){a[s]=encryptByte(e,t[s],r)}return a}},2430:function(e,t,r){var i=r(6911).Buffer;function encryptByte(e,t,r){var n=e._cipher.encryptBlock(e._prev);var a=n[0]^t;e._prev=i.concat([e._prev.slice(1),i.from([r?t:a])]);return a}t.encrypt=function(e,t,r){var n=t.length;var a=i.allocUnsafe(n);var s=-1;while(++s<n){a[s]=encryptByte(e,t[s],r)}return a}},3361:function(e,t,r){var i=r(4734);var n=r(6911).Buffer;var a=r(598);function getBlock(e){var t=e._cipher.encryptBlockRaw(e._prev);a(e._prev);return t}var s=16;t.encrypt=function(e,t){var r=Math.ceil(t.length/s);var a=e._cache.length;e._cache=n.concat([e._cache,n.allocUnsafe(r*s)]);for(var o=0;o<r;o++){var h=getBlock(e);var u=a+o*s;e._cache.writeUInt32BE(h[0],u+0);e._cache.writeUInt32BE(h[1],u+4);e._cache.writeUInt32BE(h[2],u+8);e._cache.writeUInt32BE(h[3],u+12)}var d=e._cache.slice(0,t.length);e._cache=e._cache.slice(t.length);return i(t,d)}},1590:function(e,t){t.encrypt=function(e,t){return e._cipher.encryptBlock(t)};t.decrypt=function(e,t){return e._cipher.decryptBlock(t)}},6370:function(e,t,r){var i={ECB:r(1590),CBC:r(9825),CFB:r(321),CFB8:r(2430),CFB1:r(3147),OFB:r(3412),CTR:r(3361),GCM:r(3361)};var n=r(5866);for(var a in n){n[a].module=i[n[a].mode]}e.exports=n},3412:function(e,t,r){var i=r(4734);function getBlock(e){e._prev=e._cipher.encryptBlock(e._prev);return e._prev}t.encrypt=function(e,t){while(e._cache.length<t.length){e._cache=Buffer.concat([e._cache,getBlock(e)])}var r=e._cache.slice(0,t.length);e._cache=e._cache.slice(t.length);return i(t,r)}},126:function(e,t,r){var i=r(1387);var n=r(6911).Buffer;var a=r(1043);var s=r(3782);function StreamCipher(e,t,r,s){a.call(this);this._cipher=new i.AES(t);this._prev=n.from(r);this._cache=n.allocUnsafe(0);this._secCache=n.allocUnsafe(0);this._decrypt=s;this._mode=e}s(StreamCipher,a);StreamCipher.prototype._update=function(e){return this._mode.encrypt(this,e,this._decrypt)};StreamCipher.prototype._final=function(){this._cipher.scrub()};e.exports=StreamCipher},8996:function(e,t,r){var i=r(5238);var n=r(6594);var a=r(6370);var s=r(6280);var o=r(8368);function createCipher(e,t){e=e.toLowerCase();var r,i;if(a[e]){r=a[e].key;i=a[e].iv}else if(s[e]){r=s[e].key*8;i=s[e].iv}else{throw new TypeError(\"invalid suite type\")}var n=o(t,false,r,i);return createCipheriv(e,n.key,n.iv)}function createDecipher(e,t){e=e.toLowerCase();var r,i;if(a[e]){r=a[e].key;i=a[e].iv}else if(s[e]){r=s[e].key*8;i=s[e].iv}else{throw new TypeError(\"invalid suite type\")}var n=o(t,false,r,i);return createDecipheriv(e,n.key,n.iv)}function createCipheriv(e,t,r){e=e.toLowerCase();if(a[e])return n.createCipheriv(e,t,r);if(s[e])return new i({key:t,iv:r,mode:e});throw new TypeError(\"invalid suite type\")}function createDecipheriv(e,t,r){e=e.toLowerCase();if(a[e])return n.createDecipheriv(e,t,r);if(s[e])return new i({key:t,iv:r,mode:e,decrypt:true});throw new TypeError(\"invalid suite type\")}function getCiphers(){return Object.keys(s).concat(n.getCiphers())}t.createCipher=t.Cipher=createCipher;t.createCipheriv=t.Cipheriv=createCipheriv;t.createDecipher=t.Decipher=createDecipher;t.createDecipheriv=t.Decipheriv=createDecipheriv;t.listCiphers=t.getCiphers=getCiphers},5238:function(e,t,r){var i=r(1043);var n=r(9536);var a=r(3782);var s=r(6911).Buffer;var o={\"des-ede3-cbc\":n.CBC.instantiate(n.EDE),\"des-ede3\":n.EDE,\"des-ede-cbc\":n.CBC.instantiate(n.EDE),\"des-ede\":n.EDE,\"des-cbc\":n.CBC.instantiate(n.DES),\"des-ecb\":n.DES};o.des=o[\"des-cbc\"];o.des3=o[\"des-ede3-cbc\"];e.exports=DES;a(DES,i);function DES(e){i.call(this);var t=e.mode.toLowerCase();var r=o[t];var n;if(e.decrypt){n=\"decrypt\"}else{n=\"encrypt\"}var a=e.key;if(!s.isBuffer(a)){a=s.from(a)}if(t===\"des-ede\"||t===\"des-ede-cbc\"){a=s.concat([a,a.slice(0,8)])}var h=e.iv;if(!s.isBuffer(h)){h=s.from(h)}this._des=r.create({key:a,iv:h,type:n})}DES.prototype._update=function(e){return s.from(this._des.update(e))};DES.prototype._final=function(){return s.from(this._des.final())}},6280:function(e,t){t[\"des-ecb\"]={key:8,iv:0};t[\"des-cbc\"]=t.des={key:8,iv:8};t[\"des-ede3-cbc\"]=t.des3={key:24,iv:8};t[\"des-ede3\"]={key:24,iv:0};t[\"des-ede-cbc\"]={key:16,iv:8};t[\"des-ede\"]={key:16,iv:0}},7166:function(e,t,r){var i=r(711);var n=r(7223);e.exports=crt;function blind(e){var t=getr(e);var r=t.toRed(i.mont(e.modulus)).redPow(new i(e.publicExponent)).fromRed();return{blinder:r,unblinder:t.invm(e.modulus)}}function crt(e,t){var r=blind(t);var n=t.modulus.byteLength();var a=i.mont(t.modulus);var s=new i(e).mul(r.blinder).umod(t.modulus);var o=s.toRed(i.mont(t.prime1));var h=s.toRed(i.mont(t.prime2));var u=t.coefficient;var d=t.prime1;var c=t.prime2;var l=o.redPow(t.exponent1);var p=h.redPow(t.exponent2);l=l.fromRed();p=p.fromRed();var v=l.isub(p).imul(u).umod(d);v.imul(c);p.iadd(v);return new Buffer(p.imul(r.unblinder).umod(t.modulus).toArray(false,n))}crt.getr=getr;function getr(e){var t=e.modulus.byteLength();var r=new i(n(t));while(r.cmp(e.modulus)>=0||!r.umod(e.prime1)||!r.umod(e.prime2)){r=new i(n(t))}return r}},9276:function(e,t,r){e.exports=r(2908)},4078:function(e,t,r){var i=r(6911).Buffer;var n=r(9739);var a=r(3726);var s=r(3782);var o=r(9807);var h=r(4013);var u=r(2908);Object.keys(u).forEach((function(e){u[e].id=i.from(u[e].id,\"hex\");u[e.toLowerCase()]=u[e]}));function Sign(e){a.Writable.call(this);var t=u[e];if(!t)throw new Error(\"Unknown message digest\");this._hashType=t.hash;this._hash=n(t.hash);this._tag=t.id;this._signType=t.sign}s(Sign,a.Writable);Sign.prototype._write=function _write(e,t,r){this._hash.update(e);r()};Sign.prototype.update=function update(e,t){if(typeof e===\"string\")e=i.from(e,t);this._hash.update(e);return this};Sign.prototype.sign=function signMethod(e,t){this.end();var r=this._hash.digest();var i=o(r,e,this._hashType,this._signType,this._tag);return t?i.toString(t):i};function Verify(e){a.Writable.call(this);var t=u[e];if(!t)throw new Error(\"Unknown message digest\");this._hash=n(t.hash);this._tag=t.id;this._signType=t.sign}s(Verify,a.Writable);Verify.prototype._write=function _write(e,t,r){this._hash.update(e);r()};Verify.prototype.update=function update(e,t){if(typeof e===\"string\")e=i.from(e,t);this._hash.update(e);return this};Verify.prototype.verify=function verifyMethod(e,t,r){if(typeof t===\"string\")t=i.from(t,r);this.end();var n=this._hash.digest();return h(t,n,e,this._signType,this._tag)};function createSign(e){return new Sign(e)}function createVerify(e){return new Verify(e)}e.exports={Sign:createSign,Verify:createVerify,createSign:createSign,createVerify:createVerify}},9807:function(e,t,r){var i=r(6911).Buffer;var n=r(4873);var a=r(7166);var s=r(949).ec;var o=r(1670);var h=r(9902);var u=r(9267);function sign(e,t,r,n,s){var o=h(t);if(o.curve){if(n!==\"ecdsa\"&&n!==\"ecdsa/rsa\")throw new Error(\"wrong private key type\");return ecSign(e,o)}else if(o.type===\"dsa\"){if(n!==\"dsa\")throw new Error(\"wrong private key type\");return dsaSign(e,o,r)}else{if(n!==\"rsa\"&&n!==\"ecdsa/rsa\")throw new Error(\"wrong private key type\")}e=i.concat([s,e]);var u=o.modulus.byteLength();var d=[0,1];while(e.length+d.length+1<u)d.push(255);d.push(0);var c=-1;while(++c<e.length)d.push(e[c]);var l=a(d,o);return l}function ecSign(e,t){var r=u[t.curve.join(\".\")];if(!r)throw new Error(\"unknown curve \"+t.curve.join(\".\"));var n=new s(r);var a=n.keyFromPrivate(t.privateKey);var o=a.sign(e);return i.from(o.toDER())}function dsaSign(e,t,r){var i=t.params.priv_key;var n=t.params.p;var a=t.params.q;var s=t.params.g;var h=new o(0);var u;var d=bits2int(e,a).mod(a);var c=false;var l=getKey(i,a,e,r);while(c===false){u=makeKey(a,l,r);h=makeR(s,u,n,a);c=u.invm(a).imul(d.add(i.mul(h))).mod(a);if(c.cmpn(0)===0){c=false;h=new o(0)}}return toDER(h,c)}function toDER(e,t){e=e.toArray();t=t.toArray();if(e[0]&128)e=[0].concat(e);if(t[0]&128)t=[0].concat(t);var r=e.length+t.length+4;var n=[48,r,2,e.length];n=n.concat(e,[2,t.length],t);return i.from(n)}function getKey(e,t,r,a){e=i.from(e.toArray());if(e.length<t.byteLength()){var s=i.alloc(t.byteLength()-e.length);e=i.concat([s,e])}var o=r.length;var h=bits2octets(r,t);var u=i.alloc(o);u.fill(1);var d=i.alloc(o);d=n(a,d).update(u).update(i.from([0])).update(e).update(h).digest();u=n(a,d).update(u).digest();d=n(a,d).update(u).update(i.from([1])).update(e).update(h).digest();u=n(a,d).update(u).digest();return{k:d,v:u}}function bits2int(e,t){var r=new o(e);var i=(e.length<<3)-t.bitLength();if(i>0)r.ishrn(i);return r}function bits2octets(e,t){e=bits2int(e,t);e=e.mod(t);var r=i.from(e.toArray());if(r.length<t.byteLength()){var n=i.alloc(t.byteLength()-r.length);r=i.concat([n,r])}return r}function makeKey(e,t,r){var a;var s;do{a=i.alloc(0);while(a.length*8<e.bitLength()){t.v=n(r,t.k).update(t.v).digest();a=i.concat([a,t.v])}s=bits2int(a,e);t.k=n(r,t.k).update(t.v).update(i.from([0])).digest();t.v=n(r,t.k).update(t.v).digest()}while(s.cmp(e)!==-1);return s}function makeR(e,t,r,i){return e.toRed(o.mont(r)).redPow(t).fromRed().mod(i)}e.exports=sign;e.exports.getKey=getKey;e.exports.makeKey=makeKey},4013:function(e,t,r){var i=r(6911).Buffer;var n=r(1670);var a=r(949).ec;var s=r(9902);var o=r(9267);function verify(e,t,r,a,o){var h=s(r);if(h.type===\"ec\"){if(a!==\"ecdsa\"&&a!==\"ecdsa/rsa\")throw new Error(\"wrong public key type\");return ecVerify(e,t,h)}else if(h.type===\"dsa\"){if(a!==\"dsa\")throw new Error(\"wrong public key type\");return dsaVerify(e,t,h)}else{if(a!==\"rsa\"&&a!==\"ecdsa/rsa\")throw new Error(\"wrong public key type\")}t=i.concat([o,t]);var u=h.modulus.byteLength();var d=[1];var c=0;while(t.length+d.length+2<u){d.push(255);c++}d.push(0);var l=-1;while(++l<t.length){d.push(t[l])}d=i.from(d);var p=n.mont(h.modulus);e=new n(e).toRed(p);e=e.redPow(new n(h.publicExponent));e=i.from(e.fromRed().toArray());var v=c<8?1:0;u=Math.min(e.length,d.length);if(e.length!==d.length)v=1;l=-1;while(++l<u)v|=e[l]^d[l];return v===0}function ecVerify(e,t,r){var i=o[r.data.algorithm.curve.join(\".\")];if(!i)throw new Error(\"unknown curve \"+r.data.algorithm.curve.join(\".\"));var n=new a(i);var s=r.data.subjectPrivateKey.data;return n.verify(t,e,s)}function dsaVerify(e,t,r){var i=r.data.p;var a=r.data.q;var o=r.data.g;var h=r.data.pub_key;var u=s.signature.decode(e,\"der\");var d=u.s;var c=u.r;checkValue(d,a);checkValue(c,a);var l=n.mont(i);var p=d.invm(a);var v=o.toRed(l).redPow(new n(t).mul(p).mod(a)).fromRed().mul(h.toRed(l).redPow(c.mul(p).mod(a)).fromRed()).mod(i).mod(a);return v.cmp(c)===0}function checkValue(e,t){if(e.cmpn(0)<=0)throw new Error(\"invalid sig\");if(e.cmp(t)>=t)throw new Error(\"invalid sig\")}e.exports=verify},4734:function(e){e.exports=function xor(e,t){var r=Math.min(e.length,t.length);var i=new Buffer(r);for(var n=0;n<r;++n){i[n]=e[n]^t[n]}return i}},1043:function(e,t,r){var i=r(6911).Buffer;var n=r(2781).Transform;var a=r(1576).StringDecoder;var s=r(3782);function CipherBase(e){n.call(this);this.hashMode=typeof e===\"string\";if(this.hashMode){this[e]=this._finalOrDigest}else{this.final=this._finalOrDigest}if(this._final){this.__final=this._final;this._final=null}this._decoder=null;this._encoding=null}s(CipherBase,n);CipherBase.prototype.update=function(e,t,r){if(typeof e===\"string\"){e=i.from(e,t)}var n=this._update(e);if(this.hashMode)return this;if(r){n=this._toString(n,r)}return n};CipherBase.prototype.setAutoPadding=function(){};CipherBase.prototype.getAuthTag=function(){throw new Error(\"trying to get auth tag in unsupported state\")};CipherBase.prototype.setAuthTag=function(){throw new Error(\"trying to set auth tag in unsupported state\")};CipherBase.prototype.setAAD=function(){throw new Error(\"trying to set aad in unsupported state\")};CipherBase.prototype._transform=function(e,t,r){var i;try{if(this.hashMode){this._update(e)}else{this.push(this._update(e))}}catch(e){i=e}finally{r(i)}};CipherBase.prototype._flush=function(e){var t;try{this.push(this.__final())}catch(e){t=e}e(t)};CipherBase.prototype._finalOrDigest=function(e){var t=this.__final()||i.alloc(0);if(e){t=this._toString(t,e,true)}return t};CipherBase.prototype._toString=function(e,t,r){if(!this._decoder){this._decoder=new a(t);this._encoding=t}if(this._encoding!==t)throw new Error(\"can't switch encodings\");var i=this._decoder.write(e);if(r){i+=this._decoder.end()}return i};e.exports=CipherBase},9942:function(e,t,r){var i=r(949);var n=r(711);e.exports=function createECDH(e){return new ECDH(e)};var a={secp256k1:{name:\"secp256k1\",byteLength:32},secp224r1:{name:\"p224\",byteLength:28},prime256v1:{name:\"p256\",byteLength:32},prime192v1:{name:\"p192\",byteLength:24},ed25519:{name:\"ed25519\",byteLength:32},secp384r1:{name:\"p384\",byteLength:48},secp521r1:{name:\"p521\",byteLength:66}};a.p224=a.secp224r1;a.p256=a.secp256r1=a.prime256v1;a.p192=a.secp192r1=a.prime192v1;a.p384=a.secp384r1;a.p521=a.secp521r1;function ECDH(e){this.curveType=a[e];if(!this.curveType){this.curveType={name:e}}this.curve=new i.ec(this.curveType.name);this.keys=void 0}ECDH.prototype.generateKeys=function(e,t){this.keys=this.curve.genKeyPair();return this.getPublicKey(e,t)};ECDH.prototype.computeSecret=function(e,t,r){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}var i=this.curve.keyFromPublic(e).getPublic();var n=i.mul(this.keys.getPrivate()).getX();return formatReturnValue(n,r,this.curveType.byteLength)};ECDH.prototype.getPublicKey=function(e,t){var r=this.keys.getPublic(t===\"compressed\",true);if(t===\"hybrid\"){if(r[r.length-1]%2){r[0]=7}else{r[0]=6}}return formatReturnValue(r,e)};ECDH.prototype.getPrivateKey=function(e){return formatReturnValue(this.keys.getPrivate(),e)};ECDH.prototype.setPublicKey=function(e,t){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}this.keys._importPublic(e);return this};ECDH.prototype.setPrivateKey=function(e,t){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}var r=new n(e);r=r.toString(16);this.keys=this.curve.genKeyPair();this.keys._importPrivate(r);return this};function formatReturnValue(e,t,r){if(!Array.isArray(e)){e=e.toArray()}var i=new Buffer(e);if(r&&i.length<r){var n=new Buffer(r-i.length);n.fill(0);i=Buffer.concat([n,i])}if(!t){return i}else{return i.toString(t)}}},9739:function(e,t,r){\"use strict\";var i=r(3782);var n=r(3533);var a=r(3225);var s=r(4371);var o=r(1043);function Hash(e){o.call(this,\"digest\");this._hash=e}i(Hash,o);Hash.prototype._update=function(e){this._hash.update(e)};Hash.prototype._final=function(){return this._hash.digest()};e.exports=function createHash(e){e=e.toLowerCase();if(e===\"md5\")return new n;if(e===\"rmd160\"||e===\"ripemd160\")return new a;return new Hash(s(e))}},450:function(e,t,r){var i=r(3533);e.exports=function(e){return(new i).update(e).digest()}},4873:function(e,t,r){\"use strict\";var i=r(3782);var n=r(8119);var a=r(1043);var s=r(6911).Buffer;var o=r(450);var h=r(3225);var u=r(4371);var d=s.alloc(128);function Hmac(e,t){a.call(this,\"digest\");if(typeof t===\"string\"){t=s.from(t)}var r=e===\"sha512\"||e===\"sha384\"?128:64;this._alg=e;this._key=t;if(t.length>r){var i=e===\"rmd160\"?new h:u(e);t=i.update(t).digest()}else if(t.length<r){t=s.concat([t,d],r)}var n=this._ipad=s.allocUnsafe(r);var o=this._opad=s.allocUnsafe(r);for(var c=0;c<r;c++){n[c]=t[c]^54;o[c]=t[c]^92}this._hash=e===\"rmd160\"?new h:u(e);this._hash.update(n)}i(Hmac,a);Hmac.prototype._update=function(e){this._hash.update(e)};Hmac.prototype._final=function(){var e=this._hash.digest();var t=this._alg===\"rmd160\"?new h:u(this._alg);return t.update(this._opad).update(e).digest()};e.exports=function createHmac(e,t){e=e.toLowerCase();if(e===\"rmd160\"||e===\"ripemd160\"){return new Hmac(\"rmd160\",t)}if(e===\"md5\"){return new n(o,t)}return new Hmac(e,t)}},8119:function(e,t,r){\"use strict\";var i=r(3782);var n=r(6911).Buffer;var a=r(1043);var s=n.alloc(128);var o=64;function Hmac(e,t){a.call(this,\"digest\");if(typeof t===\"string\"){t=n.from(t)}this._alg=e;this._key=t;if(t.length>o){t=e(t)}else if(t.length<o){t=n.concat([t,s],o)}var r=this._ipad=n.allocUnsafe(o);var i=this._opad=n.allocUnsafe(o);for(var h=0;h<o;h++){r[h]=t[h]^54;i[h]=t[h]^92}this._hash=[r]}i(Hmac,a);Hmac.prototype._update=function(e){this._hash.push(e)};Hmac.prototype._final=function(){var e=this._alg(n.concat(this._hash));return this._alg(n.concat([this._opad,e]))};e.exports=Hmac},9536:function(e,t,r){\"use strict\";t.utils=r(5334);t.Cipher=r(9876);t.DES=r(1016);t.CBC=r(8641);t.EDE=r(6159)},8641:function(e,t,r){\"use strict\";var i=r(3523);var n=r(3782);var a={};function CBCState(e){i.equal(e.length,8,\"Invalid IV length\");this.iv=new Array(8);for(var t=0;t<this.iv.length;t++)this.iv[t]=e[t]}function instantiate(e){function CBC(t){e.call(this,t);this._cbcInit()}n(CBC,e);var t=Object.keys(a);for(var r=0;r<t.length;r++){var i=t[r];CBC.prototype[i]=a[i]}CBC.create=function create(e){return new CBC(e)};return CBC}t.instantiate=instantiate;a._cbcInit=function _cbcInit(){var e=new CBCState(this.options.iv);this._cbcState=e};a._update=function _update(e,t,r,i){var n=this._cbcState;var a=this.constructor.super_.prototype;var s=n.iv;if(this.type===\"encrypt\"){for(var o=0;o<this.blockSize;o++)s[o]^=e[t+o];a._update.call(this,s,0,r,i);for(var o=0;o<this.blockSize;o++)s[o]=r[i+o]}else{a._update.call(this,e,t,r,i);for(var o=0;o<this.blockSize;o++)r[i+o]^=s[o];for(var o=0;o<this.blockSize;o++)s[o]=e[t+o]}}},9876:function(e,t,r){\"use strict\";var i=r(3523);function Cipher(e){this.options=e;this.type=this.options.type;this.blockSize=8;this._init();this.buffer=new Array(this.blockSize);this.bufferOff=0}e.exports=Cipher;Cipher.prototype._init=function _init(){};Cipher.prototype.update=function update(e){if(e.length===0)return[];if(this.type===\"decrypt\")return this._updateDecrypt(e);else return this._updateEncrypt(e)};Cipher.prototype._buffer=function _buffer(e,t){var r=Math.min(this.buffer.length-this.bufferOff,e.length-t);for(var i=0;i<r;i++)this.buffer[this.bufferOff+i]=e[t+i];this.bufferOff+=r;return r};Cipher.prototype._flushBuffer=function _flushBuffer(e,t){this._update(this.buffer,0,e,t);this.bufferOff=0;return this.blockSize};Cipher.prototype._updateEncrypt=function _updateEncrypt(e){var t=0;var r=0;var i=(this.bufferOff+e.length)/this.blockSize|0;var n=new Array(i*this.blockSize);if(this.bufferOff!==0){t+=this._buffer(e,t);if(this.bufferOff===this.buffer.length)r+=this._flushBuffer(n,r)}var a=e.length-(e.length-t)%this.blockSize;for(;t<a;t+=this.blockSize){this._update(e,t,n,r);r+=this.blockSize}for(;t<e.length;t++,this.bufferOff++)this.buffer[this.bufferOff]=e[t];return n};Cipher.prototype._updateDecrypt=function _updateDecrypt(e){var t=0;var r=0;var i=Math.ceil((this.bufferOff+e.length)/this.blockSize)-1;var n=new Array(i*this.blockSize);for(;i>0;i--){t+=this._buffer(e,t);r+=this._flushBuffer(n,r)}t+=this._buffer(e,t);return n};Cipher.prototype.final=function final(e){var t;if(e)t=this.update(e);var r;if(this.type===\"encrypt\")r=this._finalEncrypt();else r=this._finalDecrypt();if(t)return t.concat(r);else return r};Cipher.prototype._pad=function _pad(e,t){if(t===0)return false;while(t<e.length)e[t++]=0;return true};Cipher.prototype._finalEncrypt=function _finalEncrypt(){if(!this._pad(this.buffer,this.bufferOff))return[];var e=new Array(this.blockSize);this._update(this.buffer,0,e,0);return e};Cipher.prototype._unpad=function _unpad(e){return e};Cipher.prototype._finalDecrypt=function _finalDecrypt(){i.equal(this.bufferOff,this.blockSize,\"Not enough data to decrypt\");var e=new Array(this.blockSize);this._flushBuffer(e,0);return this._unpad(e)}},1016:function(e,t,r){\"use strict\";var i=r(3523);var n=r(3782);var a=r(5334);var s=r(9876);function DESState(){this.tmp=new Array(2);this.keys=null}function DES(e){s.call(this,e);var t=new DESState;this._desState=t;this.deriveKeys(t,e.key)}n(DES,s);e.exports=DES;DES.create=function create(e){return new DES(e)};var o=[1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1];DES.prototype.deriveKeys=function deriveKeys(e,t){e.keys=new Array(16*2);i.equal(t.length,this.blockSize,\"Invalid key length\");var r=a.readUInt32BE(t,0);var n=a.readUInt32BE(t,4);a.pc1(r,n,e.tmp,0);r=e.tmp[0];n=e.tmp[1];for(var s=0;s<e.keys.length;s+=2){var h=o[s>>>1];r=a.r28shl(r,h);n=a.r28shl(n,h);a.pc2(r,n,e.keys,s)}};DES.prototype._update=function _update(e,t,r,i){var n=this._desState;var s=a.readUInt32BE(e,t);var o=a.readUInt32BE(e,t+4);a.ip(s,o,n.tmp,0);s=n.tmp[0];o=n.tmp[1];if(this.type===\"encrypt\")this._encrypt(n,s,o,n.tmp,0);else this._decrypt(n,s,o,n.tmp,0);s=n.tmp[0];o=n.tmp[1];a.writeUInt32BE(r,s,i);a.writeUInt32BE(r,o,i+4)};DES.prototype._pad=function _pad(e,t){var r=e.length-t;for(var i=t;i<e.length;i++)e[i]=r;return true};DES.prototype._unpad=function _unpad(e){var t=e[e.length-1];for(var r=e.length-t;r<e.length;r++)i.equal(e[r],t);return e.slice(0,e.length-t)};DES.prototype._encrypt=function _encrypt(e,t,r,i,n){var s=t;var o=r;for(var h=0;h<e.keys.length;h+=2){var u=e.keys[h];var d=e.keys[h+1];a.expand(o,e.tmp,0);u^=e.tmp[0];d^=e.tmp[1];var c=a.substitute(u,d);var l=a.permute(c);var p=o;o=(s^l)>>>0;s=p}a.rip(o,s,i,n)};DES.prototype._decrypt=function _decrypt(e,t,r,i,n){var s=r;var o=t;for(var h=e.keys.length-2;h>=0;h-=2){var u=e.keys[h];var d=e.keys[h+1];a.expand(s,e.tmp,0);u^=e.tmp[0];d^=e.tmp[1];var c=a.substitute(u,d);var l=a.permute(c);var p=s;s=(o^l)>>>0;o=p}a.rip(s,o,i,n)}},6159:function(e,t,r){\"use strict\";var i=r(3523);var n=r(3782);var a=r(9876);var s=r(1016);function EDEState(e,t){i.equal(t.length,24,\"Invalid key length\");var r=t.slice(0,8);var n=t.slice(8,16);var a=t.slice(16,24);if(e===\"encrypt\"){this.ciphers=[s.create({type:\"encrypt\",key:r}),s.create({type:\"decrypt\",key:n}),s.create({type:\"encrypt\",key:a})]}else{this.ciphers=[s.create({type:\"decrypt\",key:a}),s.create({type:\"encrypt\",key:n}),s.create({type:\"decrypt\",key:r})]}}function EDE(e){a.call(this,e);var t=new EDEState(this.type,this.options.key);this._edeState=t}n(EDE,a);e.exports=EDE;EDE.create=function create(e){return new EDE(e)};EDE.prototype._update=function _update(e,t,r,i){var n=this._edeState;n.ciphers[0]._update(e,t,r,i);n.ciphers[1]._update(r,i,r,i);n.ciphers[2]._update(r,i,r,i)};EDE.prototype._pad=s.prototype._pad;EDE.prototype._unpad=s.prototype._unpad},5334:function(e,t){\"use strict\";t.readUInt32BE=function readUInt32BE(e,t){var r=e[0+t]<<24|e[1+t]<<16|e[2+t]<<8|e[3+t];return r>>>0};t.writeUInt32BE=function writeUInt32BE(e,t,r){e[0+r]=t>>>24;e[1+r]=t>>>16&255;e[2+r]=t>>>8&255;e[3+r]=t&255};t.ip=function ip(e,t,r,i){var n=0;var a=0;for(var s=6;s>=0;s-=2){for(var o=0;o<=24;o+=8){n<<=1;n|=t>>>o+s&1}for(var o=0;o<=24;o+=8){n<<=1;n|=e>>>o+s&1}}for(var s=6;s>=0;s-=2){for(var o=1;o<=25;o+=8){a<<=1;a|=t>>>o+s&1}for(var o=1;o<=25;o+=8){a<<=1;a|=e>>>o+s&1}}r[i+0]=n>>>0;r[i+1]=a>>>0};t.rip=function rip(e,t,r,i){var n=0;var a=0;for(var s=0;s<4;s++){for(var o=24;o>=0;o-=8){n<<=1;n|=t>>>o+s&1;n<<=1;n|=e>>>o+s&1}}for(var s=4;s<8;s++){for(var o=24;o>=0;o-=8){a<<=1;a|=t>>>o+s&1;a<<=1;a|=e>>>o+s&1}}r[i+0]=n>>>0;r[i+1]=a>>>0};t.pc1=function pc1(e,t,r,i){var n=0;var a=0;for(var s=7;s>=5;s--){for(var o=0;o<=24;o+=8){n<<=1;n|=t>>o+s&1}for(var o=0;o<=24;o+=8){n<<=1;n|=e>>o+s&1}}for(var o=0;o<=24;o+=8){n<<=1;n|=t>>o+s&1}for(var s=1;s<=3;s++){for(var o=0;o<=24;o+=8){a<<=1;a|=t>>o+s&1}for(var o=0;o<=24;o+=8){a<<=1;a|=e>>o+s&1}}for(var o=0;o<=24;o+=8){a<<=1;a|=e>>o+s&1}r[i+0]=n>>>0;r[i+1]=a>>>0};t.r28shl=function r28shl(e,t){return e<<t&268435455|e>>>28-t};var r=[14,11,17,4,27,23,25,0,13,22,7,18,5,9,16,24,2,20,12,21,1,8,15,26,15,4,25,19,9,1,26,16,5,11,23,8,12,7,17,0,22,3,10,14,6,20,27,24];t.pc2=function pc2(e,t,i,n){var a=0;var s=0;var o=r.length>>>1;for(var h=0;h<o;h++){a<<=1;a|=e>>>r[h]&1}for(var h=o;h<r.length;h++){s<<=1;s|=t>>>r[h]&1}i[n+0]=a>>>0;i[n+1]=s>>>0};t.expand=function expand(e,t,r){var i=0;var n=0;i=(e&1)<<5|e>>>27;for(var a=23;a>=15;a-=4){i<<=6;i|=e>>>a&63}for(var a=11;a>=3;a-=4){n|=e>>>a&63;n<<=6}n|=(e&31)<<1|e>>>31;t[r+0]=i>>>0;t[r+1]=n>>>0};var i=[14,0,4,15,13,7,1,4,2,14,15,2,11,13,8,1,3,10,10,6,6,12,12,11,5,9,9,5,0,3,7,8,4,15,1,12,14,8,8,2,13,4,6,9,2,1,11,7,15,5,12,11,9,3,7,14,3,10,10,0,5,6,0,13,15,3,1,13,8,4,14,7,6,15,11,2,3,8,4,14,9,12,7,0,2,1,13,10,12,6,0,9,5,11,10,5,0,13,14,8,7,10,11,1,10,3,4,15,13,4,1,2,5,11,8,6,12,7,6,12,9,0,3,5,2,14,15,9,10,13,0,7,9,0,14,9,6,3,3,4,15,6,5,10,1,2,13,8,12,5,7,14,11,12,4,11,2,15,8,1,13,1,6,10,4,13,9,0,8,6,15,9,3,8,0,7,11,4,1,15,2,14,12,3,5,11,10,5,14,2,7,12,7,13,13,8,14,11,3,5,0,6,6,15,9,0,10,3,1,4,2,7,8,2,5,12,11,1,12,10,4,14,15,9,10,3,6,15,9,0,0,6,12,10,11,1,7,13,13,8,15,9,1,4,3,5,14,11,5,12,2,7,8,2,4,14,2,14,12,11,4,2,1,12,7,4,10,7,11,13,6,1,8,5,5,0,3,15,15,10,13,3,0,9,14,8,9,6,4,11,2,8,1,12,11,7,10,1,13,14,7,2,8,13,15,6,9,15,12,0,5,9,6,10,3,4,0,5,14,3,12,10,1,15,10,4,15,2,9,7,2,12,6,9,8,5,0,6,13,1,3,13,4,14,14,0,7,11,5,3,11,8,9,4,14,3,15,2,5,12,2,9,8,5,12,15,3,10,7,11,0,14,4,1,10,7,1,6,13,0,11,8,6,13,4,13,11,0,2,11,14,7,15,4,0,9,8,1,13,10,3,14,12,3,9,5,7,12,5,2,10,15,6,8,1,6,1,6,4,11,11,13,13,8,12,1,3,4,7,10,14,7,10,9,15,5,6,0,8,15,0,14,5,2,9,3,2,12,13,1,2,15,8,13,4,8,6,10,15,3,11,7,1,4,10,12,9,5,3,6,14,11,5,0,0,14,12,9,7,2,7,2,11,1,4,14,1,7,9,4,12,10,14,8,2,13,0,15,6,12,10,9,13,0,15,3,3,5,5,6,8,11];t.substitute=function substitute(e,t){var r=0;for(var n=0;n<4;n++){var a=e>>>18-n*6&63;var s=i[n*64+a];r<<=4;r|=s}for(var n=0;n<4;n++){var a=t>>>18-n*6&63;var s=i[4*64+n*64+a];r<<=4;r|=s}return r>>>0};var n=[16,25,12,11,3,20,4,15,31,17,9,6,27,14,1,22,30,24,8,18,0,5,29,23,13,19,2,26,10,21,28,7];t.permute=function permute(e){var t=0;for(var r=0;r<n.length;r++){t<<=1;t|=e>>>n[r]&1}return t>>>0};t.padSplit=function padSplit(e,t,r){var i=e.toString(2);while(i.length<t)i=\"0\"+i;var n=[];for(var a=0;a<t;a+=r)n.push(i.slice(a,a+r));return n.join(\" \")}},6587:function(e,t,r){var i=r(296);var n=r(7992);var a=r(373);function getDiffieHellman(e){var t=new Buffer(n[e].prime,\"hex\");var r=new Buffer(n[e].gen,\"hex\");return new a(t,r)}var s={binary:true,hex:true,base64:true};function createDiffieHellman(e,t,r,n){if(Buffer.isBuffer(t)||s[t]===undefined){return createDiffieHellman(e,\"binary\",t,r)}t=t||\"binary\";n=n||\"binary\";r=r||new Buffer([2]);if(!Buffer.isBuffer(r)){r=new Buffer(r,n)}if(typeof e===\"number\"){return new a(i(e,r),r,true)}if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}return new a(e,r,true)}t.DiffieHellmanGroup=t.createDiffieHellmanGroup=t.getDiffieHellman=getDiffieHellman;t.createDiffieHellman=t.DiffieHellman=createDiffieHellman},373:function(e,t,r){var i=r(711);var n=r(1354);var a=new n;var s=new i(24);var o=new i(11);var h=new i(10);var u=new i(3);var d=new i(7);var c=r(296);var l=r(7223);e.exports=DH;function setPublicKey(e,t){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}this._pub=new i(e);return this}function setPrivateKey(e,t){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}this._priv=new i(e);return this}var p={};function checkPrime(e,t){var r=t.toString(\"hex\");var i=[r,e.toString(16)].join(\"_\");if(i in p){return p[i]}var n=0;if(e.isEven()||!c.simpleSieve||!c.fermatTest(e)||!a.test(e)){n+=1;if(r===\"02\"||r===\"05\"){n+=8}else{n+=4}p[i]=n;return n}if(!a.test(e.shrn(1))){n+=2}var l;switch(r){case\"02\":if(e.mod(s).cmp(o)){n+=8}break;case\"05\":l=e.mod(h);if(l.cmp(u)&&l.cmp(d)){n+=8}break;default:n+=4}p[i]=n;return n}function DH(e,t,r){this.setGenerator(t);this.__prime=new i(e);this._prime=i.mont(this.__prime);this._primeLen=e.length;this._pub=undefined;this._priv=undefined;this._primeCode=undefined;if(r){this.setPublicKey=setPublicKey;this.setPrivateKey=setPrivateKey}else{this._primeCode=8}}Object.defineProperty(DH.prototype,\"verifyError\",{enumerable:true,get:function(){if(typeof this._primeCode!==\"number\"){this._primeCode=checkPrime(this.__prime,this.__gen)}return this._primeCode}});DH.prototype.generateKeys=function(){if(!this._priv){this._priv=new i(l(this._primeLen))}this._pub=this._gen.toRed(this._prime).redPow(this._priv).fromRed();return this.getPublicKey()};DH.prototype.computeSecret=function(e){e=new i(e);e=e.toRed(this._prime);var t=e.redPow(this._priv).fromRed();var r=new Buffer(t.toArray());var n=this.getPrime();if(r.length<n.length){var a=new Buffer(n.length-r.length);a.fill(0);r=Buffer.concat([a,r])}return r};DH.prototype.getPublicKey=function getPublicKey(e){return formatReturnValue(this._pub,e)};DH.prototype.getPrivateKey=function getPrivateKey(e){return formatReturnValue(this._priv,e)};DH.prototype.getPrime=function(e){return formatReturnValue(this.__prime,e)};DH.prototype.getGenerator=function(e){return formatReturnValue(this._gen,e)};DH.prototype.setGenerator=function(e,t){t=t||\"utf8\";if(!Buffer.isBuffer(e)){e=new Buffer(e,t)}this.__gen=e;this._gen=new i(e);return this};function formatReturnValue(e,t){var r=new Buffer(e.toArray());if(!t){return r}else{return r.toString(t)}}},296:function(e,t,r){var i=r(7223);e.exports=findPrime;findPrime.simpleSieve=simpleSieve;findPrime.fermatTest=fermatTest;var n=r(711);var a=new n(24);var s=r(1354);var o=new s;var h=new n(1);var u=new n(2);var d=new n(5);var c=new n(16);var l=new n(8);var p=new n(10);var v=new n(3);var b=new n(7);var m=new n(11);var y=new n(4);var g=new n(12);var _=null;function _getPrimes(){if(_!==null)return _;var e=1048576;var t=[];t[0]=2;for(var r=1,i=3;i<e;i+=2){var n=Math.ceil(Math.sqrt(i));for(var a=0;a<r&&t[a]<=n;a++)if(i%t[a]===0)break;if(r!==a&&t[a]<=n)continue;t[r++]=i}_=t;return t}function simpleSieve(e){var t=_getPrimes();for(var r=0;r<t.length;r++)if(e.modn(t[r])===0){if(e.cmpn(t[r])===0){return true}else{return false}}return true}function fermatTest(e){var t=n.mont(e);return u.toRed(t).redPow(e.subn(1)).fromRed().cmpn(1)===0}function findPrime(e,t){if(e<16){if(t===2||t===5){return new n([140,123])}else{return new n([140,39])}}t=new n(t);var r,s;while(true){r=new n(i(Math.ceil(e/8)));while(r.bitLength()>e){r.ishrn(1)}if(r.isEven()){r.iadd(h)}if(!r.testn(1)){r.iadd(u)}if(!t.cmp(u)){while(r.mod(a).cmp(m)){r.iadd(y)}}else if(!t.cmp(d)){while(r.mod(p).cmp(v)){r.iadd(y)}}s=r.shrn(1);if(simpleSieve(s)&&simpleSieve(r)&&fermatTest(s)&&fermatTest(r)&&o.test(s)&&o.test(r)){return r}}}},949:function(e,t,r){\"use strict\";var i=t;i.version=r(2531).i8;i.utils=r(4401);i.rand=r(3500);i.curve=r(9359);i.curves=r(6226);i.ec=r(4088);i.eddsa=r(8511)},2727:function(e,t,r){\"use strict\";var i=r(711);var n=r(4401);var a=n.getNAF;var s=n.getJSF;var o=n.assert;function BaseCurve(e,t){this.type=e;this.p=new i(t.p,16);this.red=t.prime?i.red(t.prime):i.mont(this.p);this.zero=new i(0).toRed(this.red);this.one=new i(1).toRed(this.red);this.two=new i(2).toRed(this.red);this.n=t.n&&new i(t.n,16);this.g=t.g&&this.pointFromJSON(t.g,t.gRed);this._wnafT1=new Array(4);this._wnafT2=new Array(4);this._wnafT3=new Array(4);this._wnafT4=new Array(4);this._bitLength=this.n?this.n.bitLength():0;var r=this.n&&this.p.div(this.n);if(!r||r.cmpn(100)>0){this.redN=null}else{this._maxwellTrick=true;this.redN=this.n.toRed(this.red)}}e.exports=BaseCurve;BaseCurve.prototype.point=function point(){throw new Error(\"Not implemented\")};BaseCurve.prototype.validate=function validate(){throw new Error(\"Not implemented\")};BaseCurve.prototype._fixedNafMul=function _fixedNafMul(e,t){o(e.precomputed);var r=e._getDoubles();var i=a(t,1,this._bitLength);var n=(1<<r.step+1)-(r.step%2===0?2:1);n/=3;var s=[];for(var h=0;h<i.length;h+=r.step){var u=0;for(var t=h+r.step-1;t>=h;t--)u=(u<<1)+i[t];s.push(u)}var d=this.jpoint(null,null,null);var c=this.jpoint(null,null,null);for(var l=n;l>0;l--){for(var h=0;h<s.length;h++){var u=s[h];if(u===l)c=c.mixedAdd(r.points[h]);else if(u===-l)c=c.mixedAdd(r.points[h].neg())}d=d.add(c)}return d.toP()};BaseCurve.prototype._wnafMul=function _wnafMul(e,t){var r=4;var i=e._getNAFPoints(r);r=i.wnd;var n=i.points;var s=a(t,r,this._bitLength);var h=this.jpoint(null,null,null);for(var u=s.length-1;u>=0;u--){for(var t=0;u>=0&&s[u]===0;u--)t++;if(u>=0)t++;h=h.dblp(t);if(u<0)break;var d=s[u];o(d!==0);if(e.type===\"affine\"){if(d>0)h=h.mixedAdd(n[d-1>>1]);else h=h.mixedAdd(n[-d-1>>1].neg())}else{if(d>0)h=h.add(n[d-1>>1]);else h=h.add(n[-d-1>>1].neg())}}return e.type===\"affine\"?h.toP():h};BaseCurve.prototype._wnafMulAdd=function _wnafMulAdd(e,t,r,i,n){var o=this._wnafT1;var h=this._wnafT2;var u=this._wnafT3;var d=0;for(var c=0;c<i;c++){var l=t[c];var p=l._getNAFPoints(e);o[c]=p.wnd;h[c]=p.points}for(var c=i-1;c>=1;c-=2){var v=c-1;var b=c;if(o[v]!==1||o[b]!==1){u[v]=a(r[v],o[v],this._bitLength);u[b]=a(r[b],o[b],this._bitLength);d=Math.max(u[v].length,d);d=Math.max(u[b].length,d);continue}var m=[t[v],null,null,t[b]];if(t[v].y.cmp(t[b].y)===0){m[1]=t[v].add(t[b]);m[2]=t[v].toJ().mixedAdd(t[b].neg())}else if(t[v].y.cmp(t[b].y.redNeg())===0){m[1]=t[v].toJ().mixedAdd(t[b]);m[2]=t[v].add(t[b].neg())}else{m[1]=t[v].toJ().mixedAdd(t[b]);m[2]=t[v].toJ().mixedAdd(t[b].neg())}var y=[-3,-1,-5,-7,0,7,5,1,3];var g=s(r[v],r[b]);d=Math.max(g[0].length,d);u[v]=new Array(d);u[b]=new Array(d);for(var _=0;_<d;_++){var w=g[0][_]|0;var M=g[1][_]|0;u[v][_]=y[(w+1)*3+(M+1)];u[b][_]=0;h[v]=m}}var B=this.jpoint(null,null,null);var E=this._wnafT4;for(var c=d;c>=0;c--){var k=0;while(c>=0){var A=true;for(var _=0;_<i;_++){E[_]=u[_][c]|0;if(E[_]!==0)A=false}if(!A)break;k++;c--}if(c>=0)k++;B=B.dblp(k);if(c<0)break;for(var _=0;_<i;_++){var N=E[_];var l;if(N===0)continue;else if(N>0)l=h[_][N-1>>1];else if(N<0)l=h[_][-N-1>>1].neg();if(l.type===\"affine\")B=B.mixedAdd(l);else B=B.add(l)}}for(var c=0;c<i;c++)h[c]=null;if(n)return B;else return B.toP()};function BasePoint(e,t){this.curve=e;this.type=t;this.precomputed=null}BaseCurve.BasePoint=BasePoint;BasePoint.prototype.eq=function eq(){throw new Error(\"Not implemented\")};BasePoint.prototype.validate=function validate(){return this.curve.validate(this)};BaseCurve.prototype.decodePoint=function decodePoint(e,t){e=n.toArray(e,t);var r=this.p.byteLength();if((e[0]===4||e[0]===6||e[0]===7)&&e.length-1===2*r){if(e[0]===6)o(e[e.length-1]%2===0);else if(e[0]===7)o(e[e.length-1]%2===1);var i=this.point(e.slice(1,1+r),e.slice(1+r,1+2*r));return i}else if((e[0]===2||e[0]===3)&&e.length-1===r){return this.pointFromX(e.slice(1,1+r),e[0]===3)}throw new Error(\"Unknown point format\")};BasePoint.prototype.encodeCompressed=function encodeCompressed(e){return this.encode(e,true)};BasePoint.prototype._encode=function _encode(e){var t=this.curve.p.byteLength();var r=this.getX().toArray(\"be\",t);if(e)return[this.getY().isEven()?2:3].concat(r);return[4].concat(r,this.getY().toArray(\"be\",t))};BasePoint.prototype.encode=function encode(e,t){return n.encode(this._encode(t),e)};BasePoint.prototype.precompute=function precompute(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};t.naf=this._getNAFPoints(8);t.doubles=this._getDoubles(4,e);t.beta=this._getBeta();this.precomputed=t;return this};BasePoint.prototype._hasDoubles=function _hasDoubles(e){if(!this.precomputed)return false;var t=this.precomputed.doubles;if(!t)return false;return t.points.length>=Math.ceil((e.bitLength()+1)/t.step)};BasePoint.prototype._getDoubles=function _getDoubles(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;var r=[this];var i=this;for(var n=0;n<t;n+=e){for(var a=0;a<e;a++)i=i.dbl();r.push(i)}return{step:e,points:r}};BasePoint.prototype._getNAFPoints=function _getNAFPoints(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;var t=[this];var r=(1<<e)-1;var i=r===1?null:this.dbl();for(var n=1;n<r;n++)t[n]=t[n-1].add(i);return{wnd:e,points:t}};BasePoint.prototype._getBeta=function _getBeta(){return null};BasePoint.prototype.dblp=function dblp(e){var t=this;for(var r=0;r<e;r++)t=t.dbl();return t}},2705:function(e,t,r){\"use strict\";var i=r(4401);var n=r(711);var a=r(3782);var s=r(2727);var o=i.assert;function EdwardsCurve(e){this.twisted=(e.a|0)!==1;this.mOneA=this.twisted&&(e.a|0)===-1;this.extended=this.mOneA;s.call(this,\"edwards\",e);this.a=new n(e.a,16).umod(this.red.m);this.a=this.a.toRed(this.red);this.c=new n(e.c,16).toRed(this.red);this.c2=this.c.redSqr();this.d=new n(e.d,16).toRed(this.red);this.dd=this.d.redAdd(this.d);o(!this.twisted||this.c.fromRed().cmpn(1)===0);this.oneC=(e.c|0)===1}a(EdwardsCurve,s);e.exports=EdwardsCurve;EdwardsCurve.prototype._mulA=function _mulA(e){if(this.mOneA)return e.redNeg();else return this.a.redMul(e)};EdwardsCurve.prototype._mulC=function _mulC(e){if(this.oneC)return e;else return this.c.redMul(e)};EdwardsCurve.prototype.jpoint=function jpoint(e,t,r,i){return this.point(e,t,r,i)};EdwardsCurve.prototype.pointFromX=function pointFromX(e,t){e=new n(e,16);if(!e.red)e=e.toRed(this.red);var r=e.redSqr();var i=this.c2.redSub(this.a.redMul(r));var a=this.one.redSub(this.c2.redMul(this.d).redMul(r));var s=i.redMul(a.redInvm());var o=s.redSqrt();if(o.redSqr().redSub(s).cmp(this.zero)!==0)throw new Error(\"invalid point\");var h=o.fromRed().isOdd();if(t&&!h||!t&&h)o=o.redNeg();return this.point(e,o)};EdwardsCurve.prototype.pointFromY=function pointFromY(e,t){e=new n(e,16);if(!e.red)e=e.toRed(this.red);var r=e.redSqr();var i=r.redSub(this.c2);var a=r.redMul(this.d).redMul(this.c2).redSub(this.a);var s=i.redMul(a.redInvm());if(s.cmp(this.zero)===0){if(t)throw new Error(\"invalid point\");else return this.point(this.zero,e)}var o=s.redSqrt();if(o.redSqr().redSub(s).cmp(this.zero)!==0)throw new Error(\"invalid point\");if(o.fromRed().isOdd()!==t)o=o.redNeg();return this.point(o,e)};EdwardsCurve.prototype.validate=function validate(e){if(e.isInfinity())return true;e.normalize();var t=e.x.redSqr();var r=e.y.redSqr();var i=t.redMul(this.a).redAdd(r);var n=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(r)));return i.cmp(n)===0};function Point(e,t,r,i,a){s.BasePoint.call(this,e,\"projective\");if(t===null&&r===null&&i===null){this.x=this.curve.zero;this.y=this.curve.one;this.z=this.curve.one;this.t=this.curve.zero;this.zOne=true}else{this.x=new n(t,16);this.y=new n(r,16);this.z=i?new n(i,16):this.curve.one;this.t=a&&new n(a,16);if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);if(this.t&&!this.t.red)this.t=this.t.toRed(this.curve.red);this.zOne=this.z===this.curve.one;if(this.curve.extended&&!this.t){this.t=this.x.redMul(this.y);if(!this.zOne)this.t=this.t.redMul(this.z.redInvm())}}}a(Point,s.BasePoint);EdwardsCurve.prototype.pointFromJSON=function pointFromJSON(e){return Point.fromJSON(this,e)};EdwardsCurve.prototype.point=function point(e,t,r,i){return new Point(this,e,t,r,i)};Point.fromJSON=function fromJSON(e,t){return new Point(e,t[0],t[1],t[2])};Point.prototype.inspect=function inspect(){if(this.isInfinity())return\"<EC Point Infinity>\";return\"<EC Point x: \"+this.x.fromRed().toString(16,2)+\" y: \"+this.y.fromRed().toString(16,2)+\" z: \"+this.z.fromRed().toString(16,2)+\">\"};Point.prototype.isInfinity=function isInfinity(){return this.x.cmpn(0)===0&&(this.y.cmp(this.z)===0||this.zOne&&this.y.cmp(this.curve.c)===0)};Point.prototype._extDbl=function _extDbl(){var e=this.x.redSqr();var t=this.y.redSqr();var r=this.z.redSqr();r=r.redIAdd(r);var i=this.curve._mulA(e);var n=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t);var a=i.redAdd(t);var s=a.redSub(r);var o=i.redSub(t);var h=n.redMul(s);var u=a.redMul(o);var d=n.redMul(o);var c=s.redMul(a);return this.curve.point(h,u,c,d)};Point.prototype._projDbl=function _projDbl(){var e=this.x.redAdd(this.y).redSqr();var t=this.x.redSqr();var r=this.y.redSqr();var i;var n;var a;if(this.curve.twisted){var s=this.curve._mulA(t);var o=s.redAdd(r);if(this.zOne){i=e.redSub(t).redSub(r).redMul(o.redSub(this.curve.two));n=o.redMul(s.redSub(r));a=o.redSqr().redSub(o).redSub(o)}else{var h=this.z.redSqr();var u=o.redSub(h).redISub(h);i=e.redSub(t).redISub(r).redMul(u);n=o.redMul(s.redSub(r));a=o.redMul(u)}}else{var s=t.redAdd(r);var h=this.curve._mulC(this.z).redSqr();var u=s.redSub(h).redSub(h);i=this.curve._mulC(e.redISub(s)).redMul(u);n=this.curve._mulC(s).redMul(t.redISub(r));a=s.redMul(u)}return this.curve.point(i,n,a)};Point.prototype.dbl=function dbl(){if(this.isInfinity())return this;if(this.curve.extended)return this._extDbl();else return this._projDbl()};Point.prototype._extAdd=function _extAdd(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x));var r=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x));var i=this.t.redMul(this.curve.dd).redMul(e.t);var n=this.z.redMul(e.z.redAdd(e.z));var a=r.redSub(t);var s=n.redSub(i);var o=n.redAdd(i);var h=r.redAdd(t);var u=a.redMul(s);var d=o.redMul(h);var c=a.redMul(h);var l=s.redMul(o);return this.curve.point(u,d,l,c)};Point.prototype._projAdd=function _projAdd(e){var t=this.z.redMul(e.z);var r=t.redSqr();var i=this.x.redMul(e.x);var n=this.y.redMul(e.y);var a=this.curve.d.redMul(i).redMul(n);var s=r.redSub(a);var o=r.redAdd(a);var h=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(i).redISub(n);var u=t.redMul(s).redMul(h);var d;var c;if(this.curve.twisted){d=t.redMul(o).redMul(n.redSub(this.curve._mulA(i)));c=s.redMul(o)}else{d=t.redMul(o).redMul(n.redSub(i));c=this.curve._mulC(s).redMul(o)}return this.curve.point(u,d,c)};Point.prototype.add=function add(e){if(this.isInfinity())return e;if(e.isInfinity())return this;if(this.curve.extended)return this._extAdd(e);else return this._projAdd(e)};Point.prototype.mul=function mul(e){if(this._hasDoubles(e))return this.curve._fixedNafMul(this,e);else return this.curve._wnafMul(this,e)};Point.prototype.mulAdd=function mulAdd(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,false)};Point.prototype.jmulAdd=function jmulAdd(e,t,r){return this.curve._wnafMulAdd(1,[this,t],[e,r],2,true)};Point.prototype.normalize=function normalize(){if(this.zOne)return this;var e=this.z.redInvm();this.x=this.x.redMul(e);this.y=this.y.redMul(e);if(this.t)this.t=this.t.redMul(e);this.z=this.curve.one;this.zOne=true;return this};Point.prototype.neg=function neg(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())};Point.prototype.getX=function getX(){this.normalize();return this.x.fromRed()};Point.prototype.getY=function getY(){this.normalize();return this.y.fromRed()};Point.prototype.eq=function eq(e){return this===e||this.getX().cmp(e.getX())===0&&this.getY().cmp(e.getY())===0};Point.prototype.eqXToP=function eqXToP(e){var t=e.toRed(this.curve.red).redMul(this.z);if(this.x.cmp(t)===0)return true;var r=e.clone();var i=this.curve.redN.redMul(this.z);for(;;){r.iadd(this.curve.n);if(r.cmp(this.curve.p)>=0)return false;t.redIAdd(i);if(this.x.cmp(t)===0)return true}};Point.prototype.toP=Point.prototype.normalize;Point.prototype.mixedAdd=Point.prototype.add},9359:function(e,t,r){\"use strict\";var i=t;i.base=r(2727);i.short=r(4720);i.mont=r(6653);i.edwards=r(2705)},6653:function(e,t,r){\"use strict\";var i=r(711);var n=r(3782);var a=r(2727);var s=r(4401);function MontCurve(e){a.call(this,\"mont\",e);this.a=new i(e.a,16).toRed(this.red);this.b=new i(e.b,16).toRed(this.red);this.i4=new i(4).toRed(this.red).redInvm();this.two=new i(2).toRed(this.red);this.a24=this.i4.redMul(this.a.redAdd(this.two))}n(MontCurve,a);e.exports=MontCurve;MontCurve.prototype.validate=function validate(e){var t=e.normalize().x;var r=t.redSqr();var i=r.redMul(t).redAdd(r.redMul(this.a)).redAdd(t);var n=i.redSqrt();return n.redSqr().cmp(i)===0};function Point(e,t,r){a.BasePoint.call(this,e,\"projective\");if(t===null&&r===null){this.x=this.curve.one;this.z=this.curve.zero}else{this.x=new i(t,16);this.z=new i(r,16);if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red)}}n(Point,a.BasePoint);MontCurve.prototype.decodePoint=function decodePoint(e,t){return this.point(s.toArray(e,t),1)};MontCurve.prototype.point=function point(e,t){return new Point(this,e,t)};MontCurve.prototype.pointFromJSON=function pointFromJSON(e){return Point.fromJSON(this,e)};Point.prototype.precompute=function precompute(){};Point.prototype._encode=function _encode(){return this.getX().toArray(\"be\",this.curve.p.byteLength())};Point.fromJSON=function fromJSON(e,t){return new Point(e,t[0],t[1]||e.one)};Point.prototype.inspect=function inspect(){if(this.isInfinity())return\"<EC Point Infinity>\";return\"<EC Point x: \"+this.x.fromRed().toString(16,2)+\" z: \"+this.z.fromRed().toString(16,2)+\">\"};Point.prototype.isInfinity=function isInfinity(){return this.z.cmpn(0)===0};Point.prototype.dbl=function dbl(){var e=this.x.redAdd(this.z);var t=e.redSqr();var r=this.x.redSub(this.z);var i=r.redSqr();var n=t.redSub(i);var a=t.redMul(i);var s=n.redMul(i.redAdd(this.curve.a24.redMul(n)));return this.curve.point(a,s)};Point.prototype.add=function add(){throw new Error(\"Not supported on Montgomery curve\")};Point.prototype.diffAdd=function diffAdd(e,t){var r=this.x.redAdd(this.z);var i=this.x.redSub(this.z);var n=e.x.redAdd(e.z);var a=e.x.redSub(e.z);var s=a.redMul(r);var o=n.redMul(i);var h=t.z.redMul(s.redAdd(o).redSqr());var u=t.x.redMul(s.redISub(o).redSqr());return this.curve.point(h,u)};Point.prototype.mul=function mul(e){var t=e.clone();var r=this;var i=this.curve.point(null,null);var n=this;for(var a=[];t.cmpn(0)!==0;t.iushrn(1))a.push(t.andln(1));for(var s=a.length-1;s>=0;s--){if(a[s]===0){r=r.diffAdd(i,n);i=i.dbl()}else{i=r.diffAdd(i,n);r=r.dbl()}}return i};Point.prototype.mulAdd=function mulAdd(){throw new Error(\"Not supported on Montgomery curve\")};Point.prototype.jumlAdd=function jumlAdd(){throw new Error(\"Not supported on Montgomery curve\")};Point.prototype.eq=function eq(e){return this.getX().cmp(e.getX())===0};Point.prototype.normalize=function normalize(){this.x=this.x.redMul(this.z.redInvm());this.z=this.curve.one;return this};Point.prototype.getX=function getX(){this.normalize();return this.x.fromRed()}},4720:function(e,t,r){\"use strict\";var i=r(4401);var n=r(711);var a=r(3782);var s=r(2727);var o=i.assert;function ShortCurve(e){s.call(this,\"short\",e);this.a=new n(e.a,16).toRed(this.red);this.b=new n(e.b,16).toRed(this.red);this.tinv=this.two.redInvm();this.zeroA=this.a.fromRed().cmpn(0)===0;this.threeA=this.a.fromRed().sub(this.p).cmpn(-3)===0;this.endo=this._getEndomorphism(e);this._endoWnafT1=new Array(4);this._endoWnafT2=new Array(4)}a(ShortCurve,s);e.exports=ShortCurve;ShortCurve.prototype._getEndomorphism=function _getEndomorphism(e){if(!this.zeroA||!this.g||!this.n||this.p.modn(3)!==1)return;var t;var r;if(e.beta){t=new n(e.beta,16).toRed(this.red)}else{var i=this._getEndoRoots(this.p);t=i[0].cmp(i[1])<0?i[0]:i[1];t=t.toRed(this.red)}if(e.lambda){r=new n(e.lambda,16)}else{var a=this._getEndoRoots(this.n);if(this.g.mul(a[0]).x.cmp(this.g.x.redMul(t))===0){r=a[0]}else{r=a[1];o(this.g.mul(r).x.cmp(this.g.x.redMul(t))===0)}}var s;if(e.basis){s=e.basis.map((function(e){return{a:new n(e.a,16),b:new n(e.b,16)}}))}else{s=this._getEndoBasis(r)}return{beta:t,lambda:r,basis:s}};ShortCurve.prototype._getEndoRoots=function _getEndoRoots(e){var t=e===this.p?this.red:n.mont(e);var r=new n(2).toRed(t).redInvm();var i=r.redNeg();var a=new n(3).toRed(t).redNeg().redSqrt().redMul(r);var s=i.redAdd(a).fromRed();var o=i.redSub(a).fromRed();return[s,o]};ShortCurve.prototype._getEndoBasis=function _getEndoBasis(e){var t=this.n.ushrn(Math.floor(this.n.bitLength()/2));var r=e;var i=this.n.clone();var a=new n(1);var s=new n(0);var o=new n(0);var h=new n(1);var u;var d;var c;var l;var p;var v;var b;var m=0;var y;var g;while(r.cmpn(0)!==0){var _=i.div(r);y=i.sub(_.mul(r));g=o.sub(_.mul(a));var w=h.sub(_.mul(s));if(!c&&y.cmp(t)<0){u=b.neg();d=a;c=y.neg();l=g}else if(c&&++m===2){break}b=y;i=r;r=y;o=a;a=g;h=s;s=w}p=y.neg();v=g;var M=c.sqr().add(l.sqr());var B=p.sqr().add(v.sqr());if(B.cmp(M)>=0){p=u;v=d}if(c.negative){c=c.neg();l=l.neg()}if(p.negative){p=p.neg();v=v.neg()}return[{a:c,b:l},{a:p,b:v}]};ShortCurve.prototype._endoSplit=function _endoSplit(e){var t=this.endo.basis;var r=t[0];var i=t[1];var n=i.b.mul(e).divRound(this.n);var a=r.b.neg().mul(e).divRound(this.n);var s=n.mul(r.a);var o=a.mul(i.a);var h=n.mul(r.b);var u=a.mul(i.b);var d=e.sub(s).sub(o);var c=h.add(u).neg();return{k1:d,k2:c}};ShortCurve.prototype.pointFromX=function pointFromX(e,t){e=new n(e,16);if(!e.red)e=e.toRed(this.red);var r=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b);var i=r.redSqrt();if(i.redSqr().redSub(r).cmp(this.zero)!==0)throw new Error(\"invalid point\");var a=i.fromRed().isOdd();if(t&&!a||!t&&a)i=i.redNeg();return this.point(e,i)};ShortCurve.prototype.validate=function validate(e){if(e.inf)return true;var t=e.x;var r=e.y;var i=this.a.redMul(t);var n=t.redSqr().redMul(t).redIAdd(i).redIAdd(this.b);return r.redSqr().redISub(n).cmpn(0)===0};ShortCurve.prototype._endoWnafMulAdd=function _endoWnafMulAdd(e,t,r){var i=this._endoWnafT1;var n=this._endoWnafT2;for(var a=0;a<e.length;a++){var s=this._endoSplit(t[a]);var o=e[a];var h=o._getBeta();if(s.k1.negative){s.k1.ineg();o=o.neg(true)}if(s.k2.negative){s.k2.ineg();h=h.neg(true)}i[a*2]=o;i[a*2+1]=h;n[a*2]=s.k1;n[a*2+1]=s.k2}var u=this._wnafMulAdd(1,i,n,a*2,r);for(var d=0;d<a*2;d++){i[d]=null;n[d]=null}return u};function Point(e,t,r,i){s.BasePoint.call(this,e,\"affine\");if(t===null&&r===null){this.x=null;this.y=null;this.inf=true}else{this.x=new n(t,16);this.y=new n(r,16);if(i){this.x.forceRed(this.curve.red);this.y.forceRed(this.curve.red)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);this.inf=false}}a(Point,s.BasePoint);ShortCurve.prototype.point=function point(e,t,r){return new Point(this,e,t,r)};ShortCurve.prototype.pointFromJSON=function pointFromJSON(e,t){return Point.fromJSON(this,e,t)};Point.prototype._getBeta=function _getBeta(){if(!this.curve.endo)return;var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var r=this.curve;var endoMul=function(e){return r.point(e.x.redMul(r.endo.beta),e.y)};e.beta=t;t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(endoMul)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(endoMul)}}}return t};Point.prototype.toJSON=function toJSON(){if(!this.precomputed)return[this.x,this.y];return[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]};Point.fromJSON=function fromJSON(e,t,r){if(typeof t===\"string\")t=JSON.parse(t);var i=e.point(t[0],t[1],r);if(!t[2])return i;function obj2point(t){return e.point(t[0],t[1],r)}var n=t[2];i.precomputed={beta:null,doubles:n.doubles&&{step:n.doubles.step,points:[i].concat(n.doubles.points.map(obj2point))},naf:n.naf&&{wnd:n.naf.wnd,points:[i].concat(n.naf.points.map(obj2point))}};return i};Point.prototype.inspect=function inspect(){if(this.isInfinity())return\"<EC Point Infinity>\";return\"<EC Point x: \"+this.x.fromRed().toString(16,2)+\" y: \"+this.y.fromRed().toString(16,2)+\">\"};Point.prototype.isInfinity=function isInfinity(){return this.inf};Point.prototype.add=function add(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(this.x.cmp(e.x)===0)return this.curve.point(null,null);var t=this.y.redSub(e.y);if(t.cmpn(0)!==0)t=t.redMul(this.x.redSub(e.x).redInvm());var r=t.redSqr().redISub(this.x).redISub(e.x);var i=t.redMul(this.x.redSub(r)).redISub(this.y);return this.curve.point(r,i)};Point.prototype.dbl=function dbl(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(e.cmpn(0)===0)return this.curve.point(null,null);var t=this.curve.a;var r=this.x.redSqr();var i=e.redInvm();var n=r.redAdd(r).redIAdd(r).redIAdd(t).redMul(i);var a=n.redSqr().redISub(this.x.redAdd(this.x));var s=n.redMul(this.x.redSub(a)).redISub(this.y);return this.curve.point(a,s)};Point.prototype.getX=function getX(){return this.x.fromRed()};Point.prototype.getY=function getY(){return this.y.fromRed()};Point.prototype.mul=function mul(e){e=new n(e,16);if(this.isInfinity())return this;else if(this._hasDoubles(e))return this.curve._fixedNafMul(this,e);else if(this.curve.endo)return this.curve._endoWnafMulAdd([this],[e]);else return this.curve._wnafMul(this,e)};Point.prototype.mulAdd=function mulAdd(e,t,r){var i=[this,t];var n=[e,r];if(this.curve.endo)return this.curve._endoWnafMulAdd(i,n);else return this.curve._wnafMulAdd(1,i,n,2)};Point.prototype.jmulAdd=function jmulAdd(e,t,r){var i=[this,t];var n=[e,r];if(this.curve.endo)return this.curve._endoWnafMulAdd(i,n,true);else return this.curve._wnafMulAdd(1,i,n,2,true)};Point.prototype.eq=function eq(e){return this===e||this.inf===e.inf&&(this.inf||this.x.cmp(e.x)===0&&this.y.cmp(e.y)===0)};Point.prototype.neg=function neg(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var r=this.precomputed;var negate=function(e){return e.neg()};t.precomputed={naf:r.naf&&{wnd:r.naf.wnd,points:r.naf.points.map(negate)},doubles:r.doubles&&{step:r.doubles.step,points:r.doubles.points.map(negate)}}}return t};Point.prototype.toJ=function toJ(){if(this.inf)return this.curve.jpoint(null,null,null);var e=this.curve.jpoint(this.x,this.y,this.curve.one);return e};function JPoint(e,t,r,i){s.BasePoint.call(this,e,\"jacobian\");if(t===null&&r===null&&i===null){this.x=this.curve.one;this.y=this.curve.one;this.z=new n(0)}else{this.x=new n(t,16);this.y=new n(r,16);this.z=new n(i,16)}if(!this.x.red)this.x=this.x.toRed(this.curve.red);if(!this.y.red)this.y=this.y.toRed(this.curve.red);if(!this.z.red)this.z=this.z.toRed(this.curve.red);this.zOne=this.z===this.curve.one}a(JPoint,s.BasePoint);ShortCurve.prototype.jpoint=function jpoint(e,t,r){return new JPoint(this,e,t,r)};JPoint.prototype.toP=function toP(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm();var t=e.redSqr();var r=this.x.redMul(t);var i=this.y.redMul(t).redMul(e);return this.curve.point(r,i)};JPoint.prototype.neg=function neg(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)};JPoint.prototype.add=function add(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr();var r=this.z.redSqr();var i=this.x.redMul(t);var n=e.x.redMul(r);var a=this.y.redMul(t.redMul(e.z));var s=e.y.redMul(r.redMul(this.z));var o=i.redSub(n);var h=a.redSub(s);if(o.cmpn(0)===0){if(h.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var u=o.redSqr();var d=u.redMul(o);var c=i.redMul(u);var l=h.redSqr().redIAdd(d).redISub(c).redISub(c);var p=h.redMul(c.redISub(l)).redISub(a.redMul(d));var v=this.z.redMul(e.z).redMul(o);return this.curve.jpoint(l,p,v)};JPoint.prototype.mixedAdd=function mixedAdd(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr();var r=this.x;var i=e.x.redMul(t);var n=this.y;var a=e.y.redMul(t).redMul(this.z);var s=r.redSub(i);var o=n.redSub(a);if(s.cmpn(0)===0){if(o.cmpn(0)!==0)return this.curve.jpoint(null,null,null);else return this.dbl()}var h=s.redSqr();var u=h.redMul(s);var d=r.redMul(h);var c=o.redSqr().redIAdd(u).redISub(d).redISub(d);var l=o.redMul(d.redISub(c)).redISub(n.redMul(u));var p=this.z.redMul(s);return this.curve.jpoint(c,l,p)};JPoint.prototype.dblp=function dblp(e){if(e===0)return this;if(this.isInfinity())return this;if(!e)return this.dbl();if(this.curve.zeroA||this.curve.threeA){var t=this;for(var r=0;r<e;r++)t=t.dbl();return t}var i=this.curve.a;var n=this.curve.tinv;var a=this.x;var s=this.y;var o=this.z;var h=o.redSqr().redSqr();var u=s.redAdd(s);for(var r=0;r<e;r++){var d=a.redSqr();var c=u.redSqr();var l=c.redSqr();var p=d.redAdd(d).redIAdd(d).redIAdd(i.redMul(h));var v=a.redMul(c);var b=p.redSqr().redISub(v.redAdd(v));var m=v.redISub(b);var y=p.redMul(m);y=y.redIAdd(y).redISub(l);var g=u.redMul(o);if(r+1<e)h=h.redMul(l);a=b;o=g;u=y}return this.curve.jpoint(a,u.redMul(n),o)};JPoint.prototype.dbl=function dbl(){if(this.isInfinity())return this;if(this.curve.zeroA)return this._zeroDbl();else if(this.curve.threeA)return this._threeDbl();else return this._dbl()};JPoint.prototype._zeroDbl=function _zeroDbl(){var e;var t;var r;if(this.zOne){var i=this.x.redSqr();var n=this.y.redSqr();var a=n.redSqr();var s=this.x.redAdd(n).redSqr().redISub(i).redISub(a);s=s.redIAdd(s);var o=i.redAdd(i).redIAdd(i);var h=o.redSqr().redISub(s).redISub(s);var u=a.redIAdd(a);u=u.redIAdd(u);u=u.redIAdd(u);e=h;t=o.redMul(s.redISub(h)).redISub(u);r=this.y.redAdd(this.y)}else{var d=this.x.redSqr();var c=this.y.redSqr();var l=c.redSqr();var p=this.x.redAdd(c).redSqr().redISub(d).redISub(l);p=p.redIAdd(p);var v=d.redAdd(d).redIAdd(d);var b=v.redSqr();var m=l.redIAdd(l);m=m.redIAdd(m);m=m.redIAdd(m);e=b.redISub(p).redISub(p);t=v.redMul(p.redISub(e)).redISub(m);r=this.y.redMul(this.z);r=r.redIAdd(r)}return this.curve.jpoint(e,t,r)};JPoint.prototype._threeDbl=function _threeDbl(){var e;var t;var r;if(this.zOne){var i=this.x.redSqr();var n=this.y.redSqr();var a=n.redSqr();var s=this.x.redAdd(n).redSqr().redISub(i).redISub(a);s=s.redIAdd(s);var o=i.redAdd(i).redIAdd(i).redIAdd(this.curve.a);var h=o.redSqr().redISub(s).redISub(s);e=h;var u=a.redIAdd(a);u=u.redIAdd(u);u=u.redIAdd(u);t=o.redMul(s.redISub(h)).redISub(u);r=this.y.redAdd(this.y)}else{var d=this.z.redSqr();var c=this.y.redSqr();var l=this.x.redMul(c);var p=this.x.redSub(d).redMul(this.x.redAdd(d));p=p.redAdd(p).redIAdd(p);var v=l.redIAdd(l);v=v.redIAdd(v);var b=v.redAdd(v);e=p.redSqr().redISub(b);r=this.y.redAdd(this.z).redSqr().redISub(c).redISub(d);var m=c.redSqr();m=m.redIAdd(m);m=m.redIAdd(m);m=m.redIAdd(m);t=p.redMul(v.redISub(e)).redISub(m)}return this.curve.jpoint(e,t,r)};JPoint.prototype._dbl=function _dbl(){var e=this.curve.a;var t=this.x;var r=this.y;var i=this.z;var n=i.redSqr().redSqr();var a=t.redSqr();var s=r.redSqr();var o=a.redAdd(a).redIAdd(a).redIAdd(e.redMul(n));var h=t.redAdd(t);h=h.redIAdd(h);var u=h.redMul(s);var d=o.redSqr().redISub(u.redAdd(u));var c=u.redISub(d);var l=s.redSqr();l=l.redIAdd(l);l=l.redIAdd(l);l=l.redIAdd(l);var p=o.redMul(c).redISub(l);var v=r.redAdd(r).redMul(i);return this.curve.jpoint(d,p,v)};JPoint.prototype.trpl=function trpl(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr();var t=this.y.redSqr();var r=this.z.redSqr();var i=t.redSqr();var n=e.redAdd(e).redIAdd(e);var a=n.redSqr();var s=this.x.redAdd(t).redSqr().redISub(e).redISub(i);s=s.redIAdd(s);s=s.redAdd(s).redIAdd(s);s=s.redISub(a);var o=s.redSqr();var h=i.redIAdd(i);h=h.redIAdd(h);h=h.redIAdd(h);h=h.redIAdd(h);var u=n.redIAdd(s).redSqr().redISub(a).redISub(o).redISub(h);var d=t.redMul(u);d=d.redIAdd(d);d=d.redIAdd(d);var c=this.x.redMul(o).redISub(d);c=c.redIAdd(c);c=c.redIAdd(c);var l=this.y.redMul(u.redMul(h.redISub(u)).redISub(s.redMul(o)));l=l.redIAdd(l);l=l.redIAdd(l);l=l.redIAdd(l);var p=this.z.redAdd(s).redSqr().redISub(r).redISub(o);return this.curve.jpoint(c,l,p)};JPoint.prototype.mul=function mul(e,t){e=new n(e,t);return this.curve._wnafMul(this,e)};JPoint.prototype.eq=function eq(e){if(e.type===\"affine\")return this.eq(e.toJ());if(this===e)return true;var t=this.z.redSqr();var r=e.z.redSqr();if(this.x.redMul(r).redISub(e.x.redMul(t)).cmpn(0)!==0)return false;var i=t.redMul(this.z);var n=r.redMul(e.z);return this.y.redMul(n).redISub(e.y.redMul(i)).cmpn(0)===0};JPoint.prototype.eqXToP=function eqXToP(e){var t=this.z.redSqr();var r=e.toRed(this.curve.red).redMul(t);if(this.x.cmp(r)===0)return true;var i=e.clone();var n=this.curve.redN.redMul(t);for(;;){i.iadd(this.curve.n);if(i.cmp(this.curve.p)>=0)return false;r.redIAdd(n);if(this.x.cmp(r)===0)return true}};JPoint.prototype.inspect=function inspect(){if(this.isInfinity())return\"<EC JPoint Infinity>\";return\"<EC JPoint x: \"+this.x.toString(16,2)+\" y: \"+this.y.toString(16,2)+\" z: \"+this.z.toString(16,2)+\">\"};JPoint.prototype.isInfinity=function isInfinity(){return this.z.cmpn(0)===0}},6226:function(e,t,r){\"use strict\";var i=t;var n=r(7028);var a=r(9359);var s=r(4401);var o=s.assert;function PresetCurve(e){if(e.type===\"short\")this.curve=new a.short(e);else if(e.type===\"edwards\")this.curve=new a.edwards(e);else this.curve=new a.mont(e);this.g=this.curve.g;this.n=this.curve.n;this.hash=e.hash;o(this.g.validate(),\"Invalid curve\");o(this.g.mul(this.n).isInfinity(),\"Invalid curve, G*N != O\")}i.PresetCurve=PresetCurve;function defineCurve(e,t){Object.defineProperty(i,e,{configurable:true,enumerable:true,get:function(){var r=new PresetCurve(t);Object.defineProperty(i,e,{configurable:true,enumerable:true,value:r});return r}})}defineCurve(\"p192\",{type:\"short\",prime:\"p192\",p:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc\",b:\"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1\",n:\"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831\",hash:n.sha256,gRed:false,g:[\"188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012\",\"07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811\"]});defineCurve(\"p224\",{type:\"short\",prime:\"p224\",p:\"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001\",a:\"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe\",b:\"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4\",n:\"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d\",hash:n.sha256,gRed:false,g:[\"b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21\",\"bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34\"]});defineCurve(\"p256\",{type:\"short\",prime:null,p:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff\",a:\"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc\",b:\"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b\",n:\"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551\",hash:n.sha256,gRed:false,g:[\"6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296\",\"4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5\"]});defineCurve(\"p384\",{type:\"short\",prime:null,p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"fffffffe ffffffff 00000000 00000000 ffffffff\",a:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"fffffffe ffffffff 00000000 00000000 fffffffc\",b:\"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f \"+\"5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef\",n:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 \"+\"f4372ddf 581a0db2 48b0a77a ecec196a ccc52973\",hash:n.sha384,gRed:false,g:[\"aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 \"+\"5502f25d bf55296c 3a545e38 72760ab7\",\"3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 \"+\"0a60b1ce 1d7e819d 7a431d7c 90ea0e5f\"]});defineCurve(\"p521\",{type:\"short\",prime:null,p:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff ffffffff\",a:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff ffffffff ffffffff fffffffc\",b:\"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b \"+\"99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd \"+\"3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00\",n:\"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff \"+\"ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 \"+\"f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409\",hash:n.sha512,gRed:false,g:[\"000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 \"+\"053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 \"+\"a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66\",\"00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 \"+\"579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 \"+\"3fad0761 353c7086 a272c240 88be9476 9fd16650\"]});defineCurve(\"curve25519\",{type:\"mont\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"76d06\",b:\"1\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:n.sha256,gRed:false,g:[\"9\"]});defineCurve(\"ed25519\",{type:\"edwards\",prime:\"p25519\",p:\"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed\",a:\"-1\",c:\"1\",d:\"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3\",n:\"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed\",hash:n.sha256,gRed:false,g:[\"216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a\",\"6666666666666666666666666666666666666666666666666666666666666658\"]});var h;try{h=r(9702)}catch(e){h=undefined}defineCurve(\"secp256k1\",{type:\"short\",prime:\"k256\",p:\"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f\",a:\"0\",b:\"7\",n:\"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141\",h:\"1\",hash:n.sha256,beta:\"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee\",lambda:\"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72\",basis:[{a:\"3086d221a7d46bcde86c90e49284eb15\",b:\"-e4437ed6010e88286f547fa90abfe4c3\"},{a:\"114ca50f7a8e2f3f657c1108d9d44cfd8\",b:\"3086d221a7d46bcde86c90e49284eb15\"}],gRed:false,g:[\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\"483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8\",h]})},4088:function(e,t,r){\"use strict\";var i=r(711);var n=r(4910);var a=r(4401);var s=r(6226);var o=r(3500);var h=a.assert;var u=r(4724);var d=r(7526);function EC(e){if(!(this instanceof EC))return new EC(e);if(typeof e===\"string\"){h(s.hasOwnProperty(e),\"Unknown curve \"+e);e=s[e]}if(e instanceof s.PresetCurve)e={curve:e};this.curve=e.curve.curve;this.n=this.curve.n;this.nh=this.n.ushrn(1);this.g=this.curve.g;this.g=e.curve.g;this.g.precompute(e.curve.n.bitLength()+1);this.hash=e.hash||e.curve.hash}e.exports=EC;EC.prototype.keyPair=function keyPair(e){return new u(this,e)};EC.prototype.keyFromPrivate=function keyFromPrivate(e,t){return u.fromPrivate(this,e,t)};EC.prototype.keyFromPublic=function keyFromPublic(e,t){return u.fromPublic(this,e,t)};EC.prototype.genKeyPair=function genKeyPair(e){if(!e)e={};var t=new n({hash:this.hash,pers:e.pers,persEnc:e.persEnc||\"utf8\",entropy:e.entropy||o(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||\"utf8\",nonce:this.n.toArray()});var r=this.n.byteLength();var a=this.n.sub(new i(2));do{var s=new i(t.generate(r));if(s.cmp(a)>0)continue;s.iaddn(1);return this.keyFromPrivate(s)}while(true)};EC.prototype._truncateToN=function truncateToN(e,t){var r=e.byteLength()*8-this.n.bitLength();if(r>0)e=e.ushrn(r);if(!t&&e.cmp(this.n)>=0)return e.sub(this.n);else return e};EC.prototype.sign=function sign(e,t,r,a){if(typeof r===\"object\"){a=r;r=null}if(!a)a={};t=this.keyFromPrivate(t,r);e=this._truncateToN(new i(e,16));var s=this.n.byteLength();var o=t.getPrivate().toArray(\"be\",s);var h=e.toArray(\"be\",s);var u=new n({hash:this.hash,entropy:o,nonce:h,pers:a.pers,persEnc:a.persEnc||\"utf8\"});var c=this.n.sub(new i(1));for(var l=0;true;l++){var p=a.k?a.k(l):new i(u.generate(this.n.byteLength()));p=this._truncateToN(p,true);if(p.cmpn(1)<=0||p.cmp(c)>=0)continue;var v=this.g.mul(p);if(v.isInfinity())continue;var b=v.getX();var m=b.umod(this.n);if(m.cmpn(0)===0)continue;var y=p.invm(this.n).mul(m.mul(t.getPrivate()).iadd(e));y=y.umod(this.n);if(y.cmpn(0)===0)continue;var g=(v.getY().isOdd()?1:0)|(b.cmp(m)!==0?2:0);if(a.canonical&&y.cmp(this.nh)>0){y=this.n.sub(y);g^=1}return new d({r:m,s:y,recoveryParam:g})}};EC.prototype.verify=function verify(e,t,r,n){e=this._truncateToN(new i(e,16));r=this.keyFromPublic(r,n);t=new d(t,\"hex\");var a=t.r;var s=t.s;if(a.cmpn(1)<0||a.cmp(this.n)>=0)return false;if(s.cmpn(1)<0||s.cmp(this.n)>=0)return false;var o=s.invm(this.n);var h=o.mul(e).umod(this.n);var u=o.mul(a).umod(this.n);if(!this.curve._maxwellTrick){var c=this.g.mulAdd(h,r.getPublic(),u);if(c.isInfinity())return false;return c.getX().umod(this.n).cmp(a)===0}var c=this.g.jmulAdd(h,r.getPublic(),u);if(c.isInfinity())return false;return c.eqXToP(a)};EC.prototype.recoverPubKey=function(e,t,r,n){h((3&r)===r,\"The recovery param is more than two bits\");t=new d(t,n);var a=this.n;var s=new i(e);var o=t.r;var u=t.s;var c=r&1;var l=r>>1;if(o.cmp(this.curve.p.umod(this.curve.n))>=0&&l)throw new Error(\"Unable to find sencond key candinate\");if(l)o=this.curve.pointFromX(o.add(this.curve.n),c);else o=this.curve.pointFromX(o,c);var p=t.r.invm(a);var v=a.sub(s).mul(p).umod(a);var b=u.mul(p).umod(a);return this.g.mulAdd(v,o,b)};EC.prototype.getKeyRecoveryParam=function(e,t,r,i){t=new d(t,i);if(t.recoveryParam!==null)return t.recoveryParam;for(var n=0;n<4;n++){var a;try{a=this.recoverPubKey(e,t,n)}catch(e){continue}if(a.eq(r))return n}throw new Error(\"Unable to find valid recovery factor\")}},4724:function(e,t,r){\"use strict\";var i=r(711);var n=r(4401);var a=n.assert;function KeyPair(e,t){this.ec=e;this.priv=null;this.pub=null;if(t.priv)this._importPrivate(t.priv,t.privEnc);if(t.pub)this._importPublic(t.pub,t.pubEnc)}e.exports=KeyPair;KeyPair.fromPublic=function fromPublic(e,t,r){if(t instanceof KeyPair)return t;return new KeyPair(e,{pub:t,pubEnc:r})};KeyPair.fromPrivate=function fromPrivate(e,t,r){if(t instanceof KeyPair)return t;return new KeyPair(e,{priv:t,privEnc:r})};KeyPair.prototype.validate=function validate(){var e=this.getPublic();if(e.isInfinity())return{result:false,reason:\"Invalid public key\"};if(!e.validate())return{result:false,reason:\"Public key is not a point\"};if(!e.mul(this.ec.curve.n).isInfinity())return{result:false,reason:\"Public key * N != O\"};return{result:true,reason:null}};KeyPair.prototype.getPublic=function getPublic(e,t){if(typeof e===\"string\"){t=e;e=null}if(!this.pub)this.pub=this.ec.g.mul(this.priv);if(!t)return this.pub;return this.pub.encode(t,e)};KeyPair.prototype.getPrivate=function getPrivate(e){if(e===\"hex\")return this.priv.toString(16,2);else return this.priv};KeyPair.prototype._importPrivate=function _importPrivate(e,t){this.priv=new i(e,t||16);this.priv=this.priv.umod(this.ec.curve.n)};KeyPair.prototype._importPublic=function _importPublic(e,t){if(e.x||e.y){if(this.ec.curve.type===\"mont\"){a(e.x,\"Need x coordinate\")}else if(this.ec.curve.type===\"short\"||this.ec.curve.type===\"edwards\"){a(e.x&&e.y,\"Need both x and y coordinate\")}this.pub=this.ec.curve.point(e.x,e.y);return}this.pub=this.ec.curve.decodePoint(e,t)};KeyPair.prototype.derive=function derive(e){return e.mul(this.priv).getX()};KeyPair.prototype.sign=function sign(e,t,r){return this.ec.sign(e,this,t,r)};KeyPair.prototype.verify=function verify(e,t){return this.ec.verify(e,t,this)};KeyPair.prototype.inspect=function inspect(){return\"<Key priv: \"+(this.priv&&this.priv.toString(16,2))+\" pub: \"+(this.pub&&this.pub.inspect())+\" >\"}},7526:function(e,t,r){\"use strict\";var i=r(711);var n=r(4401);var a=n.assert;function Signature(e,t){if(e instanceof Signature)return e;if(this._importDER(e,t))return;a(e.r&&e.s,\"Signature without r or s\");this.r=new i(e.r,16);this.s=new i(e.s,16);if(e.recoveryParam===undefined)this.recoveryParam=null;else this.recoveryParam=e.recoveryParam}e.exports=Signature;function Position(){this.place=0}function getLength(e,t){var r=e[t.place++];if(!(r&128)){return r}var i=r&15;if(i===0||i>4){return false}var n=0;for(var a=0,s=t.place;a<i;a++,s++){n<<=8;n|=e[s];n>>>=0}if(n<=127){return false}t.place=s;return n}function rmPadding(e){var t=0;var r=e.length-1;while(!e[t]&&!(e[t+1]&128)&&t<r){t++}if(t===0){return e}return e.slice(t)}Signature.prototype._importDER=function _importDER(e,t){e=n.toArray(e,t);var r=new Position;if(e[r.place++]!==48){return false}var a=getLength(e,r);if(a===false){return false}if(a+r.place!==e.length){return false}if(e[r.place++]!==2){return false}var s=getLength(e,r);if(s===false){return false}var o=e.slice(r.place,s+r.place);r.place+=s;if(e[r.place++]!==2){return false}var h=getLength(e,r);if(h===false){return false}if(e.length!==h+r.place){return false}var u=e.slice(r.place,h+r.place);if(o[0]===0){if(o[1]&128){o=o.slice(1)}else{return false}}if(u[0]===0){if(u[1]&128){u=u.slice(1)}else{return false}}this.r=new i(o);this.s=new i(u);this.recoveryParam=null;return true};function constructLength(e,t){if(t<128){e.push(t);return}var r=1+(Math.log(t)/Math.LN2>>>3);e.push(r|128);while(--r){e.push(t>>>(r<<3)&255)}e.push(t)}Signature.prototype.toDER=function toDER(e){var t=this.r.toArray();var r=this.s.toArray();if(t[0]&128)t=[0].concat(t);if(r[0]&128)r=[0].concat(r);t=rmPadding(t);r=rmPadding(r);while(!r[0]&&!(r[1]&128)){r=r.slice(1)}var i=[2];constructLength(i,t.length);i=i.concat(t);i.push(2);constructLength(i,r.length);var a=i.concat(r);var s=[48];constructLength(s,a.length);s=s.concat(a);return n.encode(s,e)}},8511:function(e,t,r){\"use strict\";var i=r(7028);var n=r(6226);var a=r(4401);var s=a.assert;var o=a.parseBytes;var h=r(9917);var u=r(9314);function EDDSA(e){s(e===\"ed25519\",\"only tested with ed25519 so far\");if(!(this instanceof EDDSA))return new EDDSA(e);var e=n[e].curve;this.curve=e;this.g=e.g;this.g.precompute(e.n.bitLength()+1);this.pointClass=e.point().constructor;this.encodingLength=Math.ceil(e.n.bitLength()/8);this.hash=i.sha512}e.exports=EDDSA;EDDSA.prototype.sign=function sign(e,t){e=o(e);var r=this.keyFromSecret(t);var i=this.hashInt(r.messagePrefix(),e);var n=this.g.mul(i);var a=this.encodePoint(n);var s=this.hashInt(a,r.pubBytes(),e).mul(r.priv());var h=i.add(s).umod(this.curve.n);return this.makeSignature({R:n,S:h,Rencoded:a})};EDDSA.prototype.verify=function verify(e,t,r){e=o(e);t=this.makeSignature(t);var i=this.keyFromPublic(r);var n=this.hashInt(t.Rencoded(),i.pubBytes(),e);var a=this.g.mul(t.S());var s=t.R().add(i.pub().mul(n));return s.eq(a)};EDDSA.prototype.hashInt=function hashInt(){var e=this.hash();for(var t=0;t<arguments.length;t++)e.update(arguments[t]);return a.intFromLE(e.digest()).umod(this.curve.n)};EDDSA.prototype.keyFromPublic=function keyFromPublic(e){return h.fromPublic(this,e)};EDDSA.prototype.keyFromSecret=function keyFromSecret(e){return h.fromSecret(this,e)};EDDSA.prototype.makeSignature=function makeSignature(e){if(e instanceof u)return e;return new u(this,e)};EDDSA.prototype.encodePoint=function encodePoint(e){var t=e.getY().toArray(\"le\",this.encodingLength);t[this.encodingLength-1]|=e.getX().isOdd()?128:0;return t};EDDSA.prototype.decodePoint=function decodePoint(e){e=a.parseBytes(e);var t=e.length-1;var r=e.slice(0,t).concat(e[t]&~128);var i=(e[t]&128)!==0;var n=a.intFromLE(r);return this.curve.pointFromY(n,i)};EDDSA.prototype.encodeInt=function encodeInt(e){return e.toArray(\"le\",this.encodingLength)};EDDSA.prototype.decodeInt=function decodeInt(e){return a.intFromLE(e)};EDDSA.prototype.isPoint=function isPoint(e){return e instanceof this.pointClass}},9917:function(e,t,r){\"use strict\";var i=r(4401);var n=i.assert;var a=i.parseBytes;var s=i.cachedProperty;function KeyPair(e,t){this.eddsa=e;this._secret=a(t.secret);if(e.isPoint(t.pub))this._pub=t.pub;else this._pubBytes=a(t.pub)}KeyPair.fromPublic=function fromPublic(e,t){if(t instanceof KeyPair)return t;return new KeyPair(e,{pub:t})};KeyPair.fromSecret=function fromSecret(e,t){if(t instanceof KeyPair)return t;return new KeyPair(e,{secret:t})};KeyPair.prototype.secret=function secret(){return this._secret};s(KeyPair,\"pubBytes\",(function pubBytes(){return this.eddsa.encodePoint(this.pub())}));s(KeyPair,\"pub\",(function pub(){if(this._pubBytes)return this.eddsa.decodePoint(this._pubBytes);return this.eddsa.g.mul(this.priv())}));s(KeyPair,\"privBytes\",(function privBytes(){var e=this.eddsa;var t=this.hash();var r=e.encodingLength-1;var i=t.slice(0,e.encodingLength);i[0]&=248;i[r]&=127;i[r]|=64;return i}));s(KeyPair,\"priv\",(function priv(){return this.eddsa.decodeInt(this.privBytes())}));s(KeyPair,\"hash\",(function hash(){return this.eddsa.hash().update(this.secret()).digest()}));s(KeyPair,\"messagePrefix\",(function messagePrefix(){return this.hash().slice(this.eddsa.encodingLength)}));KeyPair.prototype.sign=function sign(e){n(this._secret,\"KeyPair can only verify\");return this.eddsa.sign(e,this)};KeyPair.prototype.verify=function verify(e,t){return this.eddsa.verify(e,t,this)};KeyPair.prototype.getSecret=function getSecret(e){n(this._secret,\"KeyPair is public only\");return i.encode(this.secret(),e)};KeyPair.prototype.getPublic=function getPublic(e){return i.encode(this.pubBytes(),e)};e.exports=KeyPair},9314:function(e,t,r){\"use strict\";var i=r(711);var n=r(4401);var a=n.assert;var s=n.cachedProperty;var o=n.parseBytes;function Signature(e,t){this.eddsa=e;if(typeof t!==\"object\")t=o(t);if(Array.isArray(t)){t={R:t.slice(0,e.encodingLength),S:t.slice(e.encodingLength)}}a(t.R&&t.S,\"Signature without R or S\");if(e.isPoint(t.R))this._R=t.R;if(t.S instanceof i)this._S=t.S;this._Rencoded=Array.isArray(t.R)?t.R:t.Rencoded;this._Sencoded=Array.isArray(t.S)?t.S:t.Sencoded}s(Signature,\"S\",(function S(){return this.eddsa.decodeInt(this.Sencoded())}));s(Signature,\"R\",(function R(){return this.eddsa.decodePoint(this.Rencoded())}));s(Signature,\"Rencoded\",(function Rencoded(){return this.eddsa.encodePoint(this.R())}));s(Signature,\"Sencoded\",(function Sencoded(){return this.eddsa.encodeInt(this.S())}));Signature.prototype.toBytes=function toBytes(){return this.Rencoded().concat(this.Sencoded())};Signature.prototype.toHex=function toHex(){return n.encode(this.toBytes(),\"hex\").toUpperCase()};e.exports=Signature},9702:function(e){e.exports={doubles:{step:4,points:[[\"e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a\",\"f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821\"],[\"8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508\",\"11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf\"],[\"175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739\",\"d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695\"],[\"363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640\",\"4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9\"],[\"8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c\",\"4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36\"],[\"723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda\",\"96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f\"],[\"eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa\",\"5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999\"],[\"100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0\",\"cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09\"],[\"e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d\",\"9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d\"],[\"feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d\",\"e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088\"],[\"da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1\",\"9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d\"],[\"53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0\",\"5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8\"],[\"8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047\",\"10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a\"],[\"385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862\",\"283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453\"],[\"6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7\",\"7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160\"],[\"3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd\",\"56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0\"],[\"85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83\",\"7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6\"],[\"948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a\",\"53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589\"],[\"6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8\",\"bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17\"],[\"e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d\",\"4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda\"],[\"e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725\",\"7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd\"],[\"213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754\",\"4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2\"],[\"4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c\",\"17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6\"],[\"fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6\",\"6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f\"],[\"76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39\",\"c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01\"],[\"c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891\",\"893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3\"],[\"d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b\",\"febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f\"],[\"b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03\",\"2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7\"],[\"e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d\",\"eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78\"],[\"a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070\",\"7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1\"],[\"90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4\",\"e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150\"],[\"8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da\",\"662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82\"],[\"e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11\",\"1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc\"],[\"8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e\",\"efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b\"],[\"e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41\",\"2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51\"],[\"b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef\",\"67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45\"],[\"d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8\",\"db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120\"],[\"324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d\",\"648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84\"],[\"4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96\",\"35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d\"],[\"9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd\",\"ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d\"],[\"6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5\",\"9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8\"],[\"a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266\",\"40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8\"],[\"7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71\",\"34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac\"],[\"928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac\",\"c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f\"],[\"85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751\",\"1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962\"],[\"ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e\",\"493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907\"],[\"827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241\",\"c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec\"],[\"eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3\",\"be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d\"],[\"e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f\",\"4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414\"],[\"1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19\",\"aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd\"],[\"146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be\",\"b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0\"],[\"fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9\",\"6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811\"],[\"da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2\",\"8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1\"],[\"a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13\",\"7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c\"],[\"174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c\",\"ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73\"],[\"959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba\",\"2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd\"],[\"d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151\",\"e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405\"],[\"64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073\",\"d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589\"],[\"8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458\",\"38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e\"],[\"13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b\",\"69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27\"],[\"bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366\",\"d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1\"],[\"8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa\",\"40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482\"],[\"8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0\",\"620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945\"],[\"dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787\",\"7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573\"],[\"f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e\",\"ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82\"]]},naf:{wnd:7,points:[[\"f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9\",\"388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672\"],[\"2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4\",\"d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6\"],[\"5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc\",\"6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da\"],[\"acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe\",\"cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37\"],[\"774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb\",\"d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b\"],[\"f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8\",\"ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81\"],[\"d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e\",\"581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58\"],[\"defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34\",\"4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77\"],[\"2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c\",\"85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a\"],[\"352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5\",\"321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c\"],[\"2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f\",\"2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67\"],[\"9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714\",\"73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402\"],[\"daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729\",\"a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55\"],[\"c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db\",\"2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482\"],[\"6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4\",\"e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82\"],[\"1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5\",\"b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396\"],[\"605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479\",\"2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49\"],[\"62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d\",\"80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf\"],[\"80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f\",\"1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a\"],[\"7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb\",\"d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7\"],[\"d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9\",\"eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933\"],[\"49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963\",\"758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a\"],[\"77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74\",\"958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6\"],[\"f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530\",\"e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37\"],[\"463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b\",\"5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e\"],[\"f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247\",\"cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6\"],[\"caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1\",\"cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476\"],[\"2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120\",\"4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40\"],[\"7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435\",\"91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61\"],[\"754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18\",\"673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683\"],[\"e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8\",\"59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5\"],[\"186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb\",\"3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b\"],[\"df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f\",\"55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417\"],[\"5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143\",\"efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868\"],[\"290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba\",\"e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a\"],[\"af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45\",\"f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6\"],[\"766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a\",\"744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996\"],[\"59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e\",\"c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e\"],[\"f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8\",\"e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d\"],[\"7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c\",\"30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2\"],[\"948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519\",\"e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e\"],[\"7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab\",\"100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437\"],[\"3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca\",\"ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311\"],[\"d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf\",\"8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4\"],[\"1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610\",\"68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575\"],[\"733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4\",\"f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d\"],[\"15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c\",\"d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d\"],[\"a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940\",\"edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629\"],[\"e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980\",\"a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06\"],[\"311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3\",\"66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374\"],[\"34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf\",\"9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee\"],[\"f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63\",\"4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1\"],[\"d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448\",\"fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b\"],[\"32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf\",\"5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661\"],[\"7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5\",\"8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6\"],[\"ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6\",\"8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e\"],[\"16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5\",\"5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d\"],[\"eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99\",\"f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc\"],[\"78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51\",\"f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4\"],[\"494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5\",\"42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c\"],[\"a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5\",\"204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b\"],[\"c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997\",\"4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913\"],[\"841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881\",\"73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154\"],[\"5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5\",\"39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865\"],[\"36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66\",\"d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc\"],[\"336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726\",\"ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224\"],[\"8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede\",\"6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e\"],[\"1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94\",\"60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6\"],[\"85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31\",\"3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511\"],[\"29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51\",\"b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b\"],[\"a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252\",\"ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2\"],[\"4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5\",\"cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c\"],[\"d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b\",\"6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3\"],[\"ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4\",\"322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d\"],[\"af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f\",\"6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700\"],[\"e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889\",\"2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4\"],[\"591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246\",\"b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196\"],[\"11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984\",\"998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4\"],[\"3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a\",\"b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257\"],[\"cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030\",\"bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13\"],[\"c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197\",\"6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096\"],[\"c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593\",\"c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38\"],[\"a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef\",\"21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f\"],[\"347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38\",\"60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448\"],[\"da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a\",\"49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a\"],[\"c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111\",\"5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4\"],[\"4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502\",\"7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437\"],[\"3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea\",\"be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7\"],[\"cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26\",\"8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d\"],[\"b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986\",\"39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a\"],[\"d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e\",\"62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54\"],[\"48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4\",\"25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77\"],[\"dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda\",\"ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517\"],[\"6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859\",\"cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10\"],[\"e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f\",\"f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125\"],[\"eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c\",\"6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e\"],[\"13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942\",\"fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1\"],[\"ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a\",\"1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2\"],[\"b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80\",\"5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423\"],[\"ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d\",\"438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8\"],[\"8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1\",\"cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758\"],[\"52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63\",\"c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375\"],[\"e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352\",\"6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d\"],[\"7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193\",\"ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec\"],[\"5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00\",\"9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0\"],[\"32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58\",\"ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c\"],[\"e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7\",\"d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4\"],[\"8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8\",\"c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f\"],[\"4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e\",\"67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649\"],[\"3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d\",\"cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826\"],[\"674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b\",\"299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5\"],[\"d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f\",\"f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87\"],[\"30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6\",\"462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b\"],[\"be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297\",\"62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc\"],[\"93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a\",\"7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c\"],[\"b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c\",\"ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f\"],[\"d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52\",\"4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a\"],[\"d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb\",\"bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46\"],[\"463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065\",\"bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f\"],[\"7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917\",\"603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03\"],[\"74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9\",\"cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08\"],[\"30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3\",\"553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8\"],[\"9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57\",\"712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373\"],[\"176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66\",\"ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3\"],[\"75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8\",\"9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8\"],[\"809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721\",\"9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1\"],[\"1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180\",\"4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9\"]]}}},4401:function(e,t,r){\"use strict\";var i=t;var n=r(711);var a=r(3523);var s=r(6545);i.assert=a;i.toArray=s.toArray;i.zero2=s.zero2;i.toHex=s.toHex;i.encode=s.encode;function getNAF(e,t,r){var i=new Array(Math.max(e.bitLength(),r)+1);i.fill(0);var n=1<<t+1;var a=e.clone();for(var s=0;s<i.length;s++){var o;var h=a.andln(n-1);if(a.isOdd()){if(h>(n>>1)-1)o=(n>>1)-h;else o=h;a.isubn(o)}else{o=0}i[s]=o;a.iushrn(1)}return i}i.getNAF=getNAF;function getJSF(e,t){var r=[[],[]];e=e.clone();t=t.clone();var i=0;var n=0;while(e.cmpn(-i)>0||t.cmpn(-n)>0){var a=e.andln(3)+i&3;var s=t.andln(3)+n&3;if(a===3)a=-1;if(s===3)s=-1;var o;if((a&1)===0){o=0}else{var h=e.andln(7)+i&7;if((h===3||h===5)&&s===2)o=-a;else o=a}r[0].push(o);var u;if((s&1)===0){u=0}else{var h=t.andln(7)+n&7;if((h===3||h===5)&&a===2)u=-s;else u=s}r[1].push(u);if(2*i===o+1)i=1-i;if(2*n===u+1)n=1-n;e.iushrn(1);t.iushrn(1)}return r}i.getJSF=getJSF;function cachedProperty(e,t,r){var i=\"_\"+t;e.prototype[t]=function cachedProperty(){return this[i]!==undefined?this[i]:this[i]=r.call(this)}}i.cachedProperty=cachedProperty;function parseBytes(e){return typeof e===\"string\"?i.toArray(e,\"hex\"):e}i.parseBytes=parseBytes;function intFromLE(e){return new n(e,\"hex\",\"le\")}i.intFromLE=intFromLE},8368:function(e,t,r){var i=r(6911).Buffer;var n=r(3533);function EVP_BytesToKey(e,t,r,a){if(!i.isBuffer(e))e=i.from(e,\"binary\");if(t){if(!i.isBuffer(t))t=i.from(t,\"binary\");if(t.length!==8)throw new RangeError(\"salt should be Buffer with 8 byte length\")}var s=r/8;var o=i.alloc(s);var h=i.alloc(a||0);var u=i.alloc(0);while(s>0||a>0){var d=new n;d.update(u);d.update(e);if(t)d.update(t);u=d.digest();var c=0;if(s>0){var l=o.length-s;c=Math.min(s,u.length);u.copy(o,l,0,c);s-=c}if(c<u.length&&a>0){var p=h.length-a;var v=Math.min(a,u.length-c);u.copy(h,p,c,c+v);a-=v}}u.fill(0);return{key:o,iv:h}}e.exports=EVP_BytesToKey},9029:function(e,t,r){\"use strict\";var i=r(6911).Buffer;var n=r(3726).Transform;var a=r(3782);function throwIfNotStringOrBuffer(e,t){if(!i.isBuffer(e)&&typeof e!==\"string\"){throw new TypeError(t+\" must be a string or a buffer\")}}function HashBase(e){n.call(this);this._block=i.allocUnsafe(e);this._blockSize=e;this._blockOffset=0;this._length=[0,0,0,0];this._finalized=false}a(HashBase,n);HashBase.prototype._transform=function(e,t,r){var i=null;try{this.update(e,t)}catch(e){i=e}r(i)};HashBase.prototype._flush=function(e){var t=null;try{this.push(this.digest())}catch(e){t=e}e(t)};HashBase.prototype.update=function(e,t){throwIfNotStringOrBuffer(e,\"Data\");if(this._finalized)throw new Error(\"Digest already called\");if(!i.isBuffer(e))e=i.from(e,t);var r=this._block;var n=0;while(this._blockOffset+e.length-n>=this._blockSize){for(var a=this._blockOffset;a<this._blockSize;)r[a++]=e[n++];this._update();this._blockOffset=0}while(n<e.length)r[this._blockOffset++]=e[n++];for(var s=0,o=e.length*8;o>0;++s){this._length[s]+=o;o=this._length[s]/4294967296|0;if(o>0)this._length[s]-=4294967296*o}return this};HashBase.prototype._update=function(){throw new Error(\"_update is not implemented\")};HashBase.prototype.digest=function(e){if(this._finalized)throw new Error(\"Digest already called\");this._finalized=true;var t=this._digest();if(e!==undefined)t=t.toString(e);this._block.fill(0);this._blockOffset=0;for(var r=0;r<4;++r)this._length[r]=0;return t};HashBase.prototype._digest=function(){throw new Error(\"_digest is not implemented\")};e.exports=HashBase},7028:function(e,t,r){var i=t;i.utils=r(263);i.common=r(1330);i.sha=r(301);i.ripemd=r(3079);i.hmac=r(3092);i.sha1=i.sha.sha1;i.sha256=i.sha.sha256;i.sha224=i.sha.sha224;i.sha384=i.sha.sha384;i.sha512=i.sha.sha512;i.ripemd160=i.ripemd.ripemd160},1330:function(e,t,r){\"use strict\";var i=r(263);var n=r(3523);function BlockHash(){this.pending=null;this.pendingTotal=0;this.blockSize=this.constructor.blockSize;this.outSize=this.constructor.outSize;this.hmacStrength=this.constructor.hmacStrength;this.padLength=this.constructor.padLength/8;this.endian=\"big\";this._delta8=this.blockSize/8;this._delta32=this.blockSize/32}t.BlockHash=BlockHash;BlockHash.prototype.update=function update(e,t){e=i.toArray(e,t);if(!this.pending)this.pending=e;else this.pending=this.pending.concat(e);this.pendingTotal+=e.length;if(this.pending.length>=this._delta8){e=this.pending;var r=e.length%this._delta8;this.pending=e.slice(e.length-r,e.length);if(this.pending.length===0)this.pending=null;e=i.join32(e,0,e.length-r,this.endian);for(var n=0;n<e.length;n+=this._delta32)this._update(e,n,n+this._delta32)}return this};BlockHash.prototype.digest=function digest(e){this.update(this._pad());n(this.pending===null);return this._digest(e)};BlockHash.prototype._pad=function pad(){var e=this.pendingTotal;var t=this._delta8;var r=t-(e+this.padLength)%t;var i=new Array(r+this.padLength);i[0]=128;for(var n=1;n<r;n++)i[n]=0;e<<=3;if(this.endian===\"big\"){for(var a=8;a<this.padLength;a++)i[n++]=0;i[n++]=0;i[n++]=0;i[n++]=0;i[n++]=0;i[n++]=e>>>24&255;i[n++]=e>>>16&255;i[n++]=e>>>8&255;i[n++]=e&255}else{i[n++]=e&255;i[n++]=e>>>8&255;i[n++]=e>>>16&255;i[n++]=e>>>24&255;i[n++]=0;i[n++]=0;i[n++]=0;i[n++]=0;for(a=8;a<this.padLength;a++)i[n++]=0}return i}},3092:function(e,t,r){\"use strict\";var i=r(263);var n=r(3523);function Hmac(e,t,r){if(!(this instanceof Hmac))return new Hmac(e,t,r);this.Hash=e;this.blockSize=e.blockSize/8;this.outSize=e.outSize/8;this.inner=null;this.outer=null;this._init(i.toArray(t,r))}e.exports=Hmac;Hmac.prototype._init=function init(e){if(e.length>this.blockSize)e=(new this.Hash).update(e).digest();n(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;this.inner=(new this.Hash).update(e);for(t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e)};Hmac.prototype.update=function update(e,t){this.inner.update(e,t);return this};Hmac.prototype.digest=function digest(e){this.outer.update(this.inner.digest());return this.outer.digest(e)}},3079:function(e,t,r){\"use strict\";var i=r(263);var n=r(1330);var a=i.rotl32;var s=i.sum32;var o=i.sum32_3;var h=i.sum32_4;var u=n.BlockHash;function RIPEMD160(){if(!(this instanceof RIPEMD160))return new RIPEMD160;u.call(this);this.h=[1732584193,4023233417,2562383102,271733878,3285377520];this.endian=\"little\"}i.inherits(RIPEMD160,u);t.ripemd160=RIPEMD160;RIPEMD160.blockSize=512;RIPEMD160.outSize=160;RIPEMD160.hmacStrength=192;RIPEMD160.padLength=64;RIPEMD160.prototype._update=function update(e,t){var r=this.h[0];var i=this.h[1];var n=this.h[2];var u=this.h[3];var v=this.h[4];var b=r;var m=i;var y=n;var g=u;var _=v;for(var w=0;w<80;w++){var M=s(a(h(r,f(w,i,n,u),e[d[w]+t],K(w)),l[w]),v);r=v;v=u;u=a(n,10);n=i;i=M;M=s(a(h(b,f(79-w,m,y,g),e[c[w]+t],Kh(w)),p[w]),_);b=_;_=g;g=a(y,10);y=m;m=M}M=o(this.h[1],n,g);this.h[1]=o(this.h[2],u,_);this.h[2]=o(this.h[3],v,b);this.h[3]=o(this.h[4],r,m);this.h[4]=o(this.h[0],i,y);this.h[0]=M};RIPEMD160.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h,\"little\");else return i.split32(this.h,\"little\")};function f(e,t,r,i){if(e<=15)return t^r^i;else if(e<=31)return t&r|~t&i;else if(e<=47)return(t|~r)^i;else if(e<=63)return t&i|r&~i;else return t^(r|~i)}function K(e){if(e<=15)return 0;else if(e<=31)return 1518500249;else if(e<=47)return 1859775393;else if(e<=63)return 2400959708;else return 2840853838}function Kh(e){if(e<=15)return 1352829926;else if(e<=31)return 1548603684;else if(e<=47)return 1836072691;else if(e<=63)return 2053994217;else return 0}var d=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13];var c=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11];var l=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6];var p=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},301:function(e,t,r){\"use strict\";t.sha1=r(2742);t.sha224=r(7105);t.sha256=r(1525);t.sha384=r(9948);t.sha512=r(1319)},2742:function(e,t,r){\"use strict\";var i=r(263);var n=r(1330);var a=r(2975);var s=i.rotl32;var o=i.sum32;var h=i.sum32_5;var u=a.ft_1;var d=n.BlockHash;var c=[1518500249,1859775393,2400959708,3395469782];function SHA1(){if(!(this instanceof SHA1))return new SHA1;d.call(this);this.h=[1732584193,4023233417,2562383102,271733878,3285377520];this.W=new Array(80)}i.inherits(SHA1,d);e.exports=SHA1;SHA1.blockSize=512;SHA1.outSize=160;SHA1.hmacStrength=80;SHA1.padLength=64;SHA1.prototype._update=function _update(e,t){var r=this.W;for(var i=0;i<16;i++)r[i]=e[t+i];for(;i<r.length;i++)r[i]=s(r[i-3]^r[i-8]^r[i-14]^r[i-16],1);var n=this.h[0];var a=this.h[1];var d=this.h[2];var l=this.h[3];var p=this.h[4];for(i=0;i<r.length;i++){var v=~~(i/20);var b=h(s(n,5),u(v,a,d,l),p,r[i],c[v]);p=l;l=d;d=s(a,30);a=n;n=b}this.h[0]=o(this.h[0],n);this.h[1]=o(this.h[1],a);this.h[2]=o(this.h[2],d);this.h[3]=o(this.h[3],l);this.h[4]=o(this.h[4],p)};SHA1.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h,\"big\");else return i.split32(this.h,\"big\")}},7105:function(e,t,r){\"use strict\";var i=r(263);var n=r(1525);function SHA224(){if(!(this instanceof SHA224))return new SHA224;n.call(this);this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}i.inherits(SHA224,n);e.exports=SHA224;SHA224.blockSize=512;SHA224.outSize=224;SHA224.hmacStrength=192;SHA224.padLength=64;SHA224.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h.slice(0,7),\"big\");else return i.split32(this.h.slice(0,7),\"big\")}},1525:function(e,t,r){\"use strict\";var i=r(263);var n=r(1330);var a=r(2975);var s=r(3523);var o=i.sum32;var h=i.sum32_4;var u=i.sum32_5;var d=a.ch32;var c=a.maj32;var l=a.s0_256;var p=a.s1_256;var v=a.g0_256;var b=a.g1_256;var m=n.BlockHash;var y=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function SHA256(){if(!(this instanceof SHA256))return new SHA256;m.call(this);this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225];this.k=y;this.W=new Array(64)}i.inherits(SHA256,m);e.exports=SHA256;SHA256.blockSize=512;SHA256.outSize=256;SHA256.hmacStrength=192;SHA256.padLength=64;SHA256.prototype._update=function _update(e,t){var r=this.W;for(var i=0;i<16;i++)r[i]=e[t+i];for(;i<r.length;i++)r[i]=h(b(r[i-2]),r[i-7],v(r[i-15]),r[i-16]);var n=this.h[0];var a=this.h[1];var m=this.h[2];var y=this.h[3];var g=this.h[4];var _=this.h[5];var w=this.h[6];var M=this.h[7];s(this.k.length===r.length);for(i=0;i<r.length;i++){var B=u(M,p(g),d(g,_,w),this.k[i],r[i]);var E=o(l(n),c(n,a,m));M=w;w=_;_=g;g=o(y,B);y=m;m=a;a=n;n=o(B,E)}this.h[0]=o(this.h[0],n);this.h[1]=o(this.h[1],a);this.h[2]=o(this.h[2],m);this.h[3]=o(this.h[3],y);this.h[4]=o(this.h[4],g);this.h[5]=o(this.h[5],_);this.h[6]=o(this.h[6],w);this.h[7]=o(this.h[7],M)};SHA256.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h,\"big\");else return i.split32(this.h,\"big\")}},9948:function(e,t,r){\"use strict\";var i=r(263);var n=r(1319);function SHA384(){if(!(this instanceof SHA384))return new SHA384;n.call(this);this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}i.inherits(SHA384,n);e.exports=SHA384;SHA384.blockSize=1024;SHA384.outSize=384;SHA384.hmacStrength=192;SHA384.padLength=128;SHA384.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h.slice(0,12),\"big\");else return i.split32(this.h.slice(0,12),\"big\")}},1319:function(e,t,r){\"use strict\";var i=r(263);var n=r(1330);var a=r(3523);var s=i.rotr64_hi;var o=i.rotr64_lo;var h=i.shr64_hi;var u=i.shr64_lo;var d=i.sum64;var c=i.sum64_hi;var l=i.sum64_lo;var p=i.sum64_4_hi;var v=i.sum64_4_lo;var b=i.sum64_5_hi;var m=i.sum64_5_lo;var y=n.BlockHash;var g=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function SHA512(){if(!(this instanceof SHA512))return new SHA512;y.call(this);this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209];this.k=g;this.W=new Array(160)}i.inherits(SHA512,y);e.exports=SHA512;SHA512.blockSize=1024;SHA512.outSize=512;SHA512.hmacStrength=192;SHA512.padLength=128;SHA512.prototype._prepareBlock=function _prepareBlock(e,t){var r=this.W;for(var i=0;i<32;i++)r[i]=e[t+i];for(;i<r.length;i+=2){var n=g1_512_hi(r[i-4],r[i-3]);var a=g1_512_lo(r[i-4],r[i-3]);var s=r[i-14];var o=r[i-13];var h=g0_512_hi(r[i-30],r[i-29]);var u=g0_512_lo(r[i-30],r[i-29]);var d=r[i-32];var c=r[i-31];r[i]=p(n,a,s,o,h,u,d,c);r[i+1]=v(n,a,s,o,h,u,d,c)}};SHA512.prototype._update=function _update(e,t){this._prepareBlock(e,t);var r=this.W;var i=this.h[0];var n=this.h[1];var s=this.h[2];var o=this.h[3];var h=this.h[4];var u=this.h[5];var p=this.h[6];var v=this.h[7];var y=this.h[8];var g=this.h[9];var _=this.h[10];var w=this.h[11];var M=this.h[12];var B=this.h[13];var E=this.h[14];var k=this.h[15];a(this.k.length===r.length);for(var A=0;A<r.length;A+=2){var N=E;var P=k;var x=s1_512_hi(y,g);var I=s1_512_lo(y,g);var C=ch64_hi(y,g,_,w,M,B);var D=ch64_lo(y,g,_,w,M,B);var T=this.k[A];var j=this.k[A+1];var q=r[A];var O=r[A+1];var H=b(N,P,x,I,C,D,T,j,q,O);var L=m(N,P,x,I,C,D,T,j,q,O);N=s0_512_hi(i,n);P=s0_512_lo(i,n);x=maj64_hi(i,n,s,o,h,u);I=maj64_lo(i,n,s,o,h,u);var z=c(N,P,x,I);var F=l(N,P,x,I);E=M;k=B;M=_;B=w;_=y;w=g;y=c(p,v,H,L);g=l(v,v,H,L);p=h;v=u;h=s;u=o;s=i;o=n;i=c(H,L,z,F);n=l(H,L,z,F)}d(this.h,0,i,n);d(this.h,2,s,o);d(this.h,4,h,u);d(this.h,6,p,v);d(this.h,8,y,g);d(this.h,10,_,w);d(this.h,12,M,B);d(this.h,14,E,k)};SHA512.prototype._digest=function digest(e){if(e===\"hex\")return i.toHex32(this.h,\"big\");else return i.split32(this.h,\"big\")};function ch64_hi(e,t,r,i,n){var a=e&r^~e&n;if(a<0)a+=4294967296;return a}function ch64_lo(e,t,r,i,n,a){var s=t&i^~t&a;if(s<0)s+=4294967296;return s}function maj64_hi(e,t,r,i,n){var a=e&r^e&n^r&n;if(a<0)a+=4294967296;return a}function maj64_lo(e,t,r,i,n,a){var s=t&i^t&a^i&a;if(s<0)s+=4294967296;return s}function s0_512_hi(e,t){var r=s(e,t,28);var i=s(t,e,2);var n=s(t,e,7);var a=r^i^n;if(a<0)a+=4294967296;return a}function s0_512_lo(e,t){var r=o(e,t,28);var i=o(t,e,2);var n=o(t,e,7);var a=r^i^n;if(a<0)a+=4294967296;return a}function s1_512_hi(e,t){var r=s(e,t,14);var i=s(e,t,18);var n=s(t,e,9);var a=r^i^n;if(a<0)a+=4294967296;return a}function s1_512_lo(e,t){var r=o(e,t,14);var i=o(e,t,18);var n=o(t,e,9);var a=r^i^n;if(a<0)a+=4294967296;return a}function g0_512_hi(e,t){var r=s(e,t,1);var i=s(e,t,8);var n=h(e,t,7);var a=r^i^n;if(a<0)a+=4294967296;return a}function g0_512_lo(e,t){var r=o(e,t,1);var i=o(e,t,8);var n=u(e,t,7);var a=r^i^n;if(a<0)a+=4294967296;return a}function g1_512_hi(e,t){var r=s(e,t,19);var i=s(t,e,29);var n=h(e,t,6);var a=r^i^n;if(a<0)a+=4294967296;return a}function g1_512_lo(e,t){var r=o(e,t,19);var i=o(t,e,29);var n=u(e,t,6);var a=r^i^n;if(a<0)a+=4294967296;return a}},2975:function(e,t,r){\"use strict\";var i=r(263);var n=i.rotr32;function ft_1(e,t,r,i){if(e===0)return ch32(t,r,i);if(e===1||e===3)return p32(t,r,i);if(e===2)return maj32(t,r,i)}t.ft_1=ft_1;function ch32(e,t,r){return e&t^~e&r}t.ch32=ch32;function maj32(e,t,r){return e&t^e&r^t&r}t.maj32=maj32;function p32(e,t,r){return e^t^r}t.p32=p32;function s0_256(e){return n(e,2)^n(e,13)^n(e,22)}t.s0_256=s0_256;function s1_256(e){return n(e,6)^n(e,11)^n(e,25)}t.s1_256=s1_256;function g0_256(e){return n(e,7)^n(e,18)^e>>>3}t.g0_256=g0_256;function g1_256(e){return n(e,17)^n(e,19)^e>>>10}t.g1_256=g1_256},263:function(e,t,r){\"use strict\";var i=r(3523);var n=r(3782);t.inherits=n;function isSurrogatePair(e,t){if((e.charCodeAt(t)&64512)!==55296){return false}if(t<0||t+1>=e.length){return false}return(e.charCodeAt(t+1)&64512)===56320}function toArray(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if(typeof e===\"string\"){if(!t){var i=0;for(var n=0;n<e.length;n++){var a=e.charCodeAt(n);if(a<128){r[i++]=a}else if(a<2048){r[i++]=a>>6|192;r[i++]=a&63|128}else if(isSurrogatePair(e,n)){a=65536+((a&1023)<<10)+(e.charCodeAt(++n)&1023);r[i++]=a>>18|240;r[i++]=a>>12&63|128;r[i++]=a>>6&63|128;r[i++]=a&63|128}else{r[i++]=a>>12|224;r[i++]=a>>6&63|128;r[i++]=a&63|128}}}else if(t===\"hex\"){e=e.replace(/[^a-z0-9]+/gi,\"\");if(e.length%2!==0)e=\"0\"+e;for(n=0;n<e.length;n+=2)r.push(parseInt(e[n]+e[n+1],16))}}else{for(n=0;n<e.length;n++)r[n]=e[n]|0}return r}t.toArray=toArray;function toHex(e){var t=\"\";for(var r=0;r<e.length;r++)t+=zero2(e[r].toString(16));return t}t.toHex=toHex;function htonl(e){var t=e>>>24|e>>>8&65280|e<<8&16711680|(e&255)<<24;return t>>>0}t.htonl=htonl;function toHex32(e,t){var r=\"\";for(var i=0;i<e.length;i++){var n=e[i];if(t===\"little\")n=htonl(n);r+=zero8(n.toString(16))}return r}t.toHex32=toHex32;function zero2(e){if(e.length===1)return\"0\"+e;else return e}t.zero2=zero2;function zero8(e){if(e.length===7)return\"0\"+e;else if(e.length===6)return\"00\"+e;else if(e.length===5)return\"000\"+e;else if(e.length===4)return\"0000\"+e;else if(e.length===3)return\"00000\"+e;else if(e.length===2)return\"000000\"+e;else if(e.length===1)return\"0000000\"+e;else return e}t.zero8=zero8;function join32(e,t,r,n){var a=r-t;i(a%4===0);var s=new Array(a/4);for(var o=0,h=t;o<s.length;o++,h+=4){var u;if(n===\"big\")u=e[h]<<24|e[h+1]<<16|e[h+2]<<8|e[h+3];else u=e[h+3]<<24|e[h+2]<<16|e[h+1]<<8|e[h];s[o]=u>>>0}return s}t.join32=join32;function split32(e,t){var r=new Array(e.length*4);for(var i=0,n=0;i<e.length;i++,n+=4){var a=e[i];if(t===\"big\"){r[n]=a>>>24;r[n+1]=a>>>16&255;r[n+2]=a>>>8&255;r[n+3]=a&255}else{r[n+3]=a>>>24;r[n+2]=a>>>16&255;r[n+1]=a>>>8&255;r[n]=a&255}}return r}t.split32=split32;function rotr32(e,t){return e>>>t|e<<32-t}t.rotr32=rotr32;function rotl32(e,t){return e<<t|e>>>32-t}t.rotl32=rotl32;function sum32(e,t){return e+t>>>0}t.sum32=sum32;function sum32_3(e,t,r){return e+t+r>>>0}t.sum32_3=sum32_3;function sum32_4(e,t,r,i){return e+t+r+i>>>0}t.sum32_4=sum32_4;function sum32_5(e,t,r,i,n){return e+t+r+i+n>>>0}t.sum32_5=sum32_5;function sum64(e,t,r,i){var n=e[t];var a=e[t+1];var s=i+a>>>0;var o=(s<i?1:0)+r+n;e[t]=o>>>0;e[t+1]=s}t.sum64=sum64;function sum64_hi(e,t,r,i){var n=t+i>>>0;var a=(n<t?1:0)+e+r;return a>>>0}t.sum64_hi=sum64_hi;function sum64_lo(e,t,r,i){var n=t+i;return n>>>0}t.sum64_lo=sum64_lo;function sum64_4_hi(e,t,r,i,n,a,s,o){var h=0;var u=t;u=u+i>>>0;h+=u<t?1:0;u=u+a>>>0;h+=u<a?1:0;u=u+o>>>0;h+=u<o?1:0;var d=e+r+n+s+h;return d>>>0}t.sum64_4_hi=sum64_4_hi;function sum64_4_lo(e,t,r,i,n,a,s,o){var h=t+i+a+o;return h>>>0}t.sum64_4_lo=sum64_4_lo;function sum64_5_hi(e,t,r,i,n,a,s,o,h,u){var d=0;var c=t;c=c+i>>>0;d+=c<t?1:0;c=c+a>>>0;d+=c<a?1:0;c=c+o>>>0;d+=c<o?1:0;c=c+u>>>0;d+=c<u?1:0;var l=e+r+n+s+h+d;return l>>>0}t.sum64_5_hi=sum64_5_hi;function sum64_5_lo(e,t,r,i,n,a,s,o,h,u){var d=t+i+a+o+u;return d>>>0}t.sum64_5_lo=sum64_5_lo;function rotr64_hi(e,t,r){var i=t<<32-r|e>>>r;return i>>>0}t.rotr64_hi=rotr64_hi;function rotr64_lo(e,t,r){var i=e<<32-r|t>>>r;return i>>>0}t.rotr64_lo=rotr64_lo;function shr64_hi(e,t,r){return e>>>r}t.shr64_hi=shr64_hi;function shr64_lo(e,t,r){var i=e<<32-r|t>>>r;return i>>>0}t.shr64_lo=shr64_lo},4910:function(e,t,r){\"use strict\";var i=r(7028);var n=r(6545);var a=r(3523);function HmacDRBG(e){if(!(this instanceof HmacDRBG))return new HmacDRBG(e);this.hash=e.hash;this.predResist=!!e.predResist;this.outLen=this.hash.outSize;this.minEntropy=e.minEntropy||this.hash.hmacStrength;this._reseed=null;this.reseedInterval=null;this.K=null;this.V=null;var t=n.toArray(e.entropy,e.entropyEnc||\"hex\");var r=n.toArray(e.nonce,e.nonceEnc||\"hex\");var i=n.toArray(e.pers,e.persEnc||\"hex\");a(t.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\");this._init(t,r,i)}e.exports=HmacDRBG;HmacDRBG.prototype._init=function init(e,t,r){var i=e.concat(t).concat(r);this.K=new Array(this.outLen/8);this.V=new Array(this.outLen/8);for(var n=0;n<this.V.length;n++){this.K[n]=0;this.V[n]=1}this._update(i);this._reseed=1;this.reseedInterval=281474976710656};HmacDRBG.prototype._hmac=function hmac(){return new i.hmac(this.hash,this.K)};HmacDRBG.prototype._update=function update(e){var t=this._hmac().update(this.V).update([0]);if(e)t=t.update(e);this.K=t.digest();this.V=this._hmac().update(this.V).digest();if(!e)return;this.K=this._hmac().update(this.V).update([1]).update(e).digest();this.V=this._hmac().update(this.V).digest()};HmacDRBG.prototype.reseed=function reseed(e,t,r,i){if(typeof t!==\"string\"){i=r;r=t;t=null}e=n.toArray(e,t);r=n.toArray(r,i);a(e.length>=this.minEntropy/8,\"Not enough entropy. Minimum is: \"+this.minEntropy+\" bits\");this._update(e.concat(r||[]));this._reseed=1};HmacDRBG.prototype.generate=function generate(e,t,r,i){if(this._reseed>this.reseedInterval)throw new Error(\"Reseed is required\");if(typeof t!==\"string\"){i=r;r=t;t=null}if(r){r=n.toArray(r,i||\"hex\");this._update(r)}var a=[];while(a.length<e){this.V=this._hmac().update(this.V).digest();a=a.concat(this.V)}var s=a.slice(0,e);this._update(r);this._reseed++;return n.encode(s,t)}},3782:function(e){if(typeof Object.create===\"function\"){e.exports=function inherits(e,t){if(t){e.super_=t;e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:false,writable:true,configurable:true}})}}}else{e.exports=function inherits(e,t){if(t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}}}},3533:function(e,t,r){\"use strict\";var i=r(3782);var n=r(9029);var a=r(6911).Buffer;var s=new Array(16);function MD5(){n.call(this,64);this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878}i(MD5,n);MD5.prototype._update=function(){var e=s;for(var t=0;t<16;++t)e[t]=this._block.readInt32LE(t*4);var r=this._a;var i=this._b;var n=this._c;var a=this._d;r=fnF(r,i,n,a,e[0],3614090360,7);a=fnF(a,r,i,n,e[1],3905402710,12);n=fnF(n,a,r,i,e[2],606105819,17);i=fnF(i,n,a,r,e[3],3250441966,22);r=fnF(r,i,n,a,e[4],4118548399,7);a=fnF(a,r,i,n,e[5],1200080426,12);n=fnF(n,a,r,i,e[6],2821735955,17);i=fnF(i,n,a,r,e[7],4249261313,22);r=fnF(r,i,n,a,e[8],1770035416,7);a=fnF(a,r,i,n,e[9],2336552879,12);n=fnF(n,a,r,i,e[10],4294925233,17);i=fnF(i,n,a,r,e[11],2304563134,22);r=fnF(r,i,n,a,e[12],1804603682,7);a=fnF(a,r,i,n,e[13],4254626195,12);n=fnF(n,a,r,i,e[14],2792965006,17);i=fnF(i,n,a,r,e[15],1236535329,22);r=fnG(r,i,n,a,e[1],4129170786,5);a=fnG(a,r,i,n,e[6],3225465664,9);n=fnG(n,a,r,i,e[11],643717713,14);i=fnG(i,n,a,r,e[0],3921069994,20);r=fnG(r,i,n,a,e[5],3593408605,5);a=fnG(a,r,i,n,e[10],38016083,9);n=fnG(n,a,r,i,e[15],3634488961,14);i=fnG(i,n,a,r,e[4],3889429448,20);r=fnG(r,i,n,a,e[9],568446438,5);a=fnG(a,r,i,n,e[14],3275163606,9);n=fnG(n,a,r,i,e[3],4107603335,14);i=fnG(i,n,a,r,e[8],1163531501,20);r=fnG(r,i,n,a,e[13],2850285829,5);a=fnG(a,r,i,n,e[2],4243563512,9);n=fnG(n,a,r,i,e[7],1735328473,14);i=fnG(i,n,a,r,e[12],2368359562,20);r=fnH(r,i,n,a,e[5],4294588738,4);a=fnH(a,r,i,n,e[8],2272392833,11);n=fnH(n,a,r,i,e[11],1839030562,16);i=fnH(i,n,a,r,e[14],4259657740,23);r=fnH(r,i,n,a,e[1],2763975236,4);a=fnH(a,r,i,n,e[4],1272893353,11);n=fnH(n,a,r,i,e[7],4139469664,16);i=fnH(i,n,a,r,e[10],3200236656,23);r=fnH(r,i,n,a,e[13],681279174,4);a=fnH(a,r,i,n,e[0],3936430074,11);n=fnH(n,a,r,i,e[3],3572445317,16);i=fnH(i,n,a,r,e[6],76029189,23);r=fnH(r,i,n,a,e[9],3654602809,4);a=fnH(a,r,i,n,e[12],3873151461,11);n=fnH(n,a,r,i,e[15],530742520,16);i=fnH(i,n,a,r,e[2],3299628645,23);r=fnI(r,i,n,a,e[0],4096336452,6);a=fnI(a,r,i,n,e[7],1126891415,10);n=fnI(n,a,r,i,e[14],2878612391,15);i=fnI(i,n,a,r,e[5],4237533241,21);r=fnI(r,i,n,a,e[12],1700485571,6);a=fnI(a,r,i,n,e[3],2399980690,10);n=fnI(n,a,r,i,e[10],4293915773,15);i=fnI(i,n,a,r,e[1],2240044497,21);r=fnI(r,i,n,a,e[8],1873313359,6);a=fnI(a,r,i,n,e[15],4264355552,10);n=fnI(n,a,r,i,e[6],2734768916,15);i=fnI(i,n,a,r,e[13],1309151649,21);r=fnI(r,i,n,a,e[4],4149444226,6);a=fnI(a,r,i,n,e[11],3174756917,10);n=fnI(n,a,r,i,e[2],718787259,15);i=fnI(i,n,a,r,e[9],3951481745,21);this._a=this._a+r|0;this._b=this._b+i|0;this._c=this._c+n|0;this._d=this._d+a|0};MD5.prototype._digest=function(){this._block[this._blockOffset++]=128;if(this._blockOffset>56){this._block.fill(0,this._blockOffset,64);this._update();this._blockOffset=0}this._block.fill(0,this._blockOffset,56);this._block.writeUInt32LE(this._length[0],56);this._block.writeUInt32LE(this._length[1],60);this._update();var e=a.allocUnsafe(16);e.writeInt32LE(this._a,0);e.writeInt32LE(this._b,4);e.writeInt32LE(this._c,8);e.writeInt32LE(this._d,12);return e};function rotl(e,t){return e<<t|e>>>32-t}function fnF(e,t,r,i,n,a,s){return rotl(e+(t&r|~t&i)+n+a|0,s)+t|0}function fnG(e,t,r,i,n,a,s){return rotl(e+(t&i|r&~i)+n+a|0,s)+t|0}function fnH(e,t,r,i,n,a,s){return rotl(e+(t^r^i)+n+a|0,s)+t|0}function fnI(e,t,r,i,n,a,s){return rotl(e+(r^(t|~i))+n+a|0,s)+t|0}e.exports=MD5},1354:function(e,t,r){var i=r(711);var n=r(3500);function MillerRabin(e){this.rand=e||new n.Rand}e.exports=MillerRabin;MillerRabin.create=function create(e){return new MillerRabin(e)};MillerRabin.prototype._randbelow=function _randbelow(e){var t=e.bitLength();var r=Math.ceil(t/8);do{var n=new i(this.rand.generate(r))}while(n.cmp(e)>=0);return n};MillerRabin.prototype._randrange=function _randrange(e,t){var r=t.sub(e);return e.add(this._randbelow(r))};MillerRabin.prototype.test=function test(e,t,r){var n=e.bitLength();var a=i.mont(e);var s=new i(1).toRed(a);if(!t)t=Math.max(1,n/48|0);var o=e.subn(1);for(var h=0;!o.testn(h);h++){}var u=e.shrn(h);var d=o.toRed(a);var c=true;for(;t>0;t--){var l=this._randrange(new i(2),o);if(r)r(l);var p=l.toRed(a).redPow(u);if(p.cmp(s)===0||p.cmp(d)===0)continue;for(var v=1;v<h;v++){p=p.redSqr();if(p.cmp(s)===0)return false;if(p.cmp(d)===0)break}if(v===h)return false}return c};MillerRabin.prototype.getDivisor=function getDivisor(e,t){var r=e.bitLength();var n=i.mont(e);var a=new i(1).toRed(n);if(!t)t=Math.max(1,r/48|0);var s=e.subn(1);for(var o=0;!s.testn(o);o++){}var h=e.shrn(o);var u=s.toRed(n);for(;t>0;t--){var d=this._randrange(new i(2),s);var c=e.gcd(d);if(c.cmpn(1)!==0)return c;var l=d.toRed(n).redPow(h);if(l.cmp(a)===0||l.cmp(u)===0)continue;for(var p=1;p<o;p++){l=l.redSqr();if(l.cmp(a)===0)return l.fromRed().subn(1).gcd(e);if(l.cmp(u)===0)break}if(p===o){l=l.redSqr();return l.fromRed().subn(1).gcd(e)}}return false}},3523:function(e){e.exports=assert;function assert(e,t){if(!e)throw new Error(t||\"Assertion failed\")}assert.equal=function assertEqual(e,t,r){if(e!=t)throw new Error(r||\"Assertion failed: \"+e+\" != \"+t)}},6545:function(e,t){\"use strict\";var r=t;function toArray(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var r=[];if(typeof e!==\"string\"){for(var i=0;i<e.length;i++)r[i]=e[i]|0;return r}if(t===\"hex\"){e=e.replace(/[^a-z0-9]+/gi,\"\");if(e.length%2!==0)e=\"0\"+e;for(var i=0;i<e.length;i+=2)r.push(parseInt(e[i]+e[i+1],16))}else{for(var i=0;i<e.length;i++){var n=e.charCodeAt(i);var a=n>>8;var s=n&255;if(a)r.push(a,s);else r.push(s)}}return r}r.toArray=toArray;function zero2(e){if(e.length===1)return\"0\"+e;else return e}r.zero2=zero2;function toHex(e){var t=\"\";for(var r=0;r<e.length;r++)t+=zero2(e[r].toString(16));return t}r.toHex=toHex;r.encode=function encode(e,t){if(t===\"hex\")return toHex(e);else return e}},8687:function(e,t,r){\"use strict\";var i=r(7160);t.certificate=r(8782);var n=i.define(\"RSAPrivateKey\",(function(){this.seq().obj(this.key(\"version\").int(),this.key(\"modulus\").int(),this.key(\"publicExponent\").int(),this.key(\"privateExponent\").int(),this.key(\"prime1\").int(),this.key(\"prime2\").int(),this.key(\"exponent1\").int(),this.key(\"exponent2\").int(),this.key(\"coefficient\").int())}));t.RSAPrivateKey=n;var a=i.define(\"RSAPublicKey\",(function(){this.seq().obj(this.key(\"modulus\").int(),this.key(\"publicExponent\").int())}));t.RSAPublicKey=a;var s=i.define(\"SubjectPublicKeyInfo\",(function(){this.seq().obj(this.key(\"algorithm\").use(o),this.key(\"subjectPublicKey\").bitstr())}));t.PublicKey=s;var o=i.define(\"AlgorithmIdentifier\",(function(){this.seq().obj(this.key(\"algorithm\").objid(),this.key(\"none\").null_().optional(),this.key(\"curve\").objid().optional(),this.key(\"params\").seq().obj(this.key(\"p\").int(),this.key(\"q\").int(),this.key(\"g\").int()).optional())}));var h=i.define(\"PrivateKeyInfo\",(function(){this.seq().obj(this.key(\"version\").int(),this.key(\"algorithm\").use(o),this.key(\"subjectPrivateKey\").octstr())}));t.PrivateKey=h;var u=i.define(\"EncryptedPrivateKeyInfo\",(function(){this.seq().obj(this.key(\"algorithm\").seq().obj(this.key(\"id\").objid(),this.key(\"decrypt\").seq().obj(this.key(\"kde\").seq().obj(this.key(\"id\").objid(),this.key(\"kdeparams\").seq().obj(this.key(\"salt\").octstr(),this.key(\"iters\").int())),this.key(\"cipher\").seq().obj(this.key(\"algo\").objid(),this.key(\"iv\").octstr()))),this.key(\"subjectPrivateKey\").octstr())}));t.EncryptedPrivateKey=u;var d=i.define(\"DSAPrivateKey\",(function(){this.seq().obj(this.key(\"version\").int(),this.key(\"p\").int(),this.key(\"q\").int(),this.key(\"g\").int(),this.key(\"pub_key\").int(),this.key(\"priv_key\").int())}));t.DSAPrivateKey=d;t.DSAparam=i.define(\"DSAparam\",(function(){this.int()}));var c=i.define(\"ECPrivateKey\",(function(){this.seq().obj(this.key(\"version\").int(),this.key(\"privateKey\").octstr(),this.key(\"parameters\").optional().explicit(0).use(l),this.key(\"publicKey\").optional().explicit(1).bitstr())}));t.ECPrivateKey=c;var l=i.define(\"ECParameters\",(function(){this.choice({namedCurve:this.objid()})}));t.signature=i.define(\"signature\",(function(){this.seq().obj(this.key(\"r\").int(),this.key(\"s\").int())}))},8782:function(e,t,r){\"use strict\";var i=r(7160);var n=i.define(\"Time\",(function(){this.choice({utcTime:this.utctime(),generalTime:this.gentime()})}));var a=i.define(\"AttributeTypeValue\",(function(){this.seq().obj(this.key(\"type\").objid(),this.key(\"value\").any())}));var s=i.define(\"AlgorithmIdentifier\",(function(){this.seq().obj(this.key(\"algorithm\").objid(),this.key(\"parameters\").optional(),this.key(\"curve\").objid().optional())}));var o=i.define(\"SubjectPublicKeyInfo\",(function(){this.seq().obj(this.key(\"algorithm\").use(s),this.key(\"subjectPublicKey\").bitstr())}));var h=i.define(\"RelativeDistinguishedName\",(function(){this.setof(a)}));var u=i.define(\"RDNSequence\",(function(){this.seqof(h)}));var d=i.define(\"Name\",(function(){this.choice({rdnSequence:this.use(u)})}));var c=i.define(\"Validity\",(function(){this.seq().obj(this.key(\"notBefore\").use(n),this.key(\"notAfter\").use(n))}));var l=i.define(\"Extension\",(function(){this.seq().obj(this.key(\"extnID\").objid(),this.key(\"critical\").bool().def(false),this.key(\"extnValue\").octstr())}));var p=i.define(\"TBSCertificate\",(function(){this.seq().obj(this.key(\"version\").explicit(0).int().optional(),this.key(\"serialNumber\").int(),this.key(\"signature\").use(s),this.key(\"issuer\").use(d),this.key(\"validity\").use(c),this.key(\"subject\").use(d),this.key(\"subjectPublicKeyInfo\").use(o),this.key(\"issuerUniqueID\").implicit(1).bitstr().optional(),this.key(\"subjectUniqueID\").implicit(2).bitstr().optional(),this.key(\"extensions\").explicit(3).seqof(l).optional())}));var v=i.define(\"X509Certificate\",(function(){this.seq().obj(this.key(\"tbsCertificate\").use(p),this.key(\"signatureAlgorithm\").use(s),this.key(\"signatureValue\").bitstr())}));e.exports=v},6501:function(e,t,r){var i=/Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r\\+\\/\\=]+)[\\n\\r]+/m;var n=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m;var a=/^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r\\+\\/\\=]+)-----END \\1-----$/m;var s=r(8368);var o=r(6594);var h=r(6911).Buffer;e.exports=function(e,t){var r=e.toString();var u=r.match(i);var d;if(!u){var c=r.match(a);d=new h(c[2].replace(/[\\r\\n]/g,\"\"),\"base64\")}else{var l=\"aes\"+u[1];var p=h.from(u[2],\"hex\");var v=h.from(u[3].replace(/[\\r\\n]/g,\"\"),\"base64\");var b=s(t,p.slice(0,8),parseInt(u[1],10)).key;var m=[];var y=o.createDecipheriv(l,b,p);m.push(y.update(v));m.push(y.final());d=h.concat(m)}var g=r.match(n)[1];return{tag:g,data:d}}},9902:function(e,t,r){var i=r(8687);var n=r(2510);var a=r(6501);var s=r(6594);var o=r(4978);var h=r(6911).Buffer;e.exports=parseKeys;function parseKeys(e){var t;if(typeof e===\"object\"&&!h.isBuffer(e)){t=e.passphrase;e=e.key}if(typeof e===\"string\"){e=h.from(e)}var r=a(e,t);var n=r.tag;var s=r.data;var o,u;switch(n){case\"CERTIFICATE\":u=i.certificate.decode(s,\"der\").tbsCertificate.subjectPublicKeyInfo;case\"PUBLIC KEY\":if(!u){u=i.PublicKey.decode(s,\"der\")}o=u.algorithm.algorithm.join(\".\");switch(o){case\"1.2.840.113549.1.1.1\":return i.RSAPublicKey.decode(u.subjectPublicKey.data,\"der\");case\"1.2.840.10045.2.1\":u.subjectPrivateKey=u.subjectPublicKey;return{type:\"ec\",data:u};case\"1.2.840.10040.4.1\":u.algorithm.params.pub_key=i.DSAparam.decode(u.subjectPublicKey.data,\"der\");return{type:\"dsa\",data:u.algorithm.params};default:throw new Error(\"unknown key id \"+o)}throw new Error(\"unknown key type \"+n);case\"ENCRYPTED PRIVATE KEY\":s=i.EncryptedPrivateKey.decode(s,\"der\");s=decrypt(s,t);case\"PRIVATE KEY\":u=i.PrivateKey.decode(s,\"der\");o=u.algorithm.algorithm.join(\".\");switch(o){case\"1.2.840.113549.1.1.1\":return i.RSAPrivateKey.decode(u.subjectPrivateKey,\"der\");case\"1.2.840.10045.2.1\":return{curve:u.algorithm.curve,privateKey:i.ECPrivateKey.decode(u.subjectPrivateKey,\"der\").privateKey};case\"1.2.840.10040.4.1\":u.algorithm.params.priv_key=i.DSAparam.decode(u.subjectPrivateKey,\"der\");return{type:\"dsa\",params:u.algorithm.params};default:throw new Error(\"unknown key id \"+o)}throw new Error(\"unknown key type \"+n);case\"RSA PUBLIC KEY\":return i.RSAPublicKey.decode(s,\"der\");case\"RSA PRIVATE KEY\":return i.RSAPrivateKey.decode(s,\"der\");case\"DSA PRIVATE KEY\":return{type:\"dsa\",params:i.DSAPrivateKey.decode(s,\"der\")};case\"EC PRIVATE KEY\":s=i.ECPrivateKey.decode(s,\"der\");return{curve:s.parameters.value,privateKey:s.privateKey};default:throw new Error(\"unknown key type \"+n)}}parseKeys.signature=i.signature;function decrypt(e,t){var r=e.algorithm.decrypt.kde.kdeparams.salt;var i=parseInt(e.algorithm.decrypt.kde.kdeparams.iters.toString(),10);var a=n[e.algorithm.decrypt.cipher.algo.join(\".\")];var u=e.algorithm.decrypt.cipher.iv;var d=e.subjectPrivateKey;var c=parseInt(a.split(\"-\")[1],10)/8;var l=o.pbkdf2Sync(t,r,i,c,\"sha1\");var p=s.createDecipheriv(a,l,u);var v=[];v.push(p.update(d));v.push(p.final());return h.concat(v)}},4978:function(e,t,r){var i=r(6113);var n=r(5349);var a=r(7007);var s=r(5407);function nativePBKDF2(e,t,r,o,h,u){n(r,o);e=s(e,a,\"Password\");t=s(t,a,\"Salt\");if(typeof h===\"function\"){u=h;h=\"sha1\"}if(typeof u!==\"function\")throw new Error(\"No callback provided to pbkdf2\");return i.pbkdf2(e,t,r,o,h,u)}function nativePBKDF2Sync(e,t,r,o,h){n(r,o);e=s(e,a,\"Password\");t=s(t,a,\"Salt\");h=h||\"sha1\";return i.pbkdf2Sync(e,t,r,o,h)}if(!i.pbkdf2Sync||i.pbkdf2Sync.toString().indexOf(\"keylen, digest\")===-1){t.pbkdf2Sync=r(2127);t.pbkdf2=r(9601)}else{t.pbkdf2Sync=nativePBKDF2Sync;t.pbkdf2=nativePBKDF2}},9601:function(e,t,r){var i=r(6911).Buffer;var n=r(5349);var a=r(7007);var s=r(2127);var o=r(5407);var h;var u=__webpack_require__.g.crypto&&__webpack_require__.g.crypto.subtle;var d={sha:\"SHA-1\",\"sha-1\":\"SHA-1\",sha1:\"SHA-1\",sha256:\"SHA-256\",\"sha-256\":\"SHA-256\",sha384:\"SHA-384\",\"sha-384\":\"SHA-384\",\"sha-512\":\"SHA-512\",sha512:\"SHA-512\"};var c=[];function checkNative(e){if(__webpack_require__.g.process&&!__webpack_require__.g.process.browser){return Promise.resolve(false)}if(!u||!u.importKey||!u.deriveBits){return Promise.resolve(false)}if(c[e]!==undefined){return c[e]}h=h||i.alloc(8);var t=browserPbkdf2(h,h,10,128,e).then((function(){return true})).catch((function(){return false}));c[e]=t;return t}function browserPbkdf2(e,t,r,n,a){return u.importKey(\"raw\",e,{name:\"PBKDF2\"},false,[\"deriveBits\"]).then((function(e){return u.deriveBits({name:\"PBKDF2\",salt:t,iterations:r,hash:{name:a}},e,n<<3)})).then((function(e){return i.from(e)}))}function resolvePromise(e,t){e.then((function(e){process.nextTick((function(){t(null,e)}))}),(function(e){process.nextTick((function(){t(e)}))}))}e.exports=function(e,t,r,i,h,u){if(typeof h===\"function\"){u=h;h=undefined}h=h||\"sha1\";var c=d[h.toLowerCase()];if(!c||typeof __webpack_require__.g.Promise!==\"function\"){return process.nextTick((function(){var n;try{n=s(e,t,r,i,h)}catch(e){return u(e)}u(null,n)}))}n(r,i);e=o(e,a,\"Password\");t=o(t,a,\"Salt\");if(typeof u!==\"function\")throw new Error(\"No callback provided to pbkdf2\");resolvePromise(checkNative(c).then((function(n){if(n)return browserPbkdf2(e,t,r,i,c);return s(e,t,r,i,h)})),u)}},7007:function(e){var t;if(true){t=\"utf-8\"}else { var r; }e.exports=t},5349:function(e){var t=Math.pow(2,30)-1;e.exports=function(e,r){if(typeof e!==\"number\"){throw new TypeError(\"Iterations not a number\")}if(e<0){throw new TypeError(\"Bad iterations\")}if(typeof r!==\"number\"){throw new TypeError(\"Key length not a number\")}if(r<0||r>t||r!==r){throw new TypeError(\"Bad key length\")}}},2127:function(e,t,r){var i={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};var n=r(4873);var a=r(6911).Buffer;var s=r(5349);var o=r(7007);var h=r(5407);function pbkdf2(e,t,r,u,d){s(r,u);e=h(e,o,\"Password\");t=h(t,o,\"Salt\");d=d||\"sha1\";var c=a.allocUnsafe(u);var l=a.allocUnsafe(t.length+4);t.copy(l,0,0,t.length);var p=0;var v=i[d];var b=Math.ceil(u/v);for(var m=1;m<=b;m++){l.writeUInt32BE(m,t.length);var y=n(d,e).update(l).digest();var g=y;for(var _=1;_<r;_++){g=n(d,e).update(g).digest();for(var w=0;w<v;w++)y[w]^=g[w]}y.copy(c,p);p+=v}return c}e.exports=pbkdf2},5407:function(e,t,r){var i=r(6911).Buffer;e.exports=function(e,t,r){if(i.isBuffer(e)){return e}else if(typeof e===\"string\"){return i.from(e,t)}else if(ArrayBuffer.isView(e)){return i.from(e.buffer)}else{throw new TypeError(r+\" must be a string, a Buffer, a typed array or a DataView\")}}},9783:function(e,t,r){t.publicEncrypt=r(3995);t.privateDecrypt=r(4366);t.privateEncrypt=function privateEncrypt(e,r){return t.publicEncrypt(e,r,true)};t.publicDecrypt=function publicDecrypt(e,r){return t.privateDecrypt(e,r,true)}},5520:function(e,t,r){var i=r(9739);var n=r(6911).Buffer;e.exports=function(e,t){var r=n.alloc(0);var a=0;var s;while(r.length<t){s=i2ops(a++);r=n.concat([r,i(\"sha1\").update(e).update(s).digest()])}return r.slice(0,t)};function i2ops(e){var t=n.allocUnsafe(4);t.writeUInt32BE(e,0);return t}},4366:function(e,t,r){var i=r(9902);var n=r(5520);var a=r(6386);var s=r(711);var o=r(7166);var h=r(9739);var u=r(1607);var d=r(6911).Buffer;e.exports=function privateDecrypt(e,t,r){var n;if(e.padding){n=e.padding}else if(r){n=1}else{n=4}var a=i(e);var h=a.modulus.byteLength();if(t.length>h||new s(t).cmp(a.modulus)>=0){throw new Error(\"decryption error\")}var c;if(r){c=u(new s(t),a)}else{c=o(t,a)}var l=d.alloc(h-c.length);c=d.concat([l,c],h);if(n===4){return oaep(a,c)}else if(n===1){return pkcs1(a,c,r)}else if(n===3){return c}else{throw new Error(\"unknown padding\")}};function oaep(e,t){var r=e.modulus.byteLength();var i=h(\"sha1\").update(d.alloc(0)).digest();var s=i.length;if(t[0]!==0){throw new Error(\"decryption error\")}var o=t.slice(1,s+1);var u=t.slice(s+1);var c=a(o,n(u,s));var l=a(u,n(c,r-s-1));if(compare(i,l.slice(0,s))){throw new Error(\"decryption error\")}var p=s;while(l[p]===0){p++}if(l[p++]!==1){throw new Error(\"decryption error\")}return l.slice(p)}function pkcs1(e,t,r){var i=t.slice(0,2);var n=2;var a=0;while(t[n++]!==0){if(n>=t.length){a++;break}}var s=t.slice(2,n-1);if(i.toString(\"hex\")!==\"0002\"&&!r||i.toString(\"hex\")!==\"0001\"&&r){a++}if(s.length<8){a++}if(a){throw new Error(\"decryption error\")}return t.slice(n)}function compare(e,t){e=d.from(e);t=d.from(t);var r=0;var i=e.length;if(e.length!==t.length){r++;i=Math.min(e.length,t.length)}var n=-1;while(++n<i){r+=e[n]^t[n]}return r}},3995:function(e,t,r){var i=r(9902);var n=r(7223);var a=r(9739);var s=r(5520);var o=r(6386);var h=r(711);var u=r(1607);var d=r(7166);var c=r(6911).Buffer;e.exports=function publicEncrypt(e,t,r){var n;if(e.padding){n=e.padding}else if(r){n=1}else{n=4}var a=i(e);var s;if(n===4){s=oaep(a,t)}else if(n===1){s=pkcs1(a,t,r)}else if(n===3){s=new h(t);if(s.cmp(a.modulus)>=0){throw new Error(\"data too long for modulus\")}}else{throw new Error(\"unknown padding\")}if(r){return d(s,a)}else{return u(s,a)}};function oaep(e,t){var r=e.modulus.byteLength();var i=t.length;var u=a(\"sha1\").update(c.alloc(0)).digest();var d=u.length;var l=2*d;if(i>r-l-2){throw new Error(\"message too long\")}var p=c.alloc(r-i-l-2);var v=r-d-1;var b=n(d);var m=o(c.concat([u,p,c.alloc(1,1),t],v),s(b,v));var y=o(b,s(m,d));return new h(c.concat([c.alloc(1),y,m],r))}function pkcs1(e,t,r){var i=t.length;var n=e.modulus.byteLength();if(i>n-11){throw new Error(\"message too long\")}var a;if(r){a=c.alloc(n-i-3,255)}else{a=nonZero(n-i-3)}return new h(c.concat([c.from([0,r?1:2]),a,c.alloc(1),t],n))}function nonZero(e){var t=c.allocUnsafe(e);var r=0;var i=n(e*2);var a=0;var s;while(r<e){if(a===i.length){i=n(e*2);a=0}s=i[a++];if(s){t[r++]=s}}return t}},1607:function(e,t,r){var i=r(711);var n=r(6911).Buffer;function withPublic(e,t){return n.from(e.toRed(i.mont(t.modulus)).redPow(new i(t.publicExponent)).fromRed().toArray())}e.exports=withPublic},6386:function(e){e.exports=function xor(e,t){var r=e.length;var i=-1;while(++i<r){e[i]^=t[i]}return e}},7223:function(e,t,r){\"use strict\";var i=65536;var n=4294967295;function oldBrowser(){throw new Error(\"Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11\")}var a=r(6911).Buffer;var s=__webpack_require__.g.crypto||__webpack_require__.g.msCrypto;if(s&&s.getRandomValues){e.exports=randomBytes}else{e.exports=oldBrowser}function randomBytes(e,t){if(e>n)throw new RangeError(\"requested too many random bytes\");var r=a.allocUnsafe(e);if(e>0){if(e>i){for(var o=0;o<e;o+=i){s.getRandomValues(r.slice(o,o+i))}}else{s.getRandomValues(r)}}if(typeof t===\"function\"){return process.nextTick((function(){t(null,r)}))}return r}},6445:function(e,t,r){\"use strict\";function oldBrowser(){throw new Error(\"secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11\")}var i=r(6911);var n=r(7223);var a=i.Buffer;var s=i.kMaxLength;var o=__webpack_require__.g.crypto||__webpack_require__.g.msCrypto;var h=Math.pow(2,32)-1;function assertOffset(e,t){if(typeof e!==\"number\"||e!==e){throw new TypeError(\"offset must be a number\")}if(e>h||e<0){throw new TypeError(\"offset must be a uint32\")}if(e>s||e>t){throw new RangeError(\"offset out of range\")}}function assertSize(e,t,r){if(typeof e!==\"number\"||e!==e){throw new TypeError(\"size must be a number\")}if(e>h||e<0){throw new TypeError(\"size must be a uint32\")}if(e+t>r||e>s){throw new RangeError(\"buffer too small\")}}if(o&&o.getRandomValues||!true){t.randomFill=randomFill;t.randomFillSync=randomFillSync}else{t.randomFill=oldBrowser;t.randomFillSync=oldBrowser}function randomFill(e,t,r,i){if(!a.isBuffer(e)&&!(e instanceof __webpack_require__.g.Uint8Array)){throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')}if(typeof t===\"function\"){i=t;t=0;r=e.length}else if(typeof r===\"function\"){i=r;r=e.length-t}else if(typeof i!==\"function\"){throw new TypeError('\"cb\" argument must be a function')}assertOffset(t,e.length);assertSize(r,t,e.length);return actualFill(e,t,r,i)}function actualFill(e,t,r,i){if(true){var a=e.buffer;var s=new Uint8Array(a,t,r);o.getRandomValues(s);if(i){process.nextTick((function(){i(null,e)}));return}return e}if(i){n(r,(function(r,n){if(r){return i(r)}n.copy(e,t);i(null,e)}));return}var h=n(r);h.copy(e,t);return e}function randomFillSync(e,t,r){if(typeof t===\"undefined\"){t=0}if(!a.isBuffer(e)&&!(e instanceof __webpack_require__.g.Uint8Array)){throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')}assertOffset(t,e.length);if(r===undefined)r=e.length-t;assertSize(r,t,e.length);return actualFill(e,t,r)}},4646:function(e){\"use strict\";const t={};function createErrorType(e,r,i){if(!i){i=Error}function getMessage(e,t,i){if(typeof r===\"string\"){return r}else{return r(e,t,i)}}class NodeError extends i{constructor(e,t,r){super(getMessage(e,t,r))}}NodeError.prototype.name=i.name;NodeError.prototype.code=e;t[e]=NodeError}function oneOf(e,t){if(Array.isArray(e)){const r=e.length;e=e.map((e=>String(e)));if(r>2){return`one of ${t} ${e.slice(0,r-1).join(\", \")}, or `+e[r-1]}else if(r===2){return`one of ${t} ${e[0]} or ${e[1]}`}else{return`of ${t} ${e[0]}`}}else{return`of ${t} ${String(e)}`}}function startsWith(e,t,r){return e.substr(!r||r<0?0:+r,t.length)===t}function endsWith(e,t,r){if(r===undefined||r>e.length){r=e.length}return e.substring(r-t.length,r)===t}function includes(e,t,r){if(typeof r!==\"number\"){r=0}if(r+t.length>e.length){return false}else{return e.indexOf(t,r)!==-1}}createErrorType(\"ERR_INVALID_OPT_VALUE\",(function(e,t){return'The value \"'+t+'\" is invalid for option \"'+e+'\"'}),TypeError);createErrorType(\"ERR_INVALID_ARG_TYPE\",(function(e,t,r){let i;if(typeof t===\"string\"&&startsWith(t,\"not \")){i=\"must not be\";t=t.replace(/^not /,\"\")}else{i=\"must be\"}let n;if(endsWith(e,\" argument\")){n=`The ${e} ${i} ${oneOf(t,\"type\")}`}else{const r=includes(e,\".\")?\"property\":\"argument\";n=`The \"${e}\" ${r} ${i} ${oneOf(t,\"type\")}`}n+=`. Received type ${typeof r}`;return n}),TypeError);createErrorType(\"ERR_STREAM_PUSH_AFTER_EOF\",\"stream.push() after EOF\");createErrorType(\"ERR_METHOD_NOT_IMPLEMENTED\",(function(e){return\"The \"+e+\" method is not implemented\"}));createErrorType(\"ERR_STREAM_PREMATURE_CLOSE\",\"Premature close\");createErrorType(\"ERR_STREAM_DESTROYED\",(function(e){return\"Cannot call \"+e+\" after a stream was destroyed\"}));createErrorType(\"ERR_MULTIPLE_CALLBACK\",\"Callback called multiple times\");createErrorType(\"ERR_STREAM_CANNOT_PIPE\",\"Cannot pipe, not readable\");createErrorType(\"ERR_STREAM_WRITE_AFTER_END\",\"write after end\");createErrorType(\"ERR_STREAM_NULL_VALUES\",\"May not write null values to stream\",TypeError);createErrorType(\"ERR_UNKNOWN_ENCODING\",(function(e){return\"Unknown encoding: \"+e}),TypeError);createErrorType(\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\",\"stream.unshift() after end event\");e.exports.q=t},2403:function(e,t,r){\"use strict\";var i=Object.keys||function(e){var t=[];for(var r in e){t.push(r)}return t};e.exports=Duplex;var n=r(1709);var a=r(7337);r(3782)(Duplex,n);{var s=i(a.prototype);for(var o=0;o<s.length;o++){var h=s[o];if(!Duplex.prototype[h])Duplex.prototype[h]=a.prototype[h]}}function Duplex(e){if(!(this instanceof Duplex))return new Duplex(e);n.call(this,e);a.call(this,e);this.allowHalfOpen=true;if(e){if(e.readable===false)this.readable=false;if(e.writable===false)this.writable=false;if(e.allowHalfOpen===false){this.allowHalfOpen=false;this.once(\"end\",onend)}}}Object.defineProperty(Duplex.prototype,\"writableHighWaterMark\",{enumerable:false,get:function get(){return this._writableState.highWaterMark}});Object.defineProperty(Duplex.prototype,\"writableBuffer\",{enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer()}});Object.defineProperty(Duplex.prototype,\"writableLength\",{enumerable:false,get:function get(){return this._writableState.length}});function onend(){if(this._writableState.ended)return;process.nextTick(onEndNT,this)}function onEndNT(e){e.end()}Object.defineProperty(Duplex.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._readableState===undefined||this._writableState===undefined){return false}return this._readableState.destroyed&&this._writableState.destroyed},set:function set(e){if(this._readableState===undefined||this._writableState===undefined){return}this._readableState.destroyed=e;this._writableState.destroyed=e}})},7889:function(e,t,r){\"use strict\";e.exports=PassThrough;var i=r(1170);r(3782)(PassThrough,i);function PassThrough(e){if(!(this instanceof PassThrough))return new PassThrough(e);i.call(this,e)}PassThrough.prototype._transform=function(e,t,r){r(null,e)}},1709:function(e,t,r){\"use strict\";e.exports=Readable;var i;Readable.ReadableState=ReadableState;var n=r(2361).EventEmitter;var a=function EElistenerCount(e,t){return e.listeners(t).length};var s=r(4678);var o=r(4300).Buffer;var h=__webpack_require__.g.Uint8Array||function(){};function _uint8ArrayToBuffer(e){return o.from(e)}function _isUint8Array(e){return o.isBuffer(e)||e instanceof h}var u=r(3837);var d;if(u&&u.debuglog){d=u.debuglog(\"stream\")}else{d=function debug(){}}var c=r(4379);var l=r(7025);var p=r(6776),v=p.getHighWaterMark;var b=r(4646).q,m=b.ERR_INVALID_ARG_TYPE,y=b.ERR_STREAM_PUSH_AFTER_EOF,g=b.ERR_METHOD_NOT_IMPLEMENTED,_=b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;var w;var M;var B;r(3782)(Readable,s);var E=l.errorOrDestroy;var k=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];function prependListener(e,t,r){if(typeof e.prependListener===\"function\")return e.prependListener(t,r);if(!e._events||!e._events[t])e.on(t,r);else if(Array.isArray(e._events[t]))e._events[t].unshift(r);else e._events[t]=[r,e._events[t]]}function ReadableState(e,t,n){i=i||r(2403);e=e||{};if(typeof n!==\"boolean\")n=t instanceof i;this.objectMode=!!e.objectMode;if(n)this.objectMode=this.objectMode||!!e.readableObjectMode;this.highWaterMark=v(this,e,\"readableHighWaterMark\",n);this.buffer=new c;this.length=0;this.pipes=null;this.pipesCount=0;this.flowing=null;this.ended=false;this.endEmitted=false;this.reading=false;this.sync=true;this.needReadable=false;this.emittedReadable=false;this.readableListening=false;this.resumeScheduled=false;this.paused=true;this.emitClose=e.emitClose!==false;this.autoDestroy=!!e.autoDestroy;this.destroyed=false;this.defaultEncoding=e.defaultEncoding||\"utf8\";this.awaitDrain=0;this.readingMore=false;this.decoder=null;this.encoding=null;if(e.encoding){if(!w)w=r(3704).s;this.decoder=new w(e.encoding);this.encoding=e.encoding}}function Readable(e){i=i||r(2403);if(!(this instanceof Readable))return new Readable(e);var t=this instanceof i;this._readableState=new ReadableState(e,this,t);this.readable=true;if(e){if(typeof e.read===\"function\")this._read=e.read;if(typeof e.destroy===\"function\")this._destroy=e.destroy}s.call(this)}Object.defineProperty(Readable.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._readableState===undefined){return false}return this._readableState.destroyed},set:function set(e){if(!this._readableState){return}this._readableState.destroyed=e}});Readable.prototype.destroy=l.destroy;Readable.prototype._undestroy=l.undestroy;Readable.prototype._destroy=function(e,t){t(e)};Readable.prototype.push=function(e,t){var r=this._readableState;var i;if(!r.objectMode){if(typeof e===\"string\"){t=t||r.defaultEncoding;if(t!==r.encoding){e=o.from(e,t);t=\"\"}i=true}}else{i=true}return readableAddChunk(this,e,t,false,i)};Readable.prototype.unshift=function(e){return readableAddChunk(this,e,null,true,false)};function readableAddChunk(e,t,r,i,n){d(\"readableAddChunk\",t);var a=e._readableState;if(t===null){a.reading=false;onEofChunk(e,a)}else{var s;if(!n)s=chunkInvalid(a,t);if(s){E(e,s)}else if(a.objectMode||t&&t.length>0){if(typeof t!==\"string\"&&!a.objectMode&&Object.getPrototypeOf(t)!==o.prototype){t=_uint8ArrayToBuffer(t)}if(i){if(a.endEmitted)E(e,new _);else addChunk(e,a,t,true)}else if(a.ended){E(e,new y)}else if(a.destroyed){return false}else{a.reading=false;if(a.decoder&&!r){t=a.decoder.write(t);if(a.objectMode||t.length!==0)addChunk(e,a,t,false);else maybeReadMore(e,a)}else{addChunk(e,a,t,false)}}}else if(!i){a.reading=false;maybeReadMore(e,a)}}return!a.ended&&(a.length<a.highWaterMark||a.length===0)}function addChunk(e,t,r,i){if(t.flowing&&t.length===0&&!t.sync){t.awaitDrain=0;e.emit(\"data\",r)}else{t.length+=t.objectMode?1:r.length;if(i)t.buffer.unshift(r);else t.buffer.push(r);if(t.needReadable)emitReadable(e)}maybeReadMore(e,t)}function chunkInvalid(e,t){var r;if(!_isUint8Array(t)&&typeof t!==\"string\"&&t!==undefined&&!e.objectMode){r=new m(\"chunk\",[\"string\",\"Buffer\",\"Uint8Array\"],t)}return r}Readable.prototype.isPaused=function(){return this._readableState.flowing===false};Readable.prototype.setEncoding=function(e){if(!w)w=r(3704).s;var t=new w(e);this._readableState.decoder=t;this._readableState.encoding=this._readableState.decoder.encoding;var i=this._readableState.buffer.head;var n=\"\";while(i!==null){n+=t.write(i.data);i=i.next}this._readableState.buffer.clear();if(n!==\"\")this._readableState.buffer.push(n);this._readableState.length=n.length;return this};var A=1073741824;function computeNewHighWaterMark(e){if(e>=A){e=A}else{e--;e|=e>>>1;e|=e>>>2;e|=e>>>4;e|=e>>>8;e|=e>>>16;e++}return e}function howMuchToRead(e,t){if(e<=0||t.length===0&&t.ended)return 0;if(t.objectMode)return 1;if(e!==e){if(t.flowing&&t.length)return t.buffer.head.data.length;else return t.length}if(e>t.highWaterMark)t.highWaterMark=computeNewHighWaterMark(e);if(e<=t.length)return e;if(!t.ended){t.needReadable=true;return 0}return t.length}Readable.prototype.read=function(e){d(\"read\",e);e=parseInt(e,10);var t=this._readableState;var r=e;if(e!==0)t.emittedReadable=false;if(e===0&&t.needReadable&&((t.highWaterMark!==0?t.length>=t.highWaterMark:t.length>0)||t.ended)){d(\"read: emitReadable\",t.length,t.ended);if(t.length===0&&t.ended)endReadable(this);else emitReadable(this);return null}e=howMuchToRead(e,t);if(e===0&&t.ended){if(t.length===0)endReadable(this);return null}var i=t.needReadable;d(\"need readable\",i);if(t.length===0||t.length-e<t.highWaterMark){i=true;d(\"length less than watermark\",i)}if(t.ended||t.reading){i=false;d(\"reading or ended\",i)}else if(i){d(\"do read\");t.reading=true;t.sync=true;if(t.length===0)t.needReadable=true;this._read(t.highWaterMark);t.sync=false;if(!t.reading)e=howMuchToRead(r,t)}var n;if(e>0)n=fromList(e,t);else n=null;if(n===null){t.needReadable=t.length<=t.highWaterMark;e=0}else{t.length-=e;t.awaitDrain=0}if(t.length===0){if(!t.ended)t.needReadable=true;if(r!==e&&t.ended)endReadable(this)}if(n!==null)this.emit(\"data\",n);return n};function onEofChunk(e,t){d(\"onEofChunk\");if(t.ended)return;if(t.decoder){var r=t.decoder.end();if(r&&r.length){t.buffer.push(r);t.length+=t.objectMode?1:r.length}}t.ended=true;if(t.sync){emitReadable(e)}else{t.needReadable=false;if(!t.emittedReadable){t.emittedReadable=true;emitReadable_(e)}}}function emitReadable(e){var t=e._readableState;d(\"emitReadable\",t.needReadable,t.emittedReadable);t.needReadable=false;if(!t.emittedReadable){d(\"emitReadable\",t.flowing);t.emittedReadable=true;process.nextTick(emitReadable_,e)}}function emitReadable_(e){var t=e._readableState;d(\"emitReadable_\",t.destroyed,t.length,t.ended);if(!t.destroyed&&(t.length||t.ended)){e.emit(\"readable\");t.emittedReadable=false}t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark;flow(e)}function maybeReadMore(e,t){if(!t.readingMore){t.readingMore=true;process.nextTick(maybeReadMore_,e,t)}}function maybeReadMore_(e,t){while(!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&t.length===0)){var r=t.length;d(\"maybeReadMore read 0\");e.read(0);if(r===t.length)break}t.readingMore=false}Readable.prototype._read=function(e){E(this,new g(\"_read()\"))};Readable.prototype.pipe=function(e,t){var r=this;var i=this._readableState;switch(i.pipesCount){case 0:i.pipes=e;break;case 1:i.pipes=[i.pipes,e];break;default:i.pipes.push(e);break}i.pipesCount+=1;d(\"pipe count=%d opts=%j\",i.pipesCount,t);var n=(!t||t.end!==false)&&e!==process.stdout&&e!==process.stderr;var s=n?onend:unpipe;if(i.endEmitted)process.nextTick(s);else r.once(\"end\",s);e.on(\"unpipe\",onunpipe);function onunpipe(e,t){d(\"onunpipe\");if(e===r){if(t&&t.hasUnpiped===false){t.hasUnpiped=true;cleanup()}}}function onend(){d(\"onend\");e.end()}var o=pipeOnDrain(r);e.on(\"drain\",o);var h=false;function cleanup(){d(\"cleanup\");e.removeListener(\"close\",onclose);e.removeListener(\"finish\",onfinish);e.removeListener(\"drain\",o);e.removeListener(\"error\",onerror);e.removeListener(\"unpipe\",onunpipe);r.removeListener(\"end\",onend);r.removeListener(\"end\",unpipe);r.removeListener(\"data\",ondata);h=true;if(i.awaitDrain&&(!e._writableState||e._writableState.needDrain))o()}r.on(\"data\",ondata);function ondata(t){d(\"ondata\");var n=e.write(t);d(\"dest.write\",n);if(n===false){if((i.pipesCount===1&&i.pipes===e||i.pipesCount>1&&indexOf(i.pipes,e)!==-1)&&!h){d(\"false write response, pause\",i.awaitDrain);i.awaitDrain++}r.pause()}}function onerror(t){d(\"onerror\",t);unpipe();e.removeListener(\"error\",onerror);if(a(e,\"error\")===0)E(e,t)}prependListener(e,\"error\",onerror);function onclose(){e.removeListener(\"finish\",onfinish);unpipe()}e.once(\"close\",onclose);function onfinish(){d(\"onfinish\");e.removeListener(\"close\",onclose);unpipe()}e.once(\"finish\",onfinish);function unpipe(){d(\"unpipe\");r.unpipe(e)}e.emit(\"pipe\",r);if(!i.flowing){d(\"pipe resume\");r.resume()}return e};function pipeOnDrain(e){return function pipeOnDrainFunctionResult(){var t=e._readableState;d(\"pipeOnDrain\",t.awaitDrain);if(t.awaitDrain)t.awaitDrain--;if(t.awaitDrain===0&&a(e,\"data\")){t.flowing=true;flow(e)}}}Readable.prototype.unpipe=function(e){var t=this._readableState;var r={hasUnpiped:false};if(t.pipesCount===0)return this;if(t.pipesCount===1){if(e&&e!==t.pipes)return this;if(!e)e=t.pipes;t.pipes=null;t.pipesCount=0;t.flowing=false;if(e)e.emit(\"unpipe\",this,r);return this}if(!e){var i=t.pipes;var n=t.pipesCount;t.pipes=null;t.pipesCount=0;t.flowing=false;for(var a=0;a<n;a++){i[a].emit(\"unpipe\",this,{hasUnpiped:false})}return this}var s=indexOf(t.pipes,e);if(s===-1)return this;t.pipes.splice(s,1);t.pipesCount-=1;if(t.pipesCount===1)t.pipes=t.pipes[0];e.emit(\"unpipe\",this,r);return this};Readable.prototype.on=function(e,t){var r=s.prototype.on.call(this,e,t);var i=this._readableState;if(e===\"data\"){i.readableListening=this.listenerCount(\"readable\")>0;if(i.flowing!==false)this.resume()}else if(e===\"readable\"){if(!i.endEmitted&&!i.readableListening){i.readableListening=i.needReadable=true;i.flowing=false;i.emittedReadable=false;d(\"on readable\",i.length,i.reading);if(i.length){emitReadable(this)}else if(!i.reading){process.nextTick(nReadingNextTick,this)}}}return r};Readable.prototype.addListener=Readable.prototype.on;Readable.prototype.removeListener=function(e,t){var r=s.prototype.removeListener.call(this,e,t);if(e===\"readable\"){process.nextTick(updateReadableListening,this)}return r};Readable.prototype.removeAllListeners=function(e){var t=s.prototype.removeAllListeners.apply(this,arguments);if(e===\"readable\"||e===undefined){process.nextTick(updateReadableListening,this)}return t};function updateReadableListening(e){var t=e._readableState;t.readableListening=e.listenerCount(\"readable\")>0;if(t.resumeScheduled&&!t.paused){t.flowing=true}else if(e.listenerCount(\"data\")>0){e.resume()}}function nReadingNextTick(e){d(\"readable nexttick read 0\");e.read(0)}Readable.prototype.resume=function(){var e=this._readableState;if(!e.flowing){d(\"resume\");e.flowing=!e.readableListening;resume(this,e)}e.paused=false;return this};function resume(e,t){if(!t.resumeScheduled){t.resumeScheduled=true;process.nextTick(resume_,e,t)}}function resume_(e,t){d(\"resume\",t.reading);if(!t.reading){e.read(0)}t.resumeScheduled=false;e.emit(\"resume\");flow(e);if(t.flowing&&!t.reading)e.read(0)}Readable.prototype.pause=function(){d(\"call pause flowing=%j\",this._readableState.flowing);if(this._readableState.flowing!==false){d(\"pause\");this._readableState.flowing=false;this.emit(\"pause\")}this._readableState.paused=true;return this};function flow(e){var t=e._readableState;d(\"flow\",t.flowing);while(t.flowing&&e.read()!==null){}}Readable.prototype.wrap=function(e){var t=this;var r=this._readableState;var i=false;e.on(\"end\",(function(){d(\"wrapped end\");if(r.decoder&&!r.ended){var e=r.decoder.end();if(e&&e.length)t.push(e)}t.push(null)}));e.on(\"data\",(function(n){d(\"wrapped data\");if(r.decoder)n=r.decoder.write(n);if(r.objectMode&&(n===null||n===undefined))return;else if(!r.objectMode&&(!n||!n.length))return;var a=t.push(n);if(!a){i=true;e.pause()}}));for(var n in e){if(this[n]===undefined&&typeof e[n]===\"function\"){this[n]=function methodWrap(t){return function methodWrapReturnFunction(){return e[t].apply(e,arguments)}}(n)}}for(var a=0;a<k.length;a++){e.on(k[a],this.emit.bind(this,k[a]))}this._read=function(t){d(\"wrapped _read\",t);if(i){i=false;e.resume()}};return this};if(typeof Symbol===\"function\"){Readable.prototype[Symbol.asyncIterator]=function(){if(M===undefined){M=r(6871)}return M(this)}}Object.defineProperty(Readable.prototype,\"readableHighWaterMark\",{enumerable:false,get:function get(){return this._readableState.highWaterMark}});Object.defineProperty(Readable.prototype,\"readableBuffer\",{enumerable:false,get:function get(){return this._readableState&&this._readableState.buffer}});Object.defineProperty(Readable.prototype,\"readableFlowing\",{enumerable:false,get:function get(){return this._readableState.flowing},set:function set(e){if(this._readableState){this._readableState.flowing=e}}});Readable._fromList=fromList;Object.defineProperty(Readable.prototype,\"readableLength\",{enumerable:false,get:function get(){return this._readableState.length}});function fromList(e,t){if(t.length===0)return null;var r;if(t.objectMode)r=t.buffer.shift();else if(!e||e>=t.length){if(t.decoder)r=t.buffer.join(\"\");else if(t.buffer.length===1)r=t.buffer.first();else r=t.buffer.concat(t.length);t.buffer.clear()}else{r=t.buffer.consume(e,t.decoder)}return r}function endReadable(e){var t=e._readableState;d(\"endReadable\",t.endEmitted);if(!t.endEmitted){t.ended=true;process.nextTick(endReadableNT,t,e)}}function endReadableNT(e,t){d(\"endReadableNT\",e.endEmitted,e.length);if(!e.endEmitted&&e.length===0){e.endEmitted=true;t.readable=false;t.emit(\"end\");if(e.autoDestroy){var r=t._writableState;if(!r||r.autoDestroy&&r.finished){t.destroy()}}}}if(typeof Symbol===\"function\"){Readable.from=function(e,t){if(B===undefined){B=r(9727)}return B(Readable,e,t)}}function indexOf(e,t){for(var r=0,i=e.length;r<i;r++){if(e[r]===t)return r}return-1}},1170:function(e,t,r){\"use strict\";e.exports=Transform;var i=r(4646).q,n=i.ERR_METHOD_NOT_IMPLEMENTED,a=i.ERR_MULTIPLE_CALLBACK,s=i.ERR_TRANSFORM_ALREADY_TRANSFORMING,o=i.ERR_TRANSFORM_WITH_LENGTH_0;var h=r(2403);r(3782)(Transform,h);function afterTransform(e,t){var r=this._transformState;r.transforming=false;var i=r.writecb;if(i===null){return this.emit(\"error\",new a)}r.writechunk=null;r.writecb=null;if(t!=null)this.push(t);i(e);var n=this._readableState;n.reading=false;if(n.needReadable||n.length<n.highWaterMark){this._read(n.highWaterMark)}}function Transform(e){if(!(this instanceof Transform))return new Transform(e);h.call(this,e);this._transformState={afterTransform:afterTransform.bind(this),needTransform:false,transforming:false,writecb:null,writechunk:null,writeencoding:null};this._readableState.needReadable=true;this._readableState.sync=false;if(e){if(typeof e.transform===\"function\")this._transform=e.transform;if(typeof e.flush===\"function\")this._flush=e.flush}this.on(\"prefinish\",prefinish)}function prefinish(){var e=this;if(typeof this._flush===\"function\"&&!this._readableState.destroyed){this._flush((function(t,r){done(e,t,r)}))}else{done(this,null,null)}}Transform.prototype.push=function(e,t){this._transformState.needTransform=false;return h.prototype.push.call(this,e,t)};Transform.prototype._transform=function(e,t,r){r(new n(\"_transform()\"))};Transform.prototype._write=function(e,t,r){var i=this._transformState;i.writecb=r;i.writechunk=e;i.writeencoding=t;if(!i.transforming){var n=this._readableState;if(i.needTransform||n.needReadable||n.length<n.highWaterMark)this._read(n.highWaterMark)}};Transform.prototype._read=function(e){var t=this._transformState;if(t.writechunk!==null&&!t.transforming){t.transforming=true;this._transform(t.writechunk,t.writeencoding,t.afterTransform)}else{t.needTransform=true}};Transform.prototype._destroy=function(e,t){h.prototype._destroy.call(this,e,(function(e){t(e)}))};function done(e,t,r){if(t)return e.emit(\"error\",t);if(r!=null)e.push(r);if(e._writableState.length)throw new o;if(e._transformState.transforming)throw new s;return e.push(null)}},7337:function(e,t,r){\"use strict\";e.exports=Writable;function WriteReq(e,t,r){this.chunk=e;this.encoding=t;this.callback=r;this.next=null}function CorkedRequest(e){var t=this;this.next=null;this.entry=null;this.finish=function(){onCorkedFinish(t,e)}}var i;Writable.WritableState=WritableState;var n={deprecate:r(6769)};var a=r(4678);var s=r(4300).Buffer;var o=__webpack_require__.g.Uint8Array||function(){};function _uint8ArrayToBuffer(e){return s.from(e)}function _isUint8Array(e){return s.isBuffer(e)||e instanceof o}var h=r(7025);var u=r(6776),d=u.getHighWaterMark;var c=r(4646).q,l=c.ERR_INVALID_ARG_TYPE,p=c.ERR_METHOD_NOT_IMPLEMENTED,v=c.ERR_MULTIPLE_CALLBACK,b=c.ERR_STREAM_CANNOT_PIPE,m=c.ERR_STREAM_DESTROYED,y=c.ERR_STREAM_NULL_VALUES,g=c.ERR_STREAM_WRITE_AFTER_END,_=c.ERR_UNKNOWN_ENCODING;var w=h.errorOrDestroy;r(3782)(Writable,a);function nop(){}function WritableState(e,t,n){i=i||r(2403);e=e||{};if(typeof n!==\"boolean\")n=t instanceof i;this.objectMode=!!e.objectMode;if(n)this.objectMode=this.objectMode||!!e.writableObjectMode;this.highWaterMark=d(this,e,\"writableHighWaterMark\",n);this.finalCalled=false;this.needDrain=false;this.ending=false;this.ended=false;this.finished=false;this.destroyed=false;var a=e.decodeStrings===false;this.decodeStrings=!a;this.defaultEncoding=e.defaultEncoding||\"utf8\";this.length=0;this.writing=false;this.corked=0;this.sync=true;this.bufferProcessing=false;this.onwrite=function(e){onwrite(t,e)};this.writecb=null;this.writelen=0;this.bufferedRequest=null;this.lastBufferedRequest=null;this.pendingcb=0;this.prefinished=false;this.errorEmitted=false;this.emitClose=e.emitClose!==false;this.autoDestroy=!!e.autoDestroy;this.bufferedRequestCount=0;this.corkedRequestsFree=new CorkedRequest(this)}WritableState.prototype.getBuffer=function getBuffer(){var e=this.bufferedRequest;var t=[];while(e){t.push(e);e=e.next}return t};(function(){try{Object.defineProperty(WritableState.prototype,\"buffer\",{get:n.deprecate((function writableStateBufferGetter(){return this.getBuffer()}),\"_writableState.buffer is deprecated. Use _writableState.getBuffer \"+\"instead.\",\"DEP0003\")})}catch(e){}})();var M;if(typeof Symbol===\"function\"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]===\"function\"){M=Function.prototype[Symbol.hasInstance];Object.defineProperty(Writable,Symbol.hasInstance,{value:function value(e){if(M.call(this,e))return true;if(this!==Writable)return false;return e&&e._writableState instanceof WritableState}})}else{M=function realHasInstance(e){return e instanceof this}}function Writable(e){i=i||r(2403);var t=this instanceof i;if(!t&&!M.call(Writable,this))return new Writable(e);this._writableState=new WritableState(e,this,t);this.writable=true;if(e){if(typeof e.write===\"function\")this._write=e.write;if(typeof e.writev===\"function\")this._writev=e.writev;if(typeof e.destroy===\"function\")this._destroy=e.destroy;if(typeof e.final===\"function\")this._final=e.final}a.call(this)}Writable.prototype.pipe=function(){w(this,new b)};function writeAfterEnd(e,t){var r=new g;w(e,r);process.nextTick(t,r)}function validChunk(e,t,r,i){var n;if(r===null){n=new y}else if(typeof r!==\"string\"&&!t.objectMode){n=new l(\"chunk\",[\"string\",\"Buffer\"],r)}if(n){w(e,n);process.nextTick(i,n);return false}return true}Writable.prototype.write=function(e,t,r){var i=this._writableState;var n=false;var a=!i.objectMode&&_isUint8Array(e);if(a&&!s.isBuffer(e)){e=_uint8ArrayToBuffer(e)}if(typeof t===\"function\"){r=t;t=null}if(a)t=\"buffer\";else if(!t)t=i.defaultEncoding;if(typeof r!==\"function\")r=nop;if(i.ending)writeAfterEnd(this,r);else if(a||validChunk(this,i,e,r)){i.pendingcb++;n=writeOrBuffer(this,i,a,e,t,r)}return n};Writable.prototype.cork=function(){this._writableState.corked++};Writable.prototype.uncork=function(){var e=this._writableState;if(e.corked){e.corked--;if(!e.writing&&!e.corked&&!e.bufferProcessing&&e.bufferedRequest)clearBuffer(this,e)}};Writable.prototype.setDefaultEncoding=function setDefaultEncoding(e){if(typeof e===\"string\")e=e.toLowerCase();if(!([\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((e+\"\").toLowerCase())>-1))throw new _(e);this._writableState.defaultEncoding=e;return this};Object.defineProperty(Writable.prototype,\"writableBuffer\",{enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer()}});function decodeChunk(e,t,r){if(!e.objectMode&&e.decodeStrings!==false&&typeof t===\"string\"){t=s.from(t,r)}return t}Object.defineProperty(Writable.prototype,\"writableHighWaterMark\",{enumerable:false,get:function get(){return this._writableState.highWaterMark}});function writeOrBuffer(e,t,r,i,n,a){if(!r){var s=decodeChunk(t,i,n);if(i!==s){r=true;n=\"buffer\";i=s}}var o=t.objectMode?1:i.length;t.length+=o;var h=t.length<t.highWaterMark;if(!h)t.needDrain=true;if(t.writing||t.corked){var u=t.lastBufferedRequest;t.lastBufferedRequest={chunk:i,encoding:n,isBuf:r,callback:a,next:null};if(u){u.next=t.lastBufferedRequest}else{t.bufferedRequest=t.lastBufferedRequest}t.bufferedRequestCount+=1}else{doWrite(e,t,false,o,i,n,a)}return h}function doWrite(e,t,r,i,n,a,s){t.writelen=i;t.writecb=s;t.writing=true;t.sync=true;if(t.destroyed)t.onwrite(new m(\"write\"));else if(r)e._writev(n,t.onwrite);else e._write(n,a,t.onwrite);t.sync=false}function onwriteError(e,t,r,i,n){--t.pendingcb;if(r){process.nextTick(n,i);process.nextTick(finishMaybe,e,t);e._writableState.errorEmitted=true;w(e,i)}else{n(i);e._writableState.errorEmitted=true;w(e,i);finishMaybe(e,t)}}function onwriteStateUpdate(e){e.writing=false;e.writecb=null;e.length-=e.writelen;e.writelen=0}function onwrite(e,t){var r=e._writableState;var i=r.sync;var n=r.writecb;if(typeof n!==\"function\")throw new v;onwriteStateUpdate(r);if(t)onwriteError(e,r,i,t,n);else{var a=needFinish(r)||e.destroyed;if(!a&&!r.corked&&!r.bufferProcessing&&r.bufferedRequest){clearBuffer(e,r)}if(i){process.nextTick(afterWrite,e,r,a,n)}else{afterWrite(e,r,a,n)}}}function afterWrite(e,t,r,i){if(!r)onwriteDrain(e,t);t.pendingcb--;i();finishMaybe(e,t)}function onwriteDrain(e,t){if(t.length===0&&t.needDrain){t.needDrain=false;e.emit(\"drain\")}}function clearBuffer(e,t){t.bufferProcessing=true;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var i=t.bufferedRequestCount;var n=new Array(i);var a=t.corkedRequestsFree;a.entry=r;var s=0;var o=true;while(r){n[s]=r;if(!r.isBuf)o=false;r=r.next;s+=1}n.allBuffers=o;doWrite(e,t,true,t.length,n,\"\",a.finish);t.pendingcb++;t.lastBufferedRequest=null;if(a.next){t.corkedRequestsFree=a.next;a.next=null}else{t.corkedRequestsFree=new CorkedRequest(t)}t.bufferedRequestCount=0}else{while(r){var h=r.chunk;var u=r.encoding;var d=r.callback;var c=t.objectMode?1:h.length;doWrite(e,t,false,c,h,u,d);r=r.next;t.bufferedRequestCount--;if(t.writing){break}}if(r===null)t.lastBufferedRequest=null}t.bufferedRequest=r;t.bufferProcessing=false}Writable.prototype._write=function(e,t,r){r(new p(\"_write()\"))};Writable.prototype._writev=null;Writable.prototype.end=function(e,t,r){var i=this._writableState;if(typeof e===\"function\"){r=e;e=null;t=null}else if(typeof t===\"function\"){r=t;t=null}if(e!==null&&e!==undefined)this.write(e,t);if(i.corked){i.corked=1;this.uncork()}if(!i.ending)endWritable(this,i,r);return this};Object.defineProperty(Writable.prototype,\"writableLength\",{enumerable:false,get:function get(){return this._writableState.length}});function needFinish(e){return e.ending&&e.length===0&&e.bufferedRequest===null&&!e.finished&&!e.writing}function callFinal(e,t){e._final((function(r){t.pendingcb--;if(r){w(e,r)}t.prefinished=true;e.emit(\"prefinish\");finishMaybe(e,t)}))}function prefinish(e,t){if(!t.prefinished&&!t.finalCalled){if(typeof e._final===\"function\"&&!t.destroyed){t.pendingcb++;t.finalCalled=true;process.nextTick(callFinal,e,t)}else{t.prefinished=true;e.emit(\"prefinish\")}}}function finishMaybe(e,t){var r=needFinish(t);if(r){prefinish(e,t);if(t.pendingcb===0){t.finished=true;e.emit(\"finish\");if(t.autoDestroy){var i=e._readableState;if(!i||i.autoDestroy&&i.endEmitted){e.destroy()}}}}return r}function endWritable(e,t,r){t.ending=true;finishMaybe(e,t);if(r){if(t.finished)process.nextTick(r);else e.once(\"finish\",r)}t.ended=true;e.writable=false}function onCorkedFinish(e,t,r){var i=e.entry;e.entry=null;while(i){var n=i.callback;t.pendingcb--;n(r);i=i.next}t.corkedRequestsFree.next=e}Object.defineProperty(Writable.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._writableState===undefined){return false}return this._writableState.destroyed},set:function set(e){if(!this._writableState){return}this._writableState.destroyed=e}});Writable.prototype.destroy=h.destroy;Writable.prototype._undestroy=h.undestroy;Writable.prototype._destroy=function(e,t){t(e)}},6871:function(e,t,r){\"use strict\";var i;function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}var n=r(9698);var a=Symbol(\"lastResolve\");var s=Symbol(\"lastReject\");var o=Symbol(\"error\");var h=Symbol(\"ended\");var u=Symbol(\"lastPromise\");var d=Symbol(\"handlePromise\");var c=Symbol(\"stream\");function createIterResult(e,t){return{value:e,done:t}}function readAndResolve(e){var t=e[a];if(t!==null){var r=e[c].read();if(r!==null){e[u]=null;e[a]=null;e[s]=null;t(createIterResult(r,false))}}}function onReadable(e){process.nextTick(readAndResolve,e)}function wrapForNext(e,t){return function(r,i){e.then((function(){if(t[h]){r(createIterResult(undefined,true));return}t[d](r,i)}),i)}}var l=Object.getPrototypeOf((function(){}));var p=Object.setPrototypeOf((i={get stream(){return this[c]},next:function next(){var e=this;var t=this[o];if(t!==null){return Promise.reject(t)}if(this[h]){return Promise.resolve(createIterResult(undefined,true))}if(this[c].destroyed){return new Promise((function(t,r){process.nextTick((function(){if(e[o]){r(e[o])}else{t(createIterResult(undefined,true))}}))}))}var r=this[u];var i;if(r){i=new Promise(wrapForNext(r,this))}else{var n=this[c].read();if(n!==null){return Promise.resolve(createIterResult(n,false))}i=new Promise(this[d])}this[u]=i;return i}},_defineProperty(i,Symbol.asyncIterator,(function(){return this})),_defineProperty(i,\"return\",(function _return(){var e=this;return new Promise((function(t,r){e[c].destroy(null,(function(e){if(e){r(e);return}t(createIterResult(undefined,true))}))}))})),i),l);var v=function createReadableStreamAsyncIterator(e){var t;var r=Object.create(p,(t={},_defineProperty(t,c,{value:e,writable:true}),_defineProperty(t,a,{value:null,writable:true}),_defineProperty(t,s,{value:null,writable:true}),_defineProperty(t,o,{value:null,writable:true}),_defineProperty(t,h,{value:e._readableState.endEmitted,writable:true}),_defineProperty(t,d,{value:function value(e,t){var i=r[c].read();if(i){r[u]=null;r[a]=null;r[s]=null;e(createIterResult(i,false))}else{r[a]=e;r[s]=t}},writable:true}),t));r[u]=null;n(e,(function(e){if(e&&e.code!==\"ERR_STREAM_PREMATURE_CLOSE\"){var t=r[s];if(t!==null){r[u]=null;r[a]=null;r[s]=null;t(e)}r[o]=e;return}var i=r[a];if(i!==null){r[u]=null;r[a]=null;r[s]=null;i(createIterResult(undefined,true))}r[h]=true}));e.on(\"readable\",onReadable.bind(null,r));return r};e.exports=v},4379:function(e,t,r){\"use strict\";function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);if(t)i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}));r.push.apply(r,i)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}function _classCallCheck(e,t){if(!(e instanceof t)){throw new TypeError(\"Cannot call a class as a function\")}}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var i=t[r];i.enumerable=i.enumerable||false;i.configurable=true;if(\"value\"in i)i.writable=true;Object.defineProperty(e,i.key,i)}}function _createClass(e,t,r){if(t)_defineProperties(e.prototype,t);if(r)_defineProperties(e,r);return e}var i=r(4300),n=i.Buffer;var a=r(3837),s=a.inspect;var o=s&&s.custom||\"inspect\";function copyBuffer(e,t,r){n.prototype.copy.call(e,t,r)}e.exports=function(){function BufferList(){_classCallCheck(this,BufferList);this.head=null;this.tail=null;this.length=0}_createClass(BufferList,[{key:\"push\",value:function push(e){var t={data:e,next:null};if(this.length>0)this.tail.next=t;else this.head=t;this.tail=t;++this.length}},{key:\"unshift\",value:function unshift(e){var t={data:e,next:this.head};if(this.length===0)this.tail=t;this.head=t;++this.length}},{key:\"shift\",value:function shift(){if(this.length===0)return;var e=this.head.data;if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;--this.length;return e}},{key:\"clear\",value:function clear(){this.head=this.tail=null;this.length=0}},{key:\"join\",value:function join(e){if(this.length===0)return\"\";var t=this.head;var r=\"\"+t.data;while(t=t.next){r+=e+t.data}return r}},{key:\"concat\",value:function concat(e){if(this.length===0)return n.alloc(0);var t=n.allocUnsafe(e>>>0);var r=this.head;var i=0;while(r){copyBuffer(r.data,t,i);i+=r.data.length;r=r.next}return t}},{key:\"consume\",value:function consume(e,t){var r;if(e<this.head.data.length){r=this.head.data.slice(0,e);this.head.data=this.head.data.slice(e)}else if(e===this.head.data.length){r=this.shift()}else{r=t?this._getString(e):this._getBuffer(e)}return r}},{key:\"first\",value:function first(){return this.head.data}},{key:\"_getString\",value:function _getString(e){var t=this.head;var r=1;var i=t.data;e-=i.length;while(t=t.next){var n=t.data;var a=e>n.length?n.length:e;if(a===n.length)i+=n;else i+=n.slice(0,e);e-=a;if(e===0){if(a===n.length){++r;if(t.next)this.head=t.next;else this.head=this.tail=null}else{this.head=t;t.data=n.slice(a)}break}++r}this.length-=r;return i}},{key:\"_getBuffer\",value:function _getBuffer(e){var t=n.allocUnsafe(e);var r=this.head;var i=1;r.data.copy(t);e-=r.data.length;while(r=r.next){var a=r.data;var s=e>a.length?a.length:e;a.copy(t,t.length-e,0,s);e-=s;if(e===0){if(s===a.length){++i;if(r.next)this.head=r.next;else this.head=this.tail=null}else{this.head=r;r.data=a.slice(s)}break}++i}this.length-=i;return t}},{key:o,value:function value(e,t){return s(this,_objectSpread({},t,{depth:0,customInspect:false}))}}]);return BufferList}()},7025:function(e){\"use strict\";function destroy(e,t){var r=this;var i=this._readableState&&this._readableState.destroyed;var n=this._writableState&&this._writableState.destroyed;if(i||n){if(t){t(e)}else if(e){if(!this._writableState){process.nextTick(emitErrorNT,this,e)}else if(!this._writableState.errorEmitted){this._writableState.errorEmitted=true;process.nextTick(emitErrorNT,this,e)}}return this}if(this._readableState){this._readableState.destroyed=true}if(this._writableState){this._writableState.destroyed=true}this._destroy(e||null,(function(e){if(!t&&e){if(!r._writableState){process.nextTick(emitErrorAndCloseNT,r,e)}else if(!r._writableState.errorEmitted){r._writableState.errorEmitted=true;process.nextTick(emitErrorAndCloseNT,r,e)}else{process.nextTick(emitCloseNT,r)}}else if(t){process.nextTick(emitCloseNT,r);t(e)}else{process.nextTick(emitCloseNT,r)}}));return this}function emitErrorAndCloseNT(e,t){emitErrorNT(e,t);emitCloseNT(e)}function emitCloseNT(e){if(e._writableState&&!e._writableState.emitClose)return;if(e._readableState&&!e._readableState.emitClose)return;e.emit(\"close\")}function undestroy(){if(this._readableState){this._readableState.destroyed=false;this._readableState.reading=false;this._readableState.ended=false;this._readableState.endEmitted=false}if(this._writableState){this._writableState.destroyed=false;this._writableState.ended=false;this._writableState.ending=false;this._writableState.finalCalled=false;this._writableState.prefinished=false;this._writableState.finished=false;this._writableState.errorEmitted=false}}function emitErrorNT(e,t){e.emit(\"error\",t)}function errorOrDestroy(e,t){var r=e._readableState;var i=e._writableState;if(r&&r.autoDestroy||i&&i.autoDestroy)e.destroy(t);else e.emit(\"error\",t)}e.exports={destroy:destroy,undestroy:undestroy,errorOrDestroy:errorOrDestroy}},9698:function(e,t,r){\"use strict\";var i=r(4646).q.ERR_STREAM_PREMATURE_CLOSE;function once(e){var t=false;return function(){if(t)return;t=true;for(var r=arguments.length,i=new Array(r),n=0;n<r;n++){i[n]=arguments[n]}e.apply(this,i)}}function noop(){}function isRequest(e){return e.setHeader&&typeof e.abort===\"function\"}function eos(e,t,r){if(typeof t===\"function\")return eos(e,null,t);if(!t)t={};r=once(r||noop);var n=t.readable||t.readable!==false&&e.readable;var a=t.writable||t.writable!==false&&e.writable;var s=function onlegacyfinish(){if(!e.writable)h()};var o=e._writableState&&e._writableState.finished;var h=function onfinish(){a=false;o=true;if(!n)r.call(e)};var u=e._readableState&&e._readableState.endEmitted;var d=function onend(){n=false;u=true;if(!a)r.call(e)};var c=function onerror(t){r.call(e,t)};var l=function onclose(){var t;if(n&&!u){if(!e._readableState||!e._readableState.ended)t=new i;return r.call(e,t)}if(a&&!o){if(!e._writableState||!e._writableState.ended)t=new i;return r.call(e,t)}};var p=function onrequest(){e.req.on(\"finish\",h)};if(isRequest(e)){e.on(\"complete\",h);e.on(\"abort\",l);if(e.req)p();else e.on(\"request\",p)}else if(a&&!e._writableState){e.on(\"end\",s);e.on(\"close\",s)}e.on(\"end\",d);e.on(\"finish\",h);if(t.error!==false)e.on(\"error\",c);e.on(\"close\",l);return function(){e.removeListener(\"complete\",h);e.removeListener(\"abort\",l);e.removeListener(\"request\",p);if(e.req)e.req.removeListener(\"finish\",h);e.removeListener(\"end\",s);e.removeListener(\"close\",s);e.removeListener(\"finish\",h);e.removeListener(\"end\",d);e.removeListener(\"error\",c);e.removeListener(\"close\",l)}}e.exports=eos},9727:function(e,t,r){\"use strict\";function asyncGeneratorStep(e,t,r,i,n,a,s){try{var o=e[a](s);var h=o.value}catch(e){r(e);return}if(o.done){t(h)}else{Promise.resolve(h).then(i,n)}}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(i,n){var a=e.apply(t,r);function _next(e){asyncGeneratorStep(a,i,n,_next,_throw,\"next\",e)}function _throw(e){asyncGeneratorStep(a,i,n,_next,_throw,\"throw\",e)}_next(undefined)}))}}function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);if(t)i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}));r.push.apply(r,i)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}var i=r(4646).q.ERR_INVALID_ARG_TYPE;function from(e,t,r){var n;if(t&&typeof t.next===\"function\"){n=t}else if(t&&t[Symbol.asyncIterator])n=t[Symbol.asyncIterator]();else if(t&&t[Symbol.iterator])n=t[Symbol.iterator]();else throw new i(\"iterable\",[\"Iterable\"],t);var a=new e(_objectSpread({objectMode:true},r));var s=false;a._read=function(){if(!s){s=true;next()}};function next(){return _next2.apply(this,arguments)}function _next2(){_next2=_asyncToGenerator((function*(){try{var e=yield n.next(),t=e.value,r=e.done;if(r){a.push(null)}else if(a.push(yield t)){next()}else{s=false}}catch(e){a.destroy(e)}}));return _next2.apply(this,arguments)}return a}e.exports=from},8442:function(e,t,r){\"use strict\";var i;function once(e){var t=false;return function(){if(t)return;t=true;e.apply(void 0,arguments)}}var n=r(4646).q,a=n.ERR_MISSING_ARGS,s=n.ERR_STREAM_DESTROYED;function noop(e){if(e)throw e}function isRequest(e){return e.setHeader&&typeof e.abort===\"function\"}function destroyer(e,t,n,a){a=once(a);var o=false;e.on(\"close\",(function(){o=true}));if(i===undefined)i=r(9698);i(e,{readable:t,writable:n},(function(e){if(e)return a(e);o=true;a()}));var h=false;return function(t){if(o)return;if(h)return;h=true;if(isRequest(e))return e.abort();if(typeof e.destroy===\"function\")return e.destroy();a(t||new s(\"pipe\"))}}function call(e){e()}function pipe(e,t){return e.pipe(t)}function popCallback(e){if(!e.length)return noop;if(typeof e[e.length-1]!==\"function\")return noop;return e.pop()}function pipeline(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++){t[r]=arguments[r]}var i=popCallback(t);if(Array.isArray(t[0]))t=t[0];if(t.length<2){throw new a(\"streams\")}var n;var s=t.map((function(e,r){var a=r<t.length-1;var o=r>0;return destroyer(e,a,o,(function(e){if(!n)n=e;if(e)s.forEach(call);if(a)return;s.forEach(call);i(n)}))}));return t.reduce(pipe)}e.exports=pipeline},6776:function(e,t,r){\"use strict\";var i=r(4646).q.ERR_INVALID_OPT_VALUE;function highWaterMarkFrom(e,t,r){return e.highWaterMark!=null?e.highWaterMark:t?e[r]:null}function getHighWaterMark(e,t,r,n){var a=highWaterMarkFrom(t,n,r);if(a!=null){if(!(isFinite(a)&&Math.floor(a)===a)||a<0){var s=n?r:\"highWaterMark\";throw new i(s,a)}return Math.floor(a)}return e.objectMode?16:16*1024}e.exports={getHighWaterMark:getHighWaterMark}},4678:function(e,t,r){e.exports=r(2781)},3726:function(e,t,r){var i=r(2781);if(process.env.READABLE_STREAM===\"disable\"&&i){e.exports=i.Readable;Object.assign(e.exports,i);e.exports.Stream=i}else{t=e.exports=r(1709);t.Stream=i||t;t.Readable=t;t.Writable=r(7337);t.Duplex=r(2403);t.Transform=r(1170);t.PassThrough=r(7889);t.finished=r(9698);t.pipeline=r(8442)}},3225:function(e,t,r){\"use strict\";var i=r(4300).Buffer;var n=r(3782);var a=r(9029);var s=new Array(16);var o=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13];var h=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11];var u=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6];var d=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];var c=[0,1518500249,1859775393,2400959708,2840853838];var l=[1352829926,1548603684,1836072691,2053994217,0];function RIPEMD160(){a.call(this,64);this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878;this._e=3285377520}n(RIPEMD160,a);RIPEMD160.prototype._update=function(){var e=s;for(var t=0;t<16;++t)e[t]=this._block.readInt32LE(t*4);var r=this._a|0;var i=this._b|0;var n=this._c|0;var a=this._d|0;var p=this._e|0;var v=this._a|0;var b=this._b|0;var m=this._c|0;var y=this._d|0;var g=this._e|0;for(var _=0;_<80;_+=1){var w;var M;if(_<16){w=fn1(r,i,n,a,p,e[o[_]],c[0],u[_]);M=fn5(v,b,m,y,g,e[h[_]],l[0],d[_])}else if(_<32){w=fn2(r,i,n,a,p,e[o[_]],c[1],u[_]);M=fn4(v,b,m,y,g,e[h[_]],l[1],d[_])}else if(_<48){w=fn3(r,i,n,a,p,e[o[_]],c[2],u[_]);M=fn3(v,b,m,y,g,e[h[_]],l[2],d[_])}else if(_<64){w=fn4(r,i,n,a,p,e[o[_]],c[3],u[_]);M=fn2(v,b,m,y,g,e[h[_]],l[3],d[_])}else{w=fn5(r,i,n,a,p,e[o[_]],c[4],u[_]);M=fn1(v,b,m,y,g,e[h[_]],l[4],d[_])}r=p;p=a;a=rotl(n,10);n=i;i=w;v=g;g=y;y=rotl(m,10);m=b;b=M}var B=this._b+n+y|0;this._b=this._c+a+g|0;this._c=this._d+p+v|0;this._d=this._e+r+b|0;this._e=this._a+i+m|0;this._a=B};RIPEMD160.prototype._digest=function(){this._block[this._blockOffset++]=128;if(this._blockOffset>56){this._block.fill(0,this._blockOffset,64);this._update();this._blockOffset=0}this._block.fill(0,this._blockOffset,56);this._block.writeUInt32LE(this._length[0],56);this._block.writeUInt32LE(this._length[1],60);this._update();var e=i.alloc?i.alloc(20):new i(20);e.writeInt32LE(this._a,0);e.writeInt32LE(this._b,4);e.writeInt32LE(this._c,8);e.writeInt32LE(this._d,12);e.writeInt32LE(this._e,16);return e};function rotl(e,t){return e<<t|e>>>32-t}function fn1(e,t,r,i,n,a,s,o){return rotl(e+(t^r^i)+a+s|0,o)+n|0}function fn2(e,t,r,i,n,a,s,o){return rotl(e+(t&r|~t&i)+a+s|0,o)+n|0}function fn3(e,t,r,i,n,a,s,o){return rotl(e+((t|~r)^i)+a+s|0,o)+n|0}function fn4(e,t,r,i,n,a,s,o){return rotl(e+(t&i|r&~i)+a+s|0,o)+n|0}function fn5(e,t,r,i,n,a,s,o){return rotl(e+(t^(r|~i))+a+s|0,o)+n|0}e.exports=RIPEMD160},5055:function(e,t,r){var i=r(4300);var n=i.Buffer;function copyProps(e,t){for(var r in e){t[r]=e[r]}}if(n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow){e.exports=i}else{copyProps(i,t);t.Buffer=SafeBuffer}function SafeBuffer(e,t,r){return n(e,t,r)}SafeBuffer.prototype=Object.create(n.prototype);copyProps(n,SafeBuffer);SafeBuffer.from=function(e,t,r){if(typeof e===\"number\"){throw new TypeError(\"Argument must not be a number\")}return n(e,t,r)};SafeBuffer.alloc=function(e,t,r){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}var i=n(e);if(t!==undefined){if(typeof r===\"string\"){i.fill(t,r)}else{i.fill(t)}}else{i.fill(0)}return i};SafeBuffer.allocUnsafe=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return n(e)};SafeBuffer.allocUnsafeSlow=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return i.SlowBuffer(e)}},6911:function(e,t,r){\n/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nvar i=r(4300);var n=i.Buffer;function copyProps(e,t){for(var r in e){t[r]=e[r]}}if(n.from&&n.alloc&&n.allocUnsafe&&n.allocUnsafeSlow){e.exports=i}else{copyProps(i,t);t.Buffer=SafeBuffer}function SafeBuffer(e,t,r){return n(e,t,r)}SafeBuffer.prototype=Object.create(n.prototype);copyProps(n,SafeBuffer);SafeBuffer.from=function(e,t,r){if(typeof e===\"number\"){throw new TypeError(\"Argument must not be a number\")}return n(e,t,r)};SafeBuffer.alloc=function(e,t,r){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}var i=n(e);if(t!==undefined){if(typeof r===\"string\"){i.fill(t,r)}else{i.fill(t)}}else{i.fill(0)}return i};SafeBuffer.allocUnsafe=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return n(e)};SafeBuffer.allocUnsafeSlow=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return i.SlowBuffer(e)}},2858:function(e,t,r){var i=r(6911).Buffer;function Hash(e,t){this._block=i.alloc(e);this._finalSize=t;this._blockSize=e;this._len=0}Hash.prototype.update=function(e,t){if(typeof e===\"string\"){t=t||\"utf8\";e=i.from(e,t)}var r=this._block;var n=this._blockSize;var a=e.length;var s=this._len;for(var o=0;o<a;){var h=s%n;var u=Math.min(a-o,n-h);for(var d=0;d<u;d++){r[h+d]=e[o+d]}s+=u;o+=u;if(s%n===0){this._update(r)}}this._len+=a;return this};Hash.prototype.digest=function(e){var t=this._len%this._blockSize;this._block[t]=128;this._block.fill(0,t+1);if(t>=this._finalSize){this._update(this._block);this._block.fill(0)}var r=this._len*8;if(r<=4294967295){this._block.writeUInt32BE(r,this._blockSize-4)}else{var i=(r&4294967295)>>>0;var n=(r-i)/4294967296;this._block.writeUInt32BE(n,this._blockSize-8);this._block.writeUInt32BE(i,this._blockSize-4)}this._update(this._block);var a=this._hash();return e?a.toString(e):a};Hash.prototype._update=function(){throw new Error(\"_update must be implemented by subclass\")};e.exports=Hash},4371:function(e,t,r){var i=e.exports=function SHA(e){e=e.toLowerCase();var t=i[e];if(!t)throw new Error(e+\" is not supported (we accept pull requests)\");return new t};i.sha=r(4018);i.sha1=r(4179);i.sha224=r(532);i.sha256=r(1843);i.sha384=r(7455);i.sha512=r(9934)},4018:function(e,t,r){var i=r(3782);var n=r(2858);var a=r(6911).Buffer;var s=[1518500249,1859775393,2400959708|0,3395469782|0];var o=new Array(80);function Sha(){this.init();this._w=o;n.call(this,64,56)}i(Sha,n);Sha.prototype.init=function(){this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878;this._e=3285377520;return this};function rotl5(e){return e<<5|e>>>27}function rotl30(e){return e<<30|e>>>2}function ft(e,t,r,i){if(e===0)return t&r|~t&i;if(e===2)return t&r|t&i|r&i;return t^r^i}Sha.prototype._update=function(e){var t=this._w;var r=this._a|0;var i=this._b|0;var n=this._c|0;var a=this._d|0;var o=this._e|0;for(var h=0;h<16;++h)t[h]=e.readInt32BE(h*4);for(;h<80;++h)t[h]=t[h-3]^t[h-8]^t[h-14]^t[h-16];for(var u=0;u<80;++u){var d=~~(u/20);var c=rotl5(r)+ft(d,i,n,a)+o+t[u]+s[d]|0;o=a;a=n;n=rotl30(i);i=r;r=c}this._a=r+this._a|0;this._b=i+this._b|0;this._c=n+this._c|0;this._d=a+this._d|0;this._e=o+this._e|0};Sha.prototype._hash=function(){var e=a.allocUnsafe(20);e.writeInt32BE(this._a|0,0);e.writeInt32BE(this._b|0,4);e.writeInt32BE(this._c|0,8);e.writeInt32BE(this._d|0,12);e.writeInt32BE(this._e|0,16);return e};e.exports=Sha},4179:function(e,t,r){var i=r(3782);var n=r(2858);var a=r(6911).Buffer;var s=[1518500249,1859775393,2400959708|0,3395469782|0];var o=new Array(80);function Sha1(){this.init();this._w=o;n.call(this,64,56)}i(Sha1,n);Sha1.prototype.init=function(){this._a=1732584193;this._b=4023233417;this._c=2562383102;this._d=271733878;this._e=3285377520;return this};function rotl1(e){return e<<1|e>>>31}function rotl5(e){return e<<5|e>>>27}function rotl30(e){return e<<30|e>>>2}function ft(e,t,r,i){if(e===0)return t&r|~t&i;if(e===2)return t&r|t&i|r&i;return t^r^i}Sha1.prototype._update=function(e){var t=this._w;var r=this._a|0;var i=this._b|0;var n=this._c|0;var a=this._d|0;var o=this._e|0;for(var h=0;h<16;++h)t[h]=e.readInt32BE(h*4);for(;h<80;++h)t[h]=rotl1(t[h-3]^t[h-8]^t[h-14]^t[h-16]);for(var u=0;u<80;++u){var d=~~(u/20);var c=rotl5(r)+ft(d,i,n,a)+o+t[u]+s[d]|0;o=a;a=n;n=rotl30(i);i=r;r=c}this._a=r+this._a|0;this._b=i+this._b|0;this._c=n+this._c|0;this._d=a+this._d|0;this._e=o+this._e|0};Sha1.prototype._hash=function(){var e=a.allocUnsafe(20);e.writeInt32BE(this._a|0,0);e.writeInt32BE(this._b|0,4);e.writeInt32BE(this._c|0,8);e.writeInt32BE(this._d|0,12);e.writeInt32BE(this._e|0,16);return e};e.exports=Sha1},532:function(e,t,r){var i=r(3782);var n=r(1843);var a=r(2858);var s=r(6911).Buffer;var o=new Array(64);function Sha224(){this.init();this._w=o;a.call(this,64,56)}i(Sha224,n);Sha224.prototype.init=function(){this._a=3238371032;this._b=914150663;this._c=812702999;this._d=4144912697;this._e=4290775857;this._f=1750603025;this._g=1694076839;this._h=3204075428;return this};Sha224.prototype._hash=function(){var e=s.allocUnsafe(28);e.writeInt32BE(this._a,0);e.writeInt32BE(this._b,4);e.writeInt32BE(this._c,8);e.writeInt32BE(this._d,12);e.writeInt32BE(this._e,16);e.writeInt32BE(this._f,20);e.writeInt32BE(this._g,24);return e};e.exports=Sha224},1843:function(e,t,r){var i=r(3782);var n=r(2858);var a=r(6911).Buffer;var s=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];var o=new Array(64);function Sha256(){this.init();this._w=o;n.call(this,64,56)}i(Sha256,n);Sha256.prototype.init=function(){this._a=1779033703;this._b=3144134277;this._c=1013904242;this._d=2773480762;this._e=1359893119;this._f=2600822924;this._g=528734635;this._h=1541459225;return this};function ch(e,t,r){return r^e&(t^r)}function maj(e,t,r){return e&t|r&(e|t)}function sigma0(e){return(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10)}function sigma1(e){return(e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7)}function gamma0(e){return(e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3}function gamma1(e){return(e>>>17|e<<15)^(e>>>19|e<<13)^e>>>10}Sha256.prototype._update=function(e){var t=this._w;var r=this._a|0;var i=this._b|0;var n=this._c|0;var a=this._d|0;var o=this._e|0;var h=this._f|0;var u=this._g|0;var d=this._h|0;for(var c=0;c<16;++c)t[c]=e.readInt32BE(c*4);for(;c<64;++c)t[c]=gamma1(t[c-2])+t[c-7]+gamma0(t[c-15])+t[c-16]|0;for(var l=0;l<64;++l){var p=d+sigma1(o)+ch(o,h,u)+s[l]+t[l]|0;var v=sigma0(r)+maj(r,i,n)|0;d=u;u=h;h=o;o=a+p|0;a=n;n=i;i=r;r=p+v|0}this._a=r+this._a|0;this._b=i+this._b|0;this._c=n+this._c|0;this._d=a+this._d|0;this._e=o+this._e|0;this._f=h+this._f|0;this._g=u+this._g|0;this._h=d+this._h|0};Sha256.prototype._hash=function(){var e=a.allocUnsafe(32);e.writeInt32BE(this._a,0);e.writeInt32BE(this._b,4);e.writeInt32BE(this._c,8);e.writeInt32BE(this._d,12);e.writeInt32BE(this._e,16);e.writeInt32BE(this._f,20);e.writeInt32BE(this._g,24);e.writeInt32BE(this._h,28);return e};e.exports=Sha256},7455:function(e,t,r){var i=r(3782);var n=r(9934);var a=r(2858);var s=r(6911).Buffer;var o=new Array(160);function Sha384(){this.init();this._w=o;a.call(this,128,112)}i(Sha384,n);Sha384.prototype.init=function(){this._ah=3418070365;this._bh=1654270250;this._ch=2438529370;this._dh=355462360;this._eh=1731405415;this._fh=2394180231;this._gh=3675008525;this._hh=1203062813;this._al=3238371032;this._bl=914150663;this._cl=812702999;this._dl=4144912697;this._el=4290775857;this._fl=1750603025;this._gl=1694076839;this._hl=3204075428;return this};Sha384.prototype._hash=function(){var e=s.allocUnsafe(48);function writeInt64BE(t,r,i){e.writeInt32BE(t,i);e.writeInt32BE(r,i+4)}writeInt64BE(this._ah,this._al,0);writeInt64BE(this._bh,this._bl,8);writeInt64BE(this._ch,this._cl,16);writeInt64BE(this._dh,this._dl,24);writeInt64BE(this._eh,this._el,32);writeInt64BE(this._fh,this._fl,40);return e};e.exports=Sha384},9934:function(e,t,r){var i=r(3782);var n=r(2858);var a=r(6911).Buffer;var s=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];var o=new Array(160);function Sha512(){this.init();this._w=o;n.call(this,128,112)}i(Sha512,n);Sha512.prototype.init=function(){this._ah=1779033703;this._bh=3144134277;this._ch=1013904242;this._dh=2773480762;this._eh=1359893119;this._fh=2600822924;this._gh=528734635;this._hh=1541459225;this._al=4089235720;this._bl=2227873595;this._cl=4271175723;this._dl=1595750129;this._el=2917565137;this._fl=725511199;this._gl=4215389547;this._hl=327033209;return this};function Ch(e,t,r){return r^e&(t^r)}function maj(e,t,r){return e&t|r&(e|t)}function sigma0(e,t){return(e>>>28|t<<4)^(t>>>2|e<<30)^(t>>>7|e<<25)}function sigma1(e,t){return(e>>>14|t<<18)^(e>>>18|t<<14)^(t>>>9|e<<23)}function Gamma0(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^e>>>7}function Gamma0l(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^(e>>>7|t<<25)}function Gamma1(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^e>>>6}function Gamma1l(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^(e>>>6|t<<26)}function getCarry(e,t){return e>>>0<t>>>0?1:0}Sha512.prototype._update=function(e){var t=this._w;var r=this._ah|0;var i=this._bh|0;var n=this._ch|0;var a=this._dh|0;var o=this._eh|0;var h=this._fh|0;var u=this._gh|0;var d=this._hh|0;var c=this._al|0;var l=this._bl|0;var p=this._cl|0;var v=this._dl|0;var b=this._el|0;var m=this._fl|0;var y=this._gl|0;var g=this._hl|0;for(var _=0;_<32;_+=2){t[_]=e.readInt32BE(_*4);t[_+1]=e.readInt32BE(_*4+4)}for(;_<160;_+=2){var w=t[_-15*2];var M=t[_-15*2+1];var B=Gamma0(w,M);var E=Gamma0l(M,w);w=t[_-2*2];M=t[_-2*2+1];var k=Gamma1(w,M);var A=Gamma1l(M,w);var N=t[_-7*2];var P=t[_-7*2+1];var x=t[_-16*2];var I=t[_-16*2+1];var C=E+P|0;var D=B+N+getCarry(C,E)|0;C=C+A|0;D=D+k+getCarry(C,A)|0;C=C+I|0;D=D+x+getCarry(C,I)|0;t[_]=D;t[_+1]=C}for(var T=0;T<160;T+=2){D=t[T];C=t[T+1];var j=maj(r,i,n);var q=maj(c,l,p);var O=sigma0(r,c);var H=sigma0(c,r);var L=sigma1(o,b);var z=sigma1(b,o);var F=s[T];var U=s[T+1];var W=Ch(o,h,u);var V=Ch(b,m,y);var G=g+z|0;var J=d+L+getCarry(G,g)|0;G=G+V|0;J=J+W+getCarry(G,V)|0;G=G+U|0;J=J+F+getCarry(G,U)|0;G=G+C|0;J=J+D+getCarry(G,C)|0;var Z=H+q|0;var X=O+j+getCarry(Z,H)|0;d=u;g=y;u=h;y=m;h=o;m=b;b=v+G|0;o=a+J+getCarry(b,v)|0;a=n;v=p;n=i;p=l;i=r;l=c;c=G+Z|0;r=J+X+getCarry(c,G)|0}this._al=this._al+c|0;this._bl=this._bl+l|0;this._cl=this._cl+p|0;this._dl=this._dl+v|0;this._el=this._el+b|0;this._fl=this._fl+m|0;this._gl=this._gl+y|0;this._hl=this._hl+g|0;this._ah=this._ah+r+getCarry(this._al,c)|0;this._bh=this._bh+i+getCarry(this._bl,l)|0;this._ch=this._ch+n+getCarry(this._cl,p)|0;this._dh=this._dh+a+getCarry(this._dl,v)|0;this._eh=this._eh+o+getCarry(this._el,b)|0;this._fh=this._fh+h+getCarry(this._fl,m)|0;this._gh=this._gh+u+getCarry(this._gl,y)|0;this._hh=this._hh+d+getCarry(this._hl,g)|0};Sha512.prototype._hash=function(){var e=a.allocUnsafe(64);function writeInt64BE(t,r,i){e.writeInt32BE(t,i);e.writeInt32BE(r,i+4)}writeInt64BE(this._ah,this._al,0);writeInt64BE(this._bh,this._bl,8);writeInt64BE(this._ch,this._cl,16);writeInt64BE(this._dh,this._dl,24);writeInt64BE(this._eh,this._el,32);writeInt64BE(this._fh,this._fl,40);writeInt64BE(this._gh,this._gl,48);writeInt64BE(this._hh,this._hl,56);return e};e.exports=Sha512},3704:function(e,t,r){\"use strict\";var i=r(5055).Buffer;var n=i.isEncoding||function(e){e=\"\"+e;switch(e&&e.toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":case\"raw\":return true;default:return false}};function _normalizeEncoding(e){if(!e)return\"utf8\";var t;while(true){switch(e){case\"utf8\":case\"utf-8\":return\"utf8\";case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return\"utf16le\";case\"latin1\":case\"binary\":return\"latin1\";case\"base64\":case\"ascii\":case\"hex\":return e;default:if(t)return;e=(\"\"+e).toLowerCase();t=true}}}function normalizeEncoding(e){var t=_normalizeEncoding(e);if(typeof t!==\"string\"&&(i.isEncoding===n||!n(e)))throw new Error(\"Unknown encoding: \"+e);return t||e}t.s=StringDecoder;function StringDecoder(e){this.encoding=normalizeEncoding(e);var t;switch(this.encoding){case\"utf16le\":this.text=utf16Text;this.end=utf16End;t=4;break;case\"utf8\":this.fillLast=utf8FillLast;t=4;break;case\"base64\":this.text=base64Text;this.end=base64End;t=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return}this.lastNeed=0;this.lastTotal=0;this.lastChar=i.allocUnsafe(t)}StringDecoder.prototype.write=function(e){if(e.length===0)return\"\";var t;var r;if(this.lastNeed){t=this.fillLast(e);if(t===undefined)return\"\";r=this.lastNeed;this.lastNeed=0}else{r=0}if(r<e.length)return t?t+this.text(e,r):this.text(e,r);return t||\"\"};StringDecoder.prototype.end=utf8End;StringDecoder.prototype.text=utf8Text;StringDecoder.prototype.fillLast=function(e){if(this.lastNeed<=e.length){e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length);this.lastNeed-=e.length};function utf8CheckByte(e){if(e<=127)return 0;else if(e>>5===6)return 2;else if(e>>4===14)return 3;else if(e>>3===30)return 4;return e>>6===2?-1:-2}function utf8CheckIncomplete(e,t,r){var i=t.length-1;if(i<r)return 0;var n=utf8CheckByte(t[i]);if(n>=0){if(n>0)e.lastNeed=n-1;return n}if(--i<r||n===-2)return 0;n=utf8CheckByte(t[i]);if(n>=0){if(n>0)e.lastNeed=n-2;return n}if(--i<r||n===-2)return 0;n=utf8CheckByte(t[i]);if(n>=0){if(n>0){if(n===2)n=0;else e.lastNeed=n-3}return n}return 0}function utf8CheckExtraBytes(e,t,r){if((t[0]&192)!==128){e.lastNeed=0;return\"�\"}if(e.lastNeed>1&&t.length>1){if((t[1]&192)!==128){e.lastNeed=1;return\"�\"}if(e.lastNeed>2&&t.length>2){if((t[2]&192)!==128){e.lastNeed=2;return\"�\"}}}}function utf8FillLast(e){var t=this.lastTotal-this.lastNeed;var r=utf8CheckExtraBytes(this,e,t);if(r!==undefined)return r;if(this.lastNeed<=e.length){e.copy(this.lastChar,t,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}e.copy(this.lastChar,t,0,e.length);this.lastNeed-=e.length}function utf8Text(e,t){var r=utf8CheckIncomplete(this,e,t);if(!this.lastNeed)return e.toString(\"utf8\",t);this.lastTotal=r;var i=e.length-(r-this.lastNeed);e.copy(this.lastChar,0,i);return e.toString(\"utf8\",t,i)}function utf8End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed)return t+\"�\";return t}function utf16Text(e,t){if((e.length-t)%2===0){var r=e.toString(\"utf16le\",t);if(r){var i=r.charCodeAt(r.length-1);if(i>=55296&&i<=56319){this.lastNeed=2;this.lastTotal=4;this.lastChar[0]=e[e.length-2];this.lastChar[1]=e[e.length-1];return r.slice(0,-1)}}return r}this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=e[e.length-1];return e.toString(\"utf16le\",t,e.length-1)}function utf16End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return t+this.lastChar.toString(\"utf16le\",0,r)}return t}function base64Text(e,t){var r=(e.length-t)%3;if(r===0)return e.toString(\"base64\",t);this.lastNeed=3-r;this.lastTotal=3;if(r===1){this.lastChar[0]=e[e.length-1]}else{this.lastChar[0]=e[e.length-2];this.lastChar[1]=e[e.length-1]}return e.toString(\"base64\",t,e.length-r)}function base64End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed)return t+this.lastChar.toString(\"base64\",0,3-this.lastNeed);return t}function simpleWrite(e){return e.toString(this.encoding)}function simpleEnd(e){return e&&e.length?this.write(e):\"\"}},6769:function(e){e.exports=deprecate;function deprecate(e,t){if(config(\"noDeprecation\")){return e}var r=false;function deprecated(){if(!r){if(config(\"throwDeprecation\")){throw new Error(t)}else if(config(\"traceDeprecation\")){console.trace(t)}else{console.warn(t)}r=true}return e.apply(this,arguments)}return deprecated}function config(e){try{if(!__webpack_require__.g.localStorage)return false}catch(e){return false}var t=__webpack_require__.g.localStorage[e];if(null==t)return false;return String(t).toLowerCase()===\"true\"}},4300:function(e){\"use strict\";e.exports=__webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")},6113:function(e){\"use strict\";e.exports=__webpack_require__(/*! crypto */ \"(app-pages-browser)/./node_modules/next/dist/compiled/crypto-browserify/index.js\")},2361:function(e){\"use strict\";e.exports=__webpack_require__(/*! events */ \"(app-pages-browser)/./node_modules/next/dist/compiled/events/events.js\")},2781:function(e){\"use strict\";e.exports=__webpack_require__(/*! stream */ \"(app-pages-browser)/./node_modules/next/dist/compiled/stream-browserify/index.js\")},1576:function(e){\"use strict\";e.exports=__webpack_require__(/*! string_decoder */ \"(app-pages-browser)/./node_modules/string_decoder/lib/string_decoder.js\")},3837:function(e){\"use strict\";e.exports=__webpack_require__(/*! util */ \"(app-pages-browser)/./node_modules/next/dist/compiled/util/util.js\")},6144:function(e){\"use strict\";e.exports=__webpack_require__(/*! vm */ \"(app-pages-browser)/./node_modules/next/dist/compiled/vm-browserify/index.js\")},5866:function(e){\"use strict\";e.exports=JSON.parse('{\"aes-128-ecb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-192-ecb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-256-ecb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":0,\"mode\":\"ECB\",\"type\":\"block\"},\"aes-128-cbc\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-192-cbc\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-256-cbc\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes128\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes192\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes256\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CBC\",\"type\":\"block\"},\"aes-128-cfb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-192-cfb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-256-cfb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB\",\"type\":\"stream\"},\"aes-128-cfb8\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-192-cfb8\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-256-cfb8\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB8\",\"type\":\"stream\"},\"aes-128-cfb1\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-192-cfb1\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-256-cfb1\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CFB1\",\"type\":\"stream\"},\"aes-128-ofb\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-192-ofb\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-256-ofb\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"OFB\",\"type\":\"stream\"},\"aes-128-ctr\":{\"cipher\":\"AES\",\"key\":128,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-192-ctr\":{\"cipher\":\"AES\",\"key\":192,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-256-ctr\":{\"cipher\":\"AES\",\"key\":256,\"iv\":16,\"mode\":\"CTR\",\"type\":\"stream\"},\"aes-128-gcm\":{\"cipher\":\"AES\",\"key\":128,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-192-gcm\":{\"cipher\":\"AES\",\"key\":192,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"},\"aes-256-gcm\":{\"cipher\":\"AES\",\"key\":256,\"iv\":12,\"mode\":\"GCM\",\"type\":\"auth\"}}')},2908:function(e){\"use strict\";e.exports=JSON.parse('{\"sha224WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"RSA-SHA224\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha224\",\"id\":\"302d300d06096086480165030402040500041c\"},\"sha256WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"RSA-SHA256\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha256\",\"id\":\"3031300d060960864801650304020105000420\"},\"sha384WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"RSA-SHA384\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha384\",\"id\":\"3041300d060960864801650304020205000430\"},\"sha512WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA512\":{\"sign\":\"ecdsa/rsa\",\"hash\":\"sha512\",\"id\":\"3051300d060960864801650304020305000440\"},\"RSA-SHA1\":{\"sign\":\"rsa\",\"hash\":\"sha1\",\"id\":\"3021300906052b0e03021a05000414\"},\"ecdsa-with-SHA1\":{\"sign\":\"ecdsa\",\"hash\":\"sha1\",\"id\":\"\"},\"sha256\":{\"sign\":\"ecdsa\",\"hash\":\"sha256\",\"id\":\"\"},\"sha224\":{\"sign\":\"ecdsa\",\"hash\":\"sha224\",\"id\":\"\"},\"sha384\":{\"sign\":\"ecdsa\",\"hash\":\"sha384\",\"id\":\"\"},\"sha512\":{\"sign\":\"ecdsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-SHA1\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA\":{\"sign\":\"dsa\",\"hash\":\"sha1\",\"id\":\"\"},\"DSA-WITH-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-SHA224\":{\"sign\":\"dsa\",\"hash\":\"sha224\",\"id\":\"\"},\"DSA-WITH-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-SHA256\":{\"sign\":\"dsa\",\"hash\":\"sha256\",\"id\":\"\"},\"DSA-WITH-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-SHA384\":{\"sign\":\"dsa\",\"hash\":\"sha384\",\"id\":\"\"},\"DSA-WITH-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-SHA512\":{\"sign\":\"dsa\",\"hash\":\"sha512\",\"id\":\"\"},\"DSA-RIPEMD160\":{\"sign\":\"dsa\",\"hash\":\"rmd160\",\"id\":\"\"},\"ripemd160WithRSA\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"RSA-RIPEMD160\":{\"sign\":\"rsa\",\"hash\":\"rmd160\",\"id\":\"3021300906052b2403020105000414\"},\"md5WithRSAEncryption\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"},\"RSA-MD5\":{\"sign\":\"rsa\",\"hash\":\"md5\",\"id\":\"3020300c06082a864886f70d020505000410\"}}')},9267:function(e){\"use strict\";e.exports=JSON.parse('{\"1.3.132.0.10\":\"secp256k1\",\"1.3.132.0.33\":\"p224\",\"1.2.840.10045.3.1.1\":\"p192\",\"1.2.840.10045.3.1.7\":\"p256\",\"1.3.132.0.34\":\"p384\",\"1.3.132.0.35\":\"p521\"}')},7992:function(e){\"use strict\";e.exports=JSON.parse('{\"modp1\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"},\"modp2\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"},\"modp5\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"},\"modp14\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"},\"modp15\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"},\"modp16\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"},\"modp17\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"},\"modp18\":{\"gen\":\"02\",\"prime\":\"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"}}')},2531:function(e){\"use strict\";e.exports={i8:\"6.5.3\"}},2510:function(e){\"use strict\";e.exports=JSON.parse('{\"2.16.840.1.101.3.4.1.1\":\"aes-128-ecb\",\"2.16.840.1.101.3.4.1.2\":\"aes-128-cbc\",\"2.16.840.1.101.3.4.1.3\":\"aes-128-ofb\",\"2.16.840.1.101.3.4.1.4\":\"aes-128-cfb\",\"2.16.840.1.101.3.4.1.21\":\"aes-192-ecb\",\"2.16.840.1.101.3.4.1.22\":\"aes-192-cbc\",\"2.16.840.1.101.3.4.1.23\":\"aes-192-ofb\",\"2.16.840.1.101.3.4.1.24\":\"aes-192-cfb\",\"2.16.840.1.101.3.4.1.41\":\"aes-256-ecb\",\"2.16.840.1.101.3.4.1.42\":\"aes-256-cbc\",\"2.16.840.1.101.3.4.1.43\":\"aes-256-ofb\",\"2.16.840.1.101.3.4.1.44\":\"aes-256-cfb\"}')}};var t={};function __nccwpck_require__(r){var i=t[r];if(i!==undefined){return i.exports}var n=t[r]={id:r,loaded:false,exports:{}};var a=true;try{e[r].call(n.exports,n,n.exports,__nccwpck_require__);a=false}finally{if(a)delete t[r]}n.loaded=true;return n.exports}!function(){__nccwpck_require__.nmd=function(e){e.paths=[];if(!e.children)e.children=[];return e}}();if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r={};!function(){\"use strict\";var e=r;e.randomBytes=e.rng=e.pseudoRandomBytes=e.prng=__nccwpck_require__(7223);e.createHash=e.Hash=__nccwpck_require__(9739);e.createHmac=e.Hmac=__nccwpck_require__(4873);var t=__nccwpck_require__(9276);var i=Object.keys(t);var n=[\"sha1\",\"sha224\",\"sha256\",\"sha384\",\"sha512\",\"md5\",\"rmd160\"].concat(i);e.getHashes=function(){return n};var a=__nccwpck_require__(4978);e.pbkdf2=a.pbkdf2;e.pbkdf2Sync=a.pbkdf2Sync;var s=__nccwpck_require__(8996);e.Cipher=s.Cipher;e.createCipher=s.createCipher;e.Cipheriv=s.Cipheriv;e.createCipheriv=s.createCipheriv;e.Decipher=s.Decipher;e.createDecipher=s.createDecipher;e.Decipheriv=s.Decipheriv;e.createDecipheriv=s.createDecipheriv;e.getCiphers=s.getCiphers;e.listCiphers=s.listCiphers;var o=__nccwpck_require__(6587);e.DiffieHellmanGroup=o.DiffieHellmanGroup;e.createDiffieHellmanGroup=o.createDiffieHellmanGroup;e.getDiffieHellman=o.getDiffieHellman;e.createDiffieHellman=o.createDiffieHellman;e.DiffieHellman=o.DiffieHellman;var h=__nccwpck_require__(4078);e.createSign=h.createSign;e.Sign=h.Sign;e.createVerify=h.createVerify;e.Verify=h.Verify;e.createECDH=__nccwpck_require__(9942);var u=__nccwpck_require__(9783);e.publicEncrypt=u.publicEncrypt;e.privateEncrypt=u.privateEncrypt;e.publicDecrypt=u.publicDecrypt;e.privateDecrypt=u.privateDecrypt;var d=__nccwpck_require__(6445);e.randomFill=d.randomFill;e.randomFillSync=d.randomFillSync;e.createCredentials=function(){throw new Error([\"sorry, createCredentials is not implemented yet\",\"we accept pull requests\",\"https://github.com/crypto-browserify/crypto-browserify\"].join(\"\\n\"))};e.constants={DH_CHECK_P_NOT_SAFE_PRIME:2,DH_CHECK_P_NOT_PRIME:1,DH_UNABLE_TO_CHECK_GENERATOR:4,DH_NOT_SUITABLE_GENERATOR:8,NPN_ENABLED:1,ALPN_ENABLED:1,RSA_PKCS1_PADDING:1,RSA_SSLV23_PADDING:2,RSA_NO_PADDING:3,RSA_PKCS1_OAEP_PADDING:4,RSA_X931_PADDING:5,RSA_PKCS1_PSS_PADDING:6,POINT_CONVERSION_COMPRESSED:2,POINT_CONVERSION_UNCOMPRESSED:4,POINT_CONVERSION_HYBRID:6}}();module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvY3J5cHRvLWJyb3dzZXJpZnkvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7O0FBQUEsWUFBWSxPQUFPLHFCQUFxQixRQUFRLGdCQUFnQix1QkFBdUIsY0FBYyxvQkFBb0IsbUJBQW1CLG1CQUFtQixxQkFBcUIsY0FBYyxjQUFjLFFBQVEsOEJBQThCLHdCQUF3QixxQkFBcUIsWUFBWSxZQUFZLGlCQUFpQixpQkFBaUIsc0RBQXNELE1BQU0sSUFBSSw2REFBNkQsK0JBQStCLE1BQU0sSUFBSSxTQUFTLGNBQWMsb0JBQW9CLE9BQU8sNkNBQTZDLGdCQUFnQixvQkFBb0IscURBQXFELFdBQVcsc0ZBQXNGLHlCQUF5QiwrQ0FBK0Msd0NBQXdDLHFEQUFxRCxXQUFXLHNGQUFzRix5QkFBeUIsK0NBQStDLHdDQUF3QyxzQkFBc0IsY0FBYyxzQkFBc0IscUJBQXFCLDRCQUE0QixlQUFlLG1CQUFtQiwrQkFBK0IsT0FBTyxZQUFZLGNBQWMscUJBQXFCLG1CQUFtQixrQkFBa0IsNkNBQTZDLE9BQU8sMERBQTBELG9EQUFvRCxtQ0FBbUMsa0JBQWtCLHFCQUFxQixxQkFBcUIsMENBQTBDLFVBQVUsbURBQW1ELGtDQUFrQyx3REFBd0QsNkVBQTZFLG9EQUFvRCxnREFBZ0QsK0VBQStFLG1DQUFtQyxxQ0FBcUMscUJBQXFCLHVCQUF1QixlQUFlLFVBQVUsNENBQTRDLDREQUE0RCw0QkFBNEIscUJBQXFCLGNBQWMsOEJBQThCLDBEQUEwRCxzQkFBc0IsU0FBUyxRQUFRLDZCQUE2QixrRUFBa0UsYUFBYSxjQUFjLDZCQUE2QixhQUFhLDRCQUE0Qix1QkFBdUIsYUFBYSxxQkFBcUIsS0FBSywrQ0FBK0Msa0JBQWtCLGdEQUFnRCwyQkFBMkIsVUFBVSw0QkFBNEIsOEJBQThCLGdDQUFnQyxZQUFZLFlBQVksR0FBRyxLQUFLLGdEQUFnRCwyREFBMkQsb0RBQW9ELGVBQWUsVUFBVSxxQkFBcUIs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QXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLGdDQUFnQyw2QkFBNkIsYUFBYSxpQkFBaUIsaUJBQWlCLHFCQUFxQixpQkFBaUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsaUJBQWlCLGlCQUFpQixxQkFBcUIsaUJBQWlCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIsc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLGdDQUFnQyw2QkFBNkIsYUFBYSxpQkFBaUIsaUJBQWlCLHFCQUFxQixpQkFBaUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLGdDQUFnQyw2QkFBNkIsYUFBYSxpQkFBaUIsaUJBQWlCLHFCQUFxQixpQkFBaUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsaUJBQWlCLGlCQUFpQixxQkFBcUIsaUJBQWlCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIsc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLGdDQUFnQyw2QkFBNkIsYUFBYSxpQkFBaUIsaUJBQWlCLHFCQUFxQixpQkFBaUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsaUJBQWlCLGlCQUFpQixxQkFBcUIsaUJBQWlCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsa0JBQWtCLGtCQUFrQixzQkFBc0Isa0JBQWtCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLGdDQUFnQyw2QkFBNkIsYUFBYSxrQkFBa0Isa0JBQWtCLHNCQUFzQixrQkFBa0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsa0JBQWtCLGtCQUFrQixzQkFBc0Isa0JBQWtCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsa0JBQWtCLGtCQUFrQixzQkFBc0Isa0JBQWtCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLGdDQUFnQyw2QkFBNkIsYUFBYSxrQkFBa0Isa0JBQWtCLHNCQUFzQixrQkFBa0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsa0JBQWtCLGtCQUFrQixzQkFBc0Isa0JBQWtCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZC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LGlDQUFpQyxZQUFZLGlCQUFpQixpQkFBaUIscUJBQXFCLGlCQUFpQixnQ0FBZ0MsNkJBQTZCLGFBQWEsaUJBQWlCLGlCQUFpQixxQkFBcUIsaUJBQWlCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixnQ0FBZ0MsNkJBQTZCLGFBQWEsaUJBQWlCLGlCQUFpQixxQkFBcUIsaUJBQWlCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIsZ0NBQWdDLDZCQUE2QixhQUFhLGlCQUFpQixpQkFBaUIscUJBQXFCLGlCQUFpQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsaUJBQWlCLGlCQUFpQixxQkFBcUIsaUJBQWlCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIsc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsaUJBQWlCLGlCQUFpQixxQkFBcUIsaUJBQWlCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIsc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0IsZ0NBQWdDLDZCQUE2QixhQUFhLGlCQUFpQixpQkFBaUIscUJBQXFCLGlCQUFpQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsaUJBQWlCLGlCQUFpQixxQkFBcUIsaUJBQWlCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIsc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsaUJBQWlCLGlCQUFpQixxQkFBcUIsaUJBQWlCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIsc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0IsZ0NBQWdDLDZCQUE2QixhQUFhLGlCQUFpQixpQkFBaUIscUJBQXFCLGlCQUFpQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixxQkFBcUIscUJBQXFCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsaUJBQWlCLGlCQUFpQixxQkFBcUIsaUJBQWlCLHFCQUFxQixxQkFBcUIscUJBQXFCLHFCQUFxQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0IsZ0NBQWdDLDZCQUE2QixhQUFhLGlCQUFpQixpQkFBaUIscUJBQXFCLGlCQUFpQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0IsZ0NBQWdDLDZCQUE2QixhQUFhLGtCQUFrQixrQkFBa0Isc0JBQXNCLGtCQUFrQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsa0JBQWtCLGtCQUFrQixzQkFBc0Isa0JBQWtCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0IsZ0NBQWdDLDZCQUE2QixhQUFhLGtCQUFrQixrQkFBa0Isc0JBQXNCLGtCQUFrQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0IsZ0NBQWdDLDZCQUE2QixhQUFhLGtCQUFrQixrQkFBa0Isc0JBQXNCLGtCQUFrQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixnQ0FBZ0MsNkJBQTZCLGFBQWEsa0JBQWtCLGtCQUFrQixzQkFBc0Isa0JBQWtCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0IsZ0NBQWdDLDZCQUE2QixhQUFhLGtCQUFrQixrQkFBa0Isc0JBQXNCLGtCQUFrQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0IsZ0NBQWdDLDZCQUE2QixhQUFhLGtCQUFrQixrQkFBa0Isc0JBQXNCLGtCQUFrQixnQ0FBZ0MsNkJBQTZCLGFBQWEsUUFBUSxRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsUUFBUSxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxTQUFTLFNBQVMsU0FBUyxVQUFVLFFBQVEsV0FBVyxVQUFVLGVBQWUsYUFBYSx5QkFBeUIsaUNBQWlDLDJCQUEyQixRQUFRLFFBQVEsWUFBWSxhQUFhLEtBQUssUUFBUSxJQUFJLGlCQUFpQiw2QkFBNkIsbUNBQW1DLEtBQUssS0FBSyxVQUFVLG1CQUFtQixtQkFBbUIsVUFBVSxpQkFBaUIscUJBQXFCLFFBQVEsYUFBYSxlQUFlLFVBQVUsWUFBWSxhQUFhLElBQUksSUFBSSxVQUFVLGFBQWEsS0FBSyxXQUFXLGtCQUFrQiwyQkFBMkIsdUJBQXVCLHVDQUF1QyxNQUFNLDJCQUEyQixvQ0FBb0MsY0FBYyxjQUFjLHVCQUF1QixnQkFBZ0IscUJBQXFCLEtBQUssdUJBQXVCLFVBQVUsbUJBQW1CLFNBQVMsU0FBUywyQ0FBMkMsbUJBQW1CLG1DQUFtQyxZQUFZLElBQUksS0FBSyx3QkFBd0IsVUFBVSw2Q0FBNkMsMkJBQTJCLFFBQVEsWUFBWSxJQUFJLEtBQUssZ0JBQWdCLE1BQU0sVUFBVSxxREFBcUQsWUFBWSxJQUFJLEtBQUssYUFBYSxlQUFlLHlEQUF5RCwwQkFBMEIsWUFBWSxJQUFJLE9BQU8sV0FBVyw0QkFBNEIsNEJBQTRCLFlBQVksSUFBSSxNQUFNLFFBQVEsUUFBUSxZQUFZLElBQUksS0FBSyxhQUFhLGFBQWEsZUFBZSxlQUFlLGNBQWMsVUFBVSxJQUFJLFdBQVcsV0FBVyxhQUFhLGFBQWEsVUFBVSxVQUFVLFVBQVUsU0FBUyxxREFBcUQsc0JBQXNCLFVBQVUsUUFBUSxZQUFZLEVBQUUsU0FBUyxJQUFJLGlCQUFpQixtREFBbUQsZUFBZSxZQUFZLE1BQU0sS0FBSyxXQUFXLGNBQWMsV0FBVyxPQUFPLGVBQWUsY0FBYyx1REFBdUQsUUFBUSxZQUFZLE1BQU0sS0FBSyx5REFBeUQsZ0JBQWdCLGVBQWUsSUFBSSxLQUFLLGdCQUFnQixVQUFVLHVEQUF1RCxRQUFRLFlBQVksSUFBSSxLQUFLLGFBQWEsY0FBYyxTQUFTLGdCQUFnQixTQUFTLFVBQVUsSUFBSSxLQUFLLE9BQU8sY0FBYyx1QkFBdUIscUNBQXFDLG1CQUFtQixZQUFZLElBQUksS0FBSyxPQUFPLFVBQVUseUNBQXlDLDRDQUE0QyxzQkFBc0IsbUJBQW1CLG1CQUFtQixtQkFBbUIsbUJBQW1CLG1CQUFtQixtQkFBbUIsbUJBQW1CLGNBQWMsV0FBVyxzQ0FBc0Msc0NBQXNDLDRCQUE0Qiw0QkFBNEIsWUFBWSxJQUFJLEtBQUssMEJBQTBCLHlCQUF5QixPQUFPLHNCQUFzQiw0QkFBNEIsc0JBQXNCLHVCQUF1QixpQ0FBaUMsMkJBQTJCLG1CQUFtQixpQ0FBaUMsbUJBQW1CLHdDQUF3Qyx3QkFBd0IsbUNBQW1DLG1CQUFtQix3Q0FBd0MsNkJBQTZCLG1DQUFtQyxtQ0FBbUMscUNBQXFDLFVBQVUsVUFBVSw0QkFBNEIsbUJBQW1CLFFBQVEsWUFBWSxjQUFjLEtBQUssMEJBQTBCLGdDQUFnQyxPQUFPLGdCQUFnQixVQUFVLHlCQUF5QixVQUFVLGdCQUFnQixjQUFjLDJCQUEyQixtQ0FBbUMsOEJBQThCLGdDQUFnQyx1QkFBdUIsa0NBQWtDLGdDQUFnQyxpQ0FBaUMsb0JBQW9CLGlDQUFpQyxXQUFXLFlBQVksV0FBVyxlQUFlLGtCQUFrQixpQkFBaUIsa0JBQWtCLFdBQVcsZUFBZSxxQkFBcUIsWUFBWSxVQUFVLHVDQUF1QyxrQ0FBa0MsV0FBVyxlQUFlLDRCQUE0QixNQUFNLFVBQVUsUUFBUSxRQUFRLGNBQWMsS0FBSyxzQkFBc0IsNkJBQTZCLGtCQUFrQixXQUFXLE1BQU0sZ0JBQWdCLGVBQWUsVUFBVSxvQkFBb0IsS0FBSyxLQUFLLDhCQUE4QixRQUFRLElBQUksS0FBSyxnQkFBZ0IsZUFBZSxzQkFBc0IscUNBQXFDLDBCQUEwQix1QkFBdUIsMkNBQTJDLGtDQUFrQyxNQUFNLE1BQU0sY0FBYyxLQUFLLElBQUksV0FBVyxxQ0FBcUMsK0JBQStCLFFBQVEsS0FBSyxnQkFBZ0IsTUFBTSxZQUFZLElBQUksS0FBSyx5QkFBeUIsV0FBVyxXQUFXLHVCQUF1QixlQUFlLFFBQVEsY0FBYyxLQUFLLCtCQUErQixLQUFLLGdCQUFnQixjQUFjLFFBQVEsb0JBQW9CLG9CQUFvQixLQUFLLHNCQUFzQiw0QkFBNEIsTUFBTSxhQUFhLHNCQUFzQixvQkFBb0IsZ0JBQWdCLGNBQWMsc0JBQXNCLHlDQUF5QywwQkFBMEIsMkJBQTJCLG1DQUFtQyw4QkFBOEIscUNBQXFDLCtCQUErQixtQ0FBbUMsOEJBQThCLHFDQUFxQywrQkFBK0IscUNBQXFDLGtDQUFrQyxXQUFXLGVBQWUsV0FBVywrQkFBK0Isb0JBQW9CLGVBQWUsdUNBQXVDLGtDQUFrQyxXQUFXLGVBQWUsb0VBQW9FLG1CQUFtQixZQUFZLFVBQVUsSUFBSSxvQ0FBb0MsVUFBVSwrQkFBK0IsNkJBQTZCLHNCQUFzQixxQ0FBcUMsK0JBQStCLHFDQUFxQyw0QkFBNEIsbUJBQW1CLDZCQUE2QixzQkFBc0IsMENBQTBDLGtDQUFrQyxnQkFBZ0IsWUFBWSxnQkFBZ0IsY0FBYyxnQkFBZ0IsWUFBWSx1QkFBdUIsdUNBQXVDLGlCQUFpQixZQUFZLHVDQUF1QyxLQUFLLHdCQUF3QixzQkFBc0Isa0JBQWtCLEtBQUssbUJBQW1CLHNDQUFzQyxhQUFhLHFDQUFxQyw0QkFBNEIsbUJBQW1CLDZCQUE2QixzQkFBc0IsZ0JBQWdCLGNBQWMsZ0JBQWdCLFlBQVksaUJBQWlCLHFDQUFxQyw2QkFBNkIsZ0JBQWdCLEtBQUssWUFBWSwrQkFBK0IsS0FBSyx3QkFBd0Isb0JBQW9CLHNCQUFzQixtQ0FBbUMsOEJBQThCLG1DQUFtQyw4QkFBOEIsa0NBQWtDLGdCQUFnQixhQUFhLGdDQUFnQyw0QkFBNEIsdURBQXVELGlCQUFpQixNQUFNLGdCQUFnQixNQUFNLFFBQVEsUUFBUSxXQUFXLEtBQUssd0JBQXdCLHVCQUF1QixjQUFjLHlCQUF5QiwyQkFBMkIsS0FBSyxnQkFBZ0IsS0FBSyx3QkFBd0IsUUFBUSwyQkFBMkIsOEJBQThCLGVBQWUsSUFBSSxRQUFRLGNBQWMsS0FBSyx1QkFBdUIsUUFBUSx5QkFBeUIsZ0JBQWdCLHNCQUFzQiw2Q0FBNkMsMkJBQTJCLG1CQUFtQixRQUFRLDRCQUE0Qix5QkFBeUIsT0FBTyxVQUFVLGFBQWEsWUFBWSx3QkFBd0Isd0JBQXdCLE1BQU0sY0FBYyxlQUFlLGFBQWEsNEJBQTRCLFlBQVksV0FBVyxLQUFLLGNBQWMsb0NBQW9DLG1CQUFtQixJQUFJLE1BQU0sY0FBYyxjQUFjLEtBQUssS0FBSyxpRUFBaUUsMkJBQTJCLHNCQUFzQixzQkFBc0IsSUFBSSxhQUFhLHNCQUFzQixnQkFBZ0IsZUFBZSxNQUFNLGNBQWMsTUFBTSxXQUFXLFdBQVcscUJBQXFCLFlBQVksT0FBTyxvQkFBb0IsMkNBQTJDLG9CQUFvQixrQkFBa0IsT0FBTyw2QkFBNkIsVUFBVSxzQ0FBc0MseUJBQXlCLGNBQWMsY0FBYyxjQUFjLGNBQWMsc0JBQXNCLFdBQVcsT0FBTyxhQUFhLHNDQUFzQyx5QkFBeUIsY0FBYyxjQUFjLE9BQU8saUJBQWlCLG1DQUFtQywrQkFBK0IsY0FBYyxjQUFjLHNCQUFzQixXQUFXLE9BQU8saUJBQWlCLHdDQUF3QyxPQUFPLHdCQUF3QixpQkFBaUIsY0FBYyxPQUFPLG9DQUFvQyxjQUFjLE9BQU8sNkNBQTZDLE9BQU8sOERBQThELDJCQUEyQixpQ0FBaUMsdUNBQXVDLGlDQUFpQyx1Q0FBdUMsbUNBQW1DLHNDQUFzQywyQ0FBMkMscUJBQXFCLCtCQUErQiw2Q0FBNkMsaUJBQWlCLGlCQUFpQixlQUFlLGtDQUFrQyx5REFBeUQscUNBQXFDLFVBQVUsVUFBVSxvQkFBb0IsZ0JBQWdCLFFBQVEsd0JBQXdCLEtBQUssS0FBSyw0QkFBNEIsZUFBZSxtQ0FBbUMsc0JBQXNCLHFDQUFxQyxVQUFVLFVBQVUsb0JBQW9CLFFBQVEsd0JBQXdCLEtBQUssS0FBSyxtQ0FBbUMsb0JBQW9CLE1BQU0sY0FBYywyQkFBMkIsbUNBQW1DLDhCQUE4QixtQ0FBbUMsdUJBQXVCLG9CQUFvQixXQUFXLGdCQUFnQixtQkFBbUIsWUFBWSxLQUFLLFlBQVksZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLFFBQVEsOEJBQThCLFlBQVksWUFBWSxJQUFJLGdCQUFnQixnQkFBZ0IsbUJBQW1CLGdCQUFnQix5QkFBeUIsV0FBVyxRQUFRLFlBQVksY0FBYyx5QkFBeUIsVUFBVSxVQUFVLFlBQVksYUFBYSxnQkFBZ0IseUJBQXlCLFdBQVcsUUFBUSxZQUFZLGNBQWMseUJBQXlCLFVBQVUsVUFBVSxZQUFZLGFBQWEsZ0JBQWdCLFVBQVUsVUFBVSxVQUFVLEtBQUssVUFBVSxVQUFVLFdBQVcsT0FBTywwQkFBMEIsdUNBQXVDLHVCQUF1QixvQkFBb0IsV0FBVyxnQkFBZ0IsbUJBQW1CLFlBQVksS0FBSyxZQUFZLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdDQUFnQyxnQkFBZ0IseUJBQXlCLFdBQVcsUUFBUSxZQUFZLGNBQWMsY0FBYyxVQUFVLGFBQWEsZ0JBQWdCLHlCQUF5QixXQUFXLFFBQVEsWUFBWSxjQUFjLGNBQWMsVUFBVSxhQUFhLGdCQUFnQixVQUFVLFVBQVUsS0FBSyxVQUFVLFdBQVcsTUFBTSxrQkFBa0IsSUFBSSxLQUFLLElBQUksZ0JBQWdCLFVBQVUsVUFBVSxpQ0FBaUMsZ0NBQWdDLGdDQUFnQyxtQkFBbUIsZ0JBQWdCLGFBQWEsYUFBYSxZQUFZLHVCQUF1QixLQUFLLFlBQVksWUFBWSxHQUFHLGtCQUFrQixZQUFZLGtCQUFrQixZQUFZLGVBQWUsUUFBUSxRQUFRLElBQUksSUFBSSw4QkFBOEIsTUFBTSxVQUFVLFlBQVksb0JBQW9CLG1DQUFtQywrQkFBK0Isc0NBQXNDLDZCQUE2QixvQ0FBb0MsNkJBQTZCLHFDQUFxQyx3QkFBd0IscUNBQXFDLDRCQUE0QixXQUFXLGVBQWUsV0FBVyxtQkFBbUIsa0JBQWtCLGlCQUFpQixZQUFZLFFBQVEsWUFBWSxxQkFBcUIsS0FBSyxzQkFBc0IsS0FBSyxTQUFTLFlBQVksZ0JBQWdCLFVBQVUsZ0JBQWdCLGNBQWMsYUFBYSxzQ0FBc0MsMkNBQTJDLG1DQUFtQyxVQUFVLGtDQUFrQyxpQ0FBaUMsY0FBYyxNQUFNLGtCQUFrQixJQUFJLEtBQUssTUFBTSxLQUFLLHdDQUF3QyxzQkFBc0IsbUJBQW1CLGdDQUFnQyxVQUFVLGlDQUFpQyw4Q0FBOEMsOENBQThDLG1CQUFtQixnQ0FBZ0MsVUFBVSxtQ0FBbUMsaUNBQWlDLGlDQUFpQyxRQUFRLHdCQUF3QixLQUFLLEtBQUssc0JBQXNCLG1CQUFtQixrQkFBa0IsUUFBUSxLQUFLLGFBQWEsSUFBSSxNQUFNLFVBQVUsaUNBQWlDLHlCQUF5QiwrQkFBK0Isd0JBQXdCLG1DQUFtQyx3QkFBd0IsaUNBQWlDLHVCQUF1QixpQ0FBaUMsMEJBQTBCLCtCQUErQix5QkFBeUIsbUNBQW1DLHdCQUF3QixpQ0FBaUMsdUJBQXVCLGlDQUFpQyx5QkFBeUIsK0JBQStCLHdCQUF3Qix1QkFBdUIsbUJBQW1CLHFDQUFxQywwREFBMEQsMERBQTBELHVDQUF1Qyx3Q0FBd0Msd0VBQXdFLG1DQUFtQyw2Q0FBNkMsV0FBVyxhQUFhLDJDQUEyQywwREFBMEQsMEJBQTBCLHVDQUF1QyxzREFBc0QsNkJBQTZCLHlDQUF5Qyx1REFBdUQsOEJBQThCLHVDQUF1QyxzREFBc0QsNkJBQTZCLHlDQUF5Qyx1REFBdUQsOEJBQThCLHVDQUF1QyxzREFBc0QsNkJBQTZCLHVDQUF1QyxzREFBc0QsMEJBQTBCLDZCQUE2Qix5Q0FBeUMsc0RBQXNELDBCQUEwQiw4QkFBOEIsc0NBQXNDLHNEQUFzRCx3QkFBd0IsMkJBQTJCLHdDQUF3Qyx1REFBdUQsd0JBQXdCLDRCQUE0Qix3Q0FBd0MsdURBQXVELHdCQUF3Qiw0QkFBNEIsd0NBQXdDLHVEQUF1RCx3QkFBd0IsNEJBQTRCLHNDQUFzQyxzREFBc0Qsd0JBQXdCLDJCQUEyQix1Q0FBdUMsNkNBQTZDLHdCQUF3Qiw2QkFBNkIsT0FBTywyQ0FBMkMscUJBQXFCLFlBQVksb0JBQW9CLDBCQUEwQiw2Q0FBNkMscUJBQXFCLHNDQUFzQyxtQkFBbUIsd0NBQXdDLFVBQVUsNkNBQTZDLFFBQVEsTUFBTSxHQUFHLHVCQUF1QixnQkFBZ0IsbUJBQW1CLGdCQUFnQixnQkFBZ0IsaUNBQWlDLFVBQVUsYUFBYSxXQUFXLGFBQWEsZUFBZSxLQUFLLHdCQUF3QixVQUFVLEtBQUssWUFBWSxVQUFVLDJDQUEyQyxzQkFBc0IseUNBQXlDLHVCQUF1QixnQkFBZ0IsbUdBQW1HLHNCQUFzQix5Q0FBeUMsY0FBYywyQkFBMkIsWUFBWSxJQUFJLEtBQUssc0JBQXNCLFdBQVcsZ0JBQWdCLGFBQWEsV0FBVyxPQUFPLGlCQUFpQix3QkFBd0IsU0FBUyxXQUFXLEtBQUssbUJBQW1CLDhCQUE4QixJQUFJLFFBQVEsZ0JBQWdCLHVCQUF1QixhQUFhLEtBQUssY0FBYyx1Q0FBdUMsb0JBQW9CLHNCQUFzQixZQUFZLFFBQVEsWUFBWSxXQUFXLEtBQUssbUJBQW1CLFNBQVMsc0JBQXNCLHNCQUFzQiw0QkFBNEIsV0FBVyw0QkFBNEIsWUFBWSxVQUFVLGdCQUFnQiwwRkFBMEYsc0JBQXNCLGdCQUFnQixpRkFBaUYsc0JBQXNCLGtCQUFrQixnR0FBZ0csd0JBQXdCLHlDQUF5QyxRQUFRLFlBQVksV0FBVyxLQUFLLDBCQUEwQixpQkFBaUIsUUFBUSxhQUFhLElBQUksVUFBVSxzQkFBc0IsVUFBVSw0QkFBNEIsb0JBQW9CLFVBQVUsZUFBZSxlQUFlLG9CQUFvQixlQUFlLG9CQUFvQixlQUFlLHNCQUFzQixpQkFBaUIsS0FBSyxvQ0FBb0MsV0FBVyxjQUFjLGdCQUFnQix3QkFBd0IsbUJBQW1CLFdBQVcsYUFBYSxLQUFLLGtEQUFrRCxTQUFTLGlCQUFpQiw0Q0FBNEMsdURBQXVELGlEQUFpRCw4Q0FBOEMsb0VBQW9FLGdFQUFnRSxvQ0FBb0MsMkRBQTJELHVDQUF1QyxVQUFVLGtDQUFrQyxlQUFlLGlCQUFpQixzQ0FBc0Msb0NBQW9DLG1CQUFtQixlQUFlLHFCQUFxQixlQUFlLDBCQUEwQixzQ0FBc0MsbUJBQW1CLGdCQUFnQixxQkFBcUIsZUFBZSxVQUFVLG9DQUFvQyxtQkFBbUIsZUFBZSxnQkFBZ0IsZUFBZSwwQkFBMEIsc0NBQXNDLG1CQUFtQixnQkFBZ0IsZ0JBQWdCLGVBQWUsVUFBVSxvQ0FBb0MsaUJBQWlCLDhCQUE4QixzQ0FBc0MsbUJBQW1CLDZCQUE2QixvQ0FBb0MsbUJBQW1CLDRCQUE0QixvQ0FBb0MsK0JBQStCLGtDQUFrQyxzQkFBc0Isb0NBQW9DLCtCQUErQixzQkFBc0IsZ0JBQWdCLFVBQVUsc0NBQXNDLHFCQUFxQixxQkFBcUIsUUFBUSxtQ0FBbUMsSUFBSSxZQUFZLG9CQUFvQiw0QkFBNEIsaUJBQWlCLCtCQUErQix5QkFBeUIsNEJBQTRCLGdDQUFnQyxhQUFhLG9CQUFvQixzQ0FBc0Msb0JBQW9CLFFBQVEsb0JBQW9CLFFBQVEsWUFBWSxhQUFhLEtBQUssYUFBYSxZQUFZLDBDQUEwQyxjQUFjLGFBQWEsY0FBYyxJQUFJLFVBQVUsb0NBQW9DLHVCQUF1QixtQkFBbUIsYUFBYSw2QkFBNkIsS0FBSyxzQkFBc0Isb0NBQW9DLDJDQUEyQyxrQ0FBa0MsUUFBUSxzQkFBc0IsMkJBQTJCLE9BQU8sWUFBWSxXQUFXLEtBQUssd0JBQXdCLFdBQVcsUUFBUSxRQUFRLHVCQUF1QixVQUFVLEtBQUssaUJBQWlCLEtBQUssS0FBSyxpQkFBaUIsY0FBYyxLQUFLLEtBQUssYUFBYSxhQUFhLGNBQWMsaUJBQWlCLElBQUksU0FBUyxNQUFNLEtBQUssSUFBSSxrQ0FBa0MsbUJBQW1CLElBQUksSUFBSSxLQUFLLFVBQVUsOENBQThDLHFCQUFxQiwwQkFBMEIsa0RBQWtELGdCQUFnQixXQUFXLFVBQVUseUJBQXlCLG9CQUFvQixpQkFBaUIsaUJBQWlCLDhCQUE4QixzQkFBc0IsNkJBQTZCLG9DQUFvQyxnQ0FBZ0MsZ0NBQWdDLHFEQUFxRCxpQ0FBaUMsZ0NBQWdDLG1CQUFtQiwrQ0FBK0MsdUNBQXVDLG1EQUFtRCxrQ0FBa0MsV0FBVyxVQUFVLHVDQUF1QywyQkFBMkIsYUFBYSxXQUFXLFNBQVMsZ0JBQWdCLHdFQUF3RSxtQ0FBbUMsUUFBUSxxQkFBcUIsaUJBQWlCLHFCQUFxQixpQkFBaUIsMEJBQTBCLHFDQUFxQywyREFBMkQsZUFBZSx3RUFBd0UsbUNBQW1DLFFBQVEscUJBQXFCLGlCQUFpQixxQkFBcUIsaUJBQWlCLDBCQUEwQixxQ0FBcUMsK0NBQStDLDBCQUEwQixFQUFFLE1BQUssVUFBVSxzQkFBc0IsTUFBTSwyQkFBMkIsdUJBQXVCLHNCQUFzQixpQkFBaUIsWUFBWSxvQkFBb0IsNkNBQTZDLHNCQUFzQix1Q0FBdUMsbURBQW1ELHdCQUF3QixZQUFZLFdBQVcsNkJBQTZCLFVBQVUsMkJBQTJCLDZDQUE2Qyx1Q0FBdUMsd0JBQXdCLCtCQUErQixVQUFVLHNEQUFzRCx1Q0FBdUMsd0JBQXdCLGlDQUFpQyxVQUFVLGtDQUFrQyxnQ0FBZ0MseUNBQXlDLEtBQUssSUFBSSxjQUFjLHNFQUFzRSx1Q0FBdUMseUJBQXlCLFlBQVksc0JBQXNCLHFCQUFxQiwwQkFBMEIsOEJBQThCLG1CQUFtQixtQkFBbUIsWUFBWSxJQUFJLEtBQUsseUJBQXlCLFNBQVMscUJBQXFCLFlBQVksV0FBVyxLQUFLLFFBQVEsK0JBQStCLFdBQVcsV0FBVyxXQUFXLFdBQVcsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLFlBQVksUUFBUSxZQUFZLElBQUksS0FBSyx1REFBdUQsdURBQXVELHVEQUF1RCx1REFBdUQsSUFBSSxJQUFJLElBQUksSUFBSSxvRUFBb0Usb0VBQW9FLG9FQUFvRSxvRUFBb0UsUUFBUSxRQUFRLFFBQVEsUUFBUSxnQkFBZ0IscUNBQXFDLGlCQUFpQixxQkFBcUIsWUFBWSxNQUFNLEtBQUssVUFBVSxVQUFVLEtBQUssZUFBZSxTQUFTLFNBQVMsb0JBQW9CLG9CQUFvQixRQUFRLFFBQVEsWUFBWSxNQUFNLEtBQUssNEJBQTRCLGlCQUFpQixPQUFPLE9BQU8sV0FBVyxXQUFXLFdBQVcsMEJBQTBCLG9CQUFvQixxQkFBcUIsb0JBQW9CLFVBQVUsc0NBQXNDLG9CQUFvQixxQkFBcUIsb0JBQW9CLFVBQVUsVUFBVSxNQUFNLEtBQUssaUJBQWlCLFlBQVksT0FBTywyQ0FBMkMsR0FBRyxnQkFBZ0IsMkJBQTJCLGNBQWMsa0JBQWtCLGtCQUFrQixzQ0FBc0Msa0NBQWtDLGdDQUFnQyxnQkFBZ0IsZUFBZSxVQUFVLGNBQWMsU0FBUyxZQUFZLElBQUksS0FBSyxVQUFVLFFBQVEsSUFBSSxLQUFLLGFBQWEsWUFBWSxjQUFjLCtFQUErRSxnQkFBZ0Isc0JBQXNCLCtFQUErRSxjQUFjLFNBQVMsWUFBWSxJQUFJLEtBQUssVUFBVSxxQkFBcUIsY0FBYyxPQUFPLEtBQUssZ0pBQWdKLGdCQUFnQixvQkFBb0Isd0JBQXdCLDBDQUEwQyxtQkFBbUIsdUVBQXVFLHVDQUF1Qyw4QkFBOEIsd0JBQXdCLHdCQUF3Qix3QkFBd0Isd0JBQXdCLHlCQUF5QixVQUFVLHVDQUF1QyxtQkFBbUIsV0FBVyxVQUFVLE9BQU8sZ0ZBQWdGLHdCQUF3Qix3QkFBd0Isd0JBQXdCLHdCQUF3Qix5QkFBeUIsVUFBVSwrQkFBK0IsNEJBQTRCLCtCQUErQixxQkFBcUIsa0JBQWtCLHNCQUFzQixjQUFjLHFCQUFxQixjQUFjLGNBQWMsY0FBYyxjQUFjLGFBQWEsc0JBQXNCLFFBQVEsMkJBQTJCLGtDQUFrQyxZQUFZLElBQUksS0FBSyxhQUFhLFNBQVMsdUJBQXVCLGtCQUFrQix5Q0FBeUMsdUNBQXVDLGVBQWUsZUFBZSxXQUFXLFlBQVksTUFBTSxPQUFPLHVCQUF1Qix1QkFBdUIsVUFBVSxpQkFBaUIscUJBQXFCLFlBQVksaUJBQWlCLHVCQUF1QixLQUFLLFNBQVMsK0JBQStCLGFBQWEsbUJBQW1CLDBCQUEwQixtQ0FBbUMscUJBQXFCLG1CQUFtQixxQkFBcUIsNkJBQTZCLGdDQUFnQyxnQkFBZ0IsYUFBYSxZQUFZLGFBQWEsbUJBQW1CLG1CQUFtQixrQkFBa0IsMkNBQTJDLDhCQUE4Qix1QkFBdUIsU0FBUyxlQUFlLHVCQUF1QixrQkFBa0IsaUNBQWlDLGtCQUFrQixzQkFBc0IsS0FBSyxzQkFBc0Isb0JBQW9CLFVBQVUseUNBQXlDLHFHQUFxRyw0RkFBNEYsK0dBQStHLGdCQUFnQixzQkFBc0Isd0RBQXdELGdIQUFnSCxzQkFBc0IseURBQXlELHFGQUFxRixpQkFBaUIsaURBQWlELDhFQUE4RSxzQkFBc0Isc0JBQXNCLHVCQUF1QixzQkFBc0IsV0FBVyxjQUFjLGNBQWMsc0JBQXNCLHNCQUFzQix1Q0FBdUMsNkNBQTZDLDZDQUE2QyxtREFBbUQsc0NBQXNDLHNCQUFzQixjQUFjLHFCQUFxQixjQUFjLGFBQWEsY0FBYyxjQUFjLGNBQWMsY0FBYyx5QkFBeUIsYUFBYSx5QkFBeUIsa0JBQWtCLDBCQUEwQixxQkFBcUIsYUFBYSx1QkFBdUIsY0FBYyx1Q0FBdUMsbUJBQW1CLE1BQU0sTUFBTSxTQUFTLDRDQUE0Qyw2QkFBNkIsVUFBVSxvQkFBb0IscUNBQXFDLDBCQUEwQixzQkFBc0IseUNBQXlDLFdBQVcsdURBQXVELDhDQUE4QyxzQkFBc0IsYUFBYSxvQkFBb0IsNEJBQTRCLG1DQUFtQyxxQ0FBcUMsbUNBQW1DLE1BQU0sTUFBTSx5QkFBeUIseUJBQXlCLGdDQUFnQyxVQUFVLEtBQUssMEJBQTBCLHlCQUF5QixnQ0FBZ0MsVUFBVSxhQUFhLG9DQUFvQyx3Q0FBd0Msa0JBQWtCLFlBQVksY0FBYywwQ0FBMEMsU0FBUyxhQUFhLG9CQUFvQiwyQ0FBMkMsaUJBQWlCLHVCQUF1QixpQ0FBaUMseUJBQXlCLGdEQUFnRCxtQ0FBbUMsc0ZBQXNGLG1DQUFtQywwRUFBMEUsc0JBQXNCLGdDQUFnQyx5QkFBeUIsZ0NBQWdDLGtDQUFrQyw2QkFBNkIseUJBQXlCLGdEQUFnRCw0QkFBNEIsc0NBQXNDLGdDQUFnQyxvQ0FBb0MsbUJBQW1CLGNBQWMsY0FBYyxxQkFBcUIsYUFBYSxjQUFjLGNBQWMsY0FBYyxjQUFjLHVCQUF1QixhQUFhLHlCQUF5QiwwQkFBMEIscUJBQXFCLGFBQWEsdUJBQXVCLFlBQVkscUNBQXFDLG1CQUFtQixNQUFNLE1BQU0sU0FBUywyQkFBMkIsNkJBQTZCLFVBQVUsb0JBQW9CLHFCQUFxQixtQ0FBbUMsMEJBQTBCLHNCQUFzQiw2QkFBNkIscUJBQXFCLFNBQVMsaUJBQWlCLHFCQUFxQix1REFBdUQsNENBQTRDLHNCQUFzQixhQUFhLG9CQUFvQiw0QkFBNEIsbUNBQW1DLHFDQUFxQyxrQ0FBa0MseUJBQXlCLDZCQUE2QixnQ0FBZ0MsU0FBUyxhQUFhLG9DQUFvQywyQkFBMkIsdUJBQXVCLFNBQVMsYUFBYSxrQkFBa0IsaUNBQWlDLCtCQUErQix5QkFBeUIsZ0RBQWdELG1DQUFtQywwRUFBMEUsbUNBQW1DLHNGQUFzRixzQkFBc0IsMkJBQTJCLHlCQUF5QiwyQkFBMkIsZ0NBQWdDLDJCQUEyQix5QkFBeUIsZ0RBQWdELDRCQUE0QixvQ0FBb0MsZ0NBQWdDLDRCQUE0QixzQkFBc0IscUJBQXFCLG9CQUFvQixvQkFBb0IsaUZBQWlGLHNCQUFzQix3QkFBd0IsNEJBQTRCLDRCQUE0Qiw0QkFBNEIsNkJBQTZCLFNBQVMsa0JBQWtCLFNBQVMseUJBQXlCLDRCQUE0QixrQ0FBa0MsU0FBUyxvQkFBb0Isb0JBQW9CLGtCQUFrQixxQ0FBcUMsc0JBQXNCLGdCQUFnQixVQUFVLFNBQVMsZUFBZSxxQ0FBcUMsTUFBTSxXQUFXLFdBQVcsV0FBVyxXQUFXLGVBQWUsUUFBUSxJQUFJLEtBQUssNkJBQTZCLGNBQWMsTUFBTSxtQkFBbUIseUJBQXlCLG1DQUFtQyxvQ0FBb0MsTUFBTSw2QkFBNkIseUJBQXlCLGdDQUFnQyxnQkFBZ0Isb0NBQW9DLHNCQUFzQix3Q0FBd0MsaUNBQWlDLG1CQUFtQixnQkFBZ0IsaUJBQWlCLG1CQUFtQixlQUFlLE1BQU0sV0FBVyxpQkFBaUIsWUFBWSxrQkFBa0IsS0FBSyxJQUFJLGtCQUFrQixRQUFRLGlCQUFpQixzQkFBc0IsY0FBYyx3QkFBd0IsbUJBQW1CLGtDQUFrQyxnQkFBZ0Isd0JBQXdCLGNBQWMsVUFBVSxnQ0FBZ0MsZUFBZSxxQkFBcUIscUJBQXFCLGNBQWMsNkJBQTZCLGVBQWUsb0JBQW9CLDJCQUEyQixrQ0FBa0MsU0FBUywwQkFBMEIsdUJBQXVCLE1BQU0sZ0JBQWdCLHdCQUF3Qix5Q0FBeUMseUJBQXlCLDhCQUE4QixrQkFBa0IsK0NBQStDLGFBQWEsS0FBSyxvQ0FBb0MsT0FBTyxVQUFVLHNCQUFzQixxQkFBcUIsNEJBQTRCLE1BQU0sU0FBUyxRQUFRLFFBQVEsUUFBUSxhQUFhLGtDQUFrQyxpQkFBaUIsU0FBUyxnQkFBZ0IsK0JBQStCLFNBQVMsc0JBQXNCLGVBQWUsU0FBUyw4QkFBOEIsNEJBQTRCLGFBQWEsdUJBQXVCLFNBQVMsMEJBQTBCLGVBQWUsdUJBQXVCLFNBQVMsYUFBYSwyQkFBMkIsVUFBVSxzQkFBc0IscUJBQXFCLDRCQUE0QixzQ0FBc0MsYUFBYSxxREFBcUQsU0FBUywwQkFBMEIsZUFBZSx1QkFBdUIsU0FBUyxhQUFhLDJCQUEyQixVQUFVLHNCQUFzQixjQUFjLHFCQUFxQixhQUFhLHFCQUFxQix5Q0FBeUMsV0FBVyxTQUFTLFNBQVMsd0JBQXdCLDRCQUE0QixzQkFBc0IsaURBQWlELFlBQVksSUFBSSxLQUFLLGtCQUFrQixZQUFZLGlDQUFpQyxpQ0FBaUMsaUNBQWlDLGtDQUFrQyxpQ0FBaUMsa0NBQWtDLGVBQWUsb0JBQW9CLHdCQUF3QixrQ0FBa0Msd0JBQXdCLGtDQUFrQyxzQkFBc0IsT0FBTyxrR0FBa0csY0FBYyxnQkFBZ0IseUJBQXlCLFlBQVksc0JBQXNCLGNBQWMscUJBQXFCLHdDQUF3QyxlQUFlLHdCQUF3QixnQ0FBZ0MsU0FBUyxNQUFNLGdDQUFnQyxpQ0FBaUMsa0NBQWtDLGVBQWUscUJBQXFCLGNBQWMscUJBQXFCLGNBQWMsY0FBYywrQkFBK0IsYUFBYSwwQkFBMEIscUJBQXFCLDZCQUE2QixnQ0FBZ0MsZ0JBQWdCLGFBQWEsa0JBQWtCLDJDQUEyQyxpREFBaUQseUNBQXlDLHNCQUFzQix1QkFBdUIsc0JBQXNCLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYywyQkFBMkIsa0JBQWtCLFFBQVEsU0FBUyxXQUFXLFVBQVUsY0FBYyxhQUFhLFVBQVUsS0FBSywwQ0FBMEMscUJBQXFCLG9DQUFvQyw2QkFBNkIsa0JBQWtCLFFBQVEsU0FBUyxXQUFXLFVBQVUsY0FBYyxhQUFhLFVBQVUsS0FBSywwQ0FBMEMscUJBQXFCLHNDQUFzQywrQkFBK0Isa0JBQWtCLHVDQUF1QyxzQkFBc0Isa0JBQWtCLEVBQUUsMENBQTBDLGlDQUFpQyxrQkFBa0IseUNBQXlDLHNCQUFzQiwrQkFBK0IsRUFBRSwwQ0FBMEMsc0JBQXNCLDZDQUE2QyxxQ0FBcUMsMkNBQTJDLDJDQUEyQyxpREFBaUQsc0NBQXNDLHNCQUFzQixjQUFjLGNBQWMsY0FBYyxxQkFBcUIsT0FBTyxvS0FBb0ssbUJBQW1CLHlCQUF5QixjQUFjLFNBQVMsZ0JBQWdCLGFBQWEsMkJBQTJCLFdBQVcsTUFBTSxjQUFjLFlBQVksS0FBSyxZQUFZLFlBQVksbUJBQW1CLFlBQVkscUNBQXFDLDZCQUE2QixXQUFXLG1CQUFtQixZQUFZLG9CQUFvQixrQkFBa0IsRUFBRSxrQ0FBa0Msb0NBQW9DLGdDQUFnQyxrQ0FBa0Msb0JBQW9CLGNBQWMsWUFBWSxvQkFBb0IsWUFBWSwwQkFBMEIsYUFBYSxlQUFlLGFBQWEsa0JBQWtCLGFBQWEsY0FBYyxhQUFhLHNCQUFzQixhQUFhLGNBQWMsY0FBYyxrQkFBa0IsY0FBYywyRUFBMkUsT0FBTyx1Q0FBdUMsa0JBQWtCLGVBQWUsNkJBQTZCLHdCQUF3Qiw4Q0FBOEMsZ0NBQWdDLGdDQUFnQyxvQkFBb0IsZUFBZSxlQUFlLDRCQUE0Qiw0QkFBNEIsY0FBYyxjQUFjLGdDQUFnQyxVQUFVLFVBQVUsV0FBVyxNQUFNLHVEQUF1RCxjQUFjLGlCQUFpQiw2QkFBNkIsa0JBQWtCLGlFQUFpRSxjQUFjLFVBQVUsc0JBQXNCLGtCQUFrQixzQkFBc0IscUJBQXFCLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxjQUFjLG9DQUFvQyw4QkFBOEIsd0JBQXdCLEdBQUcsaUJBQWlCLHNCQUFzQixXQUFXLGdEQUFnRCxzQkFBc0IscUJBQXFCLGVBQWUsc0JBQXNCLG1CQUFtQiw2Q0FBNkMscUJBQXFCLEtBQUssMkNBQTJDLHFDQUFxQyxxQkFBcUIsYUFBYSw2Q0FBNkMsV0FBVywwQkFBMEIscURBQXFELDBCQUEwQixtQkFBbUIsc0JBQXNCLFdBQVcsZ0RBQWdELHFCQUFxQixlQUFlLHNCQUFzQixxQkFBcUIsK0NBQStDLHFCQUFxQixLQUFLLDZDQUE2QyxxQ0FBcUMscUJBQXFCLGFBQWEscURBQXFELHFDQUFxQyxXQUFXLDBCQUEwQiwwQ0FBMEMsdUJBQXVCLG1CQUFtQix5QkFBeUIscUJBQXFCLFdBQVcscUZBQXFGLHNCQUFzQixxQkFBcUIsY0FBYyxjQUFjLGdCQUFnQixjQUFjLGNBQWMsY0FBYyx5QkFBeUIsV0FBVyxZQUFZLDBFQUEwRSxtQkFBbUIsd0JBQXdCLHVEQUF1RCxzQkFBc0IsS0FBSyx3RUFBd0Usa0JBQWtCLDZCQUE2QixZQUFZLHdDQUF3QyxVQUFVLFNBQVMsZ0NBQWdDLGFBQWEsU0FBUyxxQkFBcUIsMkJBQTJCLDBEQUEwRCxlQUFlLHFDQUFxQyxnQkFBZ0IseUJBQXlCLHdCQUF3Qix3QkFBd0IsaUJBQWlCLGlCQUFpQixpQkFBaUIsZUFBZSxNQUFNLDJCQUEyQixZQUFZLHNCQUFzQixpQkFBaUIsaUJBQWlCLGlCQUFpQix5Q0FBeUMsa0JBQWtCLFFBQVEsWUFBWSxrQkFBa0Isb0JBQW9CLGNBQWMsY0FBYyw0QkFBNEIsNEJBQTRCLDBCQUEwQix3QkFBd0IsNkJBQTZCLGlCQUFpQix5QkFBeUIsc0JBQXNCLDRCQUE0Qix1Q0FBdUMsa0JBQWtCLGVBQWUsdUJBQXVCLGlCQUFpQixVQUFVLGlCQUFpQixvRUFBb0UsNEJBQTRCLG9FQUFvRSw0QkFBNEIsT0FBTyxTQUFTLHVCQUF1QixlQUFlLGtDQUFrQyxrQkFBa0IsU0FBUywwQkFBMEIsZ0JBQWdCLFdBQVcsMEJBQTBCLDRCQUE0Qix1Q0FBdUMsa0JBQWtCLFNBQVMsd0JBQXdCLE1BQU0sTUFBTSxHQUFHLGFBQWEsZ0NBQWdDLGtDQUFrQyxvQkFBb0IsZ0JBQWdCLHNEQUFzRCxrQ0FBa0MscUJBQXFCLFNBQVMsd0JBQXdCLHFEQUFxRCxlQUFlLHdCQUF3QiwwQkFBMEIsc0JBQXNCLHFCQUFxQixjQUFjLGdCQUFnQixjQUFjLGNBQWMsMkJBQTJCLFdBQVcsa0JBQWtCLHlFQUF5RSx1QkFBdUIsd0JBQXdCLHNEQUFzRCx3QkFBd0IsS0FBSyx1RUFBdUUsa0JBQWtCLDZCQUE2QixVQUFVLFFBQVEsNkJBQTZCLFlBQVksSUFBSSxVQUFVLFNBQVMsb0JBQW9CLGFBQWEsWUFBWSx3QkFBd0Isb0JBQW9CLG9DQUFvQyxnQ0FBZ0MsY0FBYyw4QkFBOEIsMkJBQTJCLEtBQUsseUJBQXlCLGFBQWEseUJBQXlCLDBDQUEwQyx5RUFBeUUsZUFBZSxvQ0FBb0MsdUJBQXVCLDBCQUEwQixlQUFlLGVBQWUsZUFBZSxxQkFBcUIsa0NBQWtDLFVBQVUsVUFBVSxnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsMEhBQTBILG9CQUFvQix5QkFBeUIsK0NBQStDLDhDQUE4QyxpQkFBaUIsa0JBQWtCLDRCQUE0QixrQ0FBa0MsVUFBVSxNQUFNLElBQUksWUFBWSxJQUFJLEtBQUssZUFBZSxVQUFVLHNCQUFzQixxQkFBcUIsd0JBQXdCLDRCQUE0QixjQUFjLHVCQUF1QixhQUFhLGtDQUFrQyxrQkFBa0IsNEJBQTRCLEtBQUssK0JBQStCLGdCQUFnQix5QkFBeUIsaUJBQWlCLG1CQUFtQixvQkFBb0IsZ0JBQWdCLDRDQUE0Qyx3QkFBd0IsY0FBYyxzQkFBc0IsNkJBQTZCLE1BQU0sc0JBQXNCLFVBQVUsaURBQWlELDJDQUEyQyxnRUFBZ0UsMkNBQTJDLGdFQUFnRSx1Q0FBdUMsMkRBQTJELGdEQUFnRCxNQUFNLElBQUksa0JBQWtCLGdCQUFnQixLQUFLLDRCQUE0QixTQUFTLElBQUksUUFBUSxPQUFPLHdDQUF3QyxNQUFNLElBQUksMEJBQTBCLFNBQVMsSUFBSSxNQUFNLGdEQUFnRCxpQ0FBaUMsTUFBTSwyQkFBMkIsVUFBVSwrQ0FBK0MsbUJBQW1CLHVCQUF1QixpQkFBaUIsZ0VBQWdFLDZCQUE2QixNQUFNLHVCQUF1QixVQUFVLHFCQUFxQixzQkFBc0IsYUFBYSxhQUFhLGlDQUFpQyxvQkFBb0IsT0FBTyxXQUFXLCtCQUErQixZQUFZLDBCQUEwQixhQUFhLDBCQUEwQixhQUFhLDBCQUEwQixVQUFVLDZCQUE2QixZQUFZLDBCQUEwQixZQUFZLDRCQUE0QixtQkFBbUIsZ0NBQWdDLGdDQUFnQyxtQkFBbUIsbUJBQW1CLGlCQUFpQixvQkFBb0Isb0JBQW9CLGdCQUFnQixRQUFRLHlDQUF5QyxpQkFBaUIsMENBQTBDLGtDQUFrQywrQkFBK0IsNkNBQTZDLFlBQVksSUFBSSxNQUFNLGNBQWMsTUFBTSxNQUFNLE1BQU0sOENBQThDLDJDQUEyQyx5REFBeUQsMENBQTBDLGlEQUFpRCxpQkFBaUIsb0JBQW9CLE9BQU8sS0FBSyxRQUFRLCtCQUErQix5Q0FBeUMsb0RBQW9ELDBDQUEwQyxZQUFZLElBQUksTUFBTSxjQUFjLE1BQU0sTUFBTSxNQUFNLDJCQUEyQixhQUFhLDJDQUEyQyxZQUFZLElBQUksTUFBTSxjQUFjLE1BQU0sTUFBTSxNQUFNLGVBQWUsaUJBQWlCLGtDQUFrQyw0QkFBNEIsYUFBYSxrQ0FBa0Msc0JBQXNCLGNBQWMsVUFBVSxNQUFNLElBQUksa0JBQWtCLFVBQVUsTUFBTSxhQUFhLFVBQVUsRUFBRSxNQUFNLGVBQWUsT0FBTyxTQUFTLEtBQUssdUJBQXVCLHNCQUFzQixhQUFhLGNBQWMsY0FBYyxjQUFjLGNBQWMsY0FBYyxpQkFBaUIsc0JBQXNCLGFBQWEsVUFBVSxtQ0FBbUMsc0JBQXNCLGlDQUFpQyw0QkFBNEIsaUNBQWlDLGtCQUFrQiwwQkFBMEIsOENBQThDLHVCQUF1QixxQkFBcUIsY0FBYyxzQkFBc0Isa0NBQWtDLHNCQUFzQixhQUFhLGNBQWMsY0FBYyxjQUFjLHFCQUFxQixhQUFhLGNBQWMsY0FBYyxtQkFBbUIsbUJBQW1CLHNCQUFzQix3QkFBd0IsWUFBWSx3Q0FBd0MsWUFBWSxZQUFZLGVBQWUsOEJBQThCLHVCQUF1QixvQkFBb0Isb0JBQW9CLGtDQUFrQyxrQ0FBa0MsWUFBWSxJQUFJLEtBQUssYUFBYSxhQUFhLG1DQUFtQyxxQkFBcUIsVUFBVSxtQ0FBbUMsc0JBQXNCLGlDQUFpQywwQkFBMEIsOENBQThDLGdEQUFnRCxtQ0FBbUMsa0JBQWtCLGtDQUFrQyw0QkFBNEIsY0FBYyxrQkFBa0Isc0JBQXNCLHNCQUFzQixhQUFhLGNBQWMscUJBQXFCLGNBQWMsbUJBQW1CLFNBQVMsbUJBQW1CLHNCQUFzQix3QkFBd0IsWUFBWSxZQUFZLFlBQVksZUFBZSxPQUFPLG9CQUFvQixvQkFBb0Isa0NBQWtDLGtDQUFrQyxZQUFZLElBQUksS0FBSyxhQUFhLGFBQWEsZUFBZSxVQUFVLG1DQUFtQyxvQkFBb0IsaUNBQWlDLHNDQUFzQyw0Q0FBNEMsZUFBZSxzQkFBc0IsYUFBYSxnQkFBZ0IsaUJBQWlCLGNBQWMsY0FBYyxjQUFjLHNCQUFzQixhQUFhLGNBQWMsY0FBYyxTQUFTLHFCQUFxQix3Q0FBd0MscUJBQXFCLFlBQVksaUJBQWlCLG9CQUFvQix3QkFBd0IsZ0JBQWdCLGVBQWUsZ0JBQWdCLFNBQVMscUJBQXFCLFlBQVksV0FBVyxLQUFLLFdBQVcsc0JBQXNCLDhCQUE4QixtQkFBbUIsV0FBVywwQkFBMEIsK0JBQStCLG9DQUFvQyxrQkFBa0Isb0NBQW9DLHFCQUFxQix3Q0FBd0MsV0FBVywwQkFBMEIsWUFBWSxpQkFBaUIsaUJBQWlCLDZCQUE2QixZQUFZLGlCQUFpQixnQkFBZ0IsS0FBSyw2QkFBNkIsWUFBWSxpQkFBaUIsaUJBQWlCLFlBQVksaUJBQWlCLGtCQUFrQixzQkFBc0IsYUFBYSxjQUFjLG1CQUFtQixlQUFlLDRCQUE0QixpQkFBaUIsYUFBYSxzQ0FBc0MsaUJBQWlCLGlCQUFpQiwwQ0FBMEMsMkNBQTJDLHlCQUF5Qix1REFBdUQsb0NBQW9DLCtDQUErQyw2REFBNkQsWUFBWSxJQUFJLHlDQUF5QyxrQkFBa0IsVUFBVSx5REFBeUQsZ0NBQWdDLGlCQUFpQix1QkFBdUIsMkRBQTJELFFBQVEsUUFBUSxpREFBaUQsa0NBQWtDLHVCQUF1QixxQkFBcUIsaUVBQWlFLDJDQUEyQyxLQUFLLElBQUksbUJBQW1CLHNCQUFzQixrQkFBa0IsS0FBSyxXQUFXLHNEQUFzRCxVQUFVLDJEQUEyRCxRQUFRLFFBQVEsNERBQTRELGtDQUFrQyxLQUFLLElBQUksS0FBSyxxQkFBcUIsMEJBQTBCLHFCQUFxQixVQUFVLHlDQUF5QyxNQUFNLHNCQUFzQixNQUFNLGdEQUFnRCw0QkFBNEIsd0JBQXdCLGVBQWUseUNBQXlDLHNCQUFzQiwwQkFBMEIsYUFBYSx3REFBd0QsbURBQW1ELGdDQUFnQyxnQ0FBZ0MsVUFBVSwyQ0FBMkMsVUFBVSx3REFBd0Qsb0VBQW9FLGdDQUFnQyx1QkFBdUIsdUJBQXVCLHNCQUFzQixhQUFhLGNBQWMsY0FBYyxjQUFjLGNBQWMsb0JBQW9CLHNCQUFzQixlQUFlLGdCQUFnQixlQUFlLG1CQUFtQixpQkFBaUIseUJBQXlCLFNBQVMsY0FBYyw4QkFBOEIsbUJBQW1CLHdDQUF3QyxrREFBa0QsdUJBQXVCLHNEQUFzRCwwQkFBMEIsMEJBQTBCLG1CQUFtQixXQUFXLFdBQVcsWUFBWSxnQkFBZ0IsTUFBTSxlQUFlLGdCQUFnQixnQkFBZ0Isc0JBQXNCLGdEQUFnRCxxQkFBcUIsMEJBQTBCLDRCQUE0QixrQkFBa0IsV0FBVyxXQUFXLHNEQUFzRCxrQ0FBa0MsV0FBVyxXQUFXLHVCQUF1QiwwQkFBMEIsc0NBQXNDLGlCQUFpQixZQUFZLFdBQVcsV0FBVyxhQUFhLHdDQUF3QyxvQkFBb0IscUJBQXFCLFdBQVcsb0JBQW9CLDhCQUE4QixvREFBb0QsUUFBUSxRQUFRLFlBQVksZ0JBQWdCLE1BQU0sZ0JBQWdCLGtCQUFrQixvQkFBb0IsWUFBWSxZQUFZLHdCQUF3QixtQkFBbUIsUUFBUSxZQUFZLElBQUksZ0JBQWdCLG9EQUFvRCxRQUFRLFFBQVEsMEJBQTBCLEtBQUssTUFBTSxnQkFBZ0Isa0JBQWtCLG9CQUFvQixZQUFZLFlBQVksd0JBQXdCLG1CQUFtQixRQUFRLFlBQVksSUFBSSxnQkFBZ0Isc0JBQXNCLGFBQWEsY0FBYyxjQUFjLGNBQWMsY0FBYyx1QkFBdUIsMENBQTBDLG1CQUFtQixvQkFBb0IscUJBQXFCLGtCQUFrQix3QkFBd0IscUJBQXFCLFlBQVkscUJBQXFCLFlBQVkscUJBQXFCLEdBQUcsS0FBSyx3QkFBd0IscUJBQXFCLFlBQVkscUJBQXFCLFlBQVkscUJBQXFCLElBQUksZ0JBQWdCLGVBQWUsK0NBQStDLGlCQUFpQixTQUFTLGNBQWMsOEJBQThCLG1CQUFtQixnREFBZ0QscUJBQXFCLDhCQUE4Qiw4QkFBOEIsK0JBQStCLG9DQUFvQyx3Q0FBd0Msb0JBQW9CLGFBQWEsMENBQTBDLDZDQUE2QyxjQUFjLDhDQUE4QyxjQUFjLGtCQUFrQixpQkFBaUIsY0FBYywwQkFBMEIsUUFBUSxRQUFRLFlBQVksS0FBSyxNQUFNLFlBQVksTUFBTSxNQUFNLE1BQU0sYUFBYSxZQUFZLE1BQU0sTUFBTSxNQUFNLGNBQWMsWUFBWSxLQUFLLE1BQU0sWUFBWSxNQUFNLE1BQU0sTUFBTSxhQUFhLFlBQVksTUFBTSxNQUFNLE1BQU0sY0FBYyxhQUFhLGNBQWMsNEJBQTRCLFFBQVEsUUFBUSxZQUFZLElBQUksS0FBSyxhQUFhLEtBQUssTUFBTSxNQUFNLGFBQWEsTUFBTSxjQUFjLFlBQVksSUFBSSxLQUFLLGFBQWEsS0FBSyxNQUFNLE1BQU0sYUFBYSxNQUFNLGNBQWMsYUFBYSxjQUFjLDRCQUE0QixRQUFRLFFBQVEsWUFBWSxLQUFLLEtBQUssWUFBWSxNQUFNLE1BQU0sTUFBTSxZQUFZLFlBQVksTUFBTSxNQUFNLE1BQU0sYUFBYSxZQUFZLE1BQU0sTUFBTSxNQUFNLFlBQVksWUFBWSxLQUFLLEtBQUssWUFBWSxNQUFNLE1BQU0sTUFBTSxZQUFZLFlBQVksTUFBTSxNQUFNLE1BQU0sYUFBYSxZQUFZLE1BQU0sTUFBTSxNQUFNLFlBQVksYUFBYSxjQUFjLDhCQUE4QixnQ0FBZ0MsdUlBQXVJLDRCQUE0QixRQUFRLFFBQVEsbUJBQW1CLFlBQVksSUFBSSxLQUFLLE1BQU0sY0FBYyxZQUFZLFdBQVcsS0FBSyxNQUFNLGNBQWMsYUFBYSxjQUFjLGdDQUFnQyxRQUFRLFFBQVEsa0JBQWtCLGFBQWEsTUFBTSxNQUFNLE1BQU0sWUFBWSxhQUFhLEtBQUssTUFBTSxZQUFZLE1BQU0sb0JBQW9CLGFBQWEsY0FBYyx3c0NBQXdzQyxzQ0FBc0MsUUFBUSxZQUFZLElBQUksS0FBSyxvQkFBb0IsZ0JBQWdCLE1BQU0sS0FBSyxZQUFZLElBQUksS0FBSyxvQkFBb0IscUJBQXFCLE1BQU0sS0FBSyxjQUFjLDhGQUE4Riw4QkFBOEIsUUFBUSxZQUFZLFdBQVcsS0FBSyxNQUFNLGNBQWMsY0FBYyxvQ0FBb0Msb0JBQW9CLHlCQUF5QixTQUFTLFlBQVksSUFBSSw0QkFBNEIsb0JBQW9CLHNCQUFzQixhQUFhLGNBQWMsYUFBYSw2QkFBNkIsVUFBVSxNQUFNLG1CQUFtQixVQUFVLE1BQU0saUJBQWlCLGtCQUFrQixPQUFPLGtDQUFrQyxzQ0FBc0MsR0FBRyxNQUFNLGdDQUFnQywyQ0FBMkMsY0FBYyxjQUFjLFNBQVMsTUFBTSxNQUFNLElBQUksTUFBTSxjQUFjLE1BQU0sTUFBTSxNQUFNLHdCQUF3Qiw0QkFBNEIsSUFBSSxNQUFNLGNBQWMsTUFBTSxNQUFNLE1BQU0sdUJBQXVCLG9GQUFvRiwwREFBMEQscUJBQXFCLGFBQWEsY0FBYyxZQUFZLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGVBQWUsZUFBZSxhQUFhLGNBQWMsYUFBYSwyQkFBMkIsWUFBWSxJQUFJLE1BQU0sY0FBYyxNQUFNLE1BQU0sTUFBTSxtQkFBbUIsWUFBWSw0QkFBNEIsWUFBWSxJQUFJLE1BQU0sY0FBYyxNQUFNLE1BQU0sTUFBTSxvQkFBb0IsWUFBWSxTQUFTLHlCQUF5Qix3QkFBd0IsbUNBQW1DLFdBQVcsWUFBWSxRQUFRLDZEQUE2RCxLQUFLLHVCQUF1QixLQUFLLEtBQUssS0FBSyxPQUFPLFNBQVMsdUJBQXVCLEtBQUssTUFBTSxVQUFVLDZCQUE2QixLQUFLLE1BQU0sb0JBQW9CLHVCQUF1QixLQUFLLE1BQU0sYUFBYSxPQUFPLFNBQVMsbUJBQW1CLHFCQUFxQixzQkFBc0IsaUNBQWlDLHdCQUF3QixvQkFBb0IscUJBQXFCLDBCQUEwQixNQUFNLCtCQUErQixpQ0FBaUMsS0FBSyxtQkFBbUIsa0RBQWtELCtCQUErQixzQ0FBc0Msb0RBQW9ELHdCQUF3QixFQUFFLHFDQUFxQyxnQkFBZ0Isb0NBQW9DLG9FQUFvRSw0QkFBNEIsdUNBQXVDLFdBQVcsdUJBQXVCLHFDQUFxQyxVQUFVLE1BQU0sY0FBYyxzQkFBc0Isc0JBQXNCLFVBQVUsTUFBTSxvQkFBb0IsVUFBVSxFQUFFLE1BQU0sZUFBZSxVQUFVLG1EQUFtRCx1Q0FBdUMscURBQXFELHdDQUF3QyxrQ0FBa0MsMENBQTBDLHNDQUFzQyx1Q0FBdUMsd0NBQXdDLFlBQVksSUFBSSxNQUFNLGNBQWMsTUFBTSxNQUFNLE1BQU0sYUFBYSxtQkFBbUIsYUFBYSxnQ0FBZ0MsVUFBVSxNQUFNLGNBQWMsT0FBTyxTQUFTLEtBQUssdUJBQXVCLHFCQUFxQixjQUFjLG9CQUFvQixrQ0FBa0MsZ0NBQWdDLGFBQWEsZ0JBQWdCLGNBQWMsWUFBWSxlQUFlLGVBQWUsZUFBZSxnQkFBZ0IsZUFBZSxnQkFBZ0IsZUFBZSxlQUFlLGdCQUFnQixlQUFlLGdCQUFnQixXQUFXLHNCQUFzQixxQkFBcUIsY0FBYyxTQUFTLE9BQU8sZ0JBQWdCLElBQUksTUFBTSw4QkFBOEIsWUFBWSxhQUFhLHdCQUF3QiwyQkFBMkIsU0FBUyxJQUFJLFNBQVMsd0JBQXdCLG1CQUFtQixZQUFZLFdBQVcseUJBQXlCLHFCQUFxQixZQUFZLEtBQUssY0FBYyxZQUFZLHVCQUF1QixnQkFBZ0IsMERBQTBELHdCQUF3QixTQUFTLGlCQUFpQix3QkFBd0IsS0FBSyx3QkFBd0IsV0FBVyxRQUFRLFlBQVksMkJBQTJCLHVCQUF1QixXQUFXLGVBQWUsVUFBVSxnQkFBZ0IsVUFBVSxjQUFjLHVCQUF1QixXQUFXLG1CQUFtQix1QkFBdUIsV0FBVyxZQUFZLHVGQUF1RixZQUFZLHFCQUFxQixhQUFhLFFBQVEscUJBQXFCLGdCQUFnQixlQUFlLGdCQUFnQixpQkFBaUIsYUFBYSxnQkFBZ0Isc0JBQXNCLGFBQWEsYUFBYSxjQUFjLGVBQWUsZUFBZSxlQUFlLHdCQUF3QixZQUFZLHFCQUFxQiwrQ0FBK0MsbUNBQW1DLGtDQUFrQyxrQ0FBa0MsMEJBQTBCLDJDQUEyQywwQkFBMEIsMEJBQTBCLDBCQUEwQiwwQkFBMEIsNENBQTRDLGlDQUFpQyxzQkFBc0IsZUFBZSxLQUFLLHdCQUF3QixrQ0FBa0Msb0JBQW9CLDJDQUEyQyxvQ0FBb0MsaURBQWlELG9DQUFvQyw0REFBNEQsaUJBQWlCLHNCQUFzQiw2QkFBNkIsdUNBQXVDLEtBQUssU0FBUyxZQUFZLFdBQVcsV0FBVyxRQUFRLHFCQUFxQixLQUFLLGtCQUFrQixVQUFVLGtDQUFrQyxrQ0FBa0MsWUFBWSxJQUFJLEtBQUssWUFBWSxXQUFXLEtBQUssV0FBVyxtQ0FBbUMsK0NBQStDLFdBQVcsZ0JBQWdCLG9EQUFvRCxRQUFRLHlCQUF5QixRQUFRLGVBQWUsNkJBQTZCLGtDQUFrQyxxQkFBcUIsS0FBSyxLQUFLLFlBQVksZUFBZSxRQUFRLFlBQVksWUFBWSxhQUFhLFdBQVcsU0FBUyxzQkFBc0IsK0JBQStCLG9DQUFvQyxLQUFLLDBCQUEwQixnQ0FBZ0Msb0NBQW9DLGdFQUFnRSxtQkFBbUIsbUJBQW1CLG1CQUFtQixRQUFRLFlBQVksSUFBSSxLQUFLLFdBQVcseUJBQXlCLFdBQVcsY0FBYyxjQUFjLEtBQUssTUFBTSxVQUFVLFFBQVEsdUJBQXVCLGtDQUFrQyxrQ0FBa0MsMEJBQTBCLDBCQUEwQixTQUFTLDRCQUE0QiwyQkFBMkIsb0JBQW9CLHFDQUFxQyx5Q0FBeUMsK0JBQStCLDBCQUEwQixLQUFLLCtCQUErQixxQ0FBcUMsOEJBQThCLG1CQUFtQiwwQkFBMEIsa0JBQWtCLGtCQUFrQixZQUFZLElBQUksS0FBSyxnQkFBZ0IsZ0JBQWdCLHlCQUF5QixVQUFVLFFBQVEsa0NBQWtDLG1CQUFtQixZQUFZLEtBQUssS0FBSyxRQUFRLFlBQVksV0FBVyxZQUFZLElBQUksS0FBSyxlQUFlLG9CQUFvQixZQUFZLElBQUksSUFBSSxZQUFZLFlBQVksYUFBYSxZQUFZLElBQUksS0FBSyxXQUFXLE1BQU0sa0JBQWtCLDJCQUEyQixrQ0FBa0MscUNBQXFDLGlCQUFpQixZQUFZLElBQUksY0FBYyxjQUFjLHFCQUFxQix3QkFBd0IsYUFBYSxZQUFZLHNCQUFzQiw4QkFBOEIscUNBQXFDLG9DQUFvQyxpREFBaUQsa0NBQWtDLDBEQUEwRCxpQkFBaUIsMEJBQTBCLHFEQUFxRCxtQ0FBbUMsd0NBQXdDLG9EQUFvRCxTQUFTLDhDQUE4QyxnREFBZ0QseUNBQXlDLGtFQUFrRSw0QkFBNEIsZ0RBQWdELGdDQUFnQyxrQ0FBa0MsZ0RBQWdELGlEQUFpRCxnREFBZ0Qsb0NBQW9DLHNEQUFzRCxnQ0FBZ0MsT0FBTyxpQ0FBaUMsNEJBQTRCLGdDQUFnQyx1QkFBdUIsbUJBQW1CLGFBQWEsd0RBQXdELGtDQUFrQywrQkFBK0IsbUJBQW1CLDZEQUE2RCwwREFBMEQsOEVBQThFLGFBQWEsV0FBVyxZQUFZLElBQUksTUFBTSxZQUFZLElBQUksY0FBYyxVQUFVLE9BQU8sa0JBQWtCLDREQUE0RCxzRUFBc0UsYUFBYSxlQUFlLDRCQUE0QixZQUFZLElBQUksdUJBQXVCLE9BQU8saUJBQWlCLGlEQUFpRCxhQUFhLDBDQUEwQyxXQUFXLFlBQVksSUFBSSxjQUFjLFVBQVUsc0JBQXNCLGFBQWEsY0FBYyxhQUFhLGNBQWMsY0FBYyxlQUFlLHlCQUF5Qix5QkFBeUIsc0NBQXNDLHlCQUF5Qix5QkFBeUIsc0NBQXNDLDhCQUE4QixxQ0FBcUMsd0JBQXdCLHFDQUFxQyw4QkFBOEIsK0NBQStDLHNCQUFzQixrQkFBa0IsdUJBQXVCLCtDQUErQyxnQ0FBZ0MsOEJBQThCLCtDQUErQyxzQkFBc0IsOEJBQThCLHVEQUF1RCw0QkFBNEIsMkRBQTJELGNBQWMsOEJBQThCLGlCQUFpQix1Q0FBdUMsd0RBQXdELDRCQUE0QixrQkFBa0IsNEVBQTRFLDBCQUEwQiw2QkFBNkIsd0JBQXdCLDJEQUEyRCxjQUFjLDhCQUE4QixpQkFBaUIsd0JBQXdCLHNEQUFzRCw0QkFBNEIseUJBQXlCLHNDQUFzQyxvQ0FBb0Msa0JBQWtCLDRFQUE0RSx3Q0FBd0Msd0JBQXdCLHFEQUFxRCw4QkFBOEIsY0FBYyxtQkFBbUIsbUJBQW1CLGlDQUFpQyxrRUFBa0UscUJBQXFCLDBCQUEwQixzQ0FBc0MsaUNBQWlDLHVCQUF1QixzQkFBc0Isc0JBQXNCLHVCQUF1QixlQUFlLEtBQUssbUJBQW1CLG1CQUFtQixvQ0FBb0Msc0JBQXNCLG1EQUFtRCxtREFBbUQsbURBQW1ELDJEQUEyRCxrQ0FBa0MsaUNBQWlDLDZCQUE2Qix1REFBdUQscUJBQXFCLCtEQUErRCwrQkFBK0IscURBQXFELGdDQUFnQyxzQ0FBc0Msb0NBQW9DLDJDQUEyQyxpREFBaUQseUlBQXlJLGlEQUFpRCw4RkFBOEYsMkNBQTJDLHNCQUFzQixzQkFBc0Isc0JBQXNCLGVBQWUsMEJBQTBCLDJEQUEyRCxrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0NBQWtDLDZDQUE2QyxxQ0FBcUMsc0JBQXNCLHNCQUFzQixNQUFNLE1BQU0sTUFBTSx1QkFBdUIsMEJBQTBCLGtCQUFrQixjQUFjLHlEQUF5RCx3QkFBd0IsaUNBQWlDLEtBQUssc0JBQXNCLDZCQUE2QixtQ0FBbUMsd0JBQXdCLGVBQWUsS0FBSyxrQkFBa0Isd0NBQXdDLDRCQUE0QiwyQ0FBMkMsMkNBQTJDLGNBQWMsZ0NBQWdDLG1DQUFtQyxpQ0FBaUMsNkNBQTZDLDZCQUE2Qiw0Q0FBNEMsb0RBQW9ELG9EQUFvRCwrQ0FBK0MscUNBQXFDLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixrQkFBa0Isa0NBQWtDLDhDQUE4Qyx5QkFBeUIsaUJBQWlCLHlCQUF5Qix5QkFBeUIsdUNBQXVDLGtCQUFrQixrQkFBa0IsMEVBQTBFLDRCQUE0QixNQUFNLE1BQU0sdUJBQXVCLG9EQUFvRCxjQUFjLEtBQUssa0NBQWtDLGdDQUFnQyxnQ0FBZ0Msb0NBQW9DLDhCQUE4Qiw4QkFBOEIsOENBQThDLDhCQUE4QixvQ0FBb0MsOERBQThELHlDQUF5Qyw4Q0FBOEMseURBQXlELGdEQUFnRCx3REFBd0QsK0NBQStDLHlCQUF5Qix1QkFBdUIsd0JBQXdCLHdCQUF3QixrQ0FBa0Msc0JBQXNCLGVBQWUsYUFBYSxtQ0FBbUMsZ0ZBQWdGLHFDQUFxQyxpQkFBaUIseUJBQXlCLHFDQUFxQyxpQkFBaUIseUJBQXlCLGtDQUFrQywrRUFBK0UsMENBQTBDLDZDQUE2QyxpQ0FBaUMsZ0JBQWdCLHFDQUFxQyxNQUFNLEVBQUUscUJBQXFCLHVDQUF1QyxhQUFhLG1DQUFtQyw4Q0FBOEMsNkNBQTZDLHNCQUFzQixhQUFhLFFBQVEsZUFBZSxnQkFBZ0IsZUFBZSxrQkFBa0Isc0JBQXNCLGFBQWEsYUFBYSxjQUFjLGNBQWMsY0FBYyxzQkFBc0Isc0JBQXNCLHFDQUFxQyxxQ0FBcUMsMkNBQTJDLGtDQUFrQyxpREFBaUQsZUFBZSxvQkFBb0Isa0RBQWtELHNCQUFzQixpQkFBaUIscURBQXFELGtCQUFrQiw4QkFBOEIsc0JBQXNCLHNDQUFzQyx1QkFBdUIsc0JBQXNCLHVCQUF1QixLQUFLLG1CQUFtQixtQkFBbUIsbURBQW1ELG9EQUFvRCxxQkFBcUIsMERBQTBELHFDQUFxQyw4Q0FBOEMsNEJBQTRCLDREQUE0RCwrQkFBK0IsbURBQW1ELDJDQUEyQyw0REFBNEQsc0NBQXNDLHNDQUFzQywyQ0FBMkMsaURBQWlELGtHQUFrRyxpREFBaUQsMkJBQTJCLG1DQUFtQyw0QkFBNEIsaUJBQWlCLDRCQUE0QixpQkFBaUIsa0JBQWtCLGtCQUFrQixtREFBbUQsOEJBQThCLG1DQUFtQyxzREFBc0QsOENBQThDLDRCQUE0Qiw0QkFBNEIsc0JBQXNCLHNCQUFzQixrQkFBa0Isa0JBQWtCLHVDQUF1Qyx3Q0FBd0MsOEJBQThCLG9DQUFvQyxnQkFBZ0IsV0FBVyxrQ0FBa0MsV0FBVyxhQUFhLGNBQWMsK0JBQStCLHFCQUFxQixLQUFLLEtBQUssYUFBYSxpQkFBaUIsVUFBVSxLQUFLLGlCQUFpQixXQUFXLFVBQVUseUNBQXlDLHNEQUFzRCwyQ0FBMkMsc0RBQXNELGtDQUFrQyxzQ0FBc0MsK0NBQStDLHVDQUF1QyxzQkFBc0IsYUFBYSxxQ0FBcUMsaUJBQWlCLHlCQUF5QixzQkFBc0IsYUFBYSxjQUFjLGFBQWEsY0FBYyxjQUFjLGVBQWUsdUJBQXVCLHVCQUF1QixxQ0FBcUMscUNBQXFDLDZCQUE2Qix3Q0FBd0Msc0RBQXNELG1DQUFtQyw4QkFBOEIsOEJBQThCLGdCQUFnQixxQkFBcUIsbUVBQW1FLDREQUE0RCxNQUFNLE1BQU0sV0FBVyxtQ0FBbUMsS0FBSyxpQ0FBaUMsNkJBQTZCLG9CQUFvQixhQUFhLHFCQUFxQixLQUFLLGlDQUFpQyxtREFBbUQsT0FBTyxLQUFLLE9BQU8sZ0RBQWdELE1BQU0sWUFBWSwyQkFBMkIsT0FBTyxpQ0FBaUMsR0FBRyxLQUFLLHdCQUF3QixPQUFPLDBCQUEwQiw2REFBNkQsb0NBQW9DLGtDQUFrQyxpQkFBaUIscURBQXFELDRCQUE0Qiw0QkFBNEIsYUFBYSw2REFBNkQscURBQXFELFFBQVEscUJBQXFCLGVBQWUsZUFBZSxlQUFlLGVBQWUsTUFBTSxNQUFNLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxRQUFRLE1BQU0sTUFBTSxxQkFBcUIsZUFBZSxrQkFBa0Isa0JBQWtCLHNCQUFzQixtQkFBbUIsVUFBVSxJQUFJLFVBQVUsSUFBSSxvQkFBb0IsTUFBTSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLFVBQVUsSUFBSSwyQkFBMkIsMkJBQTJCLGdCQUFnQixJQUFJLElBQUksZUFBZSxVQUFVLFVBQVUsZUFBZSxVQUFVLFVBQVUsUUFBUSxRQUFRLEVBQUUsUUFBUSxHQUFHLHVEQUF1RCxzQkFBc0IsV0FBVyxXQUFXLGtDQUFrQyx3Q0FBd0MsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLHNCQUFzQixxQkFBcUIsT0FBTyxZQUFZLHlEQUF5RCxjQUFjLDhCQUE4QixxRUFBcUUsa0JBQWtCLDRFQUE0RSwwQkFBMEIsNkJBQTZCLHdCQUF3QixtREFBbUQscUJBQXFCLFVBQVUsVUFBVSx1QkFBdUIsc0RBQXNELDBDQUEwQyxxRUFBcUUsdUJBQXVCLHVCQUF1QixZQUFZLFdBQVcsS0FBSyw0QkFBNEIsV0FBVyxtQkFBbUIsa0JBQWtCLFlBQVksY0FBYyxrQkFBa0IsWUFBWSxjQUFjLFNBQVMsV0FBVyxZQUFZLGNBQWMsb0NBQW9DLFlBQVksTUFBTSxLQUFLLFVBQVUsVUFBVSxVQUFVLHdCQUF3QixrQ0FBa0MsdUJBQXVCLFlBQVksWUFBWSxjQUFjLEtBQUssbUJBQW1CLG1CQUFtQixNQUFNLGdDQUFnQyxnQ0FBZ0MsbURBQW1ELG1EQUFtRCxnQkFBZ0IscUJBQXFCLGlEQUFpRCw4QkFBOEIsK0RBQStELGlDQUFpQyw2Q0FBNkMsMkJBQTJCLHVCQUF1QiwyQkFBMkIsbUVBQW1FLE1BQU0saUJBQWlCLHdCQUF3Qiw2Q0FBNkMsU0FBUyxlQUFlLHNCQUFzQiwrQ0FBK0MscUJBQXFCLDJEQUEyRCxVQUFVLHlDQUF5QywyQ0FBMkMsd0NBQXdDLG1DQUFtQyxtRkFBbUYsNEJBQTRCLDBFQUEwRSxHQUFHLHdDQUF3Qyx1Q0FBdUMsMkJBQTJCLGtCQUFrQixzQkFBc0IsNEJBQTRCLFdBQVcsZUFBZSw4QkFBOEIsdUVBQXVFLGFBQWEsK0RBQStELFVBQVUsMkNBQTJDLGlEQUFpRCxrR0FBa0csaURBQWlELGlCQUFpQixvQ0FBb0MscUJBQXFCLHFCQUFxQixnQ0FBZ0MsdURBQXVELDBEQUEwRCx5QkFBeUIsMERBQTBELDhDQUE4QyxpREFBaUQsOEJBQThCLG1DQUFtQyx3QkFBd0IsNEJBQTRCLG9EQUFvRCxtQkFBbUIsc0JBQXNCLGtCQUFrQixrREFBa0QsZ0RBQWdELGlEQUFpRCw4QkFBOEIscUNBQXFDLHlCQUF5QixxQ0FBcUMseUJBQXlCLG9DQUFvQyxjQUFjLGlDQUFpQyxtRUFBbUUsc0VBQXNFLHlDQUF5Qyw4Q0FBOEMsZUFBZSxZQUFZLDBEQUEwRCw2Q0FBNkMsZ0RBQWdELGVBQWUsWUFBWSwrREFBK0Qsa0RBQWtELGtDQUFrQyx5RkFBeUYsb0NBQW9DLHdCQUF3QiwrQ0FBK0Msd0JBQXdCLHVCQUF1Qix1QkFBdUIsZ0JBQWdCLGVBQWUsWUFBWSw4Q0FBOEMscUJBQXFCLDBEQUEwRCxVQUFVLG1DQUFtQyxxREFBcUQsc0RBQXNELFVBQVUseUJBQXlCLG9DQUFvQyxpQ0FBaUMsc0JBQXNCLHNCQUFzQixnQkFBZ0IsS0FBSyxtQkFBbUIsbUJBQW1CLG1CQUFtQixtREFBbUQsbURBQW1ELG1EQUFtRCxrQ0FBa0Msc0JBQXNCLG1EQUFtRCwrQkFBK0Isb0NBQW9DLHdEQUF3RCx1QkFBdUIsaUJBQWlCLHVCQUF1QixpQ0FBaUMsOEJBQThCLG9DQUFvQyx5REFBeUQscUNBQXFDLDhCQUE4Qiw4QkFBOEIsbUJBQW1CLHNCQUFzQix1QkFBdUIsb0JBQW9CLG1DQUFtQyxtQ0FBbUMsa0JBQWtCLGtCQUFrQixrQkFBa0IsMERBQTBELHVCQUF1QixpQkFBaUIsa0JBQWtCLGtCQUFrQixrREFBa0Qsa0RBQWtELG1DQUFtQyxpQ0FBaUMsK0NBQStDLG9DQUFvQyw4QkFBOEIsc0JBQXNCLGFBQWEsb0JBQW9CLGFBQWEsbUNBQW1DLGtCQUFrQixrQkFBa0Isa0JBQWtCLDBEQUEwRCx1QkFBdUIsaUJBQWlCLGtCQUFrQixrQkFBa0Isa0RBQWtELGtEQUFrRCx1QkFBdUIsaUNBQWlDLHVDQUF1QyxxQkFBcUIsaUNBQWlDLHdCQUF3Qix3Q0FBd0MsV0FBVyxZQUFZLElBQUksY0FBYyxTQUFTLG1CQUFtQixzQkFBc0IsYUFBYSxhQUFhLGFBQWEsMEJBQTBCLGtCQUFrQixZQUFZLElBQUksS0FBSyxpQkFBaUIsaUJBQWlCLGlCQUFpQixrREFBa0Qsa0JBQWtCLHNDQUFzQyxtQkFBbUIsa0JBQWtCLDBCQUEwQixrQkFBa0IsdUJBQXVCLElBQUksSUFBSSxJQUFJLDJDQUEyQyxvQ0FBb0MsaUNBQWlDLDJDQUEyQyxrREFBa0QseUJBQXlCLDhDQUE4QyxNQUFNLE1BQU0sTUFBTSxjQUFjLHNCQUFzQixzQkFBc0IsaUJBQWlCLHNEQUFzRCxlQUFlLDZCQUE2Qix1Q0FBdUMsbUJBQW1CLGVBQWUsZUFBZSxJQUFJLG9DQUFvQyx3QkFBd0IsS0FBSyxzQkFBc0Isc0JBQXNCLGlCQUFpQixzREFBc0QsZUFBZSw2QkFBNkIsaUJBQWlCLG1CQUFtQixlQUFlLGVBQWUsMEJBQTBCLG9DQUFvQyx3QkFBd0IsZUFBZSxpQ0FBaUMsZ0RBQWdELE1BQU0sTUFBTSxNQUFNLGNBQWMsc0JBQXNCLHNCQUFzQixpQkFBaUIsc0RBQXNELGVBQWUsbURBQW1ELHVDQUF1QyxJQUFJLG1CQUFtQixlQUFlLGVBQWUsb0NBQW9DLHdCQUF3QixLQUFLLHNCQUFzQixzQkFBc0IsdUJBQXVCLGdEQUFnRCx5QkFBeUIsbUJBQW1CLGVBQWUsa0JBQWtCLHdCQUF3Qix1REFBdUQsaUJBQWlCLGVBQWUsZUFBZSxlQUFlLG9DQUFvQyxpQ0FBaUMsc0NBQXNDLG1CQUFtQixhQUFhLGFBQWEsYUFBYSwwQkFBMEIsaUJBQWlCLGlCQUFpQixrREFBa0Qsa0JBQWtCLGVBQWUsa0JBQWtCLHNDQUFzQyxtQkFBbUIsaUJBQWlCLGVBQWUsZUFBZSxlQUFlLDZCQUE2Qiw0QkFBNEIsaUNBQWlDLHNDQUFzQyxpREFBaUQsc0JBQXNCLHNCQUFzQixzQkFBc0IsaUJBQWlCLDZCQUE2QixpQkFBaUIsc0RBQXNELGVBQWUseUJBQXlCLGVBQWUsaUJBQWlCLG1CQUFtQixlQUFlLGVBQWUsZUFBZSw2REFBNkQsa0JBQWtCLGVBQWUsZUFBZSxrQ0FBa0MsZUFBZSxlQUFlLGlFQUFpRSxlQUFlLGVBQWUsZUFBZSxzREFBc0QsaUNBQWlDLHVDQUF1QyxhQUFhLG9DQUFvQyxtQ0FBbUMsNkNBQTZDLHdCQUF3QixzQkFBc0IsbUJBQW1CLG9FQUFvRSx1QkFBdUIsb0JBQW9CLDREQUE0RCwyQ0FBMkMsc0JBQXNCLHdDQUF3QyxpQ0FBaUMsZ0JBQWdCLGdDQUFnQyxNQUFNLEVBQUUscUJBQXFCLHVDQUF1QyxhQUFhLG1DQUFtQyw0Q0FBNEMsa0RBQWtELDRHQUE0RyxrREFBa0QsMkJBQTJCLHNCQUFzQixhQUFhLFFBQVEsY0FBYyxjQUFjLGNBQWMsZUFBZSx3QkFBd0IsOENBQThDLHVEQUF1RCw4QkFBOEIsb0JBQW9CLG9CQUFvQixpQkFBaUIscUNBQXFDLDZEQUE2RCwwQkFBMEIsMEJBQTBCLDJCQUEyQixpREFBaUQseUJBQXlCLDJCQUEyQiwwQ0FBMEMsRUFBRSxVQUFVLEVBQUUsb0JBQW9CLCtZQUErWSxFQUFFLG9CQUFvQixxY0FBcWMsRUFBRSxvQkFBb0IseWZBQXlmLEVBQUUsb0JBQW9CLG11QkFBbXVCLEVBQUUsb0JBQW9CLG1nQ0FBbWdDLEVBQUUsMEJBQTBCLDROQUE0TixFQUFFLHVCQUF1QixzYUFBc2EsRUFBRSxNQUFNLElBQUksVUFBVSxTQUFTLFlBQVkseUJBQXlCLDRXQUE0VywyRUFBMkUsRUFBRSwyRUFBMkUseUpBQXlKLEVBQUUsc0JBQXNCLGFBQWEsYUFBYSxjQUFjLGNBQWMsY0FBYyxjQUFjLGVBQWUsY0FBYyxjQUFjLGVBQWUsMENBQTBDLHdCQUF3QiwwQ0FBMEMsT0FBTyxpQ0FBaUMsU0FBUyx5QkFBeUIsb0JBQW9CLHdCQUF3QixvQkFBb0IsaUJBQWlCLDJDQUEyQywrQkFBK0IsYUFBYSx5Q0FBeUMsc0JBQXNCLHlEQUF5RCxnQ0FBZ0MsdURBQXVELCtCQUErQiwrQ0FBK0MsV0FBVyxhQUFhLG9LQUFvSyxFQUFFLDBCQUEwQiwyQkFBMkIsR0FBRywyQkFBMkIsdUJBQXVCLFdBQVcsOEJBQThCLGFBQWEsb0RBQW9ELDBDQUEwQyxvQkFBb0IsNkNBQTZDLGVBQWUseUNBQXlDLHdCQUF3QixJQUFJLE9BQU8sV0FBVywyQkFBMkIsaUNBQWlDLDBCQUEwQixxQ0FBcUMsd0JBQXdCLGFBQWEsdUVBQXVFLEVBQUUsMkJBQTJCLFlBQVksS0FBSyxLQUFLLHdEQUF3RCw0QkFBNEIsc0NBQXNDLG9CQUFvQiwyQkFBMkIsZUFBZSxxQkFBcUIsMEJBQTBCLHdEQUF3RCxpQkFBaUIsMEJBQTBCLGdEQUFnRCxrQ0FBa0MsZ0JBQWdCLEtBQUssY0FBYyx3QkFBd0IsSUFBSSw2Q0FBNkMsaUNBQWlDLDBCQUEwQixpQkFBaUIsVUFBVSxVQUFVLDhDQUE4Qyw4Q0FBOEMscUJBQXFCLDRCQUE0Qiw0QkFBNEIsOEJBQThCLHVDQUF1QywrQkFBK0Isd0NBQXdDLHdDQUF3QywrQkFBK0Isb0JBQW9CLDZDQUE2Qyx3REFBd0QsYUFBYSxhQUFhLGVBQWUsVUFBVSxVQUFVLFVBQVUsV0FBVyx3R0FBd0csb0RBQW9ELGtDQUFrQyxrQkFBa0IsOEJBQThCLHVCQUF1Qiw2QkFBNkIsbURBQW1ELGFBQWEsaURBQWlELFlBQVksSUFBSSxLQUFLLE1BQU0sSUFBSSw0QkFBNEIsU0FBUyxTQUFTLG9CQUFvQix5REFBeUQsc0JBQXNCLGFBQWEsYUFBYSxjQUFjLGVBQWUsc0JBQXNCLFVBQVUsZUFBZSxjQUFjLGdEQUFnRCw0Q0FBNEMsa0JBQWtCLDhDQUE4QyxpQ0FBaUMsc0JBQXNCLGVBQWUsR0FBRyxnREFBZ0QsaUNBQWlDLHNCQUFzQixpQkFBaUIsR0FBRywrQ0FBK0MsdUJBQXVCLHlCQUF5QiwwQ0FBMEMsd0JBQXdCLGlEQUFpRCwrQ0FBK0MsMkNBQTJDLE9BQU8sMEJBQTBCLG9EQUFvRCx3QkFBd0IsSUFBSSxPQUFPLCtDQUErQyxzQkFBc0IsNkJBQTZCLG9EQUFvRCw2Q0FBNkMsdUJBQXVCLDhEQUE4RCx5QkFBeUIsMkNBQTJDLDREQUE0RCxhQUFhLGdDQUFnQywyQkFBMkIsc0VBQXNFLDJDQUEyQyxzQ0FBc0MsT0FBTyx5Q0FBeUMsNENBQTRDLGdDQUFnQyw0Q0FBNEMsaUNBQWlDLDhDQUE4QyxpQ0FBaUMsNkNBQTZDLHdHQUF3RyxzQkFBc0IsYUFBYSxhQUFhLGNBQWMsZUFBZSx3QkFBd0IsbUNBQW1DLCtCQUErQix1Q0FBdUMscUJBQXFCLHFCQUFxQix1REFBdUQsd0NBQXdDLG9CQUFvQixvQkFBb0IsYUFBYSx3QkFBd0IsbUJBQW1CLGFBQWEsU0FBUyxXQUFXLGVBQWUsYUFBYSxRQUFRLHNCQUFzQixJQUFJLFNBQVMsTUFBTSxRQUFRLE9BQU8sV0FBVyxhQUFhLFVBQVUsU0FBUyxzQkFBc0IsUUFBUSxpQkFBaUIsaUNBQWlDLElBQUksVUFBVSxTQUFTLGtCQUFrQix3REFBd0QsaUJBQWlCLG1CQUFtQixzQkFBc0IsYUFBYSxxQkFBcUIsY0FBYyxhQUFhLHlCQUF5QixhQUFhLHFCQUFxQixhQUFhLHFCQUFxQixjQUFjLGFBQWEsaUNBQWlDLFdBQVcscUJBQXFCLGFBQWEscUJBQXFCLGNBQWMsYUFBYSx5QkFBeUIsYUFBYSxpQ0FBaUMsYUFBYSxhQUFhLGFBQWEsS0FBSyxjQUFjLGFBQWEsYUFBYSxhQUFhLEtBQUssY0FBYyxnQkFBZ0IsZ0JBQWdCLHdCQUF3QixhQUFhLDhCQUE4QixVQUFVLFVBQVUsT0FBTyxtQ0FBbUMsY0FBYyxXQUFXLHVCQUF1QixVQUFVLDRDQUE0Qyx1QkFBdUIsdUJBQXVCLDRCQUE0Qiw0QkFBNEIsZUFBZSxlQUFlLDBCQUEwQixhQUFhLFVBQVUsNEJBQTRCLGNBQWMsVUFBVSw0QkFBNEIsa0JBQWtCLFdBQVcsNEJBQTRCLGNBQWMsc0JBQXNCLHNCQUFzQixhQUFhLGNBQWMsY0FBYyxjQUFjLGVBQWUsbUJBQW1CLGNBQWMsY0FBYyxrQkFBa0IsbURBQW1ELGdEQUFnRCxpQkFBaUIsYUFBYSxXQUFXLHFDQUFxQyxzQ0FBc0MsaURBQWlELG1CQUFtQixnQkFBZ0Isd0NBQXdDLE9BQU8sNEJBQTRCLHdDQUF3QyxvQkFBb0IsMEJBQTBCLG1EQUFtRCxrQ0FBa0MsMkJBQTJCLG1CQUFtQixHQUFHLDhDQUE4QyxPQUFPLHdCQUF3Qiw0QkFBNEIsZ0RBQWdELHdCQUF3QixnQ0FBZ0MsZ0JBQWdCLDJDQUEyQyxrQkFBa0IsWUFBWSxtQkFBbUIsMkJBQTJCLG1EQUFtRCx3REFBd0QsNkJBQTZCLHdEQUF3RCw2QkFBNkIsd0RBQXdELDJCQUEyQixzQkFBc0Isb0RBQW9ELGlEQUFpRCxpREFBaUQsVUFBVSxvREFBb0Qsa0JBQWtCLGlCQUFpQixxQ0FBcUMscUJBQXFCLHFCQUFxQixtQ0FBbUMsZ0RBQWdELDRDQUE0QyxnREFBZ0QsdUJBQXVCLDRDQUE0QyxxQ0FBcUMsc0JBQXNCLGFBQWEsY0FBYyxlQUFlLG1CQUFtQix1QkFBdUIsc0JBQXNCLGFBQWEseUJBQXlCLG9DQUFvQyw2QkFBNkIsNENBQTRDLGlDQUFpQyxzQkFBc0IsTUFBTSxHQUFHLDRDQUE0QyxpQ0FBaUMsc0JBQXNCLFNBQVMsR0FBRywyQ0FBMkMscUJBQXFCLDBDQUEwQywwQ0FBMEMsR0FBRyxnQ0FBZ0MsZ0VBQWdFLHFDQUFxQyxHQUFHLDRDQUE0QyxpQkFBaUIsa0JBQWtCLHlCQUF5QixrQ0FBa0MsVUFBVSxVQUFVLFNBQVMsU0FBUyxHQUFHLGtDQUFrQyw4Q0FBOEMsR0FBRyxrQ0FBa0Msd0RBQXdELEdBQUcsb0RBQW9ELG9EQUFvRCxHQUFHLHdDQUF3QywwQ0FBMEMsZ0NBQWdDLDhDQUE4QyxvQ0FBb0Msa0RBQWtELHlDQUF5QyxrQ0FBa0Msa0RBQWtELG9DQUFvQyxrQkFBa0Isc0JBQXNCLGFBQWEsYUFBYSxjQUFjLGVBQWUsdUJBQXVCLG1CQUFtQix3QkFBd0IsYUFBYSw4QkFBOEIscUJBQXFCLEdBQUcsMkRBQTJELHVDQUF1Qyw4QkFBOEIsZ0NBQWdDLGlEQUFpRCxpREFBaUQsOEJBQThCLDZDQUE2QyxHQUFHLDhCQUE4QiwrQ0FBK0MsR0FBRyw0Q0FBNEMsd0NBQXdDLEdBQUcsNENBQTRDLHNDQUFzQyxHQUFHLCtDQUErQyxnREFBZ0QsMkNBQTJDLHFEQUFxRCxvQkFBb0Isa0JBQWtCLFdBQVcsU0FBUyw4b1JBQThvUixNQUFNLGkzaEJBQWkzaEIsc0JBQXNCLGFBQWEsUUFBUSxhQUFhLGNBQWMsY0FBYyxXQUFXLG9CQUFvQixnQkFBZ0IsZ0JBQWdCLGtCQUFrQix1QkFBdUIsNkNBQTZDLFVBQVUsYUFBYSxnQkFBZ0IsWUFBWSxXQUFXLEtBQUssTUFBTSxtQkFBbUIsY0FBYyx5QkFBeUIsU0FBUyxXQUFXLEtBQUssSUFBSSxPQUFPLFlBQVksU0FBUyxnQkFBZ0IscUJBQXFCLGNBQWMsWUFBWSxZQUFZLFFBQVEsUUFBUSxrQ0FBa0MscUJBQXFCLHFCQUFxQixjQUFjLGNBQWMsTUFBTSxjQUFjLElBQUksS0FBSyxxQkFBcUIsOEJBQThCLFNBQVMsYUFBYSxNQUFNLGNBQWMsSUFBSSxLQUFLLHFCQUFxQiw4QkFBOEIsU0FBUyxhQUFhLG1CQUFtQixtQkFBbUIsWUFBWSxZQUFZLFNBQVMsZ0JBQWdCLCtCQUErQixZQUFZLHlDQUF5Qyx5REFBeUQsZ0NBQWdDLHVCQUF1QixnREFBZ0Qsd0JBQXdCLHNCQUFzQiwyQkFBMkIsc0JBQXNCLHNCQUFzQixxQkFBcUIsY0FBYyxpQ0FBaUMsdUNBQXVDLE1BQU0sdUNBQXVDLGlGQUFpRixVQUFVLGlCQUFpQixvQkFBb0IsaUJBQWlCLGdCQUFnQixZQUFZLFlBQVksWUFBWSxpQkFBaUIsYUFBYSxRQUFRLFFBQVEsaUJBQWlCLHVCQUF1QixnQkFBZ0IsS0FBSyxvQkFBb0IsaUJBQWlCLDZCQUE2QixrQkFBa0IsTUFBTSxVQUFVLE9BQU8sWUFBWSx5QkFBeUIsc0JBQXNCLGFBQWEscUJBQXFCLHdCQUF3QixjQUFjLHVDQUF1Qyx3Q0FBd0Msd0RBQXdELHFCQUFxQixhQUFhLDZCQUE2QixrQkFBa0Isb0JBQW9CLHVCQUF1QixzQkFBc0IsY0FBYyw4Q0FBOEMsV0FBVyxJQUFJLGlCQUFpQixTQUFTLElBQUksTUFBTSxzQ0FBc0MsV0FBVyxJQUFJLHlCQUF5QixTQUFTLElBQUksTUFBTSx3Q0FBd0MsbUNBQW1DLDREQUE0RCxnQ0FBZ0Msa0JBQWtCLFFBQVEscURBQXFELDRCQUE0QixrQkFBa0IsZUFBZSxlQUFlLG9CQUFvQiwrQ0FBK0MseUJBQXlCLElBQUksS0FBSyxtQkFBbUIsK0JBQStCLHFDQUFxQyxhQUFhLHNDQUFzQywrQ0FBK0Msc0NBQXNDLDREQUE0RCxxQkFBcUIscUJBQXFCLGlDQUFpQyxvQkFBb0Isb0JBQW9CLFlBQVksSUFBSSxzQkFBc0IsVUFBVSxzQ0FBc0MsK0NBQStDLG1CQUFtQixzQkFBc0IsUUFBUSxlQUFlLGlCQUFpQixhQUFhLGlCQUFpQixlQUFlLGtCQUFrQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0IsK0JBQStCLHNCQUFzQixhQUFhLGFBQWEsY0FBYyxxQkFBcUIsa0JBQWtCLG9CQUFvQiwwQ0FBMEMsc0NBQXNDLGdEQUFnRCw0Q0FBNEMsa0JBQWtCLDhCQUE4QixnQ0FBZ0Msc0JBQXNCLGdEQUFnRCxpQkFBaUIsZ0NBQWdDLHlDQUF5Qyw0QkFBNEIsc0NBQXNDLGVBQWUsNEJBQTRCLDBDQUEwQyw2Q0FBNkMsdUNBQXVDLFlBQVksV0FBVyxtREFBbUQsYUFBYSw4Q0FBOEMseUJBQXlCLHVCQUF1Qix3QkFBd0Isd0NBQXdDLHdCQUF3QixtQkFBbUIsNkJBQTZCLGtDQUFrQyxTQUFTLFlBQVksSUFBSSxXQUFXLE1BQU0sd0JBQXdCLFlBQVksaUJBQWlCLGFBQWEsU0FBUyxTQUFTLFNBQVMsU0FBUyxrQkFBa0Isa0JBQWtCLGlCQUFpQixhQUFhLEtBQUssYUFBYSxpQkFBaUIsa0JBQWtCLGtCQUFrQixTQUFTLFNBQVMsU0FBUyxTQUFTLFFBQVEsaUJBQWlCLGFBQWEsVUFBVSxzQkFBc0IsYUFBYSxhQUFhLGNBQWMscUJBQXFCLGtEQUFrRCxZQUFZLDZCQUE2Qix5QkFBeUIsZ0JBQWdCLGdCQUFnQiwyQkFBMkIsZUFBZSxzQ0FBc0MsZ0VBQWdFLDRCQUE0QixtQkFBbUIsaUJBQWlCLGNBQWMsUUFBUSxXQUFXLGFBQWEscUNBQXFDLFFBQVEsV0FBVyxjQUFjLHNDQUFzQywyQ0FBMkMsdUJBQXVCLGFBQWEseUNBQXlDLHVDQUF1Qyw2QkFBNkIsc0JBQXNCLGFBQWEsYUFBYSxjQUFjLGVBQWUsY0FBYyxnQkFBZ0IsZ0JBQWdCLGtCQUFrQixxQkFBcUIscURBQXFELGFBQWEsK0RBQStELHFCQUFxQix3QkFBd0Isc0JBQXNCLHdCQUF3QixzQkFBc0IsMkJBQTJCLHVCQUF1QixpREFBaUQsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixRQUFRLFFBQVEsUUFBUSxRQUFRLFFBQVEsWUFBWSxLQUFLLEtBQUssa0RBQWtELElBQUksSUFBSSxVQUFVLElBQUksSUFBSSxrREFBa0QsSUFBSSxJQUFJLFVBQVUsSUFBSSxJQUFJLG1CQUFtQiwyQkFBMkIsMkJBQTJCLDJCQUEyQiwyQkFBMkIsYUFBYSwrQ0FBK0MsK0NBQStDLHdDQUF3QyxvQkFBb0Isc0JBQXNCLDhCQUE4Qiw2QkFBNkIsOEJBQThCLHFCQUFxQixjQUFjLGtCQUFrQixnQ0FBZ0MsZ0NBQWdDLGdDQUFnQyx1QkFBdUIsZUFBZSwyQkFBMkIsZ0NBQWdDLGdDQUFnQyxnQ0FBZ0MsY0FBYyxzTUFBc00sc01BQXNNLGdOQUFnTixnTkFBZ04scUJBQXFCLGFBQWEsZUFBZSxpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsc0JBQXNCLGFBQWEsYUFBYSxjQUFjLGNBQWMsZUFBZSxjQUFjLGdCQUFnQixhQUFhLGtCQUFrQixvREFBb0QsZ0JBQWdCLDJDQUEyQyxhQUFhLCtEQUErRCxxQkFBcUIsbUJBQW1CLGVBQWUsbUJBQW1CLGlCQUFpQixxQkFBcUIsa0JBQWtCLDZDQUE2QyxhQUFhLFlBQVksS0FBSyxnQkFBZ0IsS0FBSyxXQUFXLDRDQUE0QyxnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLFFBQVEsV0FBVyxLQUFLLGVBQWUsdUNBQXVDLElBQUksSUFBSSxVQUFVLElBQUksSUFBSSx5QkFBeUIseUJBQXlCLHlCQUF5Qix5QkFBeUIsMEJBQTBCLDBDQUEwQyw0Q0FBNEMscUNBQXFDLHNCQUFzQixhQUFhLGFBQWEsY0FBYyxrQkFBa0IsK0NBQStDLGFBQWEsK0ZBQStGLHFCQUFxQixpQkFBaUIscUJBQXFCLG1CQUFtQix3QkFBd0Isb0JBQW9CLDRDQUE0Qyx1REFBdUQsZ0RBQWdELHNCQUFzQixhQUFhLGFBQWEsY0FBYyxjQUFjLGNBQWMsY0FBYyxnQkFBZ0IsZ0JBQWdCLGFBQWEsY0FBYyxlQUFlLGVBQWUsZUFBZSxlQUFlLGtCQUFrQix3ckJBQXdyQixrQkFBa0IsK0NBQStDLGFBQWEsZ0dBQWdHLFNBQVMscUJBQXFCLHFCQUFxQixpQkFBaUIscUJBQXFCLG1CQUFtQix3QkFBd0Isb0JBQW9CLCtDQUErQyxhQUFhLFlBQVksS0FBSyxnQkFBZ0IsS0FBSyxXQUFXLGdEQUFnRCxnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLDRCQUE0QixRQUFRLFdBQVcsS0FBSyx3Q0FBd0MsdUJBQXVCLElBQUksSUFBSSxJQUFJLFNBQVMsSUFBSSxJQUFJLElBQUksU0FBUyx5QkFBeUIseUJBQXlCLHlCQUF5Qix5QkFBeUIseUJBQXlCLHlCQUF5Qix5QkFBeUIsMEJBQTBCLDRDQUE0Qyw0Q0FBNEMscUNBQXFDLHNCQUFzQixhQUFhLGFBQWEsY0FBYyxrQkFBa0IsK0NBQStDLGFBQWEsc0xBQXNMLHFCQUFxQixpQkFBaUIsc0JBQXNCLG1CQUFtQix3QkFBd0IscUJBQXFCLDRDQUE0Qyx3REFBd0QsaURBQWlELHNCQUFzQixhQUFhLGFBQWEsY0FBYyxjQUFjLGtCQUFrQixrQkFBa0IsaUJBQWlCLGlCQUFpQixjQUFjLGlCQUFpQixpQkFBaUIsbUJBQW1CLG1CQUFtQixtQkFBbUIsbUJBQW1CLGtCQUFrQixrc0RBQWtzRCxrQkFBa0IsK0NBQStDLGFBQWEsc0xBQXNMLFNBQVMsc0JBQXNCLHFCQUFxQixpQkFBaUIsc0JBQXNCLG1CQUFtQix3QkFBd0IscUJBQXFCLDJEQUEyRCxhQUFhLFlBQVksS0FBSyxnQkFBZ0IsS0FBSyxXQUFXLE1BQU0sK0JBQStCLCtCQUErQixjQUFjLGNBQWMsaUNBQWlDLGlDQUFpQyxjQUFjLGNBQWMsd0JBQXdCLDRCQUE0QiwrQ0FBK0Msd0JBQXdCLGFBQWEsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLDRCQUE0QixZQUFZLFdBQVcsTUFBTSxRQUFRLFFBQVEscUJBQXFCLHFCQUFxQiwyQkFBMkIsMkJBQTJCLGdCQUFnQixrQkFBa0IsV0FBVyxhQUFhLDZCQUE2Qiw2QkFBNkIsaUJBQWlCLGlCQUFpQix3QkFBd0Isd0JBQXdCLGlCQUFpQixpQkFBaUIsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksYUFBYSxhQUFhLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLGFBQWEsYUFBYSxnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGlCQUFpQixpQkFBaUIsa0JBQWtCLDRDQUE0Qyw0Q0FBNEMscUNBQXFDLDRCQUE0QixlQUFlLHFCQUFxQixTQUFTLDhCQUE4QixlQUFlLHFCQUFxQixTQUFTLDZCQUE2QixrQkFBa0IscUJBQXFCLFNBQVMsK0JBQStCLGtCQUFrQixxQkFBcUIsU0FBUyx3QkFBd0IsZ0JBQWdCLGVBQWUsZUFBZSxZQUFZLHFCQUFxQixTQUFTLHdCQUF3QixnQkFBZ0IsZUFBZSxlQUFlLFlBQVkscUJBQXFCLFNBQVMsd0JBQXdCLGdCQUFnQixnQkFBZ0IsZUFBZSxZQUFZLHFCQUFxQixTQUFTLHdCQUF3QixnQkFBZ0IsZ0JBQWdCLGVBQWUsWUFBWSxxQkFBcUIsU0FBUyx3QkFBd0IsZUFBZSxlQUFlLGVBQWUsWUFBWSxxQkFBcUIsU0FBUyx3QkFBd0IsZUFBZSxlQUFlLGVBQWUsWUFBWSxxQkFBcUIsU0FBUyx3QkFBd0IsZ0JBQWdCLGdCQUFnQixlQUFlLFlBQVkscUJBQXFCLFNBQVMsd0JBQXdCLGdCQUFnQixnQkFBZ0IsZUFBZSxZQUFZLHFCQUFxQixVQUFVLHNCQUFzQixhQUFhLGFBQWEsZUFBZSx1QkFBdUIsNEJBQTRCLGtDQUFrQyw2QkFBNkIsWUFBWSxxQkFBcUIsZ0JBQWdCLFlBQVksc0JBQXNCLG1CQUFtQixjQUFjLG9CQUFvQixhQUFhLFVBQVUsbUJBQW1CLDhCQUE4QixnQkFBZ0IsbUJBQW1CLDhCQUE4QixnQkFBZ0IsbUJBQW1CLDRCQUE0QixnQkFBZ0IsbUJBQW1CLDhCQUE4QixnQkFBZ0IscUJBQXFCLGFBQWEsY0FBYyxjQUFjLGFBQWEsOEJBQThCLG9DQUFvQyxhQUFhLHVCQUF1QixhQUFhLHdDQUF3QyxzQkFBc0IscUNBQXFDLGVBQWUsU0FBUyx3QkFBd0IsT0FBTyxRQUFRLFlBQVksV0FBVyxLQUFLLHNCQUFzQixVQUFVLFNBQVMsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsOEJBQThCLGdEQUFnRCxpQkFBaUIsb0JBQW9CLG1CQUFtQixnQkFBZ0IsS0FBSyxpQkFBaUIsbUJBQW1CLGtCQUFrQixtQkFBbUIsK0JBQStCLDBCQUEwQixRQUFRLFdBQVcsdUNBQXVDLEtBQUssUUFBUSxXQUFXLGdCQUFnQixTQUFTLGtCQUFrQixrQkFBa0IsU0FBUyxZQUFZLFdBQVcsZ0NBQWdDLFNBQVMsY0FBYyxrQkFBa0IsbURBQW1ELGFBQWEsY0FBYyxzQkFBc0IsU0FBUyxZQUFZLFdBQVcsS0FBSyxXQUFXLDJCQUEyQix5QkFBeUIsU0FBUyxrQkFBa0Isa0JBQWtCLDRCQUE0QixjQUFjLGNBQWMsa0JBQWtCLDRCQUE0QixrQ0FBa0MsbUNBQW1DLG9DQUFvQyxxQ0FBcUMsc0NBQXNDLHVDQUF1QyxjQUFjLGNBQWMseUJBQXlCLFVBQVUsV0FBVyxxQkFBcUIsZ0JBQWdCLFdBQVcsVUFBVSxNQUFNLG9EQUFvRCw0Q0FBNEMsV0FBVyxTQUFTLGdCQUFnQixzQkFBc0IsNEJBQTRCLGdCQUFnQixXQUFXLFVBQVUsV0FBVyxjQUFjLFlBQVksa0JBQWtCLGlCQUFpQixhQUFhLEtBQUssY0FBYyxrQkFBa0IsaUJBQWlCLFlBQVksU0FBUyxrQkFBa0IscUJBQXFCLHFCQUFxQixnQkFBZ0IscUJBQXFCLHFCQUFxQixnQkFBZ0Isb0JBQW9CLGVBQWUsY0FBYyx3QkFBd0IsaUJBQWlCLGtCQUFrQiwwQkFBMEIsbUJBQW1CLGtCQUFrQiw0QkFBNEIscUJBQXFCLGtCQUFrQix3QkFBd0IsV0FBVyxhQUFhLGNBQWMsb0JBQW9CLFdBQVcsU0FBUyxjQUFjLDJCQUEyQixjQUFjLG9CQUFvQixhQUFhLG9CQUFvQiwyQkFBMkIsVUFBVSxhQUFhLG9CQUFvQixxQ0FBcUMsUUFBUSxRQUFRLFVBQVUsV0FBVyxVQUFVLFdBQVcsVUFBVSxXQUFXLGdCQUFnQixhQUFhLHdCQUF3QixxQ0FBcUMsY0FBYyxhQUFhLHdCQUF3Qix5Q0FBeUMsUUFBUSxRQUFRLFVBQVUsV0FBVyxVQUFVLFdBQVcsVUFBVSxXQUFXLFVBQVUsV0FBVyxrQkFBa0IsYUFBYSx3QkFBd0IseUNBQXlDLGdCQUFnQixhQUFhLHdCQUF3QiwwQkFBMEIsb0JBQW9CLGFBQWEsc0JBQXNCLDBCQUEwQixvQkFBb0IsYUFBYSxzQkFBc0IseUJBQXlCLGFBQWEsb0JBQW9CLHlCQUF5QixvQkFBb0IsYUFBYSxvQkFBb0Isc0JBQXNCLGFBQWEsY0FBYyxjQUFjLGNBQWMscUJBQXFCLHNEQUFzRCxpQkFBaUIsK0JBQStCLDhCQUE4QixxREFBcUQsa0JBQWtCLHlCQUF5QixZQUFZLFlBQVksK0NBQStDLDJDQUEyQyx5Q0FBeUMsMEZBQTBGLGtCQUFrQixtQkFBbUIsOENBQThDLDRCQUE0QixnQ0FBZ0MsZ0NBQWdDLFlBQVksZ0JBQWdCLEtBQUssWUFBWSxZQUFZLGdCQUFnQixlQUFlLHFDQUFxQyx5Q0FBeUMscUNBQXFDLDhDQUE4Qyw4Q0FBOEMsbUJBQW1CLGtCQUFrQiw0Q0FBNEMsYUFBYSxrRUFBa0UsNkNBQTZDLG1EQUFtRCx3QkFBd0IsSUFBSSxJQUFJLE9BQU8saUJBQWlCLGlCQUFpQiwwRkFBMEYsOEJBQThCLGdCQUFnQix1REFBdUQsMEVBQTBFLHdCQUF3QixJQUFJLElBQUksT0FBTyxNQUFNLHdCQUF3QixnQkFBZ0IsU0FBUyxrQkFBa0IsNENBQTRDLG1CQUFtQixtQkFBbUIsZ0JBQWdCLGVBQWUsc0JBQXNCLGtCQUFrQixzQ0FBc0MsaUNBQWlDLE1BQU0sV0FBVyx1Q0FBdUMsYUFBYSwwREFBMEQsSUFBSSxLQUFLLGlDQUFpQyxNQUFNLFdBQVcsMEJBQTBCLCtCQUErQix5QkFBeUIsNkJBQTZCLHNCQUFzQixhQUFhLGNBQWMsY0FBYyxxQkFBcUIsb0JBQW9CLGVBQWUsZ0JBQWdCLG1CQUFtQixtQkFBbUIsbUJBQW1CLGtCQUFrQixTQUFTLGlDQUFpQyxRQUFRLFlBQVksS0FBSyxzQ0FBc0MsY0FBYyxjQUFjLGNBQWMsY0FBYyxpQ0FBaUMsa0NBQWtDLGlDQUFpQyxrQ0FBa0MsaUNBQWlDLGtDQUFrQyxrQ0FBa0Msa0NBQWtDLGlDQUFpQyxrQ0FBa0MsbUNBQW1DLG1DQUFtQyxrQ0FBa0MsbUNBQW1DLG1DQUFtQyxtQ0FBbUMsaUNBQWlDLGlDQUFpQyxrQ0FBa0Msa0NBQWtDLGlDQUFpQyxnQ0FBZ0MsbUNBQW1DLGtDQUFrQyxnQ0FBZ0Msa0NBQWtDLGtDQUFrQyxrQ0FBa0Msa0NBQWtDLGlDQUFpQyxrQ0FBa0MsbUNBQW1DLGlDQUFpQyxrQ0FBa0MsbUNBQW1DLG1DQUFtQyxpQ0FBaUMsa0NBQWtDLGtDQUFrQyxtQ0FBbUMsaUNBQWlDLGtDQUFrQyxrQ0FBa0MsZ0NBQWdDLGlDQUFpQyxtQ0FBbUMsa0NBQWtDLGtDQUFrQyxpQ0FBaUMsa0NBQWtDLG1DQUFtQyxrQ0FBa0Msa0NBQWtDLGtDQUFrQyxtQ0FBbUMsa0NBQWtDLGlDQUFpQyxtQ0FBbUMsa0NBQWtDLG1DQUFtQyxpQ0FBaUMsbUNBQW1DLGlDQUFpQyxrQ0FBa0Msb0JBQW9CLG9CQUFvQixvQkFBb0IscUJBQXFCLGlDQUFpQyxxQ0FBcUMseUJBQXlCLHlDQUF5QyxlQUFlLG9CQUFvQix5Q0FBeUMsOENBQThDLDhDQUE4QyxlQUFlLHdCQUF3QiwwQkFBMEIsMEJBQTBCLDBCQUEwQiwyQkFBMkIsVUFBVSxtQkFBbUIscUJBQXFCLDRCQUE0QixzQ0FBc0MsNEJBQTRCLHNDQUFzQyw0QkFBNEIsbUNBQW1DLDRCQUE0QixzQ0FBc0MsY0FBYyxzQkFBc0IsYUFBYSxjQUFjLHdCQUF3Qix3QkFBd0Isc0JBQXNCLHNDQUFzQywyQkFBMkIsd0RBQXdELG9CQUFvQixxQkFBcUIsR0FBRyxtQ0FBbUMsbUJBQW1CLFVBQVUsMERBQTBELGVBQWUsa0NBQWtDLGdEQUFnRCxvQkFBb0IsZ0JBQWdCLHdCQUF3QiwyQkFBMkIsZ0JBQWdCLFlBQVksWUFBWSxNQUFNLGdCQUFnQixpQkFBaUIsV0FBVyxLQUFLLElBQUksS0FBSyxrQ0FBa0MsVUFBVSwyQkFBMkIsdUNBQXVDLFlBQVksSUFBSSxLQUFLLGFBQWEsNkJBQTZCLHNCQUFzQixzQkFBc0IsVUFBVSwwREFBMEQsb0JBQW9CLGdCQUFnQix3QkFBd0IsMkJBQTJCLGdCQUFnQixZQUFZLFlBQVksTUFBTSxnQkFBZ0IsaUJBQWlCLEtBQUssSUFBSSxLQUFLLGtDQUFrQyxlQUFlLDBCQUEwQiwyQkFBMkIsdUNBQXVDLFlBQVksSUFBSSxLQUFLLGFBQWEsa0RBQWtELHNCQUFzQixVQUFVLGFBQWEsbUNBQW1DLGNBQWMsa0JBQWtCLGlCQUFpQixxQkFBcUIsNkNBQTZDLHlDQUF5Qyw2REFBNkQsb0JBQW9CLGFBQWEsUUFBUSxzQkFBc0IscUNBQXFDLGVBQWUsU0FBUyx3QkFBd0IsWUFBWSxXQUFXLGdCQUFnQixTQUFTLGNBQWMsK0JBQStCLDBCQUEwQixZQUFZLFdBQVcsc0NBQXNDLEtBQUssWUFBWSxXQUFXLEtBQUssc0JBQXNCLFdBQVcsWUFBWSxpQkFBaUIsZ0JBQWdCLFNBQVMsa0JBQWtCLGtCQUFrQiw0QkFBNEIsY0FBYyxjQUFjLGtCQUFrQixTQUFTLFlBQVksV0FBVyxnQ0FBZ0MsU0FBUyxjQUFjLDhCQUE4Qiw2QkFBNkIsZUFBZSxzQkFBc0IsYUFBYSxjQUFjLHNCQUFzQiwyQ0FBMkMsK1FBQStRLEdBQUcsa0JBQWtCLDBDQUEwQywyRUFBMkUsR0FBRyxpQkFBaUIsa0RBQWtELG1GQUFtRixHQUFHLGNBQWMsaURBQWlELDROQUE0TixHQUFHLDRDQUE0Qyw4R0FBOEcsR0FBRyxlQUFlLHFEQUFxRCxrV0FBa1csR0FBRyx3QkFBd0IsMkNBQTJDLDJKQUEySixHQUFHLGtCQUFrQiwyQ0FBMkMsV0FBVyxHQUFHLDBDQUEwQyxxTEFBcUwsR0FBRyxpQkFBaUIsMENBQTBDLGFBQWEsd0JBQXdCLEVBQUUsR0FBRyw2Q0FBNkMsd0RBQXdELEdBQUcsc0JBQXNCLGFBQWEsY0FBYyxrQ0FBa0MsYUFBYSxrREFBa0QsRUFBRSxHQUFHLGdEQUFnRCxpRUFBaUUsR0FBRyxpREFBaUQscUhBQXFILEdBQUcsa0RBQWtELG1GQUFtRixHQUFHLHVEQUF1RCxjQUFjLEdBQUcseUNBQXlDLGNBQWMsR0FBRyxrQ0FBa0MsYUFBYSx3QkFBd0IsRUFBRSxHQUFHLHNDQUFzQyx5RUFBeUUsR0FBRyx1Q0FBdUMsaUhBQWlILEdBQUcsNENBQTRDLG9hQUFvYSxHQUFHLDZDQUE2Qyw0SEFBNEgsR0FBRyxZQUFZLHNCQUFzQixpSUFBaUksb0RBQW9ELDBGQUEwRixjQUFjLGNBQWMscUJBQXFCLHdCQUF3QixtQkFBbUIsaUJBQWlCLE1BQU0sT0FBTyxpQkFBaUIsNkNBQTZDLEtBQUssaUJBQWlCLHlCQUF5QixrREFBa0QsOENBQThDLFNBQVMsZ0NBQWdDLG9CQUFvQixrQkFBa0IsY0FBYyxvQkFBb0IsT0FBTyxlQUFlLHNCQUFzQixjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMscUJBQXFCLG9CQUFvQixzQkFBc0IsTUFBTSx3Q0FBd0MsZUFBZSxRQUFRLHdCQUF3QixZQUFZLGFBQWEsWUFBWSxhQUFhLFFBQVEsVUFBVSxzRkFBc0Ysd0JBQXdCLDhCQUE4QixrQ0FBa0MsVUFBVSx1RkFBdUYsK0RBQStELE9BQU8sa0JBQWtCLG9HQUFvRyxPQUFPLG9DQUFvQyw2Q0FBNkMsdUNBQXVDLG9FQUFvRSxlQUFlLGlEQUFpRCxrQ0FBa0MsVUFBVSxvRkFBb0YsK0JBQStCLGdHQUFnRyxpR0FBaUcsT0FBTyxzQ0FBc0MsNkNBQTZDLHVDQUF1QywyREFBMkQsNkRBQTZELDZCQUE2QixtREFBbUQsc0RBQXNELE9BQU8sa0RBQWtELGdEQUFnRCxnQ0FBZ0Msc0JBQXNCLDZDQUE2QyxzRUFBc0UsbURBQW1ELG9DQUFvQywwQkFBMEIscUNBQXFDLG1DQUFtQyxnQ0FBZ0MsU0FBUyxvQkFBb0Isa0JBQWtCLG9CQUFvQixzQkFBc0IsY0FBYyxjQUFjLGNBQWMsY0FBYyxtQ0FBbUMsT0FBTyxvQkFBb0IsZ0JBQWdCLDBCQUEwQixJQUFJLFNBQVMsMkVBQTJFLDZCQUE2QixxQ0FBcUMsT0FBTyxvQkFBb0IsZ0JBQWdCLFlBQVksK0JBQStCLDBFQUEwRSxxQkFBcUIsaUJBQWlCLEtBQUssOEJBQThCLHVCQUF1QixzQkFBc0IscUJBQXFCLGNBQWMsY0FBYyxjQUFjLGNBQWMsTUFBTSxNQUFNLHFCQUFNLFNBQVMscUJBQU0sZUFBZSxPQUFPLHlKQUF5SixTQUFTLHdCQUF3QixHQUFHLHFCQUFNLFdBQVcscUJBQU0sa0JBQWtCLDhCQUE4QixvQ0FBb0MsOEJBQThCLHFCQUFxQixZQUFZLGdCQUFnQixtREFBbUQsWUFBWSxxQkFBcUIsYUFBYSxHQUFHLE9BQU8sU0FBUyxrQ0FBa0MsNEJBQTRCLGNBQWMseUNBQXlDLHFCQUFxQix3Q0FBd0MsUUFBUSxTQUFTLHFCQUFxQixpQkFBaUIsR0FBRyw2QkFBNkIsb0JBQW9CLE9BQU8sc0JBQXNCLFVBQVUsR0FBRyxlQUFlLE9BQU8sc0JBQXNCLEtBQUssR0FBRyxHQUFHLGdDQUFnQywwQkFBMEIsSUFBSSxZQUFZLFlBQVkseUJBQXlCLGNBQWMscUJBQU0sdUJBQXVCLE9BQU8sT0FBTyxzQkFBc0IsTUFBTSxJQUFJLGVBQWUsU0FBUyxZQUFZLFVBQVUsR0FBRyxPQUFPLG9CQUFvQixnQkFBZ0IsMkVBQTJFLGdEQUFnRCxxQ0FBcUMsb0JBQW9CLE9BQU8sa0JBQWtCLE1BQU0sR0FBRyxJQUFlLEVBQUUsVUFBVSxLQUFLLFVBQXFILFlBQVksa0JBQWtCLHVCQUF1Qix3QkFBd0Isd0JBQXdCLCtDQUErQyxRQUFRLHNDQUFzQyx3QkFBd0IsK0NBQStDLG9CQUFvQix3Q0FBd0Msc0JBQXNCLE9BQU8sK0VBQStFLGNBQWMscUJBQXFCLGNBQWMsY0FBYyxjQUFjLDJCQUEyQixPQUFPLG9CQUFvQixnQkFBZ0IsWUFBWSx1QkFBdUIsZ0NBQWdDLHVCQUF1QixRQUFRLFdBQVcscUJBQXFCLFlBQVksS0FBSyxLQUFLLDRCQUE0QixnQ0FBZ0MsUUFBUSxZQUFZLElBQUksS0FBSyw0QkFBNEIsWUFBWSxJQUFJLGVBQWUsWUFBWSxLQUFLLFNBQVMsaUJBQWlCLHNCQUFzQixxQkFBcUIsMEJBQTBCLGtCQUFrQixTQUFTLDZCQUE2QixtQkFBbUIsK0JBQStCLHdCQUF3QixLQUFLLG9GQUFvRixzQkFBc0Isd0JBQXdCLHlCQUF5Qiw4Q0FBOEMsa0NBQWtDLDRDQUE0QyxtQ0FBbUMsc0JBQXNCLGNBQWMscUJBQXFCLHdCQUF3QixpQkFBaUIsUUFBUSxNQUFNLGtCQUFrQixhQUFhLHVEQUF1RCxxQkFBcUIsa0JBQWtCLHVCQUF1QixxQkFBcUIsVUFBVSxzQkFBc0IsY0FBYyxjQUFjLGNBQWMsYUFBYSxjQUFjLGNBQWMsY0FBYyxxQkFBcUIseUNBQXlDLE1BQU0sY0FBYyxZQUFZLFdBQVcsSUFBSSxLQUFLLElBQUksV0FBVyw2QkFBNkIsMkNBQTJDLG9DQUFvQyxNQUFNLE1BQU0sZ0JBQWdCLEtBQUssU0FBUywwQkFBMEIsb0JBQW9CLFVBQVUsaUJBQWlCLGVBQWUsb0JBQW9CLGVBQWUsU0FBUyxLQUFLLHFDQUFxQyxtQkFBbUIsNkJBQTZCLDRDQUE0QyxlQUFlLGFBQWEsb0NBQW9DLHFCQUFxQixtQkFBbUIsa0JBQWtCLHNCQUFzQiw0QkFBNEIsb0NBQW9DLFFBQVEsZ0JBQWdCLElBQUksZUFBZSxvQ0FBb0Msa0JBQWtCLHNCQUFzQixtQkFBbUIsUUFBUSxRQUFRLGtCQUFrQixnQkFBZ0IsSUFBSSxPQUFPLHFCQUFxQixrRUFBa0UsSUFBSSxlQUFlLElBQUksTUFBTSxvQ0FBb0Msa0JBQWtCLHNCQUFzQixZQUFZLFlBQVksUUFBUSxlQUFlLHdCQUF3QixJQUFJLDhCQUE4QixTQUFTLGFBQWEsYUFBYSxVQUFVLHNCQUFzQixjQUFjLGNBQWMsY0FBYyxjQUFjLGNBQWMsYUFBYSxjQUFjLGNBQWMscUJBQXFCLHdDQUF3QyxNQUFNLGNBQWMsWUFBWSxXQUFXLElBQUksS0FBSyxJQUFJLFdBQVcsTUFBTSxVQUFVLFlBQVksZUFBZSxlQUFlLGVBQWUsV0FBVyx3QkFBd0IsOENBQThDLEtBQUssbUNBQW1DLE1BQU0sY0FBYyxLQUFLLGdCQUFnQixtQkFBbUIsNkJBQTZCLGVBQWUsNENBQTRDLGVBQWUsVUFBVSxZQUFZLG9DQUFvQyx1QkFBdUIsWUFBWSxXQUFXLGlEQUFpRCxrQkFBa0IsMkNBQTJDLHNCQUFzQixlQUFlLDZCQUE2QixXQUFXLG9DQUFvQyxNQUFNLE1BQU0scUJBQXFCLEtBQUssaUJBQWlCLDZEQUE2RCxvQkFBb0IsdUJBQXVCLFFBQVEsYUFBYSxRQUFRLE1BQU0sV0FBVyxpQkFBaUIsU0FBUyxJQUFJLFNBQVMsTUFBTSxVQUFVLFVBQVUsc0JBQXNCLGFBQWEscUJBQXFCLHlCQUF5Qiw4RkFBOEYscUJBQXFCLGtCQUFrQiw0QkFBNEIsZUFBZSxTQUFTLGFBQWEsV0FBVyxVQUFVLHNCQUFzQixhQUFhLFlBQVksaUJBQWlCLHNCQUFzQixrSUFBa0kscUJBQXFCLE1BQU0scUJBQU0sU0FBUyxxQkFBTSxVQUFVLHlCQUF5QixzQkFBc0IsS0FBSyxxQkFBcUIsMEJBQTBCLCtEQUErRCx1QkFBdUIsUUFBUSxRQUFRLFlBQVksSUFBSSxNQUFNLG1DQUFtQyxLQUFLLHNCQUFzQiwwQkFBMEIsT0FBTyxPQUFPLHNCQUFzQixVQUFVLEdBQUcsVUFBVSxzQkFBc0IsYUFBYSxzQkFBc0IsOEhBQThILGNBQWMsY0FBYyxlQUFlLG1CQUFtQixNQUFNLHFCQUFNLFNBQVMscUJBQU0sVUFBVSx1QkFBdUIsMkJBQTJCLCtCQUErQiwrQ0FBK0MsYUFBYSwrQ0FBK0MsYUFBYSw2Q0FBNkMsMkJBQTJCLCtCQUErQiw2Q0FBNkMsYUFBYSw2Q0FBNkMsZUFBZSwwQ0FBMEMsMEJBQTBCLElBQWUsRUFBRSx3QkFBd0IsZ0NBQWdDLEtBQUssd0JBQXdCLDRCQUE0Qiw2QkFBNkIsa0NBQWtDLHFCQUFNLGNBQWMscUVBQXFFLDBCQUEwQixJQUFJLElBQUksV0FBVywrQkFBK0IsSUFBSSxhQUFhLCtCQUErQix3REFBd0QseUJBQXlCLHlCQUF5QiwyQkFBMkIsNkJBQTZCLEdBQUcsSUFBZSxFQUFFLGVBQWUsNEJBQTRCLHFCQUFxQixNQUFNLE9BQU8sc0JBQXNCLFVBQVUsR0FBRyxPQUFPLFNBQVMsTUFBTSxtQkFBbUIsTUFBTSxZQUFZLFlBQVksVUFBVSxHQUFHLE9BQU8sV0FBVyxZQUFZLFNBQVMsK0JBQStCLDJCQUEyQixJQUFJLGtDQUFrQyxxQkFBTSxjQUFjLHFFQUFxRSx5QkFBeUIsOEJBQThCLHlCQUF5QiwwQkFBMEIsa0JBQWtCLGFBQWEsV0FBVyxnQ0FBZ0MsT0FBTyxRQUFRLDJCQUEyQix3QkFBd0IsU0FBUyxLQUFLLGlCQUFpQiwwQkFBMEIsbUJBQW1CLDBCQUEwQixnQ0FBZ0MsMkJBQTJCLGVBQWUsb0JBQW9CLHFCQUFxQixpQkFBaUIsd0JBQXdCLFFBQVEsZ0JBQWdCLEdBQUcsRUFBRSwwQkFBMEIsY0FBYyxlQUFlLGdCQUFnQixHQUFHLEVBQUUsTUFBTSxLQUFLLEtBQUssRUFBRSxLQUFLLFlBQVksR0FBRyxFQUFFLEtBQUssR0FBRyxLQUFLLFlBQVksR0FBRyxFQUFFLFVBQVUsR0FBRywyQkFBMkIsMkNBQTJDLHlCQUF5Qiw4QkFBOEIsV0FBVyxxQ0FBcUMseUJBQXlCLHdCQUF3QixJQUFJLHdCQUF3QixhQUFhLEtBQUssNEJBQTRCLHVEQUF1RCx3REFBd0QsYUFBYSx3REFBd0QsTUFBTSw4Q0FBOEMsZ0JBQWdCLHdCQUF3QixLQUFLLFlBQVksTUFBTSw0QkFBNEIsU0FBUyxHQUFHLEVBQUUsR0FBRyxFQUFFLGdCQUFnQixFQUFFLEtBQUssOENBQThDLFVBQVUsRUFBRSxJQUFJLEdBQUcsRUFBRSxHQUFHLEVBQUUsZ0JBQWdCLEVBQUUsc0JBQXNCLFNBQVMsRUFBRSxTQUFTLGFBQWEsdUVBQXVFLDBEQUEwRCw0Q0FBNEMsR0FBRyxnRUFBZ0Usb0RBQW9ELHVEQUF1RCxHQUFHLDBFQUEwRSxzRUFBc0UsZ0VBQWdFLDBGQUEwRixvREFBb0QsNkJBQTZCLGFBQWEseUZBQXlGLGNBQWMsc0JBQXNCLGFBQWEsK0JBQStCLFNBQVMsZ0JBQWdCLFVBQVUsVUFBVSxpQkFBaUIsY0FBYyxjQUFjLG1CQUFtQixxQkFBcUIsWUFBWSxXQUFXLEtBQUssV0FBVyw0REFBNEQsbUJBQW1CLGtEQUFrRCxlQUFlLGVBQWUsd0JBQXdCLE1BQU0sMENBQTBDLDBDQUEwQyw0QkFBNEIseUJBQXlCLHlCQUF5QixnRUFBZ0Usb0NBQW9DLDBDQUEwQyxFQUFFLHlEQUF5RCxvQ0FBb0MsNkRBQTZELEVBQUUseURBQXlELG9DQUFvQyxtQ0FBbUMsRUFBRSxpQkFBaUIsb0NBQW9DLE9BQU8sd0JBQXdCLG9CQUFvQixRQUFRLG9EQUFvRCxvQ0FBb0MscUVBQXFFLGFBQWEsb0VBQW9FLHFCQUFxQixxRUFBcUUsT0FBTyxnQ0FBZ0MsaUNBQWlDLEVBQUUsc0JBQXNCLGFBQWEsc0JBQXNCLGNBQWMsdUJBQXVCLHdCQUF3Qiw0REFBNEQsZUFBZSxpREFBaUQsV0FBVyxzQkFBc0IsYUFBYSxtQkFBbUIsTUFBTSxxQ0FBcUMsMkJBQTJCLG9DQUFvQyw4QkFBOEIsY0FBYyxxQkFBcUIsTUFBTSxxQkFBTSwwQkFBMEIsZ0NBQWdDLGlCQUFpQiwwQkFBMEIscUNBQXFDLGNBQWMsTUFBTSxrQkFBa0IsdUJBQXVCLEtBQUsscUJBQXFCLGNBQWMsY0FBYyxtQ0FBbUMsNklBQTZJLE1BQU0sTUFBTSxNQUFNLG9CQUFvQix1QkFBdUIsbURBQW1ELGdDQUFnQyx1RUFBdUUsdUNBQXVDLDREQUE0RCxtQ0FBbUMsOEJBQThCLGFBQWEsUUFBUSx5Q0FBeUMsK0JBQStCLDZEQUE2RCx1REFBdUQsa0JBQWtCLGNBQWMsZ0JBQWdCLGtCQUFrQixrQkFBa0IsaUJBQWlCLHNCQUFzQixtQkFBbUIsZUFBZSx3QkFBd0IsMkJBQTJCLDZCQUE2QiwyQkFBMkIsaUJBQWlCLG1DQUFtQyxpQ0FBaUMscUJBQXFCLCtDQUErQyxrQkFBa0IsdUJBQXVCLGtCQUFrQixtQkFBbUIsZUFBZSxrQkFBa0IsK0JBQStCLDBCQUEwQixxQkFBcUIsYUFBYSxzREFBc0Qsd0JBQXdCLGdEQUFnRCxtQkFBbUIsTUFBTSxnREFBZ0QseURBQXlELGFBQWEsc0RBQXNELG9DQUFvQyxvQ0FBb0MsYUFBYSxxQ0FBcUMscUJBQXFCLHlCQUF5QixPQUFPLGlDQUFpQyxFQUFFLHFDQUFxQywwQ0FBMEMsMENBQTBDLE1BQU0sc0NBQXNDLDBCQUEwQixNQUFNLGtCQUFrQix3QkFBd0IsdUJBQXVCLG1CQUFtQixjQUFjLEtBQUssUUFBUSxLQUFLLE9BQU8sMkNBQTJDLHVDQUF1QyxpREFBaUQscUNBQXFDLHdCQUF3Qix1QkFBdUIsYUFBYSxnQkFBZ0IsZ0JBQWdCLEtBQUssTUFBTSwwQkFBMEIsTUFBTSxPQUFPLHFDQUFxQywrRUFBK0UseUJBQXlCLE1BQU0sMkJBQTJCLDBCQUEwQixpQkFBaUIsV0FBVyxxQkFBcUIsYUFBYSxLQUFLLGdCQUFnQixrQkFBa0IscUJBQXFCLG9EQUFvRCx3QkFBd0IsS0FBSyx3QkFBd0IsWUFBWSxnQkFBZ0Isb0JBQW9CLHlEQUF5RCwyQkFBMkIscUNBQXFDLGVBQWUsaUJBQWlCLEtBQUssa0NBQWtDLHlCQUF5QixzQkFBc0Isa0NBQWtDLG1CQUFtQiwyQkFBMkIsTUFBTSx5RUFBeUUsb0RBQW9ELFNBQVMsdUNBQXVDLDRDQUE0QywyQ0FBMkMsa0JBQWtCLGVBQWUsOEJBQThCLGtFQUFrRSxzQ0FBc0MsU0FBUyxnQkFBZ0IsbUJBQW1CLFNBQVMsbUNBQW1DLDZDQUE2QyxvQ0FBb0MsYUFBYSxpQkFBaUIsb0NBQW9DLFNBQVMsSUFBSSxLQUFLLElBQUksU0FBUyxTQUFTLFNBQVMsU0FBUyxVQUFVLElBQUksU0FBUyw0QkFBNEIsd0NBQXdDLHlCQUF5QixVQUFVLHdEQUF3RCxxQkFBcUIsZ0VBQWdFLHdCQUF3QixhQUFhLG9CQUFvQixTQUFTLGdCQUFnQixvQ0FBb0MsWUFBWSxpQkFBaUIsMEJBQTBCLFFBQVEsaUNBQWlDLGlHQUFpRyx5Q0FBeUMsMkNBQTJDLHdCQUF3QixZQUFZLHFCQUFxQixtQkFBbUIsa0NBQWtDLFlBQVkscUJBQXFCLHFCQUFxQiw2Q0FBNkMsT0FBTyxrQ0FBa0MsdUJBQXVCLFFBQVEsd0JBQXdCLFdBQVcsYUFBYSxlQUFlLFlBQVksb0NBQW9DLDRCQUE0QixhQUFhLG1DQUFtQyxNQUFNLHVCQUF1QixZQUFZLGFBQWEseUNBQXlDLElBQUksS0FBSyxZQUFZLGVBQWUsaUJBQWlCLGdDQUFnQyxvQ0FBb0MsZ0NBQWdDLFVBQVUseUJBQXlCLGdCQUFnQixrQkFBa0IsY0FBYyxzQkFBc0IsZ0JBQWdCLGlCQUFpQixtQ0FBbUMsYUFBYSxXQUFXLGdCQUFnQixLQUFLLHFCQUFxQix1QkFBdUIsdUJBQXVCLG1CQUFtQix5QkFBeUIsdUJBQXVCLG1EQUFtRCxxQkFBcUIsdUJBQXVCLDRCQUE0Qix1QkFBdUIsT0FBTyw0QkFBNEIsMEJBQTBCLHVCQUF1QixnREFBZ0Qsc0NBQXNDLG1CQUFtQix3QkFBd0IsK0RBQStELFFBQVEsNEJBQTRCLG1CQUFtQixtQkFBbUIsT0FBTywrQkFBK0IsNkJBQTZCLGlGQUFpRixlQUFlLDBCQUEwQixVQUFVLHNCQUFzQixvQkFBb0IscUNBQXFDLDBCQUEwQixzQ0FBc0MsV0FBVywwQkFBMEIscUJBQXFCLGlCQUFpQixNQUFNLDJCQUEyQixNQUFNLHdCQUF3QixNQUFNLGdCQUFnQiwwQ0FBMEMsK0JBQStCLE9BQU8sYUFBYSxPQUFPLFFBQVEscUJBQXFCLGdCQUFnQixPQUFPLGFBQWEscUJBQXFCLHdCQUF3Qix1QkFBdUIsY0FBYyxVQUFVLDRCQUE0QixrQkFBa0IsWUFBWSxpQkFBaUIsV0FBVyxRQUFRLHFCQUFxQixnQkFBZ0IsWUFBWSxtQkFBbUIsYUFBYSxrQ0FBa0Msb0NBQW9DLDRCQUE0QixrQ0FBa0Msb0NBQW9DLDhCQUE4QiwrQkFBK0IsZ0NBQWdDLE9BQU8scUVBQXFFLG9CQUFvQixtQkFBbUIsWUFBWSxpQkFBaUIsa0JBQWtCLGNBQWMsaUZBQWlGLDhDQUE4QyxlQUFlLFdBQVcsb0JBQW9CLGVBQWUsU0FBUyxrQ0FBa0MsMkJBQTJCLG1DQUFtQyxtQkFBbUIsb0NBQW9DLFNBQVMsd0JBQXdCLG9CQUFvQixjQUFjLGtDQUFrQyxTQUFTLDBCQUEwQixrQkFBa0IsWUFBWSxZQUFZLGlCQUFpQixlQUFlLGlCQUFpQixXQUFXLFVBQVUsd0JBQXdCLDRDQUE0Qyx1QkFBdUIsOEJBQThCLCtCQUErQixrQ0FBa0MsZUFBZSxVQUFVLHNDQUFzQywwQkFBMEIsT0FBTyxrQkFBa0IsZ0NBQWdDLHFCQUFxQiw4QkFBOEIsZ0JBQWdCLGFBQWEsZUFBZSxnQkFBZ0IsNkJBQTZCLFlBQVksT0FBTyxjQUFjLG1CQUFtQixhQUFhLGVBQWUsZ0JBQWdCLFlBQVksSUFBSSxLQUFLLHlCQUF5QixpQkFBaUIsRUFBRSxZQUFZLHlCQUF5QixzQkFBc0Isb0JBQW9CLGdCQUFnQix1Q0FBdUMsd0JBQXdCLGFBQWEsb0NBQW9DLG9DQUFvQywwQkFBMEIsZUFBZSxxREFBcUQsbUNBQW1DLHdCQUF3Qix3Q0FBd0Msd0NBQXdDLGdCQUFnQix3QkFBd0Isb0NBQW9DLGFBQWEsbUJBQW1CLG9CQUFvQixPQUFPLG1DQUFtQyxVQUFVLHFEQUFxRCxnREFBZ0QsZ0RBQWdELG1CQUFtQixPQUFPLHdDQUF3QyxVQUFVLGtEQUFrRCwyREFBMkQsa0NBQWtDLE9BQU8sd0NBQXdDLFVBQVUsb0NBQW9DLHVCQUF1QixrREFBa0QsaUNBQWlDLGVBQWUsbUNBQW1DLFlBQVksNkJBQTZCLDhCQUE4QixVQUFVLHFDQUFxQywwQkFBMEIsZUFBZSxZQUFZLCtCQUErQixlQUFlLGVBQWUsYUFBYSxxQkFBcUIsdUJBQXVCLHVCQUF1QixPQUFPLHdCQUF3QixzQkFBc0Isc0JBQXNCLGVBQWUsVUFBVSx3QkFBd0IsaUJBQWlCLFFBQVEsbUNBQW1DLG9DQUFvQyx1REFBdUQsd0NBQXdDLFdBQVcsa0NBQWtDLG1CQUFtQixnQ0FBZ0MsYUFBYSxpQkFBaUIsdUJBQXVCLG9CQUFvQixvQ0FBb0Msb0NBQW9DLFdBQVcsMEJBQTBCLFlBQVksdUJBQXVCLGlCQUFpQix3QkFBd0Isc0JBQXNCLHlCQUF5QixhQUFhLEdBQUcseUJBQXlCLGtCQUFrQixrQ0FBa0Msa0RBQWtELDhDQUE4QyxnQkFBZ0IsT0FBTyxPQUFPLFdBQVcsR0FBRyxnQkFBZ0Isa0RBQWtELCtCQUErQiwyQ0FBMkMsZ0NBQWdDLEtBQUssWUFBWSxXQUFXLEtBQUsscUNBQXFDLHVCQUF1QixxQkFBcUIsTUFBTSxRQUFRLGFBQWEsYUFBYSwrQkFBK0Isb0RBQW9ELGtCQUFrQixVQUFVLGdCQUFnQixrRUFBa0Usb0NBQW9DLDBDQUEwQyxFQUFFLDJEQUEyRCxvQ0FBb0Msd0RBQXdELEVBQUUsNERBQTRELG9DQUFvQyxtQ0FBbUMscUJBQXFCLHdCQUF3QixnQ0FBZ0MsRUFBRSw0QkFBNEIsMkRBQTJELG9DQUFvQyxtQ0FBbUMsRUFBRSx1QkFBdUIsNEJBQTRCLE1BQU0sbUNBQW1DLHlCQUF5QixpQ0FBaUMsK0NBQStDLGlDQUFpQyxpQkFBaUIsS0FBSyxnQ0FBZ0MsU0FBUyx3QkFBd0IsdUJBQXVCLDhCQUE4QixrQkFBa0IsYUFBYSxPQUFPLDhCQUE4Qiw0QkFBNEIseUNBQXlDLGdDQUFnQyxrQkFBa0IsaUJBQWlCLGNBQWMsa0JBQWtCLHVCQUF1QixrQ0FBa0MsZUFBZSwrQkFBK0IsNEJBQTRCLGtCQUFrQixVQUFVLHdCQUF3QixzQkFBc0IsdUJBQXVCLElBQUksS0FBSyxxQkFBcUIsVUFBVSxzQkFBc0IsYUFBYSxvQkFBb0IsZ0pBQWdKLGNBQWMscUJBQXFCLDZCQUE2QiwyQkFBMkIscUJBQXFCLGdCQUFnQixhQUFhLGdDQUFnQyxrQkFBa0IsZUFBZSx3QkFBd0IsS0FBSywwQkFBMEIsZ0JBQWdCLDZDQUE2Qyw2QkFBNkIsc0JBQXNCLHdEQUF3RCxlQUFlLHNCQUFzQixpSUFBaUksc0NBQXNDLCtCQUErQixNQUFNLCtEQUErRCxtREFBbUQsK0JBQStCLHFCQUFxQixXQUFXLG9FQUFvRSwyQkFBMkIsWUFBWSxHQUFHLEtBQUssc0JBQXNCLHVDQUF1Qyx5Q0FBeUMsd0NBQXdDLCtDQUErQywwQkFBMEIsMkNBQTJDLDJCQUEyQixZQUFZLGVBQWUsa0JBQWtCLG9CQUFvQiwwQkFBMEIsMkZBQTJGLHNDQUFzQywyQkFBMkIseUNBQXlDLG9CQUFvQiwrREFBK0QsS0FBSyx1QkFBdUIsMkNBQTJDLDhDQUE4QyxLQUFLLElBQUkscUJBQXFCLDhCQUE4QixxQkFBcUIsdUNBQXVDLDhDQUE4QyxxQkFBcUIsc0JBQXNCLGFBQWEsbUJBQW1CLHlCQUF5QixhQUFhLGdCQUFnQixnQkFBZ0IsZUFBZSwwQkFBMEIsV0FBVyxlQUFlLGdCQUFnQix1QkFBdUIscUJBQXFCLE1BQU0scUNBQXFDLE9BQU8sbUJBQW1CLGNBQWMscUJBQXFCLE1BQU0scUJBQU0sMEJBQTBCLGdDQUFnQyxpQkFBaUIsMEJBQTBCLHFDQUFxQyxjQUFjLG1DQUFtQyx5T0FBeU8sdUJBQXVCLG9CQUFvQixnQkFBZ0IsOEJBQThCLGFBQWEsUUFBUSx5Q0FBeUMsK0JBQStCLDZEQUE2RCx1REFBdUQsdUJBQXVCLHFCQUFxQixrQkFBa0IsaUJBQWlCLG9CQUFvQixxQkFBcUIsOEJBQThCLHNCQUFzQiwrQ0FBK0MsY0FBYyxtQkFBbUIsY0FBYyxlQUFlLDRCQUE0Qix5QkFBeUIsY0FBYyxrQkFBa0IsZ0JBQWdCLDBCQUEwQiw4QkFBOEIsaUJBQWlCLHVCQUF1Qix3QkFBd0IsbUNBQW1DLGlDQUFpQyw0QkFBNEIsZ0RBQWdELHVEQUF1RCwyQkFBMkIsU0FBUyxTQUFTLFVBQVUsU0FBUyxVQUFVLFlBQVksSUFBSSx3REFBd0Qsc0RBQXNELHdCQUF3Qiw2RkFBNkYsRUFBRSxXQUFXLElBQUksTUFBTSwrR0FBK0cseUNBQXlDLG1EQUFtRCx3QkFBd0IsOEJBQThCLGdDQUFnQyxxREFBcUQsRUFBRSxLQUFLLDhCQUE4QiwwQkFBMEIscUJBQXFCLGFBQWEsd0JBQXdCLHFEQUFxRCxnREFBZ0QsbUJBQW1CLE1BQU0sbURBQW1ELHNEQUFzRCx5REFBeUQsbURBQW1ELGFBQWEsbUNBQW1DLGVBQWUsNEJBQTRCLFlBQVksT0FBTyxPQUFPLGVBQWUsNkJBQTZCLE1BQU0sYUFBYSxRQUFRLDRDQUE0Qyx1Q0FBdUMsTUFBTSxPQUFPLE9BQU8sZUFBZSxhQUFhLFlBQVkseUNBQXlDLDBCQUEwQixZQUFZLHNDQUFzQyxzQkFBc0IseUJBQXlCLDBCQUEwQixJQUFJLE9BQU8sZ0JBQWdCLCtCQUErQiwrQkFBK0Isa0NBQWtDLG1DQUFtQyxjQUFjLGdDQUFnQyxVQUFVLG1DQUFtQyw4QkFBOEIscUNBQXFDLDBCQUEwQixhQUFhLFdBQVcsdUZBQXVGLHFFQUFxRSx5Q0FBeUMsaUpBQWlKLHNDQUFzQyxhQUFhLDJEQUEyRCxvQ0FBb0MsNkRBQTZELEVBQUUsNEJBQTRCLGdFQUFnRSxjQUFjLFNBQVMsa0VBQWtFLG9DQUFvQywwQ0FBMEMsRUFBRSxvQ0FBb0MsT0FBTyx5QkFBeUIsVUFBVSxPQUFPLFdBQVcsS0FBSyw4QkFBOEIsWUFBWSwrQkFBK0IsdUJBQXVCLHdCQUF3Qiw0QkFBNEIsdUJBQXVCLGlEQUFpRCxNQUFNLDZCQUE2QixLQUFLLHdDQUF3QywwQkFBMEIsS0FBSywyQkFBMkIsU0FBUyxnQ0FBZ0MsYUFBYSxZQUFZLGVBQWUsWUFBWSx5Q0FBeUMsaUNBQWlDLDZCQUE2QixhQUFhLGlDQUFpQyxjQUFjLE1BQU0sT0FBTyxlQUFlLE9BQU8sMkJBQTJCLG1DQUFtQyxPQUFPLEtBQUssS0FBSyxtQ0FBbUMsT0FBTyxrQkFBa0IsK0JBQStCLGdCQUFnQixlQUFlLHFCQUFxQixhQUFhLHNCQUFzQix1QkFBdUIsYUFBYSxnQkFBZ0IscUNBQXFDLHNCQUFzQiw2QkFBNkIsS0FBSyxpQ0FBaUMsMERBQTBELGlCQUFpQixNQUFNLE9BQU8sOEJBQThCLEtBQUssc0JBQXNCLDZCQUE2Qix3QkFBd0IsY0FBYyxJQUFJLGlCQUFpQiwyQkFBMkIsOEJBQThCLGtCQUFrQixpQkFBaUIsMEJBQTBCLHdCQUF3Qix3QkFBd0IseUJBQXlCLDZCQUE2QixtQkFBbUIsMkJBQTJCLFVBQVUsUUFBUSxXQUFXLFNBQVMsT0FBTyxvQkFBb0IsU0FBUyxLQUFLLGVBQWUseUNBQXlDLGNBQWMsMkJBQTJCLFdBQVcsNEJBQTRCLFlBQVksS0FBSywwQ0FBMEMseUJBQXlCLEtBQUssU0FBUyxjQUFjLGlCQUFpQixpQkFBaUIsOEJBQThCLDJCQUEyQixTQUFTLHlCQUF5QixjQUFjLE9BQU8sdUNBQXVDLG9CQUFvQix5QkFBeUIsMENBQTBDLHNCQUFzQixnQ0FBZ0MsdUNBQXVDLDBCQUEwQiwwQkFBMEIsSUFBSSxPQUFPLE9BQU8sK0JBQStCLElBQUksT0FBTywyQ0FBMkMsYUFBYSxXQUFXLGNBQWMsbUNBQW1DLGFBQWEsMkRBQTJELG9DQUFvQyxtQ0FBbUMsRUFBRSx1QkFBdUIsaUZBQWlGLHdCQUF3QixzQkFBc0IsY0FBYyxNQUFNLE9BQU8sbUJBQW1CLG9CQUFvQixpQkFBaUIsR0FBRyx3QkFBd0IsbUNBQW1DLCtDQUErQyxjQUFjLG1CQUFtQixPQUFPLHlCQUF5QixLQUFLLG1CQUFtQixzQkFBc0IsMEJBQTBCLG9CQUFvQixNQUFNLGVBQWUsb0JBQW9CLGdCQUFnQixpQkFBaUIsa0JBQWtCLHVCQUF1QixvQ0FBb0MsZUFBZSxTQUFTLDRCQUE0QixjQUFjLGlCQUFpQixNQUFNLGNBQWMsT0FBTyxhQUFhLHdCQUF3QixhQUFhLGlCQUFpQiwrQkFBK0IsY0FBYyxhQUFhLFNBQVMsaUJBQWlCLGNBQWMsS0FBSyxTQUFTLDRCQUE0QixzREFBc0Qsb0NBQW9DLG9DQUFvQyxhQUFhLHFDQUFxQyxxQkFBcUIseUJBQXlCLE9BQU8saUNBQWlDLEVBQUUscUNBQXFDLDBDQUEwQywwQ0FBMEMsTUFBTSxzQkFBc0IsYUFBYSxNQUFNLGdDQUFnQyxXQUFXLDJCQUEyQix3REFBd0QsRUFBRSxLQUFLLE9BQU8sU0FBUyxjQUFjLDRCQUE0QiwyQkFBMkIsc0JBQXNCLHNCQUFzQiw0QkFBNEIsOEJBQThCLHVCQUF1QiwrQkFBK0IsT0FBTyxnQkFBZ0IsMkJBQTJCLFdBQVcsYUFBYSxrQkFBa0IsYUFBYSxVQUFVLFVBQVUsVUFBVSwrQkFBK0IsdUJBQXVCLE9BQU8sNEJBQTRCLDBCQUEwQixxQkFBcUIsbUJBQW1CLFNBQVMsb0NBQW9DLE9BQU8sVUFBVSxNQUFNLHlDQUF5QyxHQUFHLGdDQUFnQyxhQUFhLGVBQWUsc0JBQXNCLFdBQVcsY0FBYyxhQUFhLHlCQUF5QixZQUFZLHlEQUF5RCxzQkFBc0Isa0NBQWtDLE9BQU8sc0JBQXNCLFNBQVMsUUFBUSxLQUFLLHFDQUFxQyxHQUFHLEdBQUcsY0FBYyxNQUFNLE1BQU0sbUNBQW1DLEtBQUsscUJBQXFCLGFBQWEsa0RBQWtELHVCQUF1QixVQUFVLFVBQVUsb0RBQW9ELFlBQVksa0RBQWtELFdBQVcsa0NBQWtDLCtCQUErQixNQUFNLEtBQUssT0FBTyxvQ0FBb0MsR0FBRyxHQUFHLFNBQVMsb0RBQW9ELE1BQU0sMkJBQTJCLHNCQUFzQixzQkFBc0IsdUJBQXVCLHlCQUF5Qix1QkFBdUIseUJBQXlCLHVCQUF1Qix5QkFBeUIsdUJBQXVCLGdEQUFnRCx1QkFBdUIsMEJBQTBCLGtCQUFrQixNQUFNLFVBQVUsVUFBVSxVQUFVLDZCQUE2QixLQUFLLE9BQU8sUUFBUSxlQUFlLE1BQU0sVUFBVSxpQkFBaUIsNkNBQTZDLFdBQVcsYUFBYSxVQUFVLFVBQVUsVUFBVSxLQUFLLE9BQU8sT0FBTyxXQUFXLGFBQWEsVUFBVSxVQUFVLFVBQVUsb0NBQW9DLFVBQVUsR0FBRyx5Q0FBeUMsVUFBVSxZQUFZLHNCQUFzQixhQUFhLHNCQUFzQixxQkFBcUIsaUNBQWlDLHNDQUFzQyw2QkFBNkIsdURBQXVELEdBQUcsa0JBQWtCLFNBQVMsMEJBQTBCLFlBQVksbUJBQW1CLEtBQUsseUNBQXlDLFFBQVEsNkNBQTZDLDBCQUEwQixHQUFHLDBDQUEwQywrREFBK0QsS0FBSyx3Q0FBd0MsZ0VBQWdFLElBQUksU0FBUyxnQ0FBZ0MsV0FBVywyQkFBMkIsd0RBQXdELEVBQUUsS0FBSyxPQUFPLFNBQVMsOEJBQThCLHNCQUFzQiwwREFBMEQsZ0NBQWdDLFlBQVksV0FBVyxLQUFLLFdBQVcsaUNBQWlDLG9CQUFvQiwrQkFBK0Isa0NBQWtDLDZCQUE2QixzQ0FBc0MsNEJBQTRCLFNBQVMseUJBQXlCLDBCQUEwQiw2QkFBNkIsMkJBQTJCLDZCQUE2QixxQkFBcUIsc0JBQXNCLGlDQUFpQyxlQUFlLGVBQWUsY0FBYywwQkFBMEIsa0NBQWtDLE9BQU8sa0JBQWtCLGtDQUFrQyxpQkFBaUIsWUFBWSxlQUFlLEVBQUUsd0NBQXdDLE9BQU8sdUJBQXVCLCtCQUErQixZQUFZLGVBQWUsRUFBRSxtQ0FBbUMsMEJBQTBCLHFCQUFxQiw0Q0FBNEMsOEJBQThCLGNBQWMsVUFBVSxFQUFFLG1DQUFtQyx5QkFBeUIsZUFBZSxFQUFFLGtDQUFrQyw0QkFBNEIsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsWUFBWSxVQUFVLEVBQUUsc0NBQXNDLHFDQUFxQywyQkFBMkIsZ0JBQWdCLFFBQVEsU0FBUyx1QkFBdUIsaUJBQWlCLFNBQVMsVUFBVSxFQUFFLDBDQUEwQyxNQUFNLDRCQUE0Qiw0QkFBNEIsdUNBQXVDLG1DQUFtQyxlQUFlLEtBQUssMENBQTBDLFVBQVUsRUFBRSxtQ0FBbUMsdUJBQXVCLEVBQUUsOENBQThDLGdCQUFnQixRQUFRLGFBQWEsWUFBWSxnQkFBZ0IsYUFBYSw0QkFBNEIscUJBQXFCLHFCQUFxQixLQUFLLFVBQVUsaUJBQWlCLElBQUksMkJBQTJCLDhCQUE4QixLQUFLLFlBQVksa0JBQWtCLE1BQU0sSUFBSSxlQUFlLFVBQVUsRUFBRSw4Q0FBOEMsdUJBQXVCLGdCQUFnQixRQUFRLGVBQWUsaUJBQWlCLGdCQUFnQixhQUFhLDRCQUE0Qix5QkFBeUIsS0FBSyxVQUFVLGlCQUFpQixJQUFJLDJCQUEyQiw4QkFBOEIsS0FBSyxZQUFZLGtCQUFrQixNQUFNLElBQUksZUFBZSxVQUFVLEVBQUUsZ0NBQWdDLDhCQUE4QixJQUFJLDRCQUE0QixJQUFJLEdBQUcsa0JBQWtCLEdBQUcsa0JBQWtCLGFBQWEsc0JBQXNCLFdBQVcseURBQXlELHlEQUF5RCxTQUFTLE1BQU0sS0FBSyxXQUFXLHlCQUF5QixPQUFPLDhCQUE4QiwyQ0FBMkMsc0NBQXNDLE9BQU8sK0JBQStCLFlBQVksd0JBQXdCLG1DQUFtQyx3QkFBd0IsbUNBQW1DLG1DQUFtQyxVQUFVLHNCQUFzQixPQUFPLG1DQUFtQyx3Q0FBd0MsbUNBQW1DLE9BQU8sbUNBQW1DLEtBQUssT0FBTywwQkFBMEIsV0FBVyxPQUFPLHlCQUF5QixLQUFLLEtBQUssT0FBTywwQkFBMEIsR0FBRyxZQUFZLGtDQUFrQyxpQkFBaUIsZUFBZSx3QkFBd0Isd0RBQXdELHdEQUF3RCxnQkFBZ0IscUJBQXFCLHdCQUF3QixvQ0FBb0Msa0NBQWtDLGdDQUFnQyxxQ0FBcUMsd0JBQXdCLG9DQUFvQyxnQ0FBZ0MsaUNBQWlDLHNDQUFzQyxzQ0FBc0MsbUNBQW1DLHdDQUF3QywwQkFBMEIsa0JBQWtCLDZCQUE2Qix1QkFBdUIsdUJBQXVCLG1EQUFtRCx1QkFBdUIsV0FBVyxtRUFBbUUsc0JBQXNCLGFBQWEsMkNBQTJDLGlCQUFpQixZQUFZLGtCQUFrQixZQUFZLE9BQU8sOENBQThDLElBQUksS0FBSyxrQkFBa0IsaUJBQWlCLGlCQUFpQixzQkFBc0IsZ0RBQWdELG9CQUFvQiw4Q0FBOEMsV0FBVyxnQkFBZ0IsaURBQWlELGlEQUFpRCxnQ0FBZ0Msb0JBQW9CLGtEQUFrRCwwQkFBMEIsUUFBUSxPQUFPLGlCQUFpQixvREFBb0QsdUJBQXVCLFFBQVEsT0FBTyxpQkFBaUIsMEJBQTBCLGFBQWEseUJBQXlCLE1BQU0sVUFBVSxzREFBc0QsbUJBQW1CLFVBQVUsc0RBQXNELHFCQUFxQiwyQkFBMkIsc0JBQXNCLGlCQUFpQixtQkFBbUIsZ0JBQWdCLGFBQWEsdUJBQXVCLDhCQUE4QixjQUFjLGdCQUFnQixjQUFjLGlCQUFpQixtQ0FBbUMsZ0JBQWdCLGtCQUFrQiwrQkFBK0IsNEJBQTRCLDhCQUE4QiwwQ0FBMEMsMEJBQTBCLDRCQUE0Qiw2QkFBNkIsMEJBQTBCLDRCQUE0Qiw2QkFBNkIsY0FBYyxzQkFBc0IsYUFBYSwyQ0FBMkMsSUFBSSxjQUFjLGNBQWMsU0FBUyxLQUFLLE9BQU8sV0FBVyxLQUFLLEtBQUssOEJBQThCLDhCQUE4QixrQkFBa0IsdUJBQXVCLGtDQUFrQyxtQkFBbUIsa0JBQWtCLGdEQUFnRCxtQkFBbUIsaURBQWlELGlCQUFpQixJQUFJLHNCQUFzQixxQkFBcUIsaUNBQWlDLHNDQUFzQyw2QkFBNkIsdURBQXVELEdBQUcsa0JBQWtCLFNBQVMsMEJBQTBCLFlBQVksbUJBQW1CLEtBQUsseUNBQXlDLFFBQVEsNkNBQTZDLDBCQUEwQixHQUFHLDBDQUEwQywrREFBK0QsS0FBSyx3Q0FBd0MsZ0VBQWdFLElBQUksU0FBUyxnQ0FBZ0MsV0FBVywyQkFBMkIsd0RBQXdELEVBQUUsS0FBSyxPQUFPLFNBQVMscUNBQXFDLHFCQUFxQixNQUFNLGtDQUFrQyxJQUFJLCtEQUErRCxxREFBcUQsNENBQTRDLDJCQUEyQixnQkFBZ0IsS0FBSyxZQUFZLG1CQUFtQixPQUFPLE9BQU8sU0FBUyxnQkFBZ0Isb0NBQW9DLGtCQUFrQixzQ0FBc0MsSUFBSSx3Q0FBd0MsTUFBTSxhQUFhLHlCQUF5QixPQUFPLEtBQUssU0FBUyxTQUFTLGNBQWMsR0FBRyxvQ0FBb0MsU0FBUyxlQUFlLHNCQUFzQixhQUFhLE1BQU0saUJBQWlCLFlBQVksa0JBQWtCLFlBQVksT0FBTywyQkFBMkIsOERBQThELGlCQUFpQixhQUFhLHNCQUFzQixnREFBZ0QsNEJBQTRCLFVBQVUsWUFBWSx5QkFBeUIsT0FBTyxHQUFHLDJCQUEyQixLQUFLLHNCQUFzQixjQUFjLGlCQUFpQixPQUFPLElBQUksR0FBRyxZQUFZLG1CQUFtQixZQUFZLFlBQVksT0FBTyxpQ0FBaUMsb0RBQW9ELHFCQUFxQixpQkFBaUIsSUFBSSxtQkFBbUIsaUJBQWlCLHdCQUF3Qix5QkFBeUIsaURBQWlELGVBQWUsb0JBQW9CLDhDQUE4QyxJQUFJLEtBQUssa0JBQWtCLHFCQUFxQiw4QkFBOEIsZUFBZSx1QkFBdUIsTUFBTSwyQkFBMkIsbUJBQW1CLFVBQVUsb0NBQW9DLFVBQVUscUJBQXFCLFlBQVksZ0JBQWdCLEtBQUssR0FBRyxHQUFHLHNCQUFzQixtQkFBbUIsc0JBQXNCLGFBQWEsc0NBQXNDLGtDQUFrQyx5REFBeUQsbUNBQW1DLCtCQUErQixZQUFZLDJDQUEyQywwQkFBMEIsaUJBQWlCLHFCQUFxQiwrQkFBK0IsV0FBVyxtQ0FBbUMsc0JBQXNCLGtCQUFrQixzQkFBc0IsY0FBYyxHQUFHLE9BQU8scUNBQXFDLHFCQUFxQiwyQkFBMkIsbUJBQW1CLEtBQUssb0JBQW9CLGNBQWMsYUFBYSxtQkFBbUIsaUJBQWlCLG9CQUFvQixzQkFBc0IsbUJBQW1CLG9CQUFvQixzQkFBc0IsYUFBYSxxQkFBcUIsY0FBYyxjQUFjLG9CQUFvQixzTUFBc00sc01BQXNNLGdOQUFnTixnTkFBZ04sc0RBQXNELHNEQUFzRCxxQkFBcUIsZ0JBQWdCLG1CQUFtQixtQkFBbUIsbUJBQW1CLGtCQUFrQixtQkFBbUIsZUFBZSx1Q0FBdUMsUUFBUSxZQUFZLEtBQUssc0NBQXNDLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixZQUFZLEtBQUssTUFBTSxNQUFNLE1BQU0sU0FBUyxtQ0FBbUMsbUNBQW1DLGNBQWMsbUNBQW1DLG1DQUFtQyxjQUFjLG1DQUFtQyxtQ0FBbUMsY0FBYyxtQ0FBbUMsbUNBQW1DLEtBQUssbUNBQW1DLG1DQUFtQyxJQUFJLElBQUksYUFBYSxJQUFJLElBQUksSUFBSSxJQUFJLGFBQWEsSUFBSSxJQUFJLG9CQUFvQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0IsV0FBVyx1Q0FBdUMscUNBQXFDLHlCQUF5Qix5Q0FBeUMsZUFBZSxvQkFBb0IseUNBQXlDLDhDQUE4Qyw4Q0FBOEMsZUFBZSxvQ0FBb0MsMEJBQTBCLDBCQUEwQiwwQkFBMEIsMkJBQTJCLDJCQUEyQixVQUFVLG1CQUFtQixxQkFBcUIsOEJBQThCLG1DQUFtQyw4QkFBOEIsc0NBQXNDLDhCQUE4QixzQ0FBc0MsOEJBQThCLHNDQUFzQyw4QkFBOEIsc0NBQXNDLG9CQUFvQixzQkFBc0IsY0FBYyxlQUFlLHdCQUF3QixnQkFBZ0IsV0FBVyxzREFBc0QsWUFBWSxLQUFLLGVBQWUsb0JBQW9CLDJCQUEyQixnQkFBZ0IsZ0RBQWdELHdCQUF3QixnQ0FBZ0Msd0JBQXdCLHFEQUFxRCxpQkFBaUIsaUNBQWlDLHdCQUF3QixpREFBaUQsV0FBVyxrQkFBa0Isd0JBQXdCLFlBQVksS0FBSyxXQUFXLEtBQUssVUFBVSxVQUFVLG1DQUFtQyx3QkFBd0IsaURBQWlELGFBQWEsdUNBQXVDLHdCQUF3QixpREFBaUQsd0JBQXdCO0FBQzV2bFU7QUFDQSxjQUFjLGVBQWUsd0JBQXdCLGdCQUFnQixXQUFXLHNEQUFzRCxZQUFZLEtBQUssZUFBZSxvQkFBb0IsMkJBQTJCLGdCQUFnQixnREFBZ0Qsd0JBQXdCLGdDQUFnQyx3QkFBd0IscURBQXFELGlCQUFpQixpQ0FBaUMsd0JBQXdCLGlEQUFpRCxXQUFXLGtCQUFrQix3QkFBd0IsWUFBWSxLQUFLLFdBQVcsS0FBSyxVQUFVLFVBQVUsbUNBQW1DLHdCQUF3QixpREFBaUQsYUFBYSx1Q0FBdUMsd0JBQXdCLGlEQUFpRCx3QkFBd0Isc0JBQXNCLHFCQUFxQixtQkFBbUIsdUJBQXVCLGtCQUFrQixrQkFBa0IsWUFBWSxvQ0FBb0Msd0JBQXdCLFlBQVksY0FBYyxrQkFBa0Isc0JBQXNCLGVBQWUsZ0JBQWdCLFlBQVksSUFBSSxFQUFFLFVBQVUsd0JBQXdCLFlBQVksSUFBSSxLQUFLLGNBQWMsS0FBSyxLQUFLLFlBQVksaUJBQWlCLGFBQWEsYUFBYSxrQ0FBa0MsZ0NBQWdDLG1CQUFtQix3QkFBd0IsdUJBQXVCLDBCQUEwQixvQkFBb0Isa0JBQWtCLGtCQUFrQiwrQ0FBK0MsS0FBSyx5QkFBeUIsdUJBQXVCLCtDQUErQywrQ0FBK0MsMEJBQTBCLG1CQUFtQiwwQkFBMEIsa0NBQWtDLDREQUE0RCxlQUFlLHNCQUFzQixnQ0FBZ0Msa0JBQWtCLFdBQVcsdUVBQXVFLGNBQWMsY0FBYyxlQUFlLGdCQUFnQixpQkFBaUIsaUJBQWlCLGlCQUFpQixzQkFBc0IsY0FBYyxjQUFjLHFCQUFxQix3REFBd0Qsb0JBQW9CLGVBQWUsWUFBWSxVQUFVLG1CQUFtQixTQUFTLDhCQUE4QixtQkFBbUIsbUJBQW1CLG1CQUFtQixrQkFBa0IsbUJBQW1CLGFBQWEsa0JBQWtCLG1CQUFtQixtQkFBbUIsbUJBQW1CLHFCQUFxQix5QkFBeUIsNEJBQTRCLGFBQWEsa0NBQWtDLGNBQWMsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixZQUFZLEtBQUssNEJBQTRCLEtBQUssS0FBSyx1Q0FBdUMsWUFBWSxLQUFLLEtBQUssZUFBZSx5Q0FBeUMsSUFBSSxJQUFJLFlBQVksSUFBSSxJQUFJLG9CQUFvQixvQkFBb0Isb0JBQW9CLG9CQUFvQixxQkFBcUIsK0JBQStCLHdCQUF3Qiw0QkFBNEIsNEJBQTRCLDRCQUE0Qiw2QkFBNkIsNkJBQTZCLFVBQVUsY0FBYyxzQkFBc0IsY0FBYyxjQUFjLHFCQUFxQix3REFBd0Qsb0JBQW9CLGdCQUFnQixZQUFZLFVBQVUsbUJBQW1CLFVBQVUsK0JBQStCLG1CQUFtQixtQkFBbUIsbUJBQW1CLGtCQUFrQixtQkFBbUIsYUFBYSxrQkFBa0IsbUJBQW1CLGtCQUFrQixtQkFBbUIsbUJBQW1CLG1CQUFtQixxQkFBcUIseUJBQXlCLDRCQUE0QixhQUFhLG1DQUFtQyxjQUFjLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsWUFBWSxLQUFLLDRCQUE0QixLQUFLLEtBQUssOENBQThDLFlBQVksS0FBSyxLQUFLLGVBQWUseUNBQXlDLElBQUksSUFBSSxZQUFZLElBQUksSUFBSSxvQkFBb0Isb0JBQW9CLG9CQUFvQixvQkFBb0IscUJBQXFCLGdDQUFnQyx3QkFBd0IsNEJBQTRCLDRCQUE0Qiw0QkFBNEIsNkJBQTZCLDZCQUE2QixVQUFVLGVBQWUscUJBQXFCLGNBQWMsY0FBYyxjQUFjLHFCQUFxQixvQkFBb0Isa0JBQWtCLFlBQVksVUFBVSxtQkFBbUIsWUFBWSxpQ0FBaUMsbUJBQW1CLGtCQUFrQixrQkFBa0IsbUJBQW1CLG1CQUFtQixtQkFBbUIsbUJBQW1CLG1CQUFtQixhQUFhLGtDQUFrQyx3QkFBd0IsMEJBQTBCLDBCQUEwQiwwQkFBMEIsMkJBQTJCLDJCQUEyQiwyQkFBMkIsMkJBQTJCLFVBQVUsaUJBQWlCLHNCQUFzQixjQUFjLGNBQWMscUJBQXFCLHdyQkFBd3JCLG9CQUFvQixrQkFBa0IsWUFBWSxVQUFVLG1CQUFtQixZQUFZLGlDQUFpQyxtQkFBbUIsbUJBQW1CLG1CQUFtQixtQkFBbUIsbUJBQW1CLG1CQUFtQixrQkFBa0IsbUJBQW1CLGFBQWEsbUJBQW1CLGlCQUFpQixvQkFBb0IsbUJBQW1CLG1CQUFtQixrREFBa0QsbUJBQW1CLGlEQUFpRCxtQkFBbUIseUNBQXlDLG1CQUFtQiwyQ0FBMkMscUNBQXFDLGNBQWMsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixnQkFBZ0IsZ0JBQWdCLGdCQUFnQixZQUFZLEtBQUssNEJBQTRCLEtBQUssS0FBSyx5REFBeUQsWUFBWSxLQUFLLEtBQUssd0NBQXdDLDZCQUE2QixJQUFJLElBQUksSUFBSSxRQUFRLElBQUksSUFBSSxJQUFJLFFBQVEsb0JBQW9CLG9CQUFvQixvQkFBb0Isb0JBQW9CLG9CQUFvQixvQkFBb0Isb0JBQW9CLHFCQUFxQixrQ0FBa0Msd0JBQXdCLDBCQUEwQiwwQkFBMEIsMEJBQTBCLDJCQUEyQiwyQkFBMkIsMkJBQTJCLDJCQUEyQiwyQkFBMkIsVUFBVSxpQkFBaUIsc0JBQXNCLGNBQWMsY0FBYyxjQUFjLHFCQUFxQixxQkFBcUIsa0JBQWtCLFlBQVksVUFBVSxxQkFBcUIsWUFBWSxpQ0FBaUMsb0JBQW9CLG9CQUFvQixvQkFBb0IsbUJBQW1CLG9CQUFvQixvQkFBb0Isb0JBQW9CLG9CQUFvQixvQkFBb0IsbUJBQW1CLG1CQUFtQixvQkFBb0Isb0JBQW9CLG9CQUFvQixvQkFBb0Isb0JBQW9CLGFBQWEsa0NBQWtDLHdCQUF3Qiw2QkFBNkIsb0JBQW9CLHNCQUFzQixrQ0FBa0Msa0NBQWtDLG1DQUFtQyxtQ0FBbUMsbUNBQW1DLG1DQUFtQyxVQUFVLGlCQUFpQixzQkFBc0IsY0FBYyxjQUFjLHFCQUFxQixrc0RBQWtzRCxxQkFBcUIsa0JBQWtCLFlBQVksVUFBVSxxQkFBcUIsWUFBWSxpQ0FBaUMsb0JBQW9CLG9CQUFvQixvQkFBb0Isb0JBQW9CLG9CQUFvQixvQkFBb0IsbUJBQW1CLG9CQUFvQixvQkFBb0Isb0JBQW9CLG9CQUFvQixvQkFBb0Isb0JBQW9CLG1CQUFtQixvQkFBb0IsbUJBQW1CLGFBQWEsbUJBQW1CLGlCQUFpQixvQkFBb0IsbUJBQW1CLHFCQUFxQixnREFBZ0QscUJBQXFCLGtEQUFrRCxxQkFBcUIsd0NBQXdDLHNCQUFzQixnREFBZ0QscUJBQXFCLHlDQUF5QyxzQkFBc0IsaURBQWlELHVCQUF1Qix1QkFBdUIscUNBQXFDLGNBQWMsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLFlBQVksS0FBSyxNQUFNLHdCQUF3Qiw0QkFBNEIsS0FBSyxNQUFNLE1BQU0sZ0JBQWdCLGtCQUFrQixrQkFBa0IsbUJBQW1CLFdBQVcsYUFBYSxrQkFBa0IsbUJBQW1CLGVBQWUsaUJBQWlCLGdCQUFnQixrQkFBa0IsWUFBWSwwQkFBMEIsUUFBUSxzQkFBc0IsUUFBUSxzQkFBc0IsT0FBTyxTQUFTLFlBQVksTUFBTSxNQUFNLE9BQU8sU0FBUyxpQkFBaUIsaUJBQWlCLGtCQUFrQixrQkFBa0Isa0JBQWtCLGtCQUFrQixXQUFXLGFBQWEsZ0JBQWdCLGdCQUFnQixZQUFZLDBCQUEwQixRQUFRLHNCQUFzQixRQUFRLHNCQUFzQixRQUFRLHNCQUFzQixZQUFZLDBCQUEwQixJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxRQUFRLHNCQUFzQixJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxRQUFRLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLDJDQUEyQywyQ0FBMkMsMkNBQTJDLDJDQUEyQywyQ0FBMkMsMkNBQTJDLDJDQUEyQyw0Q0FBNEMsa0NBQWtDLHdCQUF3Qiw2QkFBNkIsb0JBQW9CLHNCQUFzQixrQ0FBa0Msa0NBQWtDLG1DQUFtQyxtQ0FBbUMsbUNBQW1DLG1DQUFtQyxtQ0FBbUMsbUNBQW1DLFVBQVUsaUJBQWlCLHNCQUFzQixhQUFhLHFCQUFxQixnQ0FBZ0MsT0FBTywyQkFBMkIsaUpBQWlKLHVCQUF1QiwrQkFBK0IsbUJBQW1CLE1BQU0sWUFBWSxVQUFVLG9DQUFvQyxvRUFBb0UseUNBQXlDLDRDQUE0QyxvQkFBb0IsdUJBQXVCLFNBQVMsOEJBQThCLDRCQUE0QiwwRkFBMEYsWUFBWSxrQkFBa0IsMEJBQTBCLG1DQUFtQyxNQUFNLHNCQUFzQixrQ0FBa0Msa0JBQWtCLElBQUksTUFBTSxzQ0FBc0MsSUFBSSxNQUFNLGtDQUFrQyxtQkFBbUIsSUFBSSxNQUFNLCtCQUErQixtQkFBbUIsT0FBTyxnQkFBZ0IsaUJBQWlCLCtCQUErQiwwQ0FBMEMseUJBQXlCLE1BQU0sTUFBTSxrQkFBa0IsbUJBQW1CLDBCQUEwQixnQkFBZ0IsZ0JBQWdCLEtBQUssSUFBSSx1REFBdUQsY0FBYyxvQ0FBb0Msc0NBQXNDLDZDQUE2Qyw0QkFBNEIsbUVBQW1FLDhEQUE4RCw4REFBOEQseUJBQXlCLDBCQUEwQixtQkFBbUIsMEJBQTBCLDJCQUEyQiwyQkFBMkIsc0JBQXNCLG9DQUFvQyxpQkFBaUIsZ0JBQWdCLDBCQUEwQixTQUFTLHNCQUFzQixTQUFTLDBCQUEwQixzQkFBc0IsU0FBUyxzQkFBc0IsU0FBUywwQkFBMEIsc0JBQXNCLFNBQVMsUUFBUSxhQUFhLG9CQUFvQixTQUFTLFNBQVMsb0NBQW9DLHFCQUFxQixhQUFhLFVBQVUsNkJBQTZCLHFCQUFxQixhQUFhLFVBQVUsNkJBQTZCLHFCQUFxQixhQUFhLGFBQWEseUJBQXlCLG1DQUFtQyxvQ0FBb0MsMEJBQTBCLDRCQUE0Qix3Q0FBd0MsOERBQThELG1DQUFtQyx3QkFBd0IsdUJBQXVCLG9DQUFvQyw4Q0FBOEMsaUJBQWlCLGlDQUFpQywwQkFBMEIsOEJBQThCLG9CQUFvQixtQ0FBbUMsOEJBQThCLFNBQVMsd0JBQXdCLHVCQUF1Qiw4QkFBOEIsTUFBTSwrQkFBK0IsdUJBQXVCLGdCQUFnQixpQkFBaUIsK0JBQStCLCtCQUErQixzQkFBc0IsU0FBUyxnQkFBZ0IsaUJBQWlCLCtCQUErQiwwQ0FBMEMscUJBQXFCLG1DQUFtQyxrQkFBa0IsbUNBQW1DLCtDQUErQyxTQUFTLHlCQUF5QixxQkFBcUIsdUNBQXVDLGtCQUFrQixpQkFBaUIsVUFBVSwrQkFBK0IsS0FBSywrQkFBK0IsK0JBQStCLHlDQUF5QyxzQkFBc0IsbUNBQW1DLDZFQUE2RSxTQUFTLHdCQUF3QixpQ0FBaUMsc0JBQXNCLHFDQUFxQyxrQkFBa0Isb0JBQW9CLHdCQUF3Qiw0QkFBNEIsU0FBUyxZQUFZLHNCQUFzQixPQUFPLCtCQUErQixtQkFBbUIsb0NBQW9DLGlCQUFpQixLQUFLLGdCQUFnQixPQUFPLCtCQUErQixrQkFBa0IsbUJBQW1CLElBQUksSUFBSSxxQkFBTSwyQkFBMkIsU0FBUyxhQUFhLE1BQU0scUJBQU0saUJBQWlCLHdCQUF3Qix5Q0FBeUMsa0JBQWtCLGFBQWEsVUFBVSxtQkFBTyxDQUFDLHFGQUFRLEVBQUUsa0JBQWtCLGFBQWEsVUFBVSxtQkFBTyxDQUFDLGdHQUFRLEVBQUUsa0JBQWtCLGFBQWEsVUFBVSxtQkFBTyxDQUFDLHNGQUFRLEVBQUUsa0JBQWtCLGFBQWEsVUFBVSxtQkFBTyxDQUFDLGdHQUFRLEVBQUUsa0JBQWtCLGFBQWEsVUFBVSxtQkFBTyxDQUFDLCtGQUFnQixFQUFFLGtCQUFrQixhQUFhLFVBQVUsbUJBQU8sQ0FBQyxnRkFBTSxFQUFFLGtCQUFrQixhQUFhLFVBQVUsbUJBQU8sQ0FBQyx3RkFBSSxFQUFFLGtCQUFrQixhQUFhLHVCQUF1QixlQUFlLDREQUE0RCxnQkFBZ0IsNERBQTRELGdCQUFnQiw0REFBNEQsZ0JBQWdCLDZEQUE2RCxnQkFBZ0IsNkRBQTZELGdCQUFnQiw2REFBNkQsV0FBVyw2REFBNkQsV0FBVyw2REFBNkQsV0FBVyw2REFBNkQsZ0JBQWdCLDhEQUE4RCxnQkFBZ0IsOERBQThELGdCQUFnQiw4REFBOEQsaUJBQWlCLCtEQUErRCxpQkFBaUIsK0RBQStELGlCQUFpQiwrREFBK0QsaUJBQWlCLCtEQUErRCxpQkFBaUIsK0RBQStELGlCQUFpQiwrREFBK0QsZ0JBQWdCLDhEQUE4RCxnQkFBZ0IsOERBQThELGdCQUFnQiw4REFBOEQsZ0JBQWdCLDhEQUE4RCxnQkFBZ0IsOERBQThELGdCQUFnQiw4REFBOEQsZ0JBQWdCLDREQUE0RCxnQkFBZ0IsNERBQTRELGdCQUFnQiw2REFBNkQsR0FBRyxrQkFBa0IsYUFBYSx1QkFBdUIsMkJBQTJCLDJFQUEyRSxlQUFlLGlGQUFpRiw0QkFBNEIsMkVBQTJFLGVBQWUsaUZBQWlGLDRCQUE0QiwyRUFBMkUsZUFBZSxpRkFBaUYsNEJBQTRCLDJFQUEyRSxlQUFlLGlGQUFpRixhQUFhLGlFQUFpRSxvQkFBb0IscUNBQXFDLFdBQVcsdUNBQXVDLFdBQVcsdUNBQXVDLFdBQVcsdUNBQXVDLFdBQVcsdUNBQXVDLFlBQVksbUNBQW1DLGFBQWEsbUNBQW1DLFFBQVEsbUNBQW1DLG9CQUFvQixxQ0FBcUMsZUFBZSxxQ0FBcUMsb0JBQW9CLHFDQUFxQyxlQUFlLHFDQUFxQyxvQkFBb0IscUNBQXFDLGVBQWUscUNBQXFDLG9CQUFvQixxQ0FBcUMsZUFBZSxxQ0FBcUMsa0JBQWtCLHFDQUFxQyxxQkFBcUIsbUVBQW1FLGtCQUFrQixtRUFBbUUseUJBQXlCLHNFQUFzRSxZQUFZLHVFQUF1RSxHQUFHLGtCQUFrQixhQUFhLHVCQUF1Qix1SkFBdUosR0FBRyxrQkFBa0IsYUFBYSx1QkFBdUIsU0FBUyxzTkFBc04sVUFBVSxzUkFBc1IsVUFBVSxzWkFBc1osV0FBVyxzaEJBQXNoQixXQUFXLHN4QkFBc3hCLFdBQVcsc2hDQUFzaEMsV0FBVyxzaERBQXNoRCxXQUFXLHVoRUFBdWhFLEdBQUcsa0JBQWtCLGFBQWEsV0FBVyxZQUFZLGtCQUFrQixhQUFhLHVCQUF1Qiw0ZEFBNGQsS0FBSyxTQUFTLGdDQUFnQyxXQUFXLGtCQUFrQixpQkFBaUIsWUFBWSw4QkFBOEIsV0FBVyxJQUFJLHFEQUFxRCxRQUFRLFFBQVEsaUJBQWlCLGNBQWMsaUJBQWlCLFlBQVksb0NBQW9DLFdBQVcsNkJBQTZCLFVBQVUsR0FBRyxtRUFBbUUsU0FBUyxLQUFLLFNBQVMsWUFBWSxhQUFhLFFBQVEseUVBQXlFLDhDQUE4Qyw4Q0FBOEMsZ0NBQWdDLHFCQUFxQiw0RUFBNEUsdUJBQXVCLFVBQVUsZ0NBQWdDLGtCQUFrQiwwQkFBMEIsZ0NBQWdDLGtCQUFrQiw4QkFBOEIsc0JBQXNCLGtDQUFrQyxzQkFBc0Isa0NBQWtDLDBCQUEwQixzQ0FBc0MsMEJBQTBCLDRCQUE0QixnQ0FBZ0MsMENBQTBDLHNEQUFzRCxzQ0FBc0MsNENBQTRDLGdDQUFnQyxnQ0FBZ0MsMEJBQTBCLGNBQWMsOEJBQThCLGtCQUFrQix1Q0FBdUMsZ0NBQWdDLGdDQUFnQyxrQ0FBa0MsZ0NBQWdDLGtDQUFrQyxnQ0FBZ0MsMEJBQTBCLGtDQUFrQywrQkFBK0Isb0tBQW9LLGFBQWEsa1dBQWtXLEdBQUcsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvY3J5cHRvLWJyb3dzZXJpZnkvaW5kZXguanM/MWMwOCJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17NzE2MDpmdW5jdGlvbihlLHQscil7dmFyIGk9dDtpLmJpZ251bT1yKDcxMSk7aS5kZWZpbmU9cig0OTUpLmRlZmluZTtpLmJhc2U9cig4NTMpO2kuY29uc3RhbnRzPXIoNzMzNSk7aS5kZWNvZGVycz1yKDY3MDEpO2kuZW5jb2RlcnM9cigzNDE4KX0sNDk1OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDcxNjApO3ZhciBuPXIoMzc4Mik7dmFyIGE9dDthLmRlZmluZT1mdW5jdGlvbiBkZWZpbmUoZSx0KXtyZXR1cm4gbmV3IEVudGl0eShlLHQpfTtmdW5jdGlvbiBFbnRpdHkoZSx0KXt0aGlzLm5hbWU9ZTt0aGlzLmJvZHk9dDt0aGlzLmRlY29kZXJzPXt9O3RoaXMuZW5jb2RlcnM9e319RW50aXR5LnByb3RvdHlwZS5fY3JlYXRlTmFtZWQ9ZnVuY3Rpb24gY3JlYXRlTmFtZWQoZSl7dmFyIHQ7dHJ5e3Q9cig2MTQ0KS5ydW5JblRoaXNDb250ZXh0KFwiKGZ1bmN0aW9uIFwiK3RoaXMubmFtZStcIihlbnRpdHkpIHtcXG5cIitcIiAgdGhpcy5faW5pdE5hbWVkKGVudGl0eSk7XFxuXCIrXCJ9KVwiKX1jYXRjaChlKXt0PWZ1bmN0aW9uKGUpe3RoaXMuX2luaXROYW1lZChlKX19bih0LGUpO3QucHJvdG90eXBlLl9pbml0TmFtZWQ9ZnVuY3Rpb24gaW5pdG5hbWVkKHQpe2UuY2FsbCh0aGlzLHQpfTtyZXR1cm4gbmV3IHQodGhpcyl9O0VudGl0eS5wcm90b3R5cGUuX2dldERlY29kZXI9ZnVuY3Rpb24gX2dldERlY29kZXIoZSl7ZT1lfHxcImRlclwiO2lmKCF0aGlzLmRlY29kZXJzLmhhc093blByb3BlcnR5KGUpKXRoaXMuZGVjb2RlcnNbZV09dGhpcy5fY3JlYXRlTmFtZWQoaS5kZWNvZGVyc1tlXSk7cmV0dXJuIHRoaXMuZGVjb2RlcnNbZV19O0VudGl0eS5wcm90b3R5cGUuZGVjb2RlPWZ1bmN0aW9uIGRlY29kZShlLHQscil7cmV0dXJuIHRoaXMuX2dldERlY29kZXIodCkuZGVjb2RlKGUscil9O0VudGl0eS5wcm90b3R5cGUuX2dldEVuY29kZXI9ZnVuY3Rpb24gX2dldEVuY29kZXIoZSl7ZT1lfHxcImRlclwiO2lmKCF0aGlzLmVuY29kZXJzLmhhc093blByb3BlcnR5KGUpKXRoaXMuZW5jb2RlcnNbZV09dGhpcy5fY3JlYXRlTmFtZWQoaS5lbmNvZGVyc1tlXSk7cmV0dXJuIHRoaXMuZW5jb2RlcnNbZV19O0VudGl0eS5wcm90b3R5cGUuZW5jb2RlPWZ1bmN0aW9uIGVuY29kZShlLHQscil7cmV0dXJuIHRoaXMuX2dldEVuY29kZXIodCkuZW5jb2RlKGUscil9fSw2NDgzOmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDM3ODIpO3ZhciBuPXIoODUzKS5SZXBvcnRlcjt2YXIgYT1yKDQzMDApLkJ1ZmZlcjtmdW5jdGlvbiBEZWNvZGVyQnVmZmVyKGUsdCl7bi5jYWxsKHRoaXMsdCk7aWYoIWEuaXNCdWZmZXIoZSkpe3RoaXMuZXJyb3IoXCJJbnB1dCBub3QgQnVmZmVyXCIpO3JldHVybn10aGlzLmJhc2U9ZTt0aGlzLm9mZnNldD0wO3RoaXMubGVuZ3RoPWUubGVuZ3RofWkoRGVjb2RlckJ1ZmZlcixuKTt0LkM9RGVjb2RlckJ1ZmZlcjtEZWNvZGVyQnVmZmVyLnByb3RvdHlwZS5zYXZlPWZ1bmN0aW9uIHNhdmUoKXtyZXR1cm57b2Zmc2V0OnRoaXMub2Zmc2V0LHJlcG9ydGVyOm4ucHJvdG90eXBlLnNhdmUuY2FsbCh0aGlzKX19O0RlY29kZXJCdWZmZXIucHJvdG90eXBlLnJlc3RvcmU9ZnVuY3Rpb24gcmVzdG9yZShlKXt2YXIgdD1uZXcgRGVjb2RlckJ1ZmZlcih0aGlzLmJhc2UpO3Qub2Zmc2V0PWUub2Zmc2V0O3QubGVuZ3RoPXRoaXMub2Zmc2V0O3RoaXMub2Zmc2V0PWUub2Zmc2V0O24ucHJvdG90eXBlLnJlc3RvcmUuY2FsbCh0aGlzLGUucmVwb3J0ZXIpO3JldHVybiB0fTtEZWNvZGVyQnVmZmVyLnByb3RvdHlwZS5pc0VtcHR5PWZ1bmN0aW9uIGlzRW1wdHkoKXtyZXR1cm4gdGhpcy5vZmZzZXQ9PT10aGlzLmxlbmd0aH07RGVjb2RlckJ1ZmZlci5wcm90b3R5cGUucmVhZFVJbnQ4PWZ1bmN0aW9uIHJlYWRVSW50OChlKXtpZih0aGlzLm9mZnNldCsxPD10aGlzLmxlbmd0aClyZXR1cm4gdGhpcy5iYXNlLnJlYWRVSW50OCh0aGlzLm9mZnNldCsrLHRydWUpO2Vsc2UgcmV0dXJuIHRoaXMuZXJyb3IoZXx8XCJEZWNvZGVyQnVmZmVyIG92ZXJydW5cIil9O0RlY29kZXJCdWZmZXIucHJvdG90eXBlLnNraXA9ZnVuY3Rpb24gc2tpcChlLHQpe2lmKCEodGhpcy5vZmZzZXQrZTw9dGhpcy5sZW5ndGgpKXJldHVybiB0aGlzLmVycm9yKHR8fFwiRGVjb2RlckJ1ZmZlciBvdmVycnVuXCIpO3ZhciByPW5ldyBEZWNvZGVyQnVmZmVyKHRoaXMuYmFzZSk7ci5fcmVwb3J0ZXJTdGF0ZT10aGlzLl9yZXBvcnRlclN0YXRlO3Iub2Zmc2V0PXRoaXMub2Zmc2V0O3IubGVuZ3RoPXRoaXMub2Zmc2V0K2U7dGhpcy5vZmZzZXQrPWU7cmV0dXJuIHJ9O0RlY29kZXJCdWZmZXIucHJvdG90eXBlLnJhdz1mdW5jdGlvbiByYXcoZSl7cmV0dXJuIHRoaXMuYmFzZS5zbGljZShlP2Uub2Zmc2V0OnRoaXMub2Zmc2V0LHRoaXMubGVuZ3RoKX07ZnVuY3Rpb24gRW5jb2RlckJ1ZmZlcihlLHQpe2lmKEFycmF5LmlzQXJyYXkoZSkpe3RoaXMubGVuZ3RoPTA7dGhpcy52YWx1ZT1lLm1hcCgoZnVuY3Rpb24oZSl7aWYoIShlIGluc3RhbmNlb2YgRW5jb2RlckJ1ZmZlcikpZT1uZXcgRW5jb2RlckJ1ZmZlcihlLHQpO3RoaXMubGVuZ3RoKz1lLmxlbmd0aDtyZXR1cm4gZX0pLHRoaXMpfWVsc2UgaWYodHlwZW9mIGU9PT1cIm51bWJlclwiKXtpZighKDA8PWUmJmU8PTI1NSkpcmV0dXJuIHQuZXJyb3IoXCJub24tYnl0ZSBFbmNvZGVyQnVmZmVyIHZhbHVlXCIpO3RoaXMudmFsdWU9ZTt0aGlzLmxlbmd0aD0xfWVsc2UgaWYodHlwZW9mIGU9PT1cInN0cmluZ1wiKXt0aGlzLnZhbHVlPWU7dGhpcy5sZW5ndGg9YS5ieXRlTGVuZ3RoKGUpfWVsc2UgaWYoYS5pc0J1ZmZlcihlKSl7dGhpcy52YWx1ZT1lO3RoaXMubGVuZ3RoPWUubGVuZ3RofWVsc2V7cmV0dXJuIHQuZXJyb3IoXCJVbnN1cHBvcnRlZCB0eXBlOiBcIit0eXBlb2YgZSl9fXQuUj1FbmNvZGVyQnVmZmVyO0VuY29kZXJCdWZmZXIucHJvdG90eXBlLmpvaW49ZnVuY3Rpb24gam9pbihlLHQpe2lmKCFlKWU9bmV3IGEodGhpcy5sZW5ndGgpO2lmKCF0KXQ9MDtpZih0aGlzLmxlbmd0aD09PTApcmV0dXJuIGU7aWYoQXJyYXkuaXNBcnJheSh0aGlzLnZhbHVlKSl7dGhpcy52YWx1ZS5mb3JFYWNoKChmdW5jdGlvbihyKXtyLmpvaW4oZSx0KTt0Kz1yLmxlbmd0aH0pKX1lbHNle2lmKHR5cGVvZiB0aGlzLnZhbHVlPT09XCJudW1iZXJcIillW3RdPXRoaXMudmFsdWU7ZWxzZSBpZih0eXBlb2YgdGhpcy52YWx1ZT09PVwic3RyaW5nXCIpZS53cml0ZSh0aGlzLnZhbHVlLHQpO2Vsc2UgaWYoYS5pc0J1ZmZlcih0aGlzLnZhbHVlKSl0aGlzLnZhbHVlLmNvcHkoZSx0KTt0Kz10aGlzLmxlbmd0aH1yZXR1cm4gZX19LDg1MzpmdW5jdGlvbihlLHQscil7dmFyIGk9dDtpLlJlcG9ydGVyPXIoMTI5MykuYjtpLkRlY29kZXJCdWZmZXI9cig2NDgzKS5DO2kuRW5jb2RlckJ1ZmZlcj1yKDY0ODMpLlI7aS5Ob2RlPXIoOTM3NCl9LDkzNzQ6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoODUzKS5SZXBvcnRlcjt2YXIgbj1yKDg1MykuRW5jb2RlckJ1ZmZlcjt2YXIgYT1yKDg1MykuRGVjb2RlckJ1ZmZlcjt2YXIgcz1yKDM1MjMpO3ZhciBvPVtcInNlcVwiLFwic2Vxb2ZcIixcInNldFwiLFwic2V0b2ZcIixcIm9iamlkXCIsXCJib29sXCIsXCJnZW50aW1lXCIsXCJ1dGN0aW1lXCIsXCJudWxsX1wiLFwiZW51bVwiLFwiaW50XCIsXCJvYmpEZXNjXCIsXCJiaXRzdHJcIixcImJtcHN0clwiLFwiY2hhcnN0clwiLFwiZ2Vuc3RyXCIsXCJncmFwaHN0clwiLFwiaWE1c3RyXCIsXCJpc282NDZzdHJcIixcIm51bXN0clwiLFwib2N0c3RyXCIsXCJwcmludHN0clwiLFwidDYxc3RyXCIsXCJ1bmlzdHJcIixcInV0ZjhzdHJcIixcInZpZGVvc3RyXCJdO3ZhciBoPVtcImtleVwiLFwib2JqXCIsXCJ1c2VcIixcIm9wdGlvbmFsXCIsXCJleHBsaWNpdFwiLFwiaW1wbGljaXRcIixcImRlZlwiLFwiY2hvaWNlXCIsXCJhbnlcIixcImNvbnRhaW5zXCJdLmNvbmNhdChvKTt2YXIgdT1bXCJfcGVla1RhZ1wiLFwiX2RlY29kZVRhZ1wiLFwiX3VzZVwiLFwiX2RlY29kZVN0clwiLFwiX2RlY29kZU9iamlkXCIsXCJfZGVjb2RlVGltZVwiLFwiX2RlY29kZU51bGxcIixcIl9kZWNvZGVJbnRcIixcIl9kZWNvZGVCb29sXCIsXCJfZGVjb2RlTGlzdFwiLFwiX2VuY29kZUNvbXBvc2l0ZVwiLFwiX2VuY29kZVN0clwiLFwiX2VuY29kZU9iamlkXCIsXCJfZW5jb2RlVGltZVwiLFwiX2VuY29kZU51bGxcIixcIl9lbmNvZGVJbnRcIixcIl9lbmNvZGVCb29sXCJdO2Z1bmN0aW9uIE5vZGUoZSx0KXt2YXIgcj17fTt0aGlzLl9iYXNlU3RhdGU9cjtyLmVuYz1lO3IucGFyZW50PXR8fG51bGw7ci5jaGlsZHJlbj1udWxsO3IudGFnPW51bGw7ci5hcmdzPW51bGw7ci5yZXZlcnNlQXJncz1udWxsO3IuY2hvaWNlPW51bGw7ci5vcHRpb25hbD1mYWxzZTtyLmFueT1mYWxzZTtyLm9iaj1mYWxzZTtyLnVzZT1udWxsO3IudXNlRGVjb2Rlcj1udWxsO3Iua2V5PW51bGw7cltcImRlZmF1bHRcIl09bnVsbDtyLmV4cGxpY2l0PW51bGw7ci5pbXBsaWNpdD1udWxsO3IuY29udGFpbnM9bnVsbDtpZighci5wYXJlbnQpe3IuY2hpbGRyZW49W107dGhpcy5fd3JhcCgpfX1lLmV4cG9ydHM9Tm9kZTt2YXIgZD1bXCJlbmNcIixcInBhcmVudFwiLFwiY2hpbGRyZW5cIixcInRhZ1wiLFwiYXJnc1wiLFwicmV2ZXJzZUFyZ3NcIixcImNob2ljZVwiLFwib3B0aW9uYWxcIixcImFueVwiLFwib2JqXCIsXCJ1c2VcIixcImFsdGVyZWRVc2VcIixcImtleVwiLFwiZGVmYXVsdFwiLFwiZXhwbGljaXRcIixcImltcGxpY2l0XCIsXCJjb250YWluc1wiXTtOb2RlLnByb3RvdHlwZS5jbG9uZT1mdW5jdGlvbiBjbG9uZSgpe3ZhciBlPXRoaXMuX2Jhc2VTdGF0ZTt2YXIgdD17fTtkLmZvckVhY2goKGZ1bmN0aW9uKHIpe3Rbcl09ZVtyXX0pKTt2YXIgcj1uZXcgdGhpcy5jb25zdHJ1Y3Rvcih0LnBhcmVudCk7ci5fYmFzZVN0YXRlPXQ7cmV0dXJuIHJ9O05vZGUucHJvdG90eXBlLl93cmFwPWZ1bmN0aW9uIHdyYXAoKXt2YXIgZT10aGlzLl9iYXNlU3RhdGU7aC5mb3JFYWNoKChmdW5jdGlvbih0KXt0aGlzW3RdPWZ1bmN0aW9uIF93cmFwcGVkTWV0aG9kKCl7dmFyIHI9bmV3IHRoaXMuY29uc3RydWN0b3IodGhpcyk7ZS5jaGlsZHJlbi5wdXNoKHIpO3JldHVybiByW3RdLmFwcGx5KHIsYXJndW1lbnRzKX19KSx0aGlzKX07Tm9kZS5wcm90b3R5cGUuX2luaXQ9ZnVuY3Rpb24gaW5pdChlKXt2YXIgdD10aGlzLl9iYXNlU3RhdGU7cyh0LnBhcmVudD09PW51bGwpO2UuY2FsbCh0aGlzKTt0LmNoaWxkcmVuPXQuY2hpbGRyZW4uZmlsdGVyKChmdW5jdGlvbihlKXtyZXR1cm4gZS5fYmFzZVN0YXRlLnBhcmVudD09PXRoaXN9KSx0aGlzKTtzLmVxdWFsKHQuY2hpbGRyZW4ubGVuZ3RoLDEsXCJSb290IG5vZGUgY2FuIGhhdmUgb25seSBvbmUgY2hpbGRcIil9O05vZGUucHJvdG90eXBlLl91c2VBcmdzPWZ1bmN0aW9uIHVzZUFyZ3MoZSl7dmFyIHQ9dGhpcy5fYmFzZVN0YXRlO3ZhciByPWUuZmlsdGVyKChmdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHRoaXMuY29uc3RydWN0b3J9KSx0aGlzKTtlPWUuZmlsdGVyKChmdW5jdGlvbihlKXtyZXR1cm4hKGUgaW5zdGFuY2VvZiB0aGlzLmNvbnN0cnVjdG9yKX0pLHRoaXMpO2lmKHIubGVuZ3RoIT09MCl7cyh0LmNoaWxkcmVuPT09bnVsbCk7dC5jaGlsZHJlbj1yO3IuZm9yRWFjaCgoZnVuY3Rpb24oZSl7ZS5fYmFzZVN0YXRlLnBhcmVudD10aGlzfSksdGhpcyl9aWYoZS5sZW5ndGghPT0wKXtzKHQuYXJncz09PW51bGwpO3QuYXJncz1lO3QucmV2ZXJzZUFyZ3M9ZS5tYXAoKGZ1bmN0aW9uKGUpe2lmKHR5cGVvZiBlIT09XCJvYmplY3RcInx8ZS5jb25zdHJ1Y3RvciE9PU9iamVjdClyZXR1cm4gZTt2YXIgdD17fTtPYmplY3Qua2V5cyhlKS5mb3JFYWNoKChmdW5jdGlvbihyKXtpZihyPT0ocnwwKSlyfD0wO3ZhciBpPWVbcl07dFtpXT1yfSkpO3JldHVybiB0fSkpfX07dS5mb3JFYWNoKChmdW5jdGlvbihlKXtOb2RlLnByb3RvdHlwZVtlXT1mdW5jdGlvbiBfb3ZlcnJpZGVkKCl7dmFyIHQ9dGhpcy5fYmFzZVN0YXRlO3Rocm93IG5ldyBFcnJvcihlK1wiIG5vdCBpbXBsZW1lbnRlZCBmb3IgZW5jb2Rpbmc6IFwiK3QuZW5jKX19KSk7by5mb3JFYWNoKChmdW5jdGlvbihlKXtOb2RlLnByb3RvdHlwZVtlXT1mdW5jdGlvbiBfdGFnTWV0aG9kKCl7dmFyIHQ9dGhpcy5fYmFzZVN0YXRlO3ZhciByPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyk7cyh0LnRhZz09PW51bGwpO3QudGFnPWU7dGhpcy5fdXNlQXJncyhyKTtyZXR1cm4gdGhpc319KSk7Tm9kZS5wcm90b3R5cGUudXNlPWZ1bmN0aW9uIHVzZShlKXtzKGUpO3ZhciB0PXRoaXMuX2Jhc2VTdGF0ZTtzKHQudXNlPT09bnVsbCk7dC51c2U9ZTtyZXR1cm4gdGhpc307Tm9kZS5wcm90b3R5cGUub3B0aW9uYWw9ZnVuY3Rpb24gb3B0aW9uYWwoKXt2YXIgZT10aGlzLl9iYXNlU3RhdGU7ZS5vcHRpb25hbD10cnVlO3JldHVybiB0aGlzfTtOb2RlLnByb3RvdHlwZS5kZWY9ZnVuY3Rpb24gZGVmKGUpe3ZhciB0PXRoaXMuX2Jhc2VTdGF0ZTtzKHRbXCJkZWZhdWx0XCJdPT09bnVsbCk7dFtcImRlZmF1bHRcIl09ZTt0Lm9wdGlvbmFsPXRydWU7cmV0dXJuIHRoaXN9O05vZGUucHJvdG90eXBlLmV4cGxpY2l0PWZ1bmN0aW9uIGV4cGxpY2l0KGUpe3ZhciB0PXRoaXMuX2Jhc2VTdGF0ZTtzKHQuZXhwbGljaXQ9PT1udWxsJiZ0LmltcGxpY2l0PT09bnVsbCk7dC5leHBsaWNpdD1lO3JldHVybiB0aGlzfTtOb2RlLnByb3RvdHlwZS5pbXBsaWNpdD1mdW5jdGlvbiBpbXBsaWNpdChlKXt2YXIgdD10aGlzLl9iYXNlU3RhdGU7cyh0LmV4cGxpY2l0PT09bnVsbCYmdC5pbXBsaWNpdD09PW51bGwpO3QuaW1wbGljaXQ9ZTtyZXR1cm4gdGhpc307Tm9kZS5wcm90b3R5cGUub2JqPWZ1bmN0aW9uIG9iaigpe3ZhciBlPXRoaXMuX2Jhc2VTdGF0ZTt2YXIgdD1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpO2Uub2JqPXRydWU7aWYodC5sZW5ndGghPT0wKXRoaXMuX3VzZUFyZ3ModCk7cmV0dXJuIHRoaXN9O05vZGUucHJvdG90eXBlLmtleT1mdW5jdGlvbiBrZXkoZSl7dmFyIHQ9dGhpcy5fYmFzZVN0YXRlO3ModC5rZXk9PT1udWxsKTt0LmtleT1lO3JldHVybiB0aGlzfTtOb2RlLnByb3RvdHlwZS5hbnk9ZnVuY3Rpb24gYW55KCl7dmFyIGU9dGhpcy5fYmFzZVN0YXRlO2UuYW55PXRydWU7cmV0dXJuIHRoaXN9O05vZGUucHJvdG90eXBlLmNob2ljZT1mdW5jdGlvbiBjaG9pY2UoZSl7dmFyIHQ9dGhpcy5fYmFzZVN0YXRlO3ModC5jaG9pY2U9PT1udWxsKTt0LmNob2ljZT1lO3RoaXMuX3VzZUFyZ3MoT2JqZWN0LmtleXMoZSkubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gZVt0XX0pKSk7cmV0dXJuIHRoaXN9O05vZGUucHJvdG90eXBlLmNvbnRhaW5zPWZ1bmN0aW9uIGNvbnRhaW5zKGUpe3ZhciB0PXRoaXMuX2Jhc2VTdGF0ZTtzKHQudXNlPT09bnVsbCk7dC5jb250YWlucz1lO3JldHVybiB0aGlzfTtOb2RlLnByb3RvdHlwZS5fZGVjb2RlPWZ1bmN0aW9uIGRlY29kZShlLHQpe3ZhciByPXRoaXMuX2Jhc2VTdGF0ZTtpZihyLnBhcmVudD09PW51bGwpcmV0dXJuIGUud3JhcFJlc3VsdChyLmNoaWxkcmVuWzBdLl9kZWNvZGUoZSx0KSk7dmFyIGk9cltcImRlZmF1bHRcIl07dmFyIG49dHJ1ZTt2YXIgcz1udWxsO2lmKHIua2V5IT09bnVsbClzPWUuZW50ZXJLZXkoci5rZXkpO2lmKHIub3B0aW9uYWwpe3ZhciBvPW51bGw7aWYoci5leHBsaWNpdCE9PW51bGwpbz1yLmV4cGxpY2l0O2Vsc2UgaWYoci5pbXBsaWNpdCE9PW51bGwpbz1yLmltcGxpY2l0O2Vsc2UgaWYoci50YWchPT1udWxsKW89ci50YWc7aWYobz09PW51bGwmJiFyLmFueSl7dmFyIGg9ZS5zYXZlKCk7dHJ5e2lmKHIuY2hvaWNlPT09bnVsbCl0aGlzLl9kZWNvZGVHZW5lcmljKHIudGFnLGUsdCk7ZWxzZSB0aGlzLl9kZWNvZGVDaG9pY2UoZSx0KTtuPXRydWV9Y2F0Y2goZSl7bj1mYWxzZX1lLnJlc3RvcmUoaCl9ZWxzZXtuPXRoaXMuX3BlZWtUYWcoZSxvLHIuYW55KTtpZihlLmlzRXJyb3IobikpcmV0dXJuIG59fXZhciB1O2lmKHIub2JqJiZuKXU9ZS5lbnRlck9iamVjdCgpO2lmKG4pe2lmKHIuZXhwbGljaXQhPT1udWxsKXt2YXIgZD10aGlzLl9kZWNvZGVUYWcoZSxyLmV4cGxpY2l0KTtpZihlLmlzRXJyb3IoZCkpcmV0dXJuIGQ7ZT1kfXZhciBjPWUub2Zmc2V0O2lmKHIudXNlPT09bnVsbCYmci5jaG9pY2U9PT1udWxsKXtpZihyLmFueSl2YXIgaD1lLnNhdmUoKTt2YXIgbD10aGlzLl9kZWNvZGVUYWcoZSxyLmltcGxpY2l0IT09bnVsbD9yLmltcGxpY2l0OnIudGFnLHIuYW55KTtpZihlLmlzRXJyb3IobCkpcmV0dXJuIGw7aWYoci5hbnkpaT1lLnJhdyhoKTtlbHNlIGU9bH1pZih0JiZ0LnRyYWNrJiZyLnRhZyE9PW51bGwpdC50cmFjayhlLnBhdGgoKSxjLGUubGVuZ3RoLFwidGFnZ2VkXCIpO2lmKHQmJnQudHJhY2smJnIudGFnIT09bnVsbCl0LnRyYWNrKGUucGF0aCgpLGUub2Zmc2V0LGUubGVuZ3RoLFwiY29udGVudFwiKTtpZihyLmFueSlpPWk7ZWxzZSBpZihyLmNob2ljZT09PW51bGwpaT10aGlzLl9kZWNvZGVHZW5lcmljKHIudGFnLGUsdCk7ZWxzZSBpPXRoaXMuX2RlY29kZUNob2ljZShlLHQpO2lmKGUuaXNFcnJvcihpKSlyZXR1cm4gaTtpZighci5hbnkmJnIuY2hvaWNlPT09bnVsbCYmci5jaGlsZHJlbiE9PW51bGwpe3IuY2hpbGRyZW4uZm9yRWFjaCgoZnVuY3Rpb24gZGVjb2RlQ2hpbGRyZW4ocil7ci5fZGVjb2RlKGUsdCl9KSl9aWYoci5jb250YWlucyYmKHIudGFnPT09XCJvY3RzdHJcInx8ci50YWc9PT1cImJpdHN0clwiKSl7dmFyIHA9bmV3IGEoaSk7aT10aGlzLl9nZXRVc2Uoci5jb250YWlucyxlLl9yZXBvcnRlclN0YXRlLm9iaikuX2RlY29kZShwLHQpfX1pZihyLm9iaiYmbilpPWUubGVhdmVPYmplY3QodSk7aWYoci5rZXkhPT1udWxsJiYoaSE9PW51bGx8fG49PT10cnVlKSllLmxlYXZlS2V5KHMsci5rZXksaSk7ZWxzZSBpZihzIT09bnVsbCllLmV4aXRLZXkocyk7cmV0dXJuIGl9O05vZGUucHJvdG90eXBlLl9kZWNvZGVHZW5lcmljPWZ1bmN0aW9uIGRlY29kZUdlbmVyaWMoZSx0LHIpe3ZhciBpPXRoaXMuX2Jhc2VTdGF0ZTtpZihlPT09XCJzZXFcInx8ZT09PVwic2V0XCIpcmV0dXJuIG51bGw7aWYoZT09PVwic2Vxb2ZcInx8ZT09PVwic2V0b2ZcIilyZXR1cm4gdGhpcy5fZGVjb2RlTGlzdCh0LGUsaS5hcmdzWzBdLHIpO2Vsc2UgaWYoL3N0ciQvLnRlc3QoZSkpcmV0dXJuIHRoaXMuX2RlY29kZVN0cih0LGUscik7ZWxzZSBpZihlPT09XCJvYmppZFwiJiZpLmFyZ3MpcmV0dXJuIHRoaXMuX2RlY29kZU9iamlkKHQsaS5hcmdzWzBdLGkuYXJnc1sxXSxyKTtlbHNlIGlmKGU9PT1cIm9iamlkXCIpcmV0dXJuIHRoaXMuX2RlY29kZU9iamlkKHQsbnVsbCxudWxsLHIpO2Vsc2UgaWYoZT09PVwiZ2VudGltZVwifHxlPT09XCJ1dGN0aW1lXCIpcmV0dXJuIHRoaXMuX2RlY29kZVRpbWUodCxlLHIpO2Vsc2UgaWYoZT09PVwibnVsbF9cIilyZXR1cm4gdGhpcy5fZGVjb2RlTnVsbCh0LHIpO2Vsc2UgaWYoZT09PVwiYm9vbFwiKXJldHVybiB0aGlzLl9kZWNvZGVCb29sKHQscik7ZWxzZSBpZihlPT09XCJvYmpEZXNjXCIpcmV0dXJuIHRoaXMuX2RlY29kZVN0cih0LGUscik7ZWxzZSBpZihlPT09XCJpbnRcInx8ZT09PVwiZW51bVwiKXJldHVybiB0aGlzLl9kZWNvZGVJbnQodCxpLmFyZ3MmJmkuYXJnc1swXSxyKTtpZihpLnVzZSE9PW51bGwpe3JldHVybiB0aGlzLl9nZXRVc2UoaS51c2UsdC5fcmVwb3J0ZXJTdGF0ZS5vYmopLl9kZWNvZGUodCxyKX1lbHNle3JldHVybiB0LmVycm9yKFwidW5rbm93biB0YWc6IFwiK2UpfX07Tm9kZS5wcm90b3R5cGUuX2dldFVzZT1mdW5jdGlvbiBfZ2V0VXNlKGUsdCl7dmFyIHI9dGhpcy5fYmFzZVN0YXRlO3IudXNlRGVjb2Rlcj10aGlzLl91c2UoZSx0KTtzKHIudXNlRGVjb2Rlci5fYmFzZVN0YXRlLnBhcmVudD09PW51bGwpO3IudXNlRGVjb2Rlcj1yLnVzZURlY29kZXIuX2Jhc2VTdGF0ZS5jaGlsZHJlblswXTtpZihyLmltcGxpY2l0IT09ci51c2VEZWNvZGVyLl9iYXNlU3RhdGUuaW1wbGljaXQpe3IudXNlRGVjb2Rlcj1yLnVzZURlY29kZXIuY2xvbmUoKTtyLnVzZURlY29kZXIuX2Jhc2VTdGF0ZS5pbXBsaWNpdD1yLmltcGxpY2l0fXJldHVybiByLnVzZURlY29kZXJ9O05vZGUucHJvdG90eXBlLl9kZWNvZGVDaG9pY2U9ZnVuY3Rpb24gZGVjb2RlQ2hvaWNlKGUsdCl7dmFyIHI9dGhpcy5fYmFzZVN0YXRlO3ZhciBpPW51bGw7dmFyIG49ZmFsc2U7T2JqZWN0LmtleXMoci5jaG9pY2UpLnNvbWUoKGZ1bmN0aW9uKGEpe3ZhciBzPWUuc2F2ZSgpO3ZhciBvPXIuY2hvaWNlW2FdO3RyeXt2YXIgaD1vLl9kZWNvZGUoZSx0KTtpZihlLmlzRXJyb3IoaCkpcmV0dXJuIGZhbHNlO2k9e3R5cGU6YSx2YWx1ZTpofTtuPXRydWV9Y2F0Y2godCl7ZS5yZXN0b3JlKHMpO3JldHVybiBmYWxzZX1yZXR1cm4gdHJ1ZX0pLHRoaXMpO2lmKCFuKXJldHVybiBlLmVycm9yKFwiQ2hvaWNlIG5vdCBtYXRjaGVkXCIpO3JldHVybiBpfTtOb2RlLnByb3RvdHlwZS5fY3JlYXRlRW5jb2RlckJ1ZmZlcj1mdW5jdGlvbiBjcmVhdGVFbmNvZGVyQnVmZmVyKGUpe3JldHVybiBuZXcgbihlLHRoaXMucmVwb3J0ZXIpfTtOb2RlLnByb3RvdHlwZS5fZW5jb2RlPWZ1bmN0aW9uIGVuY29kZShlLHQscil7dmFyIGk9dGhpcy5fYmFzZVN0YXRlO2lmKGlbXCJkZWZhdWx0XCJdIT09bnVsbCYmaVtcImRlZmF1bHRcIl09PT1lKXJldHVybjt2YXIgbj10aGlzLl9lbmNvZGVWYWx1ZShlLHQscik7aWYobj09PXVuZGVmaW5lZClyZXR1cm47aWYodGhpcy5fc2tpcERlZmF1bHQobix0LHIpKXJldHVybjtyZXR1cm4gbn07Tm9kZS5wcm90b3R5cGUuX2VuY29kZVZhbHVlPWZ1bmN0aW9uIGVuY29kZShlLHQscil7dmFyIG49dGhpcy5fYmFzZVN0YXRlO2lmKG4ucGFyZW50PT09bnVsbClyZXR1cm4gbi5jaGlsZHJlblswXS5fZW5jb2RlKGUsdHx8bmV3IGkpO3ZhciBhPW51bGw7dGhpcy5yZXBvcnRlcj10O2lmKG4ub3B0aW9uYWwmJmU9PT11bmRlZmluZWQpe2lmKG5bXCJkZWZhdWx0XCJdIT09bnVsbCllPW5bXCJkZWZhdWx0XCJdO2Vsc2UgcmV0dXJufXZhciBzPW51bGw7dmFyIG89ZmFsc2U7aWYobi5hbnkpe2E9dGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihlKX1lbHNlIGlmKG4uY2hvaWNlKXthPXRoaXMuX2VuY29kZUNob2ljZShlLHQpfWVsc2UgaWYobi5jb250YWlucyl7cz10aGlzLl9nZXRVc2Uobi5jb250YWlucyxyKS5fZW5jb2RlKGUsdCk7bz10cnVlfWVsc2UgaWYobi5jaGlsZHJlbil7cz1uLmNoaWxkcmVuLm1hcCgoZnVuY3Rpb24ocil7aWYoci5fYmFzZVN0YXRlLnRhZz09PVwibnVsbF9cIilyZXR1cm4gci5fZW5jb2RlKG51bGwsdCxlKTtpZihyLl9iYXNlU3RhdGUua2V5PT09bnVsbClyZXR1cm4gdC5lcnJvcihcIkNoaWxkIHNob3VsZCBoYXZlIGEga2V5XCIpO3ZhciBpPXQuZW50ZXJLZXkoci5fYmFzZVN0YXRlLmtleSk7aWYodHlwZW9mIGUhPT1cIm9iamVjdFwiKXJldHVybiB0LmVycm9yKFwiQ2hpbGQgZXhwZWN0ZWQsIGJ1dCBpbnB1dCBpcyBub3Qgb2JqZWN0XCIpO3ZhciBuPXIuX2VuY29kZShlW3IuX2Jhc2VTdGF0ZS5rZXldLHQsZSk7dC5sZWF2ZUtleShpKTtyZXR1cm4gbn0pLHRoaXMpLmZpbHRlcigoZnVuY3Rpb24oZSl7cmV0dXJuIGV9KSk7cz10aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKHMpfWVsc2V7aWYobi50YWc9PT1cInNlcW9mXCJ8fG4udGFnPT09XCJzZXRvZlwiKXtpZighKG4uYXJncyYmbi5hcmdzLmxlbmd0aD09PTEpKXJldHVybiB0LmVycm9yKFwiVG9vIG1hbnkgYXJncyBmb3IgOiBcIituLnRhZyk7aWYoIUFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIHQuZXJyb3IoXCJzZXFvZi9zZXRvZiwgYnV0IGRhdGEgaXMgbm90IEFycmF5XCIpO3ZhciBoPXRoaXMuY2xvbmUoKTtoLl9iYXNlU3RhdGUuaW1wbGljaXQ9bnVsbDtzPXRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIoZS5tYXAoKGZ1bmN0aW9uKHIpe3ZhciBpPXRoaXMuX2Jhc2VTdGF0ZTtyZXR1cm4gdGhpcy5fZ2V0VXNlKGkuYXJnc1swXSxlKS5fZW5jb2RlKHIsdCl9KSxoKSl9ZWxzZSBpZihuLnVzZSE9PW51bGwpe2E9dGhpcy5fZ2V0VXNlKG4udXNlLHIpLl9lbmNvZGUoZSx0KX1lbHNle3M9dGhpcy5fZW5jb2RlUHJpbWl0aXZlKG4udGFnLGUpO289dHJ1ZX19dmFyIGE7aWYoIW4uYW55JiZuLmNob2ljZT09PW51bGwpe3ZhciB1PW4uaW1wbGljaXQhPT1udWxsP24uaW1wbGljaXQ6bi50YWc7dmFyIGQ9bi5pbXBsaWNpdD09PW51bGw/XCJ1bml2ZXJzYWxcIjpcImNvbnRleHRcIjtpZih1PT09bnVsbCl7aWYobi51c2U9PT1udWxsKXQuZXJyb3IoXCJUYWcgY291bGQgYmUgb21pdHRlZCBvbmx5IGZvciAudXNlKClcIil9ZWxzZXtpZihuLnVzZT09PW51bGwpYT10aGlzLl9lbmNvZGVDb21wb3NpdGUodSxvLGQscyl9fWlmKG4uZXhwbGljaXQhPT1udWxsKWE9dGhpcy5fZW5jb2RlQ29tcG9zaXRlKG4uZXhwbGljaXQsZmFsc2UsXCJjb250ZXh0XCIsYSk7cmV0dXJuIGF9O05vZGUucHJvdG90eXBlLl9lbmNvZGVDaG9pY2U9ZnVuY3Rpb24gZW5jb2RlQ2hvaWNlKGUsdCl7dmFyIHI9dGhpcy5fYmFzZVN0YXRlO3ZhciBpPXIuY2hvaWNlW2UudHlwZV07aWYoIWkpe3MoZmFsc2UsZS50eXBlK1wiIG5vdCBmb3VuZCBpbiBcIitKU09OLnN0cmluZ2lmeShPYmplY3Qua2V5cyhyLmNob2ljZSkpKX1yZXR1cm4gaS5fZW5jb2RlKGUudmFsdWUsdCl9O05vZGUucHJvdG90eXBlLl9lbmNvZGVQcmltaXRpdmU9ZnVuY3Rpb24gZW5jb2RlUHJpbWl0aXZlKGUsdCl7dmFyIHI9dGhpcy5fYmFzZVN0YXRlO2lmKC9zdHIkLy50ZXN0KGUpKXJldHVybiB0aGlzLl9lbmNvZGVTdHIodCxlKTtlbHNlIGlmKGU9PT1cIm9iamlkXCImJnIuYXJncylyZXR1cm4gdGhpcy5fZW5jb2RlT2JqaWQodCxyLnJldmVyc2VBcmdzWzBdLHIuYXJnc1sxXSk7ZWxzZSBpZihlPT09XCJvYmppZFwiKXJldHVybiB0aGlzLl9lbmNvZGVPYmppZCh0LG51bGwsbnVsbCk7ZWxzZSBpZihlPT09XCJnZW50aW1lXCJ8fGU9PT1cInV0Y3RpbWVcIilyZXR1cm4gdGhpcy5fZW5jb2RlVGltZSh0LGUpO2Vsc2UgaWYoZT09PVwibnVsbF9cIilyZXR1cm4gdGhpcy5fZW5jb2RlTnVsbCgpO2Vsc2UgaWYoZT09PVwiaW50XCJ8fGU9PT1cImVudW1cIilyZXR1cm4gdGhpcy5fZW5jb2RlSW50KHQsci5hcmdzJiZyLnJldmVyc2VBcmdzWzBdKTtlbHNlIGlmKGU9PT1cImJvb2xcIilyZXR1cm4gdGhpcy5fZW5jb2RlQm9vbCh0KTtlbHNlIGlmKGU9PT1cIm9iakRlc2NcIilyZXR1cm4gdGhpcy5fZW5jb2RlU3RyKHQsZSk7ZWxzZSB0aHJvdyBuZXcgRXJyb3IoXCJVbnN1cHBvcnRlZCB0YWc6IFwiK2UpfTtOb2RlLnByb3RvdHlwZS5faXNOdW1zdHI9ZnVuY3Rpb24gaXNOdW1zdHIoZSl7cmV0dXJuL15bMC05IF0qJC8udGVzdChlKX07Tm9kZS5wcm90b3R5cGUuX2lzUHJpbnRzdHI9ZnVuY3Rpb24gaXNQcmludHN0cihlKXtyZXR1cm4vXltBLVphLXowLTkgJ1xcKFxcKVxcKyxcXC1cXC5cXC86PVxcP10qJC8udGVzdChlKX19LDEyOTM6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoMzc4Mik7ZnVuY3Rpb24gUmVwb3J0ZXIoZSl7dGhpcy5fcmVwb3J0ZXJTdGF0ZT17b2JqOm51bGwscGF0aDpbXSxvcHRpb25zOmV8fHt9LGVycm9yczpbXX19dC5iPVJlcG9ydGVyO1JlcG9ydGVyLnByb3RvdHlwZS5pc0Vycm9yPWZ1bmN0aW9uIGlzRXJyb3IoZSl7cmV0dXJuIGUgaW5zdGFuY2VvZiBSZXBvcnRlckVycm9yfTtSZXBvcnRlci5wcm90b3R5cGUuc2F2ZT1mdW5jdGlvbiBzYXZlKCl7dmFyIGU9dGhpcy5fcmVwb3J0ZXJTdGF0ZTtyZXR1cm57b2JqOmUub2JqLHBhdGhMZW46ZS5wYXRoLmxlbmd0aH19O1JlcG9ydGVyLnByb3RvdHlwZS5yZXN0b3JlPWZ1bmN0aW9uIHJlc3RvcmUoZSl7dmFyIHQ9dGhpcy5fcmVwb3J0ZXJTdGF0ZTt0Lm9iaj1lLm9iajt0LnBhdGg9dC5wYXRoLnNsaWNlKDAsZS5wYXRoTGVuKX07UmVwb3J0ZXIucHJvdG90eXBlLmVudGVyS2V5PWZ1bmN0aW9uIGVudGVyS2V5KGUpe3JldHVybiB0aGlzLl9yZXBvcnRlclN0YXRlLnBhdGgucHVzaChlKX07UmVwb3J0ZXIucHJvdG90eXBlLmV4aXRLZXk9ZnVuY3Rpb24gZXhpdEtleShlKXt2YXIgdD10aGlzLl9yZXBvcnRlclN0YXRlO3QucGF0aD10LnBhdGguc2xpY2UoMCxlLTEpfTtSZXBvcnRlci5wcm90b3R5cGUubGVhdmVLZXk9ZnVuY3Rpb24gbGVhdmVLZXkoZSx0LHIpe3ZhciBpPXRoaXMuX3JlcG9ydGVyU3RhdGU7dGhpcy5leGl0S2V5KGUpO2lmKGkub2JqIT09bnVsbClpLm9ialt0XT1yfTtSZXBvcnRlci5wcm90b3R5cGUucGF0aD1mdW5jdGlvbiBwYXRoKCl7cmV0dXJuIHRoaXMuX3JlcG9ydGVyU3RhdGUucGF0aC5qb2luKFwiL1wiKX07UmVwb3J0ZXIucHJvdG90eXBlLmVudGVyT2JqZWN0PWZ1bmN0aW9uIGVudGVyT2JqZWN0KCl7dmFyIGU9dGhpcy5fcmVwb3J0ZXJTdGF0ZTt2YXIgdD1lLm9iajtlLm9iaj17fTtyZXR1cm4gdH07UmVwb3J0ZXIucHJvdG90eXBlLmxlYXZlT2JqZWN0PWZ1bmN0aW9uIGxlYXZlT2JqZWN0KGUpe3ZhciB0PXRoaXMuX3JlcG9ydGVyU3RhdGU7dmFyIHI9dC5vYmo7dC5vYmo9ZTtyZXR1cm4gcn07UmVwb3J0ZXIucHJvdG90eXBlLmVycm9yPWZ1bmN0aW9uIGVycm9yKGUpe3ZhciB0O3ZhciByPXRoaXMuX3JlcG9ydGVyU3RhdGU7dmFyIGk9ZSBpbnN0YW5jZW9mIFJlcG9ydGVyRXJyb3I7aWYoaSl7dD1lfWVsc2V7dD1uZXcgUmVwb3J0ZXJFcnJvcihyLnBhdGgubWFwKChmdW5jdGlvbihlKXtyZXR1cm5cIltcIitKU09OLnN0cmluZ2lmeShlKStcIl1cIn0pKS5qb2luKFwiXCIpLGUubWVzc2FnZXx8ZSxlLnN0YWNrKX1pZighci5vcHRpb25zLnBhcnRpYWwpdGhyb3cgdDtpZighaSlyLmVycm9ycy5wdXNoKHQpO3JldHVybiB0fTtSZXBvcnRlci5wcm90b3R5cGUud3JhcFJlc3VsdD1mdW5jdGlvbiB3cmFwUmVzdWx0KGUpe3ZhciB0PXRoaXMuX3JlcG9ydGVyU3RhdGU7aWYoIXQub3B0aW9ucy5wYXJ0aWFsKXJldHVybiBlO3JldHVybntyZXN1bHQ6dGhpcy5pc0Vycm9yKGUpP251bGw6ZSxlcnJvcnM6dC5lcnJvcnN9fTtmdW5jdGlvbiBSZXBvcnRlckVycm9yKGUsdCl7dGhpcy5wYXRoPWU7dGhpcy5yZXRocm93KHQpfWkoUmVwb3J0ZXJFcnJvcixFcnJvcik7UmVwb3J0ZXJFcnJvci5wcm90b3R5cGUucmV0aHJvdz1mdW5jdGlvbiByZXRocm93KGUpe3RoaXMubWVzc2FnZT1lK1wiIGF0OiBcIisodGhpcy5wYXRofHxcIihzaGFsbG93KVwiKTtpZihFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSlFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSh0aGlzLFJlcG9ydGVyRXJyb3IpO2lmKCF0aGlzLnN0YWNrKXt0cnl7dGhyb3cgbmV3IEVycm9yKHRoaXMubWVzc2FnZSl9Y2F0Y2goZSl7dGhpcy5zdGFjaz1lLnN0YWNrfX1yZXR1cm4gdGhpc319LDk3OTE6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoNzMzNSk7dC50YWdDbGFzcz17MDpcInVuaXZlcnNhbFwiLDE6XCJhcHBsaWNhdGlvblwiLDI6XCJjb250ZXh0XCIsMzpcInByaXZhdGVcIn07dC50YWdDbGFzc0J5TmFtZT1pLl9yZXZlcnNlKHQudGFnQ2xhc3MpO3QudGFnPXswOlwiZW5kXCIsMTpcImJvb2xcIiwyOlwiaW50XCIsMzpcImJpdHN0clwiLDQ6XCJvY3RzdHJcIiw1OlwibnVsbF9cIiw2Olwib2JqaWRcIiw3Olwib2JqRGVzY1wiLDg6XCJleHRlcm5hbFwiLDk6XCJyZWFsXCIsMTA6XCJlbnVtXCIsMTE6XCJlbWJlZFwiLDEyOlwidXRmOHN0clwiLDEzOlwicmVsYXRpdmVPaWRcIiwxNjpcInNlcVwiLDE3Olwic2V0XCIsMTg6XCJudW1zdHJcIiwxOTpcInByaW50c3RyXCIsMjA6XCJ0NjFzdHJcIiwyMTpcInZpZGVvc3RyXCIsMjI6XCJpYTVzdHJcIiwyMzpcInV0Y3RpbWVcIiwyNDpcImdlbnRpbWVcIiwyNTpcImdyYXBoc3RyXCIsMjY6XCJpc282NDZzdHJcIiwyNzpcImdlbnN0clwiLDI4OlwidW5pc3RyXCIsMjk6XCJjaGFyc3RyXCIsMzA6XCJibXBzdHJcIn07dC50YWdCeU5hbWU9aS5fcmV2ZXJzZSh0LnRhZyl9LDczMzU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXQ7aS5fcmV2ZXJzZT1mdW5jdGlvbiByZXZlcnNlKGUpe3ZhciB0PXt9O09iamVjdC5rZXlzKGUpLmZvckVhY2goKGZ1bmN0aW9uKHIpe2lmKChyfDApPT1yKXI9cnwwO3ZhciBpPWVbcl07dFtpXT1yfSkpO3JldHVybiB0fTtpLmRlcj1yKDk3OTEpfSwyMjU5OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDM3ODIpO3ZhciBuPXIoNzE2MCk7dmFyIGE9bi5iYXNlO3ZhciBzPW4uYmlnbnVtO3ZhciBvPW4uY29uc3RhbnRzLmRlcjtmdW5jdGlvbiBERVJEZWNvZGVyKGUpe3RoaXMuZW5jPVwiZGVyXCI7dGhpcy5uYW1lPWUubmFtZTt0aGlzLmVudGl0eT1lO3RoaXMudHJlZT1uZXcgREVSTm9kZTt0aGlzLnRyZWUuX2luaXQoZS5ib2R5KX1lLmV4cG9ydHM9REVSRGVjb2RlcjtERVJEZWNvZGVyLnByb3RvdHlwZS5kZWNvZGU9ZnVuY3Rpb24gZGVjb2RlKGUsdCl7aWYoIShlIGluc3RhbmNlb2YgYS5EZWNvZGVyQnVmZmVyKSllPW5ldyBhLkRlY29kZXJCdWZmZXIoZSx0KTtyZXR1cm4gdGhpcy50cmVlLl9kZWNvZGUoZSx0KX07ZnVuY3Rpb24gREVSTm9kZShlKXthLk5vZGUuY2FsbCh0aGlzLFwiZGVyXCIsZSl9aShERVJOb2RlLGEuTm9kZSk7REVSTm9kZS5wcm90b3R5cGUuX3BlZWtUYWc9ZnVuY3Rpb24gcGVla1RhZyhlLHQscil7aWYoZS5pc0VtcHR5KCkpcmV0dXJuIGZhbHNlO3ZhciBpPWUuc2F2ZSgpO3ZhciBuPWRlckRlY29kZVRhZyhlLCdGYWlsZWQgdG8gcGVlayB0YWc6IFwiJyt0KydcIicpO2lmKGUuaXNFcnJvcihuKSlyZXR1cm4gbjtlLnJlc3RvcmUoaSk7cmV0dXJuIG4udGFnPT09dHx8bi50YWdTdHI9PT10fHxuLnRhZ1N0citcIm9mXCI9PT10fHxyfTtERVJOb2RlLnByb3RvdHlwZS5fZGVjb2RlVGFnPWZ1bmN0aW9uIGRlY29kZVRhZyhlLHQscil7dmFyIGk9ZGVyRGVjb2RlVGFnKGUsJ0ZhaWxlZCB0byBkZWNvZGUgdGFnIG9mIFwiJyt0KydcIicpO2lmKGUuaXNFcnJvcihpKSlyZXR1cm4gaTt2YXIgbj1kZXJEZWNvZGVMZW4oZSxpLnByaW1pdGl2ZSwnRmFpbGVkIHRvIGdldCBsZW5ndGggb2YgXCInK3QrJ1wiJyk7aWYoZS5pc0Vycm9yKG4pKXJldHVybiBuO2lmKCFyJiZpLnRhZyE9PXQmJmkudGFnU3RyIT09dCYmaS50YWdTdHIrXCJvZlwiIT09dCl7cmV0dXJuIGUuZXJyb3IoJ0ZhaWxlZCB0byBtYXRjaCB0YWc6IFwiJyt0KydcIicpfWlmKGkucHJpbWl0aXZlfHxuIT09bnVsbClyZXR1cm4gZS5za2lwKG4sJ0ZhaWxlZCB0byBtYXRjaCBib2R5IG9mOiBcIicrdCsnXCInKTt2YXIgYT1lLnNhdmUoKTt2YXIgcz10aGlzLl9za2lwVW50aWxFbmQoZSwnRmFpbGVkIHRvIHNraXAgaW5kZWZpbml0ZSBsZW5ndGggYm9keTogXCInK3RoaXMudGFnKydcIicpO2lmKGUuaXNFcnJvcihzKSlyZXR1cm4gcztuPWUub2Zmc2V0LWEub2Zmc2V0O2UucmVzdG9yZShhKTtyZXR1cm4gZS5za2lwKG4sJ0ZhaWxlZCB0byBtYXRjaCBib2R5IG9mOiBcIicrdCsnXCInKX07REVSTm9kZS5wcm90b3R5cGUuX3NraXBVbnRpbEVuZD1mdW5jdGlvbiBza2lwVW50aWxFbmQoZSx0KXt3aGlsZSh0cnVlKXt2YXIgcj1kZXJEZWNvZGVUYWcoZSx0KTtpZihlLmlzRXJyb3IocikpcmV0dXJuIHI7dmFyIGk9ZGVyRGVjb2RlTGVuKGUsci5wcmltaXRpdmUsdCk7aWYoZS5pc0Vycm9yKGkpKXJldHVybiBpO3ZhciBuO2lmKHIucHJpbWl0aXZlfHxpIT09bnVsbCluPWUuc2tpcChpKTtlbHNlIG49dGhpcy5fc2tpcFVudGlsRW5kKGUsdCk7aWYoZS5pc0Vycm9yKG4pKXJldHVybiBuO2lmKHIudGFnU3RyPT09XCJlbmRcIilicmVha319O0RFUk5vZGUucHJvdG90eXBlLl9kZWNvZGVMaXN0PWZ1bmN0aW9uIGRlY29kZUxpc3QoZSx0LHIsaSl7dmFyIG49W107d2hpbGUoIWUuaXNFbXB0eSgpKXt2YXIgYT10aGlzLl9wZWVrVGFnKGUsXCJlbmRcIik7aWYoZS5pc0Vycm9yKGEpKXJldHVybiBhO3ZhciBzPXIuZGVjb2RlKGUsXCJkZXJcIixpKTtpZihlLmlzRXJyb3IocykmJmEpYnJlYWs7bi5wdXNoKHMpfXJldHVybiBufTtERVJOb2RlLnByb3RvdHlwZS5fZGVjb2RlU3RyPWZ1bmN0aW9uIGRlY29kZVN0cihlLHQpe2lmKHQ9PT1cImJpdHN0clwiKXt2YXIgcj1lLnJlYWRVSW50OCgpO2lmKGUuaXNFcnJvcihyKSlyZXR1cm4gcjtyZXR1cm57dW51c2VkOnIsZGF0YTplLnJhdygpfX1lbHNlIGlmKHQ9PT1cImJtcHN0clwiKXt2YXIgaT1lLnJhdygpO2lmKGkubGVuZ3RoJTI9PT0xKXJldHVybiBlLmVycm9yKFwiRGVjb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6IGJtcHN0ciBsZW5ndGggbWlzbWF0Y2hcIik7dmFyIG49XCJcIjtmb3IodmFyIGE9MDthPGkubGVuZ3RoLzI7YSsrKXtuKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGkucmVhZFVJbnQxNkJFKGEqMikpfXJldHVybiBufWVsc2UgaWYodD09PVwibnVtc3RyXCIpe3ZhciBzPWUucmF3KCkudG9TdHJpbmcoXCJhc2NpaVwiKTtpZighdGhpcy5faXNOdW1zdHIocykpe3JldHVybiBlLmVycm9yKFwiRGVjb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6IFwiK1wibnVtc3RyIHVuc3VwcG9ydGVkIGNoYXJhY3RlcnNcIil9cmV0dXJuIHN9ZWxzZSBpZih0PT09XCJvY3RzdHJcIil7cmV0dXJuIGUucmF3KCl9ZWxzZSBpZih0PT09XCJvYmpEZXNjXCIpe3JldHVybiBlLnJhdygpfWVsc2UgaWYodD09PVwicHJpbnRzdHJcIil7dmFyIG89ZS5yYXcoKS50b1N0cmluZyhcImFzY2lpXCIpO2lmKCF0aGlzLl9pc1ByaW50c3RyKG8pKXtyZXR1cm4gZS5lcnJvcihcIkRlY29kaW5nIG9mIHN0cmluZyB0eXBlOiBcIitcInByaW50c3RyIHVuc3VwcG9ydGVkIGNoYXJhY3RlcnNcIil9cmV0dXJuIG99ZWxzZSBpZigvc3RyJC8udGVzdCh0KSl7cmV0dXJuIGUucmF3KCkudG9TdHJpbmcoKX1lbHNle3JldHVybiBlLmVycm9yKFwiRGVjb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6IFwiK3QrXCIgdW5zdXBwb3J0ZWRcIil9fTtERVJOb2RlLnByb3RvdHlwZS5fZGVjb2RlT2JqaWQ9ZnVuY3Rpb24gZGVjb2RlT2JqaWQoZSx0LHIpe3ZhciBpO3ZhciBuPVtdO3ZhciBhPTA7d2hpbGUoIWUuaXNFbXB0eSgpKXt2YXIgcz1lLnJlYWRVSW50OCgpO2E8PD03O2F8PXMmMTI3O2lmKChzJjEyOCk9PT0wKXtuLnB1c2goYSk7YT0wfX1pZihzJjEyOCluLnB1c2goYSk7dmFyIG89blswXS80MHwwO3ZhciBoPW5bMF0lNDA7aWYocilpPW47ZWxzZSBpPVtvLGhdLmNvbmNhdChuLnNsaWNlKDEpKTtpZih0KXt2YXIgdT10W2kuam9pbihcIiBcIildO2lmKHU9PT11bmRlZmluZWQpdT10W2kuam9pbihcIi5cIildO2lmKHUhPT11bmRlZmluZWQpaT11fXJldHVybiBpfTtERVJOb2RlLnByb3RvdHlwZS5fZGVjb2RlVGltZT1mdW5jdGlvbiBkZWNvZGVUaW1lKGUsdCl7dmFyIHI9ZS5yYXcoKS50b1N0cmluZygpO2lmKHQ9PT1cImdlbnRpbWVcIil7dmFyIGk9ci5zbGljZSgwLDQpfDA7dmFyIG49ci5zbGljZSg0LDYpfDA7dmFyIGE9ci5zbGljZSg2LDgpfDA7dmFyIHM9ci5zbGljZSg4LDEwKXwwO3ZhciBvPXIuc2xpY2UoMTAsMTIpfDA7dmFyIGg9ci5zbGljZSgxMiwxNCl8MH1lbHNlIGlmKHQ9PT1cInV0Y3RpbWVcIil7dmFyIGk9ci5zbGljZSgwLDIpfDA7dmFyIG49ci5zbGljZSgyLDQpfDA7dmFyIGE9ci5zbGljZSg0LDYpfDA7dmFyIHM9ci5zbGljZSg2LDgpfDA7dmFyIG89ci5zbGljZSg4LDEwKXwwO3ZhciBoPXIuc2xpY2UoMTAsMTIpfDA7aWYoaTw3MClpPTJlMytpO2Vsc2UgaT0xOTAwK2l9ZWxzZXtyZXR1cm4gZS5lcnJvcihcIkRlY29kaW5nIFwiK3QrXCIgdGltZSBpcyBub3Qgc3VwcG9ydGVkIHlldFwiKX1yZXR1cm4gRGF0ZS5VVEMoaSxuLTEsYSxzLG8saCwwKX07REVSTm9kZS5wcm90b3R5cGUuX2RlY29kZU51bGw9ZnVuY3Rpb24gZGVjb2RlTnVsbChlKXtyZXR1cm4gbnVsbH07REVSTm9kZS5wcm90b3R5cGUuX2RlY29kZUJvb2w9ZnVuY3Rpb24gZGVjb2RlQm9vbChlKXt2YXIgdD1lLnJlYWRVSW50OCgpO2lmKGUuaXNFcnJvcih0KSlyZXR1cm4gdDtlbHNlIHJldHVybiB0IT09MH07REVSTm9kZS5wcm90b3R5cGUuX2RlY29kZUludD1mdW5jdGlvbiBkZWNvZGVJbnQoZSx0KXt2YXIgcj1lLnJhdygpO3ZhciBpPW5ldyBzKHIpO2lmKHQpaT10W2kudG9TdHJpbmcoMTApXXx8aTtyZXR1cm4gaX07REVSTm9kZS5wcm90b3R5cGUuX3VzZT1mdW5jdGlvbiB1c2UoZSx0KXtpZih0eXBlb2YgZT09PVwiZnVuY3Rpb25cIillPWUodCk7cmV0dXJuIGUuX2dldERlY29kZXIoXCJkZXJcIikudHJlZX07ZnVuY3Rpb24gZGVyRGVjb2RlVGFnKGUsdCl7dmFyIHI9ZS5yZWFkVUludDgodCk7aWYoZS5pc0Vycm9yKHIpKXJldHVybiByO3ZhciBpPW8udGFnQ2xhc3Nbcj4+Nl07dmFyIG49KHImMzIpPT09MDtpZigociYzMSk9PT0zMSl7dmFyIGE9cjtyPTA7d2hpbGUoKGEmMTI4KT09PTEyOCl7YT1lLnJlYWRVSW50OCh0KTtpZihlLmlzRXJyb3IoYSkpcmV0dXJuIGE7cjw8PTc7cnw9YSYxMjd9fWVsc2V7ciY9MzF9dmFyIHM9by50YWdbcl07cmV0dXJue2NsczppLHByaW1pdGl2ZTpuLHRhZzpyLHRhZ1N0cjpzfX1mdW5jdGlvbiBkZXJEZWNvZGVMZW4oZSx0LHIpe3ZhciBpPWUucmVhZFVJbnQ4KHIpO2lmKGUuaXNFcnJvcihpKSlyZXR1cm4gaTtpZighdCYmaT09PTEyOClyZXR1cm4gbnVsbDtpZigoaSYxMjgpPT09MCl7cmV0dXJuIGl9dmFyIG49aSYxMjc7aWYobj40KXJldHVybiBlLmVycm9yKFwibGVuZ3RoIG9jdGVjdCBpcyB0b28gbG9uZ1wiKTtpPTA7Zm9yKHZhciBhPTA7YTxuO2ErKyl7aTw8PTg7dmFyIHM9ZS5yZWFkVUludDgocik7aWYoZS5pc0Vycm9yKHMpKXJldHVybiBzO2l8PXN9cmV0dXJuIGl9fSw2NzAxOmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT10O2kuZGVyPXIoMjI1OSk7aS5wZW09cig4NTI3KX0sODUyNzpmdW5jdGlvbihlLHQscil7dmFyIGk9cigzNzgyKTt2YXIgbj1yKDQzMDApLkJ1ZmZlcjt2YXIgYT1yKDIyNTkpO2Z1bmN0aW9uIFBFTURlY29kZXIoZSl7YS5jYWxsKHRoaXMsZSk7dGhpcy5lbmM9XCJwZW1cIn1pKFBFTURlY29kZXIsYSk7ZS5leHBvcnRzPVBFTURlY29kZXI7UEVNRGVjb2Rlci5wcm90b3R5cGUuZGVjb2RlPWZ1bmN0aW9uIGRlY29kZShlLHQpe3ZhciByPWUudG9TdHJpbmcoKS5zcGxpdCgvW1xcclxcbl0rL2cpO3ZhciBpPXQubGFiZWwudG9VcHBlckNhc2UoKTt2YXIgcz0vXi0tLS0tKEJFR0lOfEVORCkgKFteLV0rKS0tLS0tJC87dmFyIG89LTE7dmFyIGg9LTE7Zm9yKHZhciB1PTA7dTxyLmxlbmd0aDt1Kyspe3ZhciBkPXJbdV0ubWF0Y2gocyk7aWYoZD09PW51bGwpY29udGludWU7aWYoZFsyXSE9PWkpY29udGludWU7aWYobz09PS0xKXtpZihkWzFdIT09XCJCRUdJTlwiKWJyZWFrO289dX1lbHNle2lmKGRbMV0hPT1cIkVORFwiKWJyZWFrO2g9dTticmVha319aWYobz09PS0xfHxoPT09LTEpdGhyb3cgbmV3IEVycm9yKFwiUEVNIHNlY3Rpb24gbm90IGZvdW5kIGZvcjogXCIraSk7dmFyIGM9ci5zbGljZShvKzEsaCkuam9pbihcIlwiKTtjLnJlcGxhY2UoL1teYS16MC05XFwrXFwvPV0rL2dpLFwiXCIpO3ZhciBsPW5ldyBuKGMsXCJiYXNlNjRcIik7cmV0dXJuIGEucHJvdG90eXBlLmRlY29kZS5jYWxsKHRoaXMsbCx0KX19LDc4MDQ6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoMzc4Mik7dmFyIG49cig0MzAwKS5CdWZmZXI7dmFyIGE9cig3MTYwKTt2YXIgcz1hLmJhc2U7dmFyIG89YS5jb25zdGFudHMuZGVyO2Z1bmN0aW9uIERFUkVuY29kZXIoZSl7dGhpcy5lbmM9XCJkZXJcIjt0aGlzLm5hbWU9ZS5uYW1lO3RoaXMuZW50aXR5PWU7dGhpcy50cmVlPW5ldyBERVJOb2RlO3RoaXMudHJlZS5faW5pdChlLmJvZHkpfWUuZXhwb3J0cz1ERVJFbmNvZGVyO0RFUkVuY29kZXIucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbiBlbmNvZGUoZSx0KXtyZXR1cm4gdGhpcy50cmVlLl9lbmNvZGUoZSx0KS5qb2luKCl9O2Z1bmN0aW9uIERFUk5vZGUoZSl7cy5Ob2RlLmNhbGwodGhpcyxcImRlclwiLGUpfWkoREVSTm9kZSxzLk5vZGUpO0RFUk5vZGUucHJvdG90eXBlLl9lbmNvZGVDb21wb3NpdGU9ZnVuY3Rpb24gZW5jb2RlQ29tcG9zaXRlKGUsdCxyLGkpe3ZhciBhPWVuY29kZVRhZyhlLHQscix0aGlzLnJlcG9ydGVyKTtpZihpLmxlbmd0aDwxMjgpe3ZhciBzPW5ldyBuKDIpO3NbMF09YTtzWzFdPWkubGVuZ3RoO3JldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKFtzLGldKX12YXIgbz0xO2Zvcih2YXIgaD1pLmxlbmd0aDtoPj0yNTY7aD4+PTgpbysrO3ZhciBzPW5ldyBuKDErMStvKTtzWzBdPWE7c1sxXT0xMjh8bztmb3IodmFyIGg9MStvLHU9aS5sZW5ndGg7dT4wO2gtLSx1Pj49OClzW2hdPXUmMjU1O3JldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKFtzLGldKX07REVSTm9kZS5wcm90b3R5cGUuX2VuY29kZVN0cj1mdW5jdGlvbiBlbmNvZGVTdHIoZSx0KXtpZih0PT09XCJiaXRzdHJcIil7cmV0dXJuIHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIoW2UudW51c2VkfDAsZS5kYXRhXSl9ZWxzZSBpZih0PT09XCJibXBzdHJcIil7dmFyIHI9bmV3IG4oZS5sZW5ndGgqMik7Zm9yKHZhciBpPTA7aTxlLmxlbmd0aDtpKyspe3Iud3JpdGVVSW50MTZCRShlLmNoYXJDb2RlQXQoaSksaSoyKX1yZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihyKX1lbHNlIGlmKHQ9PT1cIm51bXN0clwiKXtpZighdGhpcy5faXNOdW1zdHIoZSkpe3JldHVybiB0aGlzLnJlcG9ydGVyLmVycm9yKFwiRW5jb2Rpbmcgb2Ygc3RyaW5nIHR5cGU6IG51bXN0ciBzdXBwb3J0cyBcIitcIm9ubHkgZGlnaXRzIGFuZCBzcGFjZVwiKX1yZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihlKX1lbHNlIGlmKHQ9PT1cInByaW50c3RyXCIpe2lmKCF0aGlzLl9pc1ByaW50c3RyKGUpKXtyZXR1cm4gdGhpcy5yZXBvcnRlci5lcnJvcihcIkVuY29kaW5nIG9mIHN0cmluZyB0eXBlOiBwcmludHN0ciBzdXBwb3J0cyBcIitcIm9ubHkgbGF0aW4gdXBwZXIgYW5kIGxvd2VyIGNhc2UgbGV0dGVycywgXCIrXCJkaWdpdHMsIHNwYWNlLCBhcG9zdHJvcGhlLCBsZWZ0IGFuZCByaWd0aCBcIitcInBhcmVudGhlc2lzLCBwbHVzIHNpZ24sIGNvbW1hLCBoeXBoZW4sIFwiK1wiZG90LCBzbGFzaCwgY29sb24sIGVxdWFsIHNpZ24sIFwiK1wicXVlc3Rpb24gbWFya1wiKX1yZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihlKX1lbHNlIGlmKC9zdHIkLy50ZXN0KHQpKXtyZXR1cm4gdGhpcy5fY3JlYXRlRW5jb2RlckJ1ZmZlcihlKX1lbHNlIGlmKHQ9PT1cIm9iakRlc2NcIil7cmV0dXJuIHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIoZSl9ZWxzZXtyZXR1cm4gdGhpcy5yZXBvcnRlci5lcnJvcihcIkVuY29kaW5nIG9mIHN0cmluZyB0eXBlOiBcIit0K1wiIHVuc3VwcG9ydGVkXCIpfX07REVSTm9kZS5wcm90b3R5cGUuX2VuY29kZU9iamlkPWZ1bmN0aW9uIGVuY29kZU9iamlkKGUsdCxyKXtpZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe2lmKCF0KXJldHVybiB0aGlzLnJlcG9ydGVyLmVycm9yKFwic3RyaW5nIG9iamlkIGdpdmVuLCBidXQgbm8gdmFsdWVzIG1hcCBmb3VuZFwiKTtpZighdC5oYXNPd25Qcm9wZXJ0eShlKSlyZXR1cm4gdGhpcy5yZXBvcnRlci5lcnJvcihcIm9iamlkIG5vdCBmb3VuZCBpbiB2YWx1ZXMgbWFwXCIpO2U9dFtlXS5zcGxpdCgvW1xcc1xcLl0rL2cpO2Zvcih2YXIgaT0wO2k8ZS5sZW5ndGg7aSsrKWVbaV18PTB9ZWxzZSBpZihBcnJheS5pc0FycmF5KGUpKXtlPWUuc2xpY2UoKTtmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKyllW2ldfD0wfWlmKCFBcnJheS5pc0FycmF5KGUpKXtyZXR1cm4gdGhpcy5yZXBvcnRlci5lcnJvcihcIm9iamlkKCkgc2hvdWxkIGJlIGVpdGhlciBhcnJheSBvciBzdHJpbmcsIFwiK1wiZ290OiBcIitKU09OLnN0cmluZ2lmeShlKSl9aWYoIXIpe2lmKGVbMV0+PTQwKXJldHVybiB0aGlzLnJlcG9ydGVyLmVycm9yKFwiU2Vjb25kIG9iamlkIGlkZW50aWZpZXIgT09CXCIpO2Uuc3BsaWNlKDAsMixlWzBdKjQwK2VbMV0pfXZhciBhPTA7Zm9yKHZhciBpPTA7aTxlLmxlbmd0aDtpKyspe3ZhciBzPWVbaV07Zm9yKGErKztzPj0xMjg7cz4+PTcpYSsrfXZhciBvPW5ldyBuKGEpO3ZhciBoPW8ubGVuZ3RoLTE7Zm9yKHZhciBpPWUubGVuZ3RoLTE7aT49MDtpLS0pe3ZhciBzPWVbaV07b1toLS1dPXMmMTI3O3doaWxlKChzPj49Nyk+MClvW2gtLV09MTI4fHMmMTI3fXJldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKG8pfTtmdW5jdGlvbiB0d28oZSl7aWYoZTwxMClyZXR1cm5cIjBcIitlO2Vsc2UgcmV0dXJuIGV9REVSTm9kZS5wcm90b3R5cGUuX2VuY29kZVRpbWU9ZnVuY3Rpb24gZW5jb2RlVGltZShlLHQpe3ZhciByO3ZhciBpPW5ldyBEYXRlKGUpO2lmKHQ9PT1cImdlbnRpbWVcIil7cj1bdHdvKGkuZ2V0RnVsbFllYXIoKSksdHdvKGkuZ2V0VVRDTW9udGgoKSsxKSx0d28oaS5nZXRVVENEYXRlKCkpLHR3byhpLmdldFVUQ0hvdXJzKCkpLHR3byhpLmdldFVUQ01pbnV0ZXMoKSksdHdvKGkuZ2V0VVRDU2Vjb25kcygpKSxcIlpcIl0uam9pbihcIlwiKX1lbHNlIGlmKHQ9PT1cInV0Y3RpbWVcIil7cj1bdHdvKGkuZ2V0RnVsbFllYXIoKSUxMDApLHR3byhpLmdldFVUQ01vbnRoKCkrMSksdHdvKGkuZ2V0VVRDRGF0ZSgpKSx0d28oaS5nZXRVVENIb3VycygpKSx0d28oaS5nZXRVVENNaW51dGVzKCkpLHR3byhpLmdldFVUQ1NlY29uZHMoKSksXCJaXCJdLmpvaW4oXCJcIil9ZWxzZXt0aGlzLnJlcG9ydGVyLmVycm9yKFwiRW5jb2RpbmcgXCIrdCtcIiB0aW1lIGlzIG5vdCBzdXBwb3J0ZWQgeWV0XCIpfXJldHVybiB0aGlzLl9lbmNvZGVTdHIocixcIm9jdHN0clwiKX07REVSTm9kZS5wcm90b3R5cGUuX2VuY29kZU51bGw9ZnVuY3Rpb24gZW5jb2RlTnVsbCgpe3JldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKFwiXCIpfTtERVJOb2RlLnByb3RvdHlwZS5fZW5jb2RlSW50PWZ1bmN0aW9uIGVuY29kZUludChlLHQpe2lmKHR5cGVvZiBlPT09XCJzdHJpbmdcIil7aWYoIXQpcmV0dXJuIHRoaXMucmVwb3J0ZXIuZXJyb3IoXCJTdHJpbmcgaW50IG9yIGVudW0gZ2l2ZW4sIGJ1dCBubyB2YWx1ZXMgbWFwXCIpO2lmKCF0Lmhhc093blByb3BlcnR5KGUpKXtyZXR1cm4gdGhpcy5yZXBvcnRlci5lcnJvcihcIlZhbHVlcyBtYXAgZG9lc24ndCBjb250YWluOiBcIitKU09OLnN0cmluZ2lmeShlKSl9ZT10W2VdfWlmKHR5cGVvZiBlIT09XCJudW1iZXJcIiYmIW4uaXNCdWZmZXIoZSkpe3ZhciByPWUudG9BcnJheSgpO2lmKCFlLnNpZ24mJnJbMF0mMTI4KXtyLnVuc2hpZnQoMCl9ZT1uZXcgbihyKX1pZihuLmlzQnVmZmVyKGUpKXt2YXIgaT1lLmxlbmd0aDtpZihlLmxlbmd0aD09PTApaSsrO3ZhciBhPW5ldyBuKGkpO2UuY29weShhKTtpZihlLmxlbmd0aD09PTApYVswXT0wO3JldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKGEpfWlmKGU8MTI4KXJldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKGUpO2lmKGU8MjU2KXJldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKFswLGVdKTt2YXIgaT0xO2Zvcih2YXIgcz1lO3M+PTI1NjtzPj49OClpKys7dmFyIGE9bmV3IEFycmF5KGkpO2Zvcih2YXIgcz1hLmxlbmd0aC0xO3M+PTA7cy0tKXthW3NdPWUmMjU1O2U+Pj04fWlmKGFbMF0mMTI4KXthLnVuc2hpZnQoMCl9cmV0dXJuIHRoaXMuX2NyZWF0ZUVuY29kZXJCdWZmZXIobmV3IG4oYSkpfTtERVJOb2RlLnByb3RvdHlwZS5fZW5jb2RlQm9vbD1mdW5jdGlvbiBlbmNvZGVCb29sKGUpe3JldHVybiB0aGlzLl9jcmVhdGVFbmNvZGVyQnVmZmVyKGU/MjU1OjApfTtERVJOb2RlLnByb3RvdHlwZS5fdXNlPWZ1bmN0aW9uIHVzZShlLHQpe2lmKHR5cGVvZiBlPT09XCJmdW5jdGlvblwiKWU9ZSh0KTtyZXR1cm4gZS5fZ2V0RW5jb2RlcihcImRlclwiKS50cmVlfTtERVJOb2RlLnByb3RvdHlwZS5fc2tpcERlZmF1bHQ9ZnVuY3Rpb24gc2tpcERlZmF1bHQoZSx0LHIpe3ZhciBpPXRoaXMuX2Jhc2VTdGF0ZTt2YXIgbjtpZihpW1wiZGVmYXVsdFwiXT09PW51bGwpcmV0dXJuIGZhbHNlO3ZhciBhPWUuam9pbigpO2lmKGkuZGVmYXVsdEJ1ZmZlcj09PXVuZGVmaW5lZClpLmRlZmF1bHRCdWZmZXI9dGhpcy5fZW5jb2RlVmFsdWUoaVtcImRlZmF1bHRcIl0sdCxyKS5qb2luKCk7aWYoYS5sZW5ndGghPT1pLmRlZmF1bHRCdWZmZXIubGVuZ3RoKXJldHVybiBmYWxzZTtmb3Iobj0wO248YS5sZW5ndGg7bisrKWlmKGFbbl0hPT1pLmRlZmF1bHRCdWZmZXJbbl0pcmV0dXJuIGZhbHNlO3JldHVybiB0cnVlfTtmdW5jdGlvbiBlbmNvZGVUYWcoZSx0LHIsaSl7dmFyIG47aWYoZT09PVwic2Vxb2ZcIillPVwic2VxXCI7ZWxzZSBpZihlPT09XCJzZXRvZlwiKWU9XCJzZXRcIjtpZihvLnRhZ0J5TmFtZS5oYXNPd25Qcm9wZXJ0eShlKSluPW8udGFnQnlOYW1lW2VdO2Vsc2UgaWYodHlwZW9mIGU9PT1cIm51bWJlclwiJiYoZXwwKT09PWUpbj1lO2Vsc2UgcmV0dXJuIGkuZXJyb3IoXCJVbmtub3duIHRhZzogXCIrZSk7aWYobj49MzEpcmV0dXJuIGkuZXJyb3IoXCJNdWx0aS1vY3RldCB0YWcgZW5jb2RpbmcgdW5zdXBwb3J0ZWRcIik7aWYoIXQpbnw9MzI7bnw9by50YWdDbGFzc0J5TmFtZVtyfHxcInVuaXZlcnNhbFwiXTw8NjtyZXR1cm4gbn19LDM0MTg6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXQ7aS5kZXI9cig3ODA0KTtpLnBlbT1yKDE1NjQpfSwxNTY0OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDM3ODIpO3ZhciBuPXIoNzgwNCk7ZnVuY3Rpb24gUEVNRW5jb2RlcihlKXtuLmNhbGwodGhpcyxlKTt0aGlzLmVuYz1cInBlbVwifWkoUEVNRW5jb2RlcixuKTtlLmV4cG9ydHM9UEVNRW5jb2RlcjtQRU1FbmNvZGVyLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24gZW5jb2RlKGUsdCl7dmFyIHI9bi5wcm90b3R5cGUuZW5jb2RlLmNhbGwodGhpcyxlKTt2YXIgaT1yLnRvU3RyaW5nKFwiYmFzZTY0XCIpO3ZhciBhPVtcIi0tLS0tQkVHSU4gXCIrdC5sYWJlbCtcIi0tLS0tXCJdO2Zvcih2YXIgcz0wO3M8aS5sZW5ndGg7cys9NjQpYS5wdXNoKGkuc2xpY2UocyxzKzY0KSk7YS5wdXNoKFwiLS0tLS1FTkQgXCIrdC5sYWJlbCtcIi0tLS0tXCIpO3JldHVybiBhLmpvaW4oXCJcXG5cIil9fSw3MTE6ZnVuY3Rpb24oZSx0LHIpe2U9ci5ubWQoZSk7KGZ1bmN0aW9uKGUsdCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYXNzZXJ0KGUsdCl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKHR8fFwiQXNzZXJ0aW9uIGZhaWxlZFwiKX1mdW5jdGlvbiBpbmhlcml0cyhlLHQpe2Uuc3VwZXJfPXQ7dmFyIFRlbXBDdG9yPWZ1bmN0aW9uKCl7fTtUZW1wQ3Rvci5wcm90b3R5cGU9dC5wcm90b3R5cGU7ZS5wcm90b3R5cGU9bmV3IFRlbXBDdG9yO2UucHJvdG90eXBlLmNvbnN0cnVjdG9yPWV9ZnVuY3Rpb24gQk4oZSx0LHIpe2lmKEJOLmlzQk4oZSkpe3JldHVybiBlfXRoaXMubmVnYXRpdmU9MDt0aGlzLndvcmRzPW51bGw7dGhpcy5sZW5ndGg9MDt0aGlzLnJlZD1udWxsO2lmKGUhPT1udWxsKXtpZih0PT09XCJsZVwifHx0PT09XCJiZVwiKXtyPXQ7dD0xMH10aGlzLl9pbml0KGV8fDAsdHx8MTAscnx8XCJiZVwiKX19aWYodHlwZW9mIGU9PT1cIm9iamVjdFwiKXtlLmV4cG9ydHM9Qk59ZWxzZXt0LkJOPUJOfUJOLkJOPUJOO0JOLndvcmRTaXplPTI2O3ZhciBpO3RyeXtpPXIoNDMwMCkuQnVmZmVyfWNhdGNoKGUpe31CTi5pc0JOPWZ1bmN0aW9uIGlzQk4oZSl7aWYoZSBpbnN0YW5jZW9mIEJOKXtyZXR1cm4gdHJ1ZX1yZXR1cm4gZSE9PW51bGwmJnR5cGVvZiBlPT09XCJvYmplY3RcIiYmZS5jb25zdHJ1Y3Rvci53b3JkU2l6ZT09PUJOLndvcmRTaXplJiZBcnJheS5pc0FycmF5KGUud29yZHMpfTtCTi5tYXg9ZnVuY3Rpb24gbWF4KGUsdCl7aWYoZS5jbXAodCk+MClyZXR1cm4gZTtyZXR1cm4gdH07Qk4ubWluPWZ1bmN0aW9uIG1pbihlLHQpe2lmKGUuY21wKHQpPDApcmV0dXJuIGU7cmV0dXJuIHR9O0JOLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbiBpbml0KGUsdCxyKXtpZih0eXBlb2YgZT09PVwibnVtYmVyXCIpe3JldHVybiB0aGlzLl9pbml0TnVtYmVyKGUsdCxyKX1pZih0eXBlb2YgZT09PVwib2JqZWN0XCIpe3JldHVybiB0aGlzLl9pbml0QXJyYXkoZSx0LHIpfWlmKHQ9PT1cImhleFwiKXt0PTE2fWFzc2VydCh0PT09KHR8MCkmJnQ+PTImJnQ8PTM2KTtlPWUudG9TdHJpbmcoKS5yZXBsYWNlKC9cXHMrL2csXCJcIik7dmFyIGk9MDtpZihlWzBdPT09XCItXCIpe2krK31pZih0PT09MTYpe3RoaXMuX3BhcnNlSGV4KGUsaSl9ZWxzZXt0aGlzLl9wYXJzZUJhc2UoZSx0LGkpfWlmKGVbMF09PT1cIi1cIil7dGhpcy5uZWdhdGl2ZT0xfXRoaXMuc3RyaXAoKTtpZihyIT09XCJsZVwiKXJldHVybjt0aGlzLl9pbml0QXJyYXkodGhpcy50b0FycmF5KCksdCxyKX07Qk4ucHJvdG90eXBlLl9pbml0TnVtYmVyPWZ1bmN0aW9uIF9pbml0TnVtYmVyKGUsdCxyKXtpZihlPDApe3RoaXMubmVnYXRpdmU9MTtlPS1lfWlmKGU8NjcxMDg4NjQpe3RoaXMud29yZHM9W2UmNjcxMDg4NjNdO3RoaXMubGVuZ3RoPTF9ZWxzZSBpZihlPDQ1MDM1OTk2MjczNzA0OTYpe3RoaXMud29yZHM9W2UmNjcxMDg4NjMsZS82NzEwODg2NCY2NzEwODg2M107dGhpcy5sZW5ndGg9Mn1lbHNle2Fzc2VydChlPDkwMDcxOTkyNTQ3NDA5OTIpO3RoaXMud29yZHM9W2UmNjcxMDg4NjMsZS82NzEwODg2NCY2NzEwODg2MywxXTt0aGlzLmxlbmd0aD0zfWlmKHIhPT1cImxlXCIpcmV0dXJuO3RoaXMuX2luaXRBcnJheSh0aGlzLnRvQXJyYXkoKSx0LHIpfTtCTi5wcm90b3R5cGUuX2luaXRBcnJheT1mdW5jdGlvbiBfaW5pdEFycmF5KGUsdCxyKXthc3NlcnQodHlwZW9mIGUubGVuZ3RoPT09XCJudW1iZXJcIik7aWYoZS5sZW5ndGg8PTApe3RoaXMud29yZHM9WzBdO3RoaXMubGVuZ3RoPTE7cmV0dXJuIHRoaXN9dGhpcy5sZW5ndGg9TWF0aC5jZWlsKGUubGVuZ3RoLzMpO3RoaXMud29yZHM9bmV3IEFycmF5KHRoaXMubGVuZ3RoKTtmb3IodmFyIGk9MDtpPHRoaXMubGVuZ3RoO2krKyl7dGhpcy53b3Jkc1tpXT0wfXZhciBuLGE7dmFyIHM9MDtpZihyPT09XCJiZVwiKXtmb3IoaT1lLmxlbmd0aC0xLG49MDtpPj0wO2ktPTMpe2E9ZVtpXXxlW2ktMV08PDh8ZVtpLTJdPDwxNjt0aGlzLndvcmRzW25dfD1hPDxzJjY3MTA4ODYzO3RoaXMud29yZHNbbisxXT1hPj4+MjYtcyY2NzEwODg2MztzKz0yNDtpZihzPj0yNil7cy09MjY7bisrfX19ZWxzZSBpZihyPT09XCJsZVwiKXtmb3IoaT0wLG49MDtpPGUubGVuZ3RoO2krPTMpe2E9ZVtpXXxlW2krMV08PDh8ZVtpKzJdPDwxNjt0aGlzLndvcmRzW25dfD1hPDxzJjY3MTA4ODYzO3RoaXMud29yZHNbbisxXT1hPj4+MjYtcyY2NzEwODg2MztzKz0yNDtpZihzPj0yNil7cy09MjY7bisrfX19cmV0dXJuIHRoaXMuc3RyaXAoKX07ZnVuY3Rpb24gcGFyc2VIZXgoZSx0LHIpe3ZhciBpPTA7dmFyIG49TWF0aC5taW4oZS5sZW5ndGgscik7Zm9yKHZhciBhPXQ7YTxuO2ErKyl7dmFyIHM9ZS5jaGFyQ29kZUF0KGEpLTQ4O2k8PD00O2lmKHM+PTQ5JiZzPD01NCl7aXw9cy00OSsxMH1lbHNlIGlmKHM+PTE3JiZzPD0yMil7aXw9cy0xNysxMH1lbHNle2l8PXMmMTV9fXJldHVybiBpfUJOLnByb3RvdHlwZS5fcGFyc2VIZXg9ZnVuY3Rpb24gX3BhcnNlSGV4KGUsdCl7dGhpcy5sZW5ndGg9TWF0aC5jZWlsKChlLmxlbmd0aC10KS82KTt0aGlzLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCk7Zm9yKHZhciByPTA7cjx0aGlzLmxlbmd0aDtyKyspe3RoaXMud29yZHNbcl09MH12YXIgaSxuO3ZhciBhPTA7Zm9yKHI9ZS5sZW5ndGgtNixpPTA7cj49dDtyLT02KXtuPXBhcnNlSGV4KGUscixyKzYpO3RoaXMud29yZHNbaV18PW48PGEmNjcxMDg4NjM7dGhpcy53b3Jkc1tpKzFdfD1uPj4+MjYtYSY0MTk0MzAzO2ErPTI0O2lmKGE+PTI2KXthLT0yNjtpKyt9fWlmKHIrNiE9PXQpe249cGFyc2VIZXgoZSx0LHIrNik7dGhpcy53b3Jkc1tpXXw9bjw8YSY2NzEwODg2Mzt0aGlzLndvcmRzW2krMV18PW4+Pj4yNi1hJjQxOTQzMDN9dGhpcy5zdHJpcCgpfTtmdW5jdGlvbiBwYXJzZUJhc2UoZSx0LHIsaSl7dmFyIG49MDt2YXIgYT1NYXRoLm1pbihlLmxlbmd0aCxyKTtmb3IodmFyIHM9dDtzPGE7cysrKXt2YXIgbz1lLmNoYXJDb2RlQXQocyktNDg7bio9aTtpZihvPj00OSl7bis9by00OSsxMH1lbHNlIGlmKG8+PTE3KXtuKz1vLTE3KzEwfWVsc2V7bis9b319cmV0dXJuIG59Qk4ucHJvdG90eXBlLl9wYXJzZUJhc2U9ZnVuY3Rpb24gX3BhcnNlQmFzZShlLHQscil7dGhpcy53b3Jkcz1bMF07dGhpcy5sZW5ndGg9MTtmb3IodmFyIGk9MCxuPTE7bjw9NjcxMDg4NjM7bio9dCl7aSsrfWktLTtuPW4vdHwwO3ZhciBhPWUubGVuZ3RoLXI7dmFyIHM9YSVpO3ZhciBvPU1hdGgubWluKGEsYS1zKStyO3ZhciBoPTA7Zm9yKHZhciB1PXI7dTxvO3UrPWkpe2g9cGFyc2VCYXNlKGUsdSx1K2ksdCk7dGhpcy5pbXVsbihuKTtpZih0aGlzLndvcmRzWzBdK2g8NjcxMDg4NjQpe3RoaXMud29yZHNbMF0rPWh9ZWxzZXt0aGlzLl9pYWRkbihoKX19aWYocyE9PTApe3ZhciBkPTE7aD1wYXJzZUJhc2UoZSx1LGUubGVuZ3RoLHQpO2Zvcih1PTA7dTxzO3UrKyl7ZCo9dH10aGlzLmltdWxuKGQpO2lmKHRoaXMud29yZHNbMF0raDw2NzEwODg2NCl7dGhpcy53b3Jkc1swXSs9aH1lbHNle3RoaXMuX2lhZGRuKGgpfX19O0JOLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uIGNvcHkoZSl7ZS53b3Jkcz1uZXcgQXJyYXkodGhpcy5sZW5ndGgpO2Zvcih2YXIgdD0wO3Q8dGhpcy5sZW5ndGg7dCsrKXtlLndvcmRzW3RdPXRoaXMud29yZHNbdF19ZS5sZW5ndGg9dGhpcy5sZW5ndGg7ZS5uZWdhdGl2ZT10aGlzLm5lZ2F0aXZlO2UucmVkPXRoaXMucmVkfTtCTi5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24gY2xvbmUoKXt2YXIgZT1uZXcgQk4obnVsbCk7dGhpcy5jb3B5KGUpO3JldHVybiBlfTtCTi5wcm90b3R5cGUuX2V4cGFuZD1mdW5jdGlvbiBfZXhwYW5kKGUpe3doaWxlKHRoaXMubGVuZ3RoPGUpe3RoaXMud29yZHNbdGhpcy5sZW5ndGgrK109MH1yZXR1cm4gdGhpc307Qk4ucHJvdG90eXBlLnN0cmlwPWZ1bmN0aW9uIHN0cmlwKCl7d2hpbGUodGhpcy5sZW5ndGg+MSYmdGhpcy53b3Jkc1t0aGlzLmxlbmd0aC0xXT09PTApe3RoaXMubGVuZ3RoLS19cmV0dXJuIHRoaXMuX25vcm1TaWduKCl9O0JOLnByb3RvdHlwZS5fbm9ybVNpZ249ZnVuY3Rpb24gX25vcm1TaWduKCl7aWYodGhpcy5sZW5ndGg9PT0xJiZ0aGlzLndvcmRzWzBdPT09MCl7dGhpcy5uZWdhdGl2ZT0wfXJldHVybiB0aGlzfTtCTi5wcm90b3R5cGUuaW5zcGVjdD1mdW5jdGlvbiBpbnNwZWN0KCl7cmV0dXJuKHRoaXMucmVkP1wiPEJOLVI6IFwiOlwiPEJOOiBcIikrdGhpcy50b1N0cmluZygxNikrXCI+XCJ9O3ZhciBuPVtcIlwiLFwiMFwiLFwiMDBcIixcIjAwMFwiLFwiMDAwMFwiLFwiMDAwMDBcIixcIjAwMDAwMFwiLFwiMDAwMDAwMFwiLFwiMDAwMDAwMDBcIixcIjAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDBcIixcIjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiXTt2YXIgYT1bMCwwLDI1LDE2LDEyLDExLDEwLDksOCw4LDcsNyw3LDcsNiw2LDYsNiw2LDYsNiw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1XTt2YXIgcz1bMCwwLDMzNTU0NDMyLDQzMDQ2NzIxLDE2Nzc3MjE2LDQ4ODI4MTI1LDYwNDY2MTc2LDQwMzUzNjA3LDE2Nzc3MjE2LDQzMDQ2NzIxLDFlNywxOTQ4NzE3MSwzNTgzMTgwOCw2Mjc0ODUxNyw3NTI5NTM2LDExMzkwNjI1LDE2Nzc3MjE2LDI0MTM3NTY5LDM0MDEyMjI0LDQ3MDQ1ODgxLDY0ZTYsNDA4NDEwMSw1MTUzNjMyLDY0MzYzNDMsNzk2MjYyNCw5NzY1NjI1LDExODgxMzc2LDE0MzQ4OTA3LDE3MjEwMzY4LDIwNTExMTQ5LDI0M2U1LDI4NjI5MTUxLDMzNTU0NDMyLDM5MTM1MzkzLDQ1NDM1NDI0LDUyNTIxODc1LDYwNDY2MTc2XTtCTi5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24gdG9TdHJpbmcoZSx0KXtlPWV8fDEwO3Q9dHwwfHwxO3ZhciByO2lmKGU9PT0xNnx8ZT09PVwiaGV4XCIpe3I9XCJcIjt2YXIgaT0wO3ZhciBvPTA7Zm9yKHZhciBoPTA7aDx0aGlzLmxlbmd0aDtoKyspe3ZhciB1PXRoaXMud29yZHNbaF07dmFyIGQ9KCh1PDxpfG8pJjE2Nzc3MjE1KS50b1N0cmluZygxNik7bz11Pj4+MjQtaSYxNjc3NzIxNTtpZihvIT09MHx8aCE9PXRoaXMubGVuZ3RoLTEpe3I9bls2LWQubGVuZ3RoXStkK3J9ZWxzZXtyPWQrcn1pKz0yO2lmKGk+PTI2KXtpLT0yNjtoLS19fWlmKG8hPT0wKXtyPW8udG9TdHJpbmcoMTYpK3J9d2hpbGUoci5sZW5ndGgldCE9PTApe3I9XCIwXCIrcn1pZih0aGlzLm5lZ2F0aXZlIT09MCl7cj1cIi1cIityfXJldHVybiByfWlmKGU9PT0oZXwwKSYmZT49MiYmZTw9MzYpe3ZhciBjPWFbZV07dmFyIGw9c1tlXTtyPVwiXCI7dmFyIHA9dGhpcy5jbG9uZSgpO3AubmVnYXRpdmU9MDt3aGlsZSghcC5pc1plcm8oKSl7dmFyIHY9cC5tb2RuKGwpLnRvU3RyaW5nKGUpO3A9cC5pZGl2bihsKTtpZighcC5pc1plcm8oKSl7cj1uW2Mtdi5sZW5ndGhdK3Yrcn1lbHNle3I9dityfX1pZih0aGlzLmlzWmVybygpKXtyPVwiMFwiK3J9d2hpbGUoci5sZW5ndGgldCE9PTApe3I9XCIwXCIrcn1pZih0aGlzLm5lZ2F0aXZlIT09MCl7cj1cIi1cIityfXJldHVybiByfWFzc2VydChmYWxzZSxcIkJhc2Ugc2hvdWxkIGJlIGJldHdlZW4gMiBhbmQgMzZcIil9O0JOLnByb3RvdHlwZS50b051bWJlcj1mdW5jdGlvbiB0b051bWJlcigpe3ZhciBlPXRoaXMud29yZHNbMF07aWYodGhpcy5sZW5ndGg9PT0yKXtlKz10aGlzLndvcmRzWzFdKjY3MTA4ODY0fWVsc2UgaWYodGhpcy5sZW5ndGg9PT0zJiZ0aGlzLndvcmRzWzJdPT09MSl7ZSs9NDUwMzU5OTYyNzM3MDQ5Nit0aGlzLndvcmRzWzFdKjY3MTA4ODY0fWVsc2UgaWYodGhpcy5sZW5ndGg+Mil7YXNzZXJ0KGZhbHNlLFwiTnVtYmVyIGNhbiBvbmx5IHNhZmVseSBzdG9yZSB1cCB0byA1MyBiaXRzXCIpfXJldHVybiB0aGlzLm5lZ2F0aXZlIT09MD8tZTplfTtCTi5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uIHRvSlNPTigpe3JldHVybiB0aGlzLnRvU3RyaW5nKDE2KX07Qk4ucHJvdG90eXBlLnRvQnVmZmVyPWZ1bmN0aW9uIHRvQnVmZmVyKGUsdCl7YXNzZXJ0KHR5cGVvZiBpIT09XCJ1bmRlZmluZWRcIik7cmV0dXJuIHRoaXMudG9BcnJheUxpa2UoaSxlLHQpfTtCTi5wcm90b3R5cGUudG9BcnJheT1mdW5jdGlvbiB0b0FycmF5KGUsdCl7cmV0dXJuIHRoaXMudG9BcnJheUxpa2UoQXJyYXksZSx0KX07Qk4ucHJvdG90eXBlLnRvQXJyYXlMaWtlPWZ1bmN0aW9uIHRvQXJyYXlMaWtlKGUsdCxyKXt2YXIgaT10aGlzLmJ5dGVMZW5ndGgoKTt2YXIgbj1yfHxNYXRoLm1heCgxLGkpO2Fzc2VydChpPD1uLFwiYnl0ZSBhcnJheSBsb25nZXIgdGhhbiBkZXNpcmVkIGxlbmd0aFwiKTthc3NlcnQobj4wLFwiUmVxdWVzdGVkIGFycmF5IGxlbmd0aCA8PSAwXCIpO3RoaXMuc3RyaXAoKTt2YXIgYT10PT09XCJsZVwiO3ZhciBzPW5ldyBlKG4pO3ZhciBvLGg7dmFyIHU9dGhpcy5jbG9uZSgpO2lmKCFhKXtmb3IoaD0wO2g8bi1pO2grKyl7c1toXT0wfWZvcihoPTA7IXUuaXNaZXJvKCk7aCsrKXtvPXUuYW5kbG4oMjU1KTt1Lml1c2hybig4KTtzW24taC0xXT1vfX1lbHNle2ZvcihoPTA7IXUuaXNaZXJvKCk7aCsrKXtvPXUuYW5kbG4oMjU1KTt1Lml1c2hybig4KTtzW2hdPW99Zm9yKDtoPG47aCsrKXtzW2hdPTB9fXJldHVybiBzfTtpZihNYXRoLmNsejMyKXtCTi5wcm90b3R5cGUuX2NvdW50Qml0cz1mdW5jdGlvbiBfY291bnRCaXRzKGUpe3JldHVybiAzMi1NYXRoLmNsejMyKGUpfX1lbHNle0JOLnByb3RvdHlwZS5fY291bnRCaXRzPWZ1bmN0aW9uIF9jb3VudEJpdHMoZSl7dmFyIHQ9ZTt2YXIgcj0wO2lmKHQ+PTQwOTYpe3IrPTEzO3Q+Pj49MTN9aWYodD49NjQpe3IrPTc7dD4+Pj03fWlmKHQ+PTgpe3IrPTQ7dD4+Pj00fWlmKHQ+PTIpe3IrPTI7dD4+Pj0yfXJldHVybiByK3R9fUJOLnByb3RvdHlwZS5femVyb0JpdHM9ZnVuY3Rpb24gX3plcm9CaXRzKGUpe2lmKGU9PT0wKXJldHVybiAyNjt2YXIgdD1lO3ZhciByPTA7aWYoKHQmODE5MSk9PT0wKXtyKz0xMzt0Pj4+PTEzfWlmKCh0JjEyNyk9PT0wKXtyKz03O3Q+Pj49N31pZigodCYxNSk9PT0wKXtyKz00O3Q+Pj49NH1pZigodCYzKT09PTApe3IrPTI7dD4+Pj0yfWlmKCh0JjEpPT09MCl7cisrfXJldHVybiByfTtCTi5wcm90b3R5cGUuYml0TGVuZ3RoPWZ1bmN0aW9uIGJpdExlbmd0aCgpe3ZhciBlPXRoaXMud29yZHNbdGhpcy5sZW5ndGgtMV07dmFyIHQ9dGhpcy5fY291bnRCaXRzKGUpO3JldHVybih0aGlzLmxlbmd0aC0xKSoyNit0fTtmdW5jdGlvbiB0b0JpdEFycmF5KGUpe3ZhciB0PW5ldyBBcnJheShlLmJpdExlbmd0aCgpKTtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIGk9ci8yNnwwO3ZhciBuPXIlMjY7dFtyXT0oZS53b3Jkc1tpXSYxPDxuKT4+Pm59cmV0dXJuIHR9Qk4ucHJvdG90eXBlLnplcm9CaXRzPWZ1bmN0aW9uIHplcm9CaXRzKCl7aWYodGhpcy5pc1plcm8oKSlyZXR1cm4gMDt2YXIgZT0wO2Zvcih2YXIgdD0wO3Q8dGhpcy5sZW5ndGg7dCsrKXt2YXIgcj10aGlzLl96ZXJvQml0cyh0aGlzLndvcmRzW3RdKTtlKz1yO2lmKHIhPT0yNilicmVha31yZXR1cm4gZX07Qk4ucHJvdG90eXBlLmJ5dGVMZW5ndGg9ZnVuY3Rpb24gYnl0ZUxlbmd0aCgpe3JldHVybiBNYXRoLmNlaWwodGhpcy5iaXRMZW5ndGgoKS84KX07Qk4ucHJvdG90eXBlLnRvVHdvcz1mdW5jdGlvbiB0b1R3b3MoZSl7aWYodGhpcy5uZWdhdGl2ZSE9PTApe3JldHVybiB0aGlzLmFicygpLmlub3RuKGUpLmlhZGRuKDEpfXJldHVybiB0aGlzLmNsb25lKCl9O0JOLnByb3RvdHlwZS5mcm9tVHdvcz1mdW5jdGlvbiBmcm9tVHdvcyhlKXtpZih0aGlzLnRlc3RuKGUtMSkpe3JldHVybiB0aGlzLm5vdG4oZSkuaWFkZG4oMSkuaW5lZygpfXJldHVybiB0aGlzLmNsb25lKCl9O0JOLnByb3RvdHlwZS5pc05lZz1mdW5jdGlvbiBpc05lZygpe3JldHVybiB0aGlzLm5lZ2F0aXZlIT09MH07Qk4ucHJvdG90eXBlLm5lZz1mdW5jdGlvbiBuZWcoKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmluZWcoKX07Qk4ucHJvdG90eXBlLmluZWc9ZnVuY3Rpb24gaW5lZygpe2lmKCF0aGlzLmlzWmVybygpKXt0aGlzLm5lZ2F0aXZlXj0xfXJldHVybiB0aGlzfTtCTi5wcm90b3R5cGUuaXVvcj1mdW5jdGlvbiBpdW9yKGUpe3doaWxlKHRoaXMubGVuZ3RoPGUubGVuZ3RoKXt0aGlzLndvcmRzW3RoaXMubGVuZ3RoKytdPTB9Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0Kyspe3RoaXMud29yZHNbdF09dGhpcy53b3Jkc1t0XXxlLndvcmRzW3RdfXJldHVybiB0aGlzLnN0cmlwKCl9O0JOLnByb3RvdHlwZS5pb3I9ZnVuY3Rpb24gaW9yKGUpe2Fzc2VydCgodGhpcy5uZWdhdGl2ZXxlLm5lZ2F0aXZlKT09PTApO3JldHVybiB0aGlzLml1b3IoZSl9O0JOLnByb3RvdHlwZS5vcj1mdW5jdGlvbiBvcihlKXtpZih0aGlzLmxlbmd0aD5lLmxlbmd0aClyZXR1cm4gdGhpcy5jbG9uZSgpLmlvcihlKTtyZXR1cm4gZS5jbG9uZSgpLmlvcih0aGlzKX07Qk4ucHJvdG90eXBlLnVvcj1mdW5jdGlvbiB1b3IoZSl7aWYodGhpcy5sZW5ndGg+ZS5sZW5ndGgpcmV0dXJuIHRoaXMuY2xvbmUoKS5pdW9yKGUpO3JldHVybiBlLmNsb25lKCkuaXVvcih0aGlzKX07Qk4ucHJvdG90eXBlLml1YW5kPWZ1bmN0aW9uIGl1YW5kKGUpe3ZhciB0O2lmKHRoaXMubGVuZ3RoPmUubGVuZ3RoKXt0PWV9ZWxzZXt0PXRoaXN9Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3RoaXMud29yZHNbcl09dGhpcy53b3Jkc1tyXSZlLndvcmRzW3JdfXRoaXMubGVuZ3RoPXQubGVuZ3RoO3JldHVybiB0aGlzLnN0cmlwKCl9O0JOLnByb3RvdHlwZS5pYW5kPWZ1bmN0aW9uIGlhbmQoZSl7YXNzZXJ0KCh0aGlzLm5lZ2F0aXZlfGUubmVnYXRpdmUpPT09MCk7cmV0dXJuIHRoaXMuaXVhbmQoZSl9O0JOLnByb3RvdHlwZS5hbmQ9ZnVuY3Rpb24gYW5kKGUpe2lmKHRoaXMubGVuZ3RoPmUubGVuZ3RoKXJldHVybiB0aGlzLmNsb25lKCkuaWFuZChlKTtyZXR1cm4gZS5jbG9uZSgpLmlhbmQodGhpcyl9O0JOLnByb3RvdHlwZS51YW5kPWZ1bmN0aW9uIHVhbmQoZSl7aWYodGhpcy5sZW5ndGg+ZS5sZW5ndGgpcmV0dXJuIHRoaXMuY2xvbmUoKS5pdWFuZChlKTtyZXR1cm4gZS5jbG9uZSgpLml1YW5kKHRoaXMpfTtCTi5wcm90b3R5cGUuaXV4b3I9ZnVuY3Rpb24gaXV4b3IoZSl7dmFyIHQ7dmFyIHI7aWYodGhpcy5sZW5ndGg+ZS5sZW5ndGgpe3Q9dGhpcztyPWV9ZWxzZXt0PWU7cj10aGlzfWZvcih2YXIgaT0wO2k8ci5sZW5ndGg7aSsrKXt0aGlzLndvcmRzW2ldPXQud29yZHNbaV1eci53b3Jkc1tpXX1pZih0aGlzIT09dCl7Zm9yKDtpPHQubGVuZ3RoO2krKyl7dGhpcy53b3Jkc1tpXT10LndvcmRzW2ldfX10aGlzLmxlbmd0aD10Lmxlbmd0aDtyZXR1cm4gdGhpcy5zdHJpcCgpfTtCTi5wcm90b3R5cGUuaXhvcj1mdW5jdGlvbiBpeG9yKGUpe2Fzc2VydCgodGhpcy5uZWdhdGl2ZXxlLm5lZ2F0aXZlKT09PTApO3JldHVybiB0aGlzLml1eG9yKGUpfTtCTi5wcm90b3R5cGUueG9yPWZ1bmN0aW9uIHhvcihlKXtpZih0aGlzLmxlbmd0aD5lLmxlbmd0aClyZXR1cm4gdGhpcy5jbG9uZSgpLml4b3IoZSk7cmV0dXJuIGUuY2xvbmUoKS5peG9yKHRoaXMpfTtCTi5wcm90b3R5cGUudXhvcj1mdW5jdGlvbiB1eG9yKGUpe2lmKHRoaXMubGVuZ3RoPmUubGVuZ3RoKXJldHVybiB0aGlzLmNsb25lKCkuaXV4b3IoZSk7cmV0dXJuIGUuY2xvbmUoKS5pdXhvcih0aGlzKX07Qk4ucHJvdG90eXBlLmlub3RuPWZ1bmN0aW9uIGlub3RuKGUpe2Fzc2VydCh0eXBlb2YgZT09PVwibnVtYmVyXCImJmU+PTApO3ZhciB0PU1hdGguY2VpbChlLzI2KXwwO3ZhciByPWUlMjY7dGhpcy5fZXhwYW5kKHQpO2lmKHI+MCl7dC0tfWZvcih2YXIgaT0wO2k8dDtpKyspe3RoaXMud29yZHNbaV09fnRoaXMud29yZHNbaV0mNjcxMDg4NjN9aWYocj4wKXt0aGlzLndvcmRzW2ldPX50aGlzLndvcmRzW2ldJjY3MTA4ODYzPj4yNi1yfXJldHVybiB0aGlzLnN0cmlwKCl9O0JOLnByb3RvdHlwZS5ub3RuPWZ1bmN0aW9uIG5vdG4oZSl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pbm90bihlKX07Qk4ucHJvdG90eXBlLnNldG49ZnVuY3Rpb24gc2V0bihlLHQpe2Fzc2VydCh0eXBlb2YgZT09PVwibnVtYmVyXCImJmU+PTApO3ZhciByPWUvMjZ8MDt2YXIgaT1lJTI2O3RoaXMuX2V4cGFuZChyKzEpO2lmKHQpe3RoaXMud29yZHNbcl09dGhpcy53b3Jkc1tyXXwxPDxpfWVsc2V7dGhpcy53b3Jkc1tyXT10aGlzLndvcmRzW3JdJn4oMTw8aSl9cmV0dXJuIHRoaXMuc3RyaXAoKX07Qk4ucHJvdG90eXBlLmlhZGQ9ZnVuY3Rpb24gaWFkZChlKXt2YXIgdDtpZih0aGlzLm5lZ2F0aXZlIT09MCYmZS5uZWdhdGl2ZT09PTApe3RoaXMubmVnYXRpdmU9MDt0PXRoaXMuaXN1YihlKTt0aGlzLm5lZ2F0aXZlXj0xO3JldHVybiB0aGlzLl9ub3JtU2lnbigpfWVsc2UgaWYodGhpcy5uZWdhdGl2ZT09PTAmJmUubmVnYXRpdmUhPT0wKXtlLm5lZ2F0aXZlPTA7dD10aGlzLmlzdWIoZSk7ZS5uZWdhdGl2ZT0xO3JldHVybiB0Ll9ub3JtU2lnbigpfXZhciByLGk7aWYodGhpcy5sZW5ndGg+ZS5sZW5ndGgpe3I9dGhpcztpPWV9ZWxzZXtyPWU7aT10aGlzfXZhciBuPTA7Zm9yKHZhciBhPTA7YTxpLmxlbmd0aDthKyspe3Q9KHIud29yZHNbYV18MCkrKGkud29yZHNbYV18MCkrbjt0aGlzLndvcmRzW2FdPXQmNjcxMDg4NjM7bj10Pj4+MjZ9Zm9yKDtuIT09MCYmYTxyLmxlbmd0aDthKyspe3Q9KHIud29yZHNbYV18MCkrbjt0aGlzLndvcmRzW2FdPXQmNjcxMDg4NjM7bj10Pj4+MjZ9dGhpcy5sZW5ndGg9ci5sZW5ndGg7aWYobiE9PTApe3RoaXMud29yZHNbdGhpcy5sZW5ndGhdPW47dGhpcy5sZW5ndGgrK31lbHNlIGlmKHIhPT10aGlzKXtmb3IoO2E8ci5sZW5ndGg7YSsrKXt0aGlzLndvcmRzW2FdPXIud29yZHNbYV19fXJldHVybiB0aGlzfTtCTi5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uIGFkZChlKXt2YXIgdDtpZihlLm5lZ2F0aXZlIT09MCYmdGhpcy5uZWdhdGl2ZT09PTApe2UubmVnYXRpdmU9MDt0PXRoaXMuc3ViKGUpO2UubmVnYXRpdmVePTE7cmV0dXJuIHR9ZWxzZSBpZihlLm5lZ2F0aXZlPT09MCYmdGhpcy5uZWdhdGl2ZSE9PTApe3RoaXMubmVnYXRpdmU9MDt0PWUuc3ViKHRoaXMpO3RoaXMubmVnYXRpdmU9MTtyZXR1cm4gdH1pZih0aGlzLmxlbmd0aD5lLmxlbmd0aClyZXR1cm4gdGhpcy5jbG9uZSgpLmlhZGQoZSk7cmV0dXJuIGUuY2xvbmUoKS5pYWRkKHRoaXMpfTtCTi5wcm90b3R5cGUuaXN1Yj1mdW5jdGlvbiBpc3ViKGUpe2lmKGUubmVnYXRpdmUhPT0wKXtlLm5lZ2F0aXZlPTA7dmFyIHQ9dGhpcy5pYWRkKGUpO2UubmVnYXRpdmU9MTtyZXR1cm4gdC5fbm9ybVNpZ24oKX1lbHNlIGlmKHRoaXMubmVnYXRpdmUhPT0wKXt0aGlzLm5lZ2F0aXZlPTA7dGhpcy5pYWRkKGUpO3RoaXMubmVnYXRpdmU9MTtyZXR1cm4gdGhpcy5fbm9ybVNpZ24oKX12YXIgcj10aGlzLmNtcChlKTtpZihyPT09MCl7dGhpcy5uZWdhdGl2ZT0wO3RoaXMubGVuZ3RoPTE7dGhpcy53b3Jkc1swXT0wO3JldHVybiB0aGlzfXZhciBpLG47aWYocj4wKXtpPXRoaXM7bj1lfWVsc2V7aT1lO249dGhpc312YXIgYT0wO2Zvcih2YXIgcz0wO3M8bi5sZW5ndGg7cysrKXt0PShpLndvcmRzW3NdfDApLShuLndvcmRzW3NdfDApK2E7YT10Pj4yNjt0aGlzLndvcmRzW3NdPXQmNjcxMDg4NjN9Zm9yKDthIT09MCYmczxpLmxlbmd0aDtzKyspe3Q9KGkud29yZHNbc118MCkrYTthPXQ+PjI2O3RoaXMud29yZHNbc109dCY2NzEwODg2M31pZihhPT09MCYmczxpLmxlbmd0aCYmaSE9PXRoaXMpe2Zvcig7czxpLmxlbmd0aDtzKyspe3RoaXMud29yZHNbc109aS53b3Jkc1tzXX19dGhpcy5sZW5ndGg9TWF0aC5tYXgodGhpcy5sZW5ndGgscyk7aWYoaSE9PXRoaXMpe3RoaXMubmVnYXRpdmU9MX1yZXR1cm4gdGhpcy5zdHJpcCgpfTtCTi5wcm90b3R5cGUuc3ViPWZ1bmN0aW9uIHN1YihlKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmlzdWIoZSl9O2Z1bmN0aW9uIHNtYWxsTXVsVG8oZSx0LHIpe3IubmVnYXRpdmU9dC5uZWdhdGl2ZV5lLm5lZ2F0aXZlO3ZhciBpPWUubGVuZ3RoK3QubGVuZ3RofDA7ci5sZW5ndGg9aTtpPWktMXwwO3ZhciBuPWUud29yZHNbMF18MDt2YXIgYT10LndvcmRzWzBdfDA7dmFyIHM9biphO3ZhciBvPXMmNjcxMDg4NjM7dmFyIGg9cy82NzEwODg2NHwwO3Iud29yZHNbMF09bztmb3IodmFyIHU9MTt1PGk7dSsrKXt2YXIgZD1oPj4+MjY7dmFyIGM9aCY2NzEwODg2Mzt2YXIgbD1NYXRoLm1pbih1LHQubGVuZ3RoLTEpO2Zvcih2YXIgcD1NYXRoLm1heCgwLHUtZS5sZW5ndGgrMSk7cDw9bDtwKyspe3ZhciB2PXUtcHwwO249ZS53b3Jkc1t2XXwwO2E9dC53b3Jkc1twXXwwO3M9biphK2M7ZCs9cy82NzEwODg2NHwwO2M9cyY2NzEwODg2M31yLndvcmRzW3VdPWN8MDtoPWR8MH1pZihoIT09MCl7ci53b3Jkc1t1XT1ofDB9ZWxzZXtyLmxlbmd0aC0tfXJldHVybiByLnN0cmlwKCl9dmFyIG89ZnVuY3Rpb24gY29tYjEwTXVsVG8oZSx0LHIpe3ZhciBpPWUud29yZHM7dmFyIG49dC53b3Jkczt2YXIgYT1yLndvcmRzO3ZhciBzPTA7dmFyIG87dmFyIGg7dmFyIHU7dmFyIGQ9aVswXXwwO3ZhciBjPWQmODE5MTt2YXIgbD1kPj4+MTM7dmFyIHA9aVsxXXwwO3ZhciB2PXAmODE5MTt2YXIgYj1wPj4+MTM7dmFyIG09aVsyXXwwO3ZhciB5PW0mODE5MTt2YXIgZz1tPj4+MTM7dmFyIF89aVszXXwwO3ZhciB3PV8mODE5MTt2YXIgTT1fPj4+MTM7dmFyIEI9aVs0XXwwO3ZhciBFPUImODE5MTt2YXIgaz1CPj4+MTM7dmFyIEE9aVs1XXwwO3ZhciBOPUEmODE5MTt2YXIgUD1BPj4+MTM7dmFyIHg9aVs2XXwwO3ZhciBJPXgmODE5MTt2YXIgQz14Pj4+MTM7dmFyIEQ9aVs3XXwwO3ZhciBUPUQmODE5MTt2YXIgaj1EPj4+MTM7dmFyIHE9aVs4XXwwO3ZhciBPPXEmODE5MTt2YXIgSD1xPj4+MTM7dmFyIEw9aVs5XXwwO3ZhciB6PUwmODE5MTt2YXIgRj1MPj4+MTM7dmFyIFU9blswXXwwO3ZhciBXPVUmODE5MTt2YXIgVj1VPj4+MTM7dmFyIEc9blsxXXwwO3ZhciBKPUcmODE5MTt2YXIgWj1HPj4+MTM7dmFyIFg9blsyXXwwO3ZhciBZPVgmODE5MTt2YXIgJD1YPj4+MTM7dmFyIFE9blszXXwwO3ZhciBlZT1RJjgxOTE7dmFyIHRlPVE+Pj4xMzt2YXIgcmU9bls0XXwwO3ZhciBpZT1yZSY4MTkxO3ZhciBuZT1yZT4+PjEzO3ZhciBhZT1uWzVdfDA7dmFyIGZlPWFlJjgxOTE7dmFyIHNlPWFlPj4+MTM7dmFyIG9lPW5bNl18MDt2YXIgaGU9b2UmODE5MTt2YXIgdWU9b2U+Pj4xMzt2YXIgZGU9bls3XXwwO3ZhciBjZT1kZSY4MTkxO3ZhciBsZT1kZT4+PjEzO3ZhciBwZT1uWzhdfDA7dmFyIHZlPXBlJjgxOTE7dmFyIGJlPXBlPj4+MTM7dmFyIG1lPW5bOV18MDt2YXIgeWU9bWUmODE5MTt2YXIgZ2U9bWU+Pj4xMztyLm5lZ2F0aXZlPWUubmVnYXRpdmVedC5uZWdhdGl2ZTtyLmxlbmd0aD0xOTtvPU1hdGguaW11bChjLFcpO2g9TWF0aC5pbXVsKGMsVik7aD1oK01hdGguaW11bChsLFcpfDA7dT1NYXRoLmltdWwobCxWKTt2YXIgX2U9KHMrb3wwKSsoKGgmODE5MSk8PDEzKXwwO3M9KHUrKGg+Pj4xMyl8MCkrKF9lPj4+MjYpfDA7X2UmPTY3MTA4ODYzO289TWF0aC5pbXVsKHYsVyk7aD1NYXRoLmltdWwodixWKTtoPWgrTWF0aC5pbXVsKGIsVyl8MDt1PU1hdGguaW11bChiLFYpO289bytNYXRoLmltdWwoYyxKKXwwO2g9aCtNYXRoLmltdWwoYyxaKXwwO2g9aCtNYXRoLmltdWwobCxKKXwwO3U9dStNYXRoLmltdWwobCxaKXwwO3ZhciB3ZT0ocytvfDApKygoaCY4MTkxKTw8MTMpfDA7cz0odSsoaD4+PjEzKXwwKSsod2U+Pj4yNil8MDt3ZSY9NjcxMDg4NjM7bz1NYXRoLmltdWwoeSxXKTtoPU1hdGguaW11bCh5LFYpO2g9aCtNYXRoLmltdWwoZyxXKXwwO3U9TWF0aC5pbXVsKGcsVik7bz1vK01hdGguaW11bCh2LEopfDA7aD1oK01hdGguaW11bCh2LFopfDA7aD1oK01hdGguaW11bChiLEopfDA7dT11K01hdGguaW11bChiLFopfDA7bz1vK01hdGguaW11bChjLFkpfDA7aD1oK01hdGguaW11bChjLCQpfDA7aD1oK01hdGguaW11bChsLFkpfDA7dT11K01hdGguaW11bChsLCQpfDA7dmFyIE1lPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhNZT4+PjI2KXwwO01lJj02NzEwODg2MztvPU1hdGguaW11bCh3LFcpO2g9TWF0aC5pbXVsKHcsVik7aD1oK01hdGguaW11bChNLFcpfDA7dT1NYXRoLmltdWwoTSxWKTtvPW8rTWF0aC5pbXVsKHksSil8MDtoPWgrTWF0aC5pbXVsKHksWil8MDtoPWgrTWF0aC5pbXVsKGcsSil8MDt1PXUrTWF0aC5pbXVsKGcsWil8MDtvPW8rTWF0aC5pbXVsKHYsWSl8MDtoPWgrTWF0aC5pbXVsKHYsJCl8MDtoPWgrTWF0aC5pbXVsKGIsWSl8MDt1PXUrTWF0aC5pbXVsKGIsJCl8MDtvPW8rTWF0aC5pbXVsKGMsZWUpfDA7aD1oK01hdGguaW11bChjLHRlKXwwO2g9aCtNYXRoLmltdWwobCxlZSl8MDt1PXUrTWF0aC5pbXVsKGwsdGUpfDA7dmFyIFNlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhTZT4+PjI2KXwwO1NlJj02NzEwODg2MztvPU1hdGguaW11bChFLFcpO2g9TWF0aC5pbXVsKEUsVik7aD1oK01hdGguaW11bChrLFcpfDA7dT1NYXRoLmltdWwoayxWKTtvPW8rTWF0aC5pbXVsKHcsSil8MDtoPWgrTWF0aC5pbXVsKHcsWil8MDtoPWgrTWF0aC5pbXVsKE0sSil8MDt1PXUrTWF0aC5pbXVsKE0sWil8MDtvPW8rTWF0aC5pbXVsKHksWSl8MDtoPWgrTWF0aC5pbXVsKHksJCl8MDtoPWgrTWF0aC5pbXVsKGcsWSl8MDt1PXUrTWF0aC5pbXVsKGcsJCl8MDtvPW8rTWF0aC5pbXVsKHYsZWUpfDA7aD1oK01hdGguaW11bCh2LHRlKXwwO2g9aCtNYXRoLmltdWwoYixlZSl8MDt1PXUrTWF0aC5pbXVsKGIsdGUpfDA7bz1vK01hdGguaW11bChjLGllKXwwO2g9aCtNYXRoLmltdWwoYyxuZSl8MDtoPWgrTWF0aC5pbXVsKGwsaWUpfDA7dT11K01hdGguaW11bChsLG5lKXwwO3ZhciBCZT0ocytvfDApKygoaCY4MTkxKTw8MTMpfDA7cz0odSsoaD4+PjEzKXwwKSsoQmU+Pj4yNil8MDtCZSY9NjcxMDg4NjM7bz1NYXRoLmltdWwoTixXKTtoPU1hdGguaW11bChOLFYpO2g9aCtNYXRoLmltdWwoUCxXKXwwO3U9TWF0aC5pbXVsKFAsVik7bz1vK01hdGguaW11bChFLEopfDA7aD1oK01hdGguaW11bChFLFopfDA7aD1oK01hdGguaW11bChrLEopfDA7dT11K01hdGguaW11bChrLFopfDA7bz1vK01hdGguaW11bCh3LFkpfDA7aD1oK01hdGguaW11bCh3LCQpfDA7aD1oK01hdGguaW11bChNLFkpfDA7dT11K01hdGguaW11bChNLCQpfDA7bz1vK01hdGguaW11bCh5LGVlKXwwO2g9aCtNYXRoLmltdWwoeSx0ZSl8MDtoPWgrTWF0aC5pbXVsKGcsZWUpfDA7dT11K01hdGguaW11bChnLHRlKXwwO289bytNYXRoLmltdWwodixpZSl8MDtoPWgrTWF0aC5pbXVsKHYsbmUpfDA7aD1oK01hdGguaW11bChiLGllKXwwO3U9dStNYXRoLmltdWwoYixuZSl8MDtvPW8rTWF0aC5pbXVsKGMsZmUpfDA7aD1oK01hdGguaW11bChjLHNlKXwwO2g9aCtNYXRoLmltdWwobCxmZSl8MDt1PXUrTWF0aC5pbXVsKGwsc2UpfDA7dmFyIEVlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhFZT4+PjI2KXwwO0VlJj02NzEwODg2MztvPU1hdGguaW11bChJLFcpO2g9TWF0aC5pbXVsKEksVik7aD1oK01hdGguaW11bChDLFcpfDA7dT1NYXRoLmltdWwoQyxWKTtvPW8rTWF0aC5pbXVsKE4sSil8MDtoPWgrTWF0aC5pbXVsKE4sWil8MDtoPWgrTWF0aC5pbXVsKFAsSil8MDt1PXUrTWF0aC5pbXVsKFAsWil8MDtvPW8rTWF0aC5pbXVsKEUsWSl8MDtoPWgrTWF0aC5pbXVsKEUsJCl8MDtoPWgrTWF0aC5pbXVsKGssWSl8MDt1PXUrTWF0aC5pbXVsKGssJCl8MDtvPW8rTWF0aC5pbXVsKHcsZWUpfDA7aD1oK01hdGguaW11bCh3LHRlKXwwO2g9aCtNYXRoLmltdWwoTSxlZSl8MDt1PXUrTWF0aC5pbXVsKE0sdGUpfDA7bz1vK01hdGguaW11bCh5LGllKXwwO2g9aCtNYXRoLmltdWwoeSxuZSl8MDtoPWgrTWF0aC5pbXVsKGcsaWUpfDA7dT11K01hdGguaW11bChnLG5lKXwwO289bytNYXRoLmltdWwodixmZSl8MDtoPWgrTWF0aC5pbXVsKHYsc2UpfDA7aD1oK01hdGguaW11bChiLGZlKXwwO3U9dStNYXRoLmltdWwoYixzZSl8MDtvPW8rTWF0aC5pbXVsKGMsaGUpfDA7aD1oK01hdGguaW11bChjLHVlKXwwO2g9aCtNYXRoLmltdWwobCxoZSl8MDt1PXUrTWF0aC5pbXVsKGwsdWUpfDA7dmFyIGtlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhrZT4+PjI2KXwwO2tlJj02NzEwODg2MztvPU1hdGguaW11bChULFcpO2g9TWF0aC5pbXVsKFQsVik7aD1oK01hdGguaW11bChqLFcpfDA7dT1NYXRoLmltdWwoaixWKTtvPW8rTWF0aC5pbXVsKEksSil8MDtoPWgrTWF0aC5pbXVsKEksWil8MDtoPWgrTWF0aC5pbXVsKEMsSil8MDt1PXUrTWF0aC5pbXVsKEMsWil8MDtvPW8rTWF0aC5pbXVsKE4sWSl8MDtoPWgrTWF0aC5pbXVsKE4sJCl8MDtoPWgrTWF0aC5pbXVsKFAsWSl8MDt1PXUrTWF0aC5pbXVsKFAsJCl8MDtvPW8rTWF0aC5pbXVsKEUsZWUpfDA7aD1oK01hdGguaW11bChFLHRlKXwwO2g9aCtNYXRoLmltdWwoayxlZSl8MDt1PXUrTWF0aC5pbXVsKGssdGUpfDA7bz1vK01hdGguaW11bCh3LGllKXwwO2g9aCtNYXRoLmltdWwodyxuZSl8MDtoPWgrTWF0aC5pbXVsKE0saWUpfDA7dT11K01hdGguaW11bChNLG5lKXwwO289bytNYXRoLmltdWwoeSxmZSl8MDtoPWgrTWF0aC5pbXVsKHksc2UpfDA7aD1oK01hdGguaW11bChnLGZlKXwwO3U9dStNYXRoLmltdWwoZyxzZSl8MDtvPW8rTWF0aC5pbXVsKHYsaGUpfDA7aD1oK01hdGguaW11bCh2LHVlKXwwO2g9aCtNYXRoLmltdWwoYixoZSl8MDt1PXUrTWF0aC5pbXVsKGIsdWUpfDA7bz1vK01hdGguaW11bChjLGNlKXwwO2g9aCtNYXRoLmltdWwoYyxsZSl8MDtoPWgrTWF0aC5pbXVsKGwsY2UpfDA7dT11K01hdGguaW11bChsLGxlKXwwO3ZhciBBZT0ocytvfDApKygoaCY4MTkxKTw8MTMpfDA7cz0odSsoaD4+PjEzKXwwKSsoQWU+Pj4yNil8MDtBZSY9NjcxMDg4NjM7bz1NYXRoLmltdWwoTyxXKTtoPU1hdGguaW11bChPLFYpO2g9aCtNYXRoLmltdWwoSCxXKXwwO3U9TWF0aC5pbXVsKEgsVik7bz1vK01hdGguaW11bChULEopfDA7aD1oK01hdGguaW11bChULFopfDA7aD1oK01hdGguaW11bChqLEopfDA7dT11K01hdGguaW11bChqLFopfDA7bz1vK01hdGguaW11bChJLFkpfDA7aD1oK01hdGguaW11bChJLCQpfDA7aD1oK01hdGguaW11bChDLFkpfDA7dT11K01hdGguaW11bChDLCQpfDA7bz1vK01hdGguaW11bChOLGVlKXwwO2g9aCtNYXRoLmltdWwoTix0ZSl8MDtoPWgrTWF0aC5pbXVsKFAsZWUpfDA7dT11K01hdGguaW11bChQLHRlKXwwO289bytNYXRoLmltdWwoRSxpZSl8MDtoPWgrTWF0aC5pbXVsKEUsbmUpfDA7aD1oK01hdGguaW11bChrLGllKXwwO3U9dStNYXRoLmltdWwoayxuZSl8MDtvPW8rTWF0aC5pbXVsKHcsZmUpfDA7aD1oK01hdGguaW11bCh3LHNlKXwwO2g9aCtNYXRoLmltdWwoTSxmZSl8MDt1PXUrTWF0aC5pbXVsKE0sc2UpfDA7bz1vK01hdGguaW11bCh5LGhlKXwwO2g9aCtNYXRoLmltdWwoeSx1ZSl8MDtoPWgrTWF0aC5pbXVsKGcsaGUpfDA7dT11K01hdGguaW11bChnLHVlKXwwO289bytNYXRoLmltdWwodixjZSl8MDtoPWgrTWF0aC5pbXVsKHYsbGUpfDA7aD1oK01hdGguaW11bChiLGNlKXwwO3U9dStNYXRoLmltdWwoYixsZSl8MDtvPW8rTWF0aC5pbXVsKGMsdmUpfDA7aD1oK01hdGguaW11bChjLGJlKXwwO2g9aCtNYXRoLmltdWwobCx2ZSl8MDt1PXUrTWF0aC5pbXVsKGwsYmUpfDA7dmFyIE5lPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhOZT4+PjI2KXwwO05lJj02NzEwODg2MztvPU1hdGguaW11bCh6LFcpO2g9TWF0aC5pbXVsKHosVik7aD1oK01hdGguaW11bChGLFcpfDA7dT1NYXRoLmltdWwoRixWKTtvPW8rTWF0aC5pbXVsKE8sSil8MDtoPWgrTWF0aC5pbXVsKE8sWil8MDtoPWgrTWF0aC5pbXVsKEgsSil8MDt1PXUrTWF0aC5pbXVsKEgsWil8MDtvPW8rTWF0aC5pbXVsKFQsWSl8MDtoPWgrTWF0aC5pbXVsKFQsJCl8MDtoPWgrTWF0aC5pbXVsKGosWSl8MDt1PXUrTWF0aC5pbXVsKGosJCl8MDtvPW8rTWF0aC5pbXVsKEksZWUpfDA7aD1oK01hdGguaW11bChJLHRlKXwwO2g9aCtNYXRoLmltdWwoQyxlZSl8MDt1PXUrTWF0aC5pbXVsKEMsdGUpfDA7bz1vK01hdGguaW11bChOLGllKXwwO2g9aCtNYXRoLmltdWwoTixuZSl8MDtoPWgrTWF0aC5pbXVsKFAsaWUpfDA7dT11K01hdGguaW11bChQLG5lKXwwO289bytNYXRoLmltdWwoRSxmZSl8MDtoPWgrTWF0aC5pbXVsKEUsc2UpfDA7aD1oK01hdGguaW11bChrLGZlKXwwO3U9dStNYXRoLmltdWwoayxzZSl8MDtvPW8rTWF0aC5pbXVsKHcsaGUpfDA7aD1oK01hdGguaW11bCh3LHVlKXwwO2g9aCtNYXRoLmltdWwoTSxoZSl8MDt1PXUrTWF0aC5pbXVsKE0sdWUpfDA7bz1vK01hdGguaW11bCh5LGNlKXwwO2g9aCtNYXRoLmltdWwoeSxsZSl8MDtoPWgrTWF0aC5pbXVsKGcsY2UpfDA7dT11K01hdGguaW11bChnLGxlKXwwO289bytNYXRoLmltdWwodix2ZSl8MDtoPWgrTWF0aC5pbXVsKHYsYmUpfDA7aD1oK01hdGguaW11bChiLHZlKXwwO3U9dStNYXRoLmltdWwoYixiZSl8MDtvPW8rTWF0aC5pbXVsKGMseWUpfDA7aD1oK01hdGguaW11bChjLGdlKXwwO2g9aCtNYXRoLmltdWwobCx5ZSl8MDt1PXUrTWF0aC5pbXVsKGwsZ2UpfDA7dmFyIFJlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhSZT4+PjI2KXwwO1JlJj02NzEwODg2MztvPU1hdGguaW11bCh6LEopO2g9TWF0aC5pbXVsKHosWik7aD1oK01hdGguaW11bChGLEopfDA7dT1NYXRoLmltdWwoRixaKTtvPW8rTWF0aC5pbXVsKE8sWSl8MDtoPWgrTWF0aC5pbXVsKE8sJCl8MDtoPWgrTWF0aC5pbXVsKEgsWSl8MDt1PXUrTWF0aC5pbXVsKEgsJCl8MDtvPW8rTWF0aC5pbXVsKFQsZWUpfDA7aD1oK01hdGguaW11bChULHRlKXwwO2g9aCtNYXRoLmltdWwoaixlZSl8MDt1PXUrTWF0aC5pbXVsKGosdGUpfDA7bz1vK01hdGguaW11bChJLGllKXwwO2g9aCtNYXRoLmltdWwoSSxuZSl8MDtoPWgrTWF0aC5pbXVsKEMsaWUpfDA7dT11K01hdGguaW11bChDLG5lKXwwO289bytNYXRoLmltdWwoTixmZSl8MDtoPWgrTWF0aC5pbXVsKE4sc2UpfDA7aD1oK01hdGguaW11bChQLGZlKXwwO3U9dStNYXRoLmltdWwoUCxzZSl8MDtvPW8rTWF0aC5pbXVsKEUsaGUpfDA7aD1oK01hdGguaW11bChFLHVlKXwwO2g9aCtNYXRoLmltdWwoayxoZSl8MDt1PXUrTWF0aC5pbXVsKGssdWUpfDA7bz1vK01hdGguaW11bCh3LGNlKXwwO2g9aCtNYXRoLmltdWwodyxsZSl8MDtoPWgrTWF0aC5pbXVsKE0sY2UpfDA7dT11K01hdGguaW11bChNLGxlKXwwO289bytNYXRoLmltdWwoeSx2ZSl8MDtoPWgrTWF0aC5pbXVsKHksYmUpfDA7aD1oK01hdGguaW11bChnLHZlKXwwO3U9dStNYXRoLmltdWwoZyxiZSl8MDtvPW8rTWF0aC5pbXVsKHYseWUpfDA7aD1oK01hdGguaW11bCh2LGdlKXwwO2g9aCtNYXRoLmltdWwoYix5ZSl8MDt1PXUrTWF0aC5pbXVsKGIsZ2UpfDA7dmFyIFBlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhQZT4+PjI2KXwwO1BlJj02NzEwODg2MztvPU1hdGguaW11bCh6LFkpO2g9TWF0aC5pbXVsKHosJCk7aD1oK01hdGguaW11bChGLFkpfDA7dT1NYXRoLmltdWwoRiwkKTtvPW8rTWF0aC5pbXVsKE8sZWUpfDA7aD1oK01hdGguaW11bChPLHRlKXwwO2g9aCtNYXRoLmltdWwoSCxlZSl8MDt1PXUrTWF0aC5pbXVsKEgsdGUpfDA7bz1vK01hdGguaW11bChULGllKXwwO2g9aCtNYXRoLmltdWwoVCxuZSl8MDtoPWgrTWF0aC5pbXVsKGosaWUpfDA7dT11K01hdGguaW11bChqLG5lKXwwO289bytNYXRoLmltdWwoSSxmZSl8MDtoPWgrTWF0aC5pbXVsKEksc2UpfDA7aD1oK01hdGguaW11bChDLGZlKXwwO3U9dStNYXRoLmltdWwoQyxzZSl8MDtvPW8rTWF0aC5pbXVsKE4saGUpfDA7aD1oK01hdGguaW11bChOLHVlKXwwO2g9aCtNYXRoLmltdWwoUCxoZSl8MDt1PXUrTWF0aC5pbXVsKFAsdWUpfDA7bz1vK01hdGguaW11bChFLGNlKXwwO2g9aCtNYXRoLmltdWwoRSxsZSl8MDtoPWgrTWF0aC5pbXVsKGssY2UpfDA7dT11K01hdGguaW11bChrLGxlKXwwO289bytNYXRoLmltdWwodyx2ZSl8MDtoPWgrTWF0aC5pbXVsKHcsYmUpfDA7aD1oK01hdGguaW11bChNLHZlKXwwO3U9dStNYXRoLmltdWwoTSxiZSl8MDtvPW8rTWF0aC5pbXVsKHkseWUpfDA7aD1oK01hdGguaW11bCh5LGdlKXwwO2g9aCtNYXRoLmltdWwoZyx5ZSl8MDt1PXUrTWF0aC5pbXVsKGcsZ2UpfDA7dmFyIHhlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyh4ZT4+PjI2KXwwO3hlJj02NzEwODg2MztvPU1hdGguaW11bCh6LGVlKTtoPU1hdGguaW11bCh6LHRlKTtoPWgrTWF0aC5pbXVsKEYsZWUpfDA7dT1NYXRoLmltdWwoRix0ZSk7bz1vK01hdGguaW11bChPLGllKXwwO2g9aCtNYXRoLmltdWwoTyxuZSl8MDtoPWgrTWF0aC5pbXVsKEgsaWUpfDA7dT11K01hdGguaW11bChILG5lKXwwO289bytNYXRoLmltdWwoVCxmZSl8MDtoPWgrTWF0aC5pbXVsKFQsc2UpfDA7aD1oK01hdGguaW11bChqLGZlKXwwO3U9dStNYXRoLmltdWwoaixzZSl8MDtvPW8rTWF0aC5pbXVsKEksaGUpfDA7aD1oK01hdGguaW11bChJLHVlKXwwO2g9aCtNYXRoLmltdWwoQyxoZSl8MDt1PXUrTWF0aC5pbXVsKEMsdWUpfDA7bz1vK01hdGguaW11bChOLGNlKXwwO2g9aCtNYXRoLmltdWwoTixsZSl8MDtoPWgrTWF0aC5pbXVsKFAsY2UpfDA7dT11K01hdGguaW11bChQLGxlKXwwO289bytNYXRoLmltdWwoRSx2ZSl8MDtoPWgrTWF0aC5pbXVsKEUsYmUpfDA7aD1oK01hdGguaW11bChrLHZlKXwwO3U9dStNYXRoLmltdWwoayxiZSl8MDtvPW8rTWF0aC5pbXVsKHcseWUpfDA7aD1oK01hdGguaW11bCh3LGdlKXwwO2g9aCtNYXRoLmltdWwoTSx5ZSl8MDt1PXUrTWF0aC5pbXVsKE0sZ2UpfDA7dmFyIEllPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhJZT4+PjI2KXwwO0llJj02NzEwODg2MztvPU1hdGguaW11bCh6LGllKTtoPU1hdGguaW11bCh6LG5lKTtoPWgrTWF0aC5pbXVsKEYsaWUpfDA7dT1NYXRoLmltdWwoRixuZSk7bz1vK01hdGguaW11bChPLGZlKXwwO2g9aCtNYXRoLmltdWwoTyxzZSl8MDtoPWgrTWF0aC5pbXVsKEgsZmUpfDA7dT11K01hdGguaW11bChILHNlKXwwO289bytNYXRoLmltdWwoVCxoZSl8MDtoPWgrTWF0aC5pbXVsKFQsdWUpfDA7aD1oK01hdGguaW11bChqLGhlKXwwO3U9dStNYXRoLmltdWwoaix1ZSl8MDtvPW8rTWF0aC5pbXVsKEksY2UpfDA7aD1oK01hdGguaW11bChJLGxlKXwwO2g9aCtNYXRoLmltdWwoQyxjZSl8MDt1PXUrTWF0aC5pbXVsKEMsbGUpfDA7bz1vK01hdGguaW11bChOLHZlKXwwO2g9aCtNYXRoLmltdWwoTixiZSl8MDtoPWgrTWF0aC5pbXVsKFAsdmUpfDA7dT11K01hdGguaW11bChQLGJlKXwwO289bytNYXRoLmltdWwoRSx5ZSl8MDtoPWgrTWF0aC5pbXVsKEUsZ2UpfDA7aD1oK01hdGguaW11bChrLHllKXwwO3U9dStNYXRoLmltdWwoayxnZSl8MDt2YXIgQ2U9KHMrb3wwKSsoKGgmODE5MSk8PDEzKXwwO3M9KHUrKGg+Pj4xMyl8MCkrKENlPj4+MjYpfDA7Q2UmPTY3MTA4ODYzO289TWF0aC5pbXVsKHosZmUpO2g9TWF0aC5pbXVsKHosc2UpO2g9aCtNYXRoLmltdWwoRixmZSl8MDt1PU1hdGguaW11bChGLHNlKTtvPW8rTWF0aC5pbXVsKE8saGUpfDA7aD1oK01hdGguaW11bChPLHVlKXwwO2g9aCtNYXRoLmltdWwoSCxoZSl8MDt1PXUrTWF0aC5pbXVsKEgsdWUpfDA7bz1vK01hdGguaW11bChULGNlKXwwO2g9aCtNYXRoLmltdWwoVCxsZSl8MDtoPWgrTWF0aC5pbXVsKGosY2UpfDA7dT11K01hdGguaW11bChqLGxlKXwwO289bytNYXRoLmltdWwoSSx2ZSl8MDtoPWgrTWF0aC5pbXVsKEksYmUpfDA7aD1oK01hdGguaW11bChDLHZlKXwwO3U9dStNYXRoLmltdWwoQyxiZSl8MDtvPW8rTWF0aC5pbXVsKE4seWUpfDA7aD1oK01hdGguaW11bChOLGdlKXwwO2g9aCtNYXRoLmltdWwoUCx5ZSl8MDt1PXUrTWF0aC5pbXVsKFAsZ2UpfDA7dmFyIERlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhEZT4+PjI2KXwwO0RlJj02NzEwODg2MztvPU1hdGguaW11bCh6LGhlKTtoPU1hdGguaW11bCh6LHVlKTtoPWgrTWF0aC5pbXVsKEYsaGUpfDA7dT1NYXRoLmltdWwoRix1ZSk7bz1vK01hdGguaW11bChPLGNlKXwwO2g9aCtNYXRoLmltdWwoTyxsZSl8MDtoPWgrTWF0aC5pbXVsKEgsY2UpfDA7dT11K01hdGguaW11bChILGxlKXwwO289bytNYXRoLmltdWwoVCx2ZSl8MDtoPWgrTWF0aC5pbXVsKFQsYmUpfDA7aD1oK01hdGguaW11bChqLHZlKXwwO3U9dStNYXRoLmltdWwoaixiZSl8MDtvPW8rTWF0aC5pbXVsKEkseWUpfDA7aD1oK01hdGguaW11bChJLGdlKXwwO2g9aCtNYXRoLmltdWwoQyx5ZSl8MDt1PXUrTWF0aC5pbXVsKEMsZ2UpfDA7dmFyIFRlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhUZT4+PjI2KXwwO1RlJj02NzEwODg2MztvPU1hdGguaW11bCh6LGNlKTtoPU1hdGguaW11bCh6LGxlKTtoPWgrTWF0aC5pbXVsKEYsY2UpfDA7dT1NYXRoLmltdWwoRixsZSk7bz1vK01hdGguaW11bChPLHZlKXwwO2g9aCtNYXRoLmltdWwoTyxiZSl8MDtoPWgrTWF0aC5pbXVsKEgsdmUpfDA7dT11K01hdGguaW11bChILGJlKXwwO289bytNYXRoLmltdWwoVCx5ZSl8MDtoPWgrTWF0aC5pbXVsKFQsZ2UpfDA7aD1oK01hdGguaW11bChqLHllKXwwO3U9dStNYXRoLmltdWwoaixnZSl8MDt2YXIgamU9KHMrb3wwKSsoKGgmODE5MSk8PDEzKXwwO3M9KHUrKGg+Pj4xMyl8MCkrKGplPj4+MjYpfDA7amUmPTY3MTA4ODYzO289TWF0aC5pbXVsKHosdmUpO2g9TWF0aC5pbXVsKHosYmUpO2g9aCtNYXRoLmltdWwoRix2ZSl8MDt1PU1hdGguaW11bChGLGJlKTtvPW8rTWF0aC5pbXVsKE8seWUpfDA7aD1oK01hdGguaW11bChPLGdlKXwwO2g9aCtNYXRoLmltdWwoSCx5ZSl8MDt1PXUrTWF0aC5pbXVsKEgsZ2UpfDA7dmFyIHFlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhxZT4+PjI2KXwwO3FlJj02NzEwODg2MztvPU1hdGguaW11bCh6LHllKTtoPU1hdGguaW11bCh6LGdlKTtoPWgrTWF0aC5pbXVsKEYseWUpfDA7dT1NYXRoLmltdWwoRixnZSk7dmFyIE9lPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhPZT4+PjI2KXwwO09lJj02NzEwODg2MzthWzBdPV9lO2FbMV09d2U7YVsyXT1NZTthWzNdPVNlO2FbNF09QmU7YVs1XT1FZTthWzZdPWtlO2FbN109QWU7YVs4XT1OZTthWzldPVJlO2FbMTBdPVBlO2FbMTFdPXhlO2FbMTJdPUllO2FbMTNdPUNlO2FbMTRdPURlO2FbMTVdPVRlO2FbMTZdPWplO2FbMTddPXFlO2FbMThdPU9lO2lmKHMhPT0wKXthWzE5XT1zO3IubGVuZ3RoKyt9cmV0dXJuIHJ9O2lmKCFNYXRoLmltdWwpe289c21hbGxNdWxUb31mdW5jdGlvbiBiaWdNdWxUbyhlLHQscil7ci5uZWdhdGl2ZT10Lm5lZ2F0aXZlXmUubmVnYXRpdmU7ci5sZW5ndGg9ZS5sZW5ndGgrdC5sZW5ndGg7dmFyIGk9MDt2YXIgbj0wO2Zvcih2YXIgYT0wO2E8ci5sZW5ndGgtMTthKyspe3ZhciBzPW47bj0wO3ZhciBvPWkmNjcxMDg4NjM7dmFyIGg9TWF0aC5taW4oYSx0Lmxlbmd0aC0xKTtmb3IodmFyIHU9TWF0aC5tYXgoMCxhLWUubGVuZ3RoKzEpO3U8PWg7dSsrKXt2YXIgZD1hLXU7dmFyIGM9ZS53b3Jkc1tkXXwwO3ZhciBsPXQud29yZHNbdV18MDt2YXIgcD1jKmw7dmFyIHY9cCY2NzEwODg2MztzPXMrKHAvNjcxMDg4NjR8MCl8MDt2PXYrb3wwO289diY2NzEwODg2MztzPXMrKHY+Pj4yNil8MDtuKz1zPj4+MjY7cyY9NjcxMDg4NjN9ci53b3Jkc1thXT1vO2k9cztzPW59aWYoaSE9PTApe3Iud29yZHNbYV09aX1lbHNle3IubGVuZ3RoLS19cmV0dXJuIHIuc3RyaXAoKX1mdW5jdGlvbiBqdW1ib011bFRvKGUsdCxyKXt2YXIgaT1uZXcgRkZUTTtyZXR1cm4gaS5tdWxwKGUsdCxyKX1CTi5wcm90b3R5cGUubXVsVG89ZnVuY3Rpb24gbXVsVG8oZSx0KXt2YXIgcjt2YXIgaT10aGlzLmxlbmd0aCtlLmxlbmd0aDtpZih0aGlzLmxlbmd0aD09PTEwJiZlLmxlbmd0aD09PTEwKXtyPW8odGhpcyxlLHQpfWVsc2UgaWYoaTw2Myl7cj1zbWFsbE11bFRvKHRoaXMsZSx0KX1lbHNlIGlmKGk8MTAyNCl7cj1iaWdNdWxUbyh0aGlzLGUsdCl9ZWxzZXtyPWp1bWJvTXVsVG8odGhpcyxlLHQpfXJldHVybiByfTtmdW5jdGlvbiBGRlRNKGUsdCl7dGhpcy54PWU7dGhpcy55PXR9RkZUTS5wcm90b3R5cGUubWFrZVJCVD1mdW5jdGlvbiBtYWtlUkJUKGUpe3ZhciB0PW5ldyBBcnJheShlKTt2YXIgcj1CTi5wcm90b3R5cGUuX2NvdW50Qml0cyhlKS0xO2Zvcih2YXIgaT0wO2k8ZTtpKyspe3RbaV09dGhpcy5yZXZCaW4oaSxyLGUpfXJldHVybiB0fTtGRlRNLnByb3RvdHlwZS5yZXZCaW49ZnVuY3Rpb24gcmV2QmluKGUsdCxyKXtpZihlPT09MHx8ZT09PXItMSlyZXR1cm4gZTt2YXIgaT0wO2Zvcih2YXIgbj0wO248dDtuKyspe2l8PShlJjEpPDx0LW4tMTtlPj49MX1yZXR1cm4gaX07RkZUTS5wcm90b3R5cGUucGVybXV0ZT1mdW5jdGlvbiBwZXJtdXRlKGUsdCxyLGksbixhKXtmb3IodmFyIHM9MDtzPGE7cysrKXtpW3NdPXRbZVtzXV07bltzXT1yW2Vbc11dfX07RkZUTS5wcm90b3R5cGUudHJhbnNmb3JtPWZ1bmN0aW9uIHRyYW5zZm9ybShlLHQscixpLG4sYSl7dGhpcy5wZXJtdXRlKGEsZSx0LHIsaSxuKTtmb3IodmFyIHM9MTtzPG47czw8PTEpe3ZhciBvPXM8PDE7dmFyIGg9TWF0aC5jb3MoMipNYXRoLlBJL28pO3ZhciB1PU1hdGguc2luKDIqTWF0aC5QSS9vKTtmb3IodmFyIGQ9MDtkPG47ZCs9byl7dmFyIGM9aDt2YXIgbD11O2Zvcih2YXIgcD0wO3A8cztwKyspe3ZhciB2PXJbZCtwXTt2YXIgYj1pW2QrcF07dmFyIG09cltkK3Arc107dmFyIHk9aVtkK3Arc107dmFyIGc9YyptLWwqeTt5PWMqeStsKm07bT1nO3JbZCtwXT12K207aVtkK3BdPWIreTtyW2QrcCtzXT12LW07aVtkK3Arc109Yi15O2lmKHAhPT1vKXtnPWgqYy11Kmw7bD1oKmwrdSpjO2M9Z319fX19O0ZGVE0ucHJvdG90eXBlLmd1ZXNzTGVuMTNiPWZ1bmN0aW9uIGd1ZXNzTGVuMTNiKGUsdCl7dmFyIHI9TWF0aC5tYXgodCxlKXwxO3ZhciBpPXImMTt2YXIgbj0wO2ZvcihyPXIvMnwwO3I7cj1yPj4+MSl7bisrfXJldHVybiAxPDxuKzEraX07RkZUTS5wcm90b3R5cGUuY29uanVnYXRlPWZ1bmN0aW9uIGNvbmp1Z2F0ZShlLHQscil7aWYocjw9MSlyZXR1cm47Zm9yKHZhciBpPTA7aTxyLzI7aSsrKXt2YXIgbj1lW2ldO2VbaV09ZVtyLWktMV07ZVtyLWktMV09bjtuPXRbaV07dFtpXT0tdFtyLWktMV07dFtyLWktMV09LW59fTtGRlRNLnByb3RvdHlwZS5ub3JtYWxpemUxM2I9ZnVuY3Rpb24gbm9ybWFsaXplMTNiKGUsdCl7dmFyIHI9MDtmb3IodmFyIGk9MDtpPHQvMjtpKyspe3ZhciBuPU1hdGgucm91bmQoZVsyKmkrMV0vdCkqODE5MitNYXRoLnJvdW5kKGVbMippXS90KStyO2VbaV09biY2NzEwODg2MztpZihuPDY3MTA4ODY0KXtyPTB9ZWxzZXtyPW4vNjcxMDg4NjR8MH19cmV0dXJuIGV9O0ZGVE0ucHJvdG90eXBlLmNvbnZlcnQxM2I9ZnVuY3Rpb24gY29udmVydDEzYihlLHQscixpKXt2YXIgbj0wO2Zvcih2YXIgYT0wO2E8dDthKyspe249bisoZVthXXwwKTtyWzIqYV09biY4MTkxO249bj4+PjEzO3JbMiphKzFdPW4mODE5MTtuPW4+Pj4xM31mb3IoYT0yKnQ7YTxpOysrYSl7clthXT0wfWFzc2VydChuPT09MCk7YXNzZXJ0KChuJn44MTkxKT09PTApfTtGRlRNLnByb3RvdHlwZS5zdHViPWZ1bmN0aW9uIHN0dWIoZSl7dmFyIHQ9bmV3IEFycmF5KGUpO2Zvcih2YXIgcj0wO3I8ZTtyKyspe3Rbcl09MH1yZXR1cm4gdH07RkZUTS5wcm90b3R5cGUubXVscD1mdW5jdGlvbiBtdWxwKGUsdCxyKXt2YXIgaT0yKnRoaXMuZ3Vlc3NMZW4xM2IoZS5sZW5ndGgsdC5sZW5ndGgpO3ZhciBuPXRoaXMubWFrZVJCVChpKTt2YXIgYT10aGlzLnN0dWIoaSk7dmFyIHM9bmV3IEFycmF5KGkpO3ZhciBvPW5ldyBBcnJheShpKTt2YXIgaD1uZXcgQXJyYXkoaSk7dmFyIHU9bmV3IEFycmF5KGkpO3ZhciBkPW5ldyBBcnJheShpKTt2YXIgYz1uZXcgQXJyYXkoaSk7dmFyIGw9ci53b3JkcztsLmxlbmd0aD1pO3RoaXMuY29udmVydDEzYihlLndvcmRzLGUubGVuZ3RoLHMsaSk7dGhpcy5jb252ZXJ0MTNiKHQud29yZHMsdC5sZW5ndGgsdSxpKTt0aGlzLnRyYW5zZm9ybShzLGEsbyxoLGksbik7dGhpcy50cmFuc2Zvcm0odSxhLGQsYyxpLG4pO2Zvcih2YXIgcD0wO3A8aTtwKyspe3ZhciB2PW9bcF0qZFtwXS1oW3BdKmNbcF07aFtwXT1vW3BdKmNbcF0raFtwXSpkW3BdO29bcF09dn10aGlzLmNvbmp1Z2F0ZShvLGgsaSk7dGhpcy50cmFuc2Zvcm0obyxoLGwsYSxpLG4pO3RoaXMuY29uanVnYXRlKGwsYSxpKTt0aGlzLm5vcm1hbGl6ZTEzYihsLGkpO3IubmVnYXRpdmU9ZS5uZWdhdGl2ZV50Lm5lZ2F0aXZlO3IubGVuZ3RoPWUubGVuZ3RoK3QubGVuZ3RoO3JldHVybiByLnN0cmlwKCl9O0JOLnByb3RvdHlwZS5tdWw9ZnVuY3Rpb24gbXVsKGUpe3ZhciB0PW5ldyBCTihudWxsKTt0LndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCtlLmxlbmd0aCk7cmV0dXJuIHRoaXMubXVsVG8oZSx0KX07Qk4ucHJvdG90eXBlLm11bGY9ZnVuY3Rpb24gbXVsZihlKXt2YXIgdD1uZXcgQk4obnVsbCk7dC53b3Jkcz1uZXcgQXJyYXkodGhpcy5sZW5ndGgrZS5sZW5ndGgpO3JldHVybiBqdW1ib011bFRvKHRoaXMsZSx0KX07Qk4ucHJvdG90eXBlLmltdWw9ZnVuY3Rpb24gaW11bChlKXtyZXR1cm4gdGhpcy5jbG9uZSgpLm11bFRvKGUsdGhpcyl9O0JOLnByb3RvdHlwZS5pbXVsbj1mdW5jdGlvbiBpbXVsbihlKXthc3NlcnQodHlwZW9mIGU9PT1cIm51bWJlclwiKTthc3NlcnQoZTw2NzEwODg2NCk7dmFyIHQ9MDtmb3IodmFyIHI9MDtyPHRoaXMubGVuZ3RoO3IrKyl7dmFyIGk9KHRoaXMud29yZHNbcl18MCkqZTt2YXIgbj0oaSY2NzEwODg2MykrKHQmNjcxMDg4NjMpO3Q+Pj0yNjt0Kz1pLzY3MTA4ODY0fDA7dCs9bj4+PjI2O3RoaXMud29yZHNbcl09biY2NzEwODg2M31pZih0IT09MCl7dGhpcy53b3Jkc1tyXT10O3RoaXMubGVuZ3RoKyt9cmV0dXJuIHRoaXN9O0JOLnByb3RvdHlwZS5tdWxuPWZ1bmN0aW9uIG11bG4oZSl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pbXVsbihlKX07Qk4ucHJvdG90eXBlLnNxcj1mdW5jdGlvbiBzcXIoKXtyZXR1cm4gdGhpcy5tdWwodGhpcyl9O0JOLnByb3RvdHlwZS5pc3FyPWZ1bmN0aW9uIGlzcXIoKXtyZXR1cm4gdGhpcy5pbXVsKHRoaXMuY2xvbmUoKSl9O0JOLnByb3RvdHlwZS5wb3c9ZnVuY3Rpb24gcG93KGUpe3ZhciB0PXRvQml0QXJyYXkoZSk7aWYodC5sZW5ndGg9PT0wKXJldHVybiBuZXcgQk4oMSk7dmFyIHI9dGhpcztmb3IodmFyIGk9MDtpPHQubGVuZ3RoO2krKyxyPXIuc3FyKCkpe2lmKHRbaV0hPT0wKWJyZWFrfWlmKCsraTx0Lmxlbmd0aCl7Zm9yKHZhciBuPXIuc3FyKCk7aTx0Lmxlbmd0aDtpKyssbj1uLnNxcigpKXtpZih0W2ldPT09MCljb250aW51ZTtyPXIubXVsKG4pfX1yZXR1cm4gcn07Qk4ucHJvdG90eXBlLml1c2hsbj1mdW5jdGlvbiBpdXNobG4oZSl7YXNzZXJ0KHR5cGVvZiBlPT09XCJudW1iZXJcIiYmZT49MCk7dmFyIHQ9ZSUyNjt2YXIgcj0oZS10KS8yNjt2YXIgaT02NzEwODg2Mz4+PjI2LXQ8PDI2LXQ7dmFyIG47aWYodCE9PTApe3ZhciBhPTA7Zm9yKG49MDtuPHRoaXMubGVuZ3RoO24rKyl7dmFyIHM9dGhpcy53b3Jkc1tuXSZpO3ZhciBvPSh0aGlzLndvcmRzW25dfDApLXM8PHQ7dGhpcy53b3Jkc1tuXT1vfGE7YT1zPj4+MjYtdH1pZihhKXt0aGlzLndvcmRzW25dPWE7dGhpcy5sZW5ndGgrK319aWYociE9PTApe2ZvcihuPXRoaXMubGVuZ3RoLTE7bj49MDtuLS0pe3RoaXMud29yZHNbbityXT10aGlzLndvcmRzW25dfWZvcihuPTA7bjxyO24rKyl7dGhpcy53b3Jkc1tuXT0wfXRoaXMubGVuZ3RoKz1yfXJldHVybiB0aGlzLnN0cmlwKCl9O0JOLnByb3RvdHlwZS5pc2hsbj1mdW5jdGlvbiBpc2hsbihlKXthc3NlcnQodGhpcy5uZWdhdGl2ZT09PTApO3JldHVybiB0aGlzLml1c2hsbihlKX07Qk4ucHJvdG90eXBlLml1c2hybj1mdW5jdGlvbiBpdXNocm4oZSx0LHIpe2Fzc2VydCh0eXBlb2YgZT09PVwibnVtYmVyXCImJmU+PTApO3ZhciBpO2lmKHQpe2k9KHQtdCUyNikvMjZ9ZWxzZXtpPTB9dmFyIG49ZSUyNjt2YXIgYT1NYXRoLm1pbigoZS1uKS8yNix0aGlzLmxlbmd0aCk7dmFyIHM9NjcxMDg4NjNeNjcxMDg4NjM+Pj5uPDxuO3ZhciBvPXI7aS09YTtpPU1hdGgubWF4KDAsaSk7aWYobyl7Zm9yKHZhciBoPTA7aDxhO2grKyl7by53b3Jkc1toXT10aGlzLndvcmRzW2hdfW8ubGVuZ3RoPWF9aWYoYT09PTApe31lbHNlIGlmKHRoaXMubGVuZ3RoPmEpe3RoaXMubGVuZ3RoLT1hO2ZvcihoPTA7aDx0aGlzLmxlbmd0aDtoKyspe3RoaXMud29yZHNbaF09dGhpcy53b3Jkc1toK2FdfX1lbHNle3RoaXMud29yZHNbMF09MDt0aGlzLmxlbmd0aD0xfXZhciB1PTA7Zm9yKGg9dGhpcy5sZW5ndGgtMTtoPj0wJiYodSE9PTB8fGg+PWkpO2gtLSl7dmFyIGQ9dGhpcy53b3Jkc1toXXwwO3RoaXMud29yZHNbaF09dTw8MjYtbnxkPj4+bjt1PWQmc31pZihvJiZ1IT09MCl7by53b3Jkc1tvLmxlbmd0aCsrXT11fWlmKHRoaXMubGVuZ3RoPT09MCl7dGhpcy53b3Jkc1swXT0wO3RoaXMubGVuZ3RoPTF9cmV0dXJuIHRoaXMuc3RyaXAoKX07Qk4ucHJvdG90eXBlLmlzaHJuPWZ1bmN0aW9uIGlzaHJuKGUsdCxyKXthc3NlcnQodGhpcy5uZWdhdGl2ZT09PTApO3JldHVybiB0aGlzLml1c2hybihlLHQscil9O0JOLnByb3RvdHlwZS5zaGxuPWZ1bmN0aW9uIHNobG4oZSl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pc2hsbihlKX07Qk4ucHJvdG90eXBlLnVzaGxuPWZ1bmN0aW9uIHVzaGxuKGUpe3JldHVybiB0aGlzLmNsb25lKCkuaXVzaGxuKGUpfTtCTi5wcm90b3R5cGUuc2hybj1mdW5jdGlvbiBzaHJuKGUpe3JldHVybiB0aGlzLmNsb25lKCkuaXNocm4oZSl9O0JOLnByb3RvdHlwZS51c2hybj1mdW5jdGlvbiB1c2hybihlKXtyZXR1cm4gdGhpcy5jbG9uZSgpLml1c2hybihlKX07Qk4ucHJvdG90eXBlLnRlc3RuPWZ1bmN0aW9uIHRlc3RuKGUpe2Fzc2VydCh0eXBlb2YgZT09PVwibnVtYmVyXCImJmU+PTApO3ZhciB0PWUlMjY7dmFyIHI9KGUtdCkvMjY7dmFyIGk9MTw8dDtpZih0aGlzLmxlbmd0aDw9cilyZXR1cm4gZmFsc2U7dmFyIG49dGhpcy53b3Jkc1tyXTtyZXR1cm4hIShuJmkpfTtCTi5wcm90b3R5cGUuaW1hc2tuPWZ1bmN0aW9uIGltYXNrbihlKXthc3NlcnQodHlwZW9mIGU9PT1cIm51bWJlclwiJiZlPj0wKTt2YXIgdD1lJTI2O3ZhciByPShlLXQpLzI2O2Fzc2VydCh0aGlzLm5lZ2F0aXZlPT09MCxcImltYXNrbiB3b3JrcyBvbmx5IHdpdGggcG9zaXRpdmUgbnVtYmVyc1wiKTtpZih0aGlzLmxlbmd0aDw9cil7cmV0dXJuIHRoaXN9aWYodCE9PTApe3IrK310aGlzLmxlbmd0aD1NYXRoLm1pbihyLHRoaXMubGVuZ3RoKTtpZih0IT09MCl7dmFyIGk9NjcxMDg4NjNeNjcxMDg4NjM+Pj50PDx0O3RoaXMud29yZHNbdGhpcy5sZW5ndGgtMV0mPWl9cmV0dXJuIHRoaXMuc3RyaXAoKX07Qk4ucHJvdG90eXBlLm1hc2tuPWZ1bmN0aW9uIG1hc2tuKGUpe3JldHVybiB0aGlzLmNsb25lKCkuaW1hc2tuKGUpfTtCTi5wcm90b3R5cGUuaWFkZG49ZnVuY3Rpb24gaWFkZG4oZSl7YXNzZXJ0KHR5cGVvZiBlPT09XCJudW1iZXJcIik7YXNzZXJ0KGU8NjcxMDg4NjQpO2lmKGU8MClyZXR1cm4gdGhpcy5pc3VibigtZSk7aWYodGhpcy5uZWdhdGl2ZSE9PTApe2lmKHRoaXMubGVuZ3RoPT09MSYmKHRoaXMud29yZHNbMF18MCk8ZSl7dGhpcy53b3Jkc1swXT1lLSh0aGlzLndvcmRzWzBdfDApO3RoaXMubmVnYXRpdmU9MDtyZXR1cm4gdGhpc310aGlzLm5lZ2F0aXZlPTA7dGhpcy5pc3VibihlKTt0aGlzLm5lZ2F0aXZlPTE7cmV0dXJuIHRoaXN9cmV0dXJuIHRoaXMuX2lhZGRuKGUpfTtCTi5wcm90b3R5cGUuX2lhZGRuPWZ1bmN0aW9uIF9pYWRkbihlKXt0aGlzLndvcmRzWzBdKz1lO2Zvcih2YXIgdD0wO3Q8dGhpcy5sZW5ndGgmJnRoaXMud29yZHNbdF0+PTY3MTA4ODY0O3QrKyl7dGhpcy53b3Jkc1t0XS09NjcxMDg4NjQ7aWYodD09PXRoaXMubGVuZ3RoLTEpe3RoaXMud29yZHNbdCsxXT0xfWVsc2V7dGhpcy53b3Jkc1t0KzFdKyt9fXRoaXMubGVuZ3RoPU1hdGgubWF4KHRoaXMubGVuZ3RoLHQrMSk7cmV0dXJuIHRoaXN9O0JOLnByb3RvdHlwZS5pc3Vibj1mdW5jdGlvbiBpc3VibihlKXthc3NlcnQodHlwZW9mIGU9PT1cIm51bWJlclwiKTthc3NlcnQoZTw2NzEwODg2NCk7aWYoZTwwKXJldHVybiB0aGlzLmlhZGRuKC1lKTtpZih0aGlzLm5lZ2F0aXZlIT09MCl7dGhpcy5uZWdhdGl2ZT0wO3RoaXMuaWFkZG4oZSk7dGhpcy5uZWdhdGl2ZT0xO3JldHVybiB0aGlzfXRoaXMud29yZHNbMF0tPWU7aWYodGhpcy5sZW5ndGg9PT0xJiZ0aGlzLndvcmRzWzBdPDApe3RoaXMud29yZHNbMF09LXRoaXMud29yZHNbMF07dGhpcy5uZWdhdGl2ZT0xfWVsc2V7Zm9yKHZhciB0PTA7dDx0aGlzLmxlbmd0aCYmdGhpcy53b3Jkc1t0XTwwO3QrKyl7dGhpcy53b3Jkc1t0XSs9NjcxMDg4NjQ7dGhpcy53b3Jkc1t0KzFdLT0xfX1yZXR1cm4gdGhpcy5zdHJpcCgpfTtCTi5wcm90b3R5cGUuYWRkbj1mdW5jdGlvbiBhZGRuKGUpe3JldHVybiB0aGlzLmNsb25lKCkuaWFkZG4oZSl9O0JOLnByb3RvdHlwZS5zdWJuPWZ1bmN0aW9uIHN1Ym4oZSl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pc3VibihlKX07Qk4ucHJvdG90eXBlLmlhYnM9ZnVuY3Rpb24gaWFicygpe3RoaXMubmVnYXRpdmU9MDtyZXR1cm4gdGhpc307Qk4ucHJvdG90eXBlLmFicz1mdW5jdGlvbiBhYnMoKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmlhYnMoKX07Qk4ucHJvdG90eXBlLl9pc2hsbnN1Ym11bD1mdW5jdGlvbiBfaXNobG5zdWJtdWwoZSx0LHIpe3ZhciBpPWUubGVuZ3RoK3I7dmFyIG47dGhpcy5fZXhwYW5kKGkpO3ZhciBhO3ZhciBzPTA7Zm9yKG49MDtuPGUubGVuZ3RoO24rKyl7YT0odGhpcy53b3Jkc1tuK3JdfDApK3M7dmFyIG89KGUud29yZHNbbl18MCkqdDthLT1vJjY3MTA4ODYzO3M9KGE+PjI2KS0oby82NzEwODg2NHwwKTt0aGlzLndvcmRzW24rcl09YSY2NzEwODg2M31mb3IoO248dGhpcy5sZW5ndGgtcjtuKyspe2E9KHRoaXMud29yZHNbbityXXwwKStzO3M9YT4+MjY7dGhpcy53b3Jkc1tuK3JdPWEmNjcxMDg4NjN9aWYocz09PTApcmV0dXJuIHRoaXMuc3RyaXAoKTthc3NlcnQocz09PS0xKTtzPTA7Zm9yKG49MDtuPHRoaXMubGVuZ3RoO24rKyl7YT0tKHRoaXMud29yZHNbbl18MCkrcztzPWE+PjI2O3RoaXMud29yZHNbbl09YSY2NzEwODg2M310aGlzLm5lZ2F0aXZlPTE7cmV0dXJuIHRoaXMuc3RyaXAoKX07Qk4ucHJvdG90eXBlLl93b3JkRGl2PWZ1bmN0aW9uIF93b3JkRGl2KGUsdCl7dmFyIHI9dGhpcy5sZW5ndGgtZS5sZW5ndGg7dmFyIGk9dGhpcy5jbG9uZSgpO3ZhciBuPWU7dmFyIGE9bi53b3Jkc1tuLmxlbmd0aC0xXXwwO3ZhciBzPXRoaXMuX2NvdW50Qml0cyhhKTtyPTI2LXM7aWYociE9PTApe249bi51c2hsbihyKTtpLml1c2hsbihyKTthPW4ud29yZHNbbi5sZW5ndGgtMV18MH12YXIgbz1pLmxlbmd0aC1uLmxlbmd0aDt2YXIgaDtpZih0IT09XCJtb2RcIil7aD1uZXcgQk4obnVsbCk7aC5sZW5ndGg9bysxO2gud29yZHM9bmV3IEFycmF5KGgubGVuZ3RoKTtmb3IodmFyIHU9MDt1PGgubGVuZ3RoO3UrKyl7aC53b3Jkc1t1XT0wfX12YXIgZD1pLmNsb25lKCkuX2lzaGxuc3VibXVsKG4sMSxvKTtpZihkLm5lZ2F0aXZlPT09MCl7aT1kO2lmKGgpe2gud29yZHNbb109MX19Zm9yKHZhciBjPW8tMTtjPj0wO2MtLSl7dmFyIGw9KGkud29yZHNbbi5sZW5ndGgrY118MCkqNjcxMDg4NjQrKGkud29yZHNbbi5sZW5ndGgrYy0xXXwwKTtsPU1hdGgubWluKGwvYXwwLDY3MTA4ODYzKTtpLl9pc2hsbnN1Ym11bChuLGwsYyk7d2hpbGUoaS5uZWdhdGl2ZSE9PTApe2wtLTtpLm5lZ2F0aXZlPTA7aS5faXNobG5zdWJtdWwobiwxLGMpO2lmKCFpLmlzWmVybygpKXtpLm5lZ2F0aXZlXj0xfX1pZihoKXtoLndvcmRzW2NdPWx9fWlmKGgpe2guc3RyaXAoKX1pLnN0cmlwKCk7aWYodCE9PVwiZGl2XCImJnIhPT0wKXtpLml1c2hybihyKX1yZXR1cm57ZGl2Omh8fG51bGwsbW9kOml9fTtCTi5wcm90b3R5cGUuZGl2bW9kPWZ1bmN0aW9uIGRpdm1vZChlLHQscil7YXNzZXJ0KCFlLmlzWmVybygpKTtpZih0aGlzLmlzWmVybygpKXtyZXR1cm57ZGl2Om5ldyBCTigwKSxtb2Q6bmV3IEJOKDApfX12YXIgaSxuLGE7aWYodGhpcy5uZWdhdGl2ZSE9PTAmJmUubmVnYXRpdmU9PT0wKXthPXRoaXMubmVnKCkuZGl2bW9kKGUsdCk7aWYodCE9PVwibW9kXCIpe2k9YS5kaXYubmVnKCl9aWYodCE9PVwiZGl2XCIpe249YS5tb2QubmVnKCk7aWYociYmbi5uZWdhdGl2ZSE9PTApe24uaWFkZChlKX19cmV0dXJue2RpdjppLG1vZDpufX1pZih0aGlzLm5lZ2F0aXZlPT09MCYmZS5uZWdhdGl2ZSE9PTApe2E9dGhpcy5kaXZtb2QoZS5uZWcoKSx0KTtpZih0IT09XCJtb2RcIil7aT1hLmRpdi5uZWcoKX1yZXR1cm57ZGl2OmksbW9kOmEubW9kfX1pZigodGhpcy5uZWdhdGl2ZSZlLm5lZ2F0aXZlKSE9PTApe2E9dGhpcy5uZWcoKS5kaXZtb2QoZS5uZWcoKSx0KTtpZih0IT09XCJkaXZcIil7bj1hLm1vZC5uZWcoKTtpZihyJiZuLm5lZ2F0aXZlIT09MCl7bi5pc3ViKGUpfX1yZXR1cm57ZGl2OmEuZGl2LG1vZDpufX1pZihlLmxlbmd0aD50aGlzLmxlbmd0aHx8dGhpcy5jbXAoZSk8MCl7cmV0dXJue2RpdjpuZXcgQk4oMCksbW9kOnRoaXN9fWlmKGUubGVuZ3RoPT09MSl7aWYodD09PVwiZGl2XCIpe3JldHVybntkaXY6dGhpcy5kaXZuKGUud29yZHNbMF0pLG1vZDpudWxsfX1pZih0PT09XCJtb2RcIil7cmV0dXJue2RpdjpudWxsLG1vZDpuZXcgQk4odGhpcy5tb2RuKGUud29yZHNbMF0pKX19cmV0dXJue2Rpdjp0aGlzLmRpdm4oZS53b3Jkc1swXSksbW9kOm5ldyBCTih0aGlzLm1vZG4oZS53b3Jkc1swXSkpfX1yZXR1cm4gdGhpcy5fd29yZERpdihlLHQpfTtCTi5wcm90b3R5cGUuZGl2PWZ1bmN0aW9uIGRpdihlKXtyZXR1cm4gdGhpcy5kaXZtb2QoZSxcImRpdlwiLGZhbHNlKS5kaXZ9O0JOLnByb3RvdHlwZS5tb2Q9ZnVuY3Rpb24gbW9kKGUpe3JldHVybiB0aGlzLmRpdm1vZChlLFwibW9kXCIsZmFsc2UpLm1vZH07Qk4ucHJvdG90eXBlLnVtb2Q9ZnVuY3Rpb24gdW1vZChlKXtyZXR1cm4gdGhpcy5kaXZtb2QoZSxcIm1vZFwiLHRydWUpLm1vZH07Qk4ucHJvdG90eXBlLmRpdlJvdW5kPWZ1bmN0aW9uIGRpdlJvdW5kKGUpe3ZhciB0PXRoaXMuZGl2bW9kKGUpO2lmKHQubW9kLmlzWmVybygpKXJldHVybiB0LmRpdjt2YXIgcj10LmRpdi5uZWdhdGl2ZSE9PTA/dC5tb2QuaXN1YihlKTp0Lm1vZDt2YXIgaT1lLnVzaHJuKDEpO3ZhciBuPWUuYW5kbG4oMSk7dmFyIGE9ci5jbXAoaSk7aWYoYTwwfHxuPT09MSYmYT09PTApcmV0dXJuIHQuZGl2O3JldHVybiB0LmRpdi5uZWdhdGl2ZSE9PTA/dC5kaXYuaXN1Ym4oMSk6dC5kaXYuaWFkZG4oMSl9O0JOLnByb3RvdHlwZS5tb2RuPWZ1bmN0aW9uIG1vZG4oZSl7YXNzZXJ0KGU8PTY3MTA4ODYzKTt2YXIgdD0oMTw8MjYpJWU7dmFyIHI9MDtmb3IodmFyIGk9dGhpcy5sZW5ndGgtMTtpPj0wO2ktLSl7cj0odCpyKyh0aGlzLndvcmRzW2ldfDApKSVlfXJldHVybiByfTtCTi5wcm90b3R5cGUuaWRpdm49ZnVuY3Rpb24gaWRpdm4oZSl7YXNzZXJ0KGU8PTY3MTA4ODYzKTt2YXIgdD0wO2Zvcih2YXIgcj10aGlzLmxlbmd0aC0xO3I+PTA7ci0tKXt2YXIgaT0odGhpcy53b3Jkc1tyXXwwKSt0KjY3MTA4ODY0O3RoaXMud29yZHNbcl09aS9lfDA7dD1pJWV9cmV0dXJuIHRoaXMuc3RyaXAoKX07Qk4ucHJvdG90eXBlLmRpdm49ZnVuY3Rpb24gZGl2bihlKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmlkaXZuKGUpfTtCTi5wcm90b3R5cGUuZWdjZD1mdW5jdGlvbiBlZ2NkKGUpe2Fzc2VydChlLm5lZ2F0aXZlPT09MCk7YXNzZXJ0KCFlLmlzWmVybygpKTt2YXIgdD10aGlzO3ZhciByPWUuY2xvbmUoKTtpZih0Lm5lZ2F0aXZlIT09MCl7dD10LnVtb2QoZSl9ZWxzZXt0PXQuY2xvbmUoKX12YXIgaT1uZXcgQk4oMSk7dmFyIG49bmV3IEJOKDApO3ZhciBhPW5ldyBCTigwKTt2YXIgcz1uZXcgQk4oMSk7dmFyIG89MDt3aGlsZSh0LmlzRXZlbigpJiZyLmlzRXZlbigpKXt0Lml1c2hybigxKTtyLml1c2hybigxKTsrK299dmFyIGg9ci5jbG9uZSgpO3ZhciB1PXQuY2xvbmUoKTt3aGlsZSghdC5pc1plcm8oKSl7Zm9yKHZhciBkPTAsYz0xOyh0LndvcmRzWzBdJmMpPT09MCYmZDwyNjsrK2QsYzw8PTEpO2lmKGQ+MCl7dC5pdXNocm4oZCk7d2hpbGUoZC0tID4wKXtpZihpLmlzT2RkKCl8fG4uaXNPZGQoKSl7aS5pYWRkKGgpO24uaXN1Yih1KX1pLml1c2hybigxKTtuLml1c2hybigxKX19Zm9yKHZhciBsPTAscD0xOyhyLndvcmRzWzBdJnApPT09MCYmbDwyNjsrK2wscDw8PTEpO2lmKGw+MCl7ci5pdXNocm4obCk7d2hpbGUobC0tID4wKXtpZihhLmlzT2RkKCl8fHMuaXNPZGQoKSl7YS5pYWRkKGgpO3MuaXN1Yih1KX1hLml1c2hybigxKTtzLml1c2hybigxKX19aWYodC5jbXAocik+PTApe3QuaXN1YihyKTtpLmlzdWIoYSk7bi5pc3ViKHMpfWVsc2V7ci5pc3ViKHQpO2EuaXN1YihpKTtzLmlzdWIobil9fXJldHVybnthOmEsYjpzLGdjZDpyLml1c2hsbihvKX19O0JOLnByb3RvdHlwZS5faW52bXA9ZnVuY3Rpb24gX2ludm1wKGUpe2Fzc2VydChlLm5lZ2F0aXZlPT09MCk7YXNzZXJ0KCFlLmlzWmVybygpKTt2YXIgdD10aGlzO3ZhciByPWUuY2xvbmUoKTtpZih0Lm5lZ2F0aXZlIT09MCl7dD10LnVtb2QoZSl9ZWxzZXt0PXQuY2xvbmUoKX12YXIgaT1uZXcgQk4oMSk7dmFyIG49bmV3IEJOKDApO3ZhciBhPXIuY2xvbmUoKTt3aGlsZSh0LmNtcG4oMSk+MCYmci5jbXBuKDEpPjApe2Zvcih2YXIgcz0wLG89MTsodC53b3Jkc1swXSZvKT09PTAmJnM8MjY7KytzLG88PD0xKTtpZihzPjApe3QuaXVzaHJuKHMpO3doaWxlKHMtLSA+MCl7aWYoaS5pc09kZCgpKXtpLmlhZGQoYSl9aS5pdXNocm4oMSl9fWZvcih2YXIgaD0wLHU9MTsoci53b3Jkc1swXSZ1KT09PTAmJmg8MjY7KytoLHU8PD0xKTtpZihoPjApe3IuaXVzaHJuKGgpO3doaWxlKGgtLSA+MCl7aWYobi5pc09kZCgpKXtuLmlhZGQoYSl9bi5pdXNocm4oMSl9fWlmKHQuY21wKHIpPj0wKXt0LmlzdWIocik7aS5pc3ViKG4pfWVsc2V7ci5pc3ViKHQpO24uaXN1YihpKX19dmFyIGQ7aWYodC5jbXBuKDEpPT09MCl7ZD1pfWVsc2V7ZD1ufWlmKGQuY21wbigwKTwwKXtkLmlhZGQoZSl9cmV0dXJuIGR9O0JOLnByb3RvdHlwZS5nY2Q9ZnVuY3Rpb24gZ2NkKGUpe2lmKHRoaXMuaXNaZXJvKCkpcmV0dXJuIGUuYWJzKCk7aWYoZS5pc1plcm8oKSlyZXR1cm4gdGhpcy5hYnMoKTt2YXIgdD10aGlzLmNsb25lKCk7dmFyIHI9ZS5jbG9uZSgpO3QubmVnYXRpdmU9MDtyLm5lZ2F0aXZlPTA7Zm9yKHZhciBpPTA7dC5pc0V2ZW4oKSYmci5pc0V2ZW4oKTtpKyspe3QuaXVzaHJuKDEpO3IuaXVzaHJuKDEpfWRve3doaWxlKHQuaXNFdmVuKCkpe3QuaXVzaHJuKDEpfXdoaWxlKHIuaXNFdmVuKCkpe3IuaXVzaHJuKDEpfXZhciBuPXQuY21wKHIpO2lmKG48MCl7dmFyIGE9dDt0PXI7cj1hfWVsc2UgaWYobj09PTB8fHIuY21wbigxKT09PTApe2JyZWFrfXQuaXN1YihyKX13aGlsZSh0cnVlKTtyZXR1cm4gci5pdXNobG4oaSl9O0JOLnByb3RvdHlwZS5pbnZtPWZ1bmN0aW9uIGludm0oZSl7cmV0dXJuIHRoaXMuZWdjZChlKS5hLnVtb2QoZSl9O0JOLnByb3RvdHlwZS5pc0V2ZW49ZnVuY3Rpb24gaXNFdmVuKCl7cmV0dXJuKHRoaXMud29yZHNbMF0mMSk9PT0wfTtCTi5wcm90b3R5cGUuaXNPZGQ9ZnVuY3Rpb24gaXNPZGQoKXtyZXR1cm4odGhpcy53b3Jkc1swXSYxKT09PTF9O0JOLnByb3RvdHlwZS5hbmRsbj1mdW5jdGlvbiBhbmRsbihlKXtyZXR1cm4gdGhpcy53b3Jkc1swXSZlfTtCTi5wcm90b3R5cGUuYmluY249ZnVuY3Rpb24gYmluY24oZSl7YXNzZXJ0KHR5cGVvZiBlPT09XCJudW1iZXJcIik7dmFyIHQ9ZSUyNjt2YXIgcj0oZS10KS8yNjt2YXIgaT0xPDx0O2lmKHRoaXMubGVuZ3RoPD1yKXt0aGlzLl9leHBhbmQocisxKTt0aGlzLndvcmRzW3JdfD1pO3JldHVybiB0aGlzfXZhciBuPWk7Zm9yKHZhciBhPXI7biE9PTAmJmE8dGhpcy5sZW5ndGg7YSsrKXt2YXIgcz10aGlzLndvcmRzW2FdfDA7cys9bjtuPXM+Pj4yNjtzJj02NzEwODg2Mzt0aGlzLndvcmRzW2FdPXN9aWYobiE9PTApe3RoaXMud29yZHNbYV09bjt0aGlzLmxlbmd0aCsrfXJldHVybiB0aGlzfTtCTi5wcm90b3R5cGUuaXNaZXJvPWZ1bmN0aW9uIGlzWmVybygpe3JldHVybiB0aGlzLmxlbmd0aD09PTEmJnRoaXMud29yZHNbMF09PT0wfTtCTi5wcm90b3R5cGUuY21wbj1mdW5jdGlvbiBjbXBuKGUpe3ZhciB0PWU8MDtpZih0aGlzLm5lZ2F0aXZlIT09MCYmIXQpcmV0dXJuLTE7aWYodGhpcy5uZWdhdGl2ZT09PTAmJnQpcmV0dXJuIDE7dGhpcy5zdHJpcCgpO3ZhciByO2lmKHRoaXMubGVuZ3RoPjEpe3I9MX1lbHNle2lmKHQpe2U9LWV9YXNzZXJ0KGU8PTY3MTA4ODYzLFwiTnVtYmVyIGlzIHRvbyBiaWdcIik7dmFyIGk9dGhpcy53b3Jkc1swXXwwO3I9aT09PWU/MDppPGU/LTE6MX1pZih0aGlzLm5lZ2F0aXZlIT09MClyZXR1cm4tcnwwO3JldHVybiByfTtCTi5wcm90b3R5cGUuY21wPWZ1bmN0aW9uIGNtcChlKXtpZih0aGlzLm5lZ2F0aXZlIT09MCYmZS5uZWdhdGl2ZT09PTApcmV0dXJuLTE7aWYodGhpcy5uZWdhdGl2ZT09PTAmJmUubmVnYXRpdmUhPT0wKXJldHVybiAxO3ZhciB0PXRoaXMudWNtcChlKTtpZih0aGlzLm5lZ2F0aXZlIT09MClyZXR1cm4tdHwwO3JldHVybiB0fTtCTi5wcm90b3R5cGUudWNtcD1mdW5jdGlvbiB1Y21wKGUpe2lmKHRoaXMubGVuZ3RoPmUubGVuZ3RoKXJldHVybiAxO2lmKHRoaXMubGVuZ3RoPGUubGVuZ3RoKXJldHVybi0xO3ZhciB0PTA7Zm9yKHZhciByPXRoaXMubGVuZ3RoLTE7cj49MDtyLS0pe3ZhciBpPXRoaXMud29yZHNbcl18MDt2YXIgbj1lLndvcmRzW3JdfDA7aWYoaT09PW4pY29udGludWU7aWYoaTxuKXt0PS0xfWVsc2UgaWYoaT5uKXt0PTF9YnJlYWt9cmV0dXJuIHR9O0JOLnByb3RvdHlwZS5ndG49ZnVuY3Rpb24gZ3RuKGUpe3JldHVybiB0aGlzLmNtcG4oZSk9PT0xfTtCTi5wcm90b3R5cGUuZ3Q9ZnVuY3Rpb24gZ3QoZSl7cmV0dXJuIHRoaXMuY21wKGUpPT09MX07Qk4ucHJvdG90eXBlLmd0ZW49ZnVuY3Rpb24gZ3RlbihlKXtyZXR1cm4gdGhpcy5jbXBuKGUpPj0wfTtCTi5wcm90b3R5cGUuZ3RlPWZ1bmN0aW9uIGd0ZShlKXtyZXR1cm4gdGhpcy5jbXAoZSk+PTB9O0JOLnByb3RvdHlwZS5sdG49ZnVuY3Rpb24gbHRuKGUpe3JldHVybiB0aGlzLmNtcG4oZSk9PT0tMX07Qk4ucHJvdG90eXBlLmx0PWZ1bmN0aW9uIGx0KGUpe3JldHVybiB0aGlzLmNtcChlKT09PS0xfTtCTi5wcm90b3R5cGUubHRlbj1mdW5jdGlvbiBsdGVuKGUpe3JldHVybiB0aGlzLmNtcG4oZSk8PTB9O0JOLnByb3RvdHlwZS5sdGU9ZnVuY3Rpb24gbHRlKGUpe3JldHVybiB0aGlzLmNtcChlKTw9MH07Qk4ucHJvdG90eXBlLmVxbj1mdW5jdGlvbiBlcW4oZSl7cmV0dXJuIHRoaXMuY21wbihlKT09PTB9O0JOLnByb3RvdHlwZS5lcT1mdW5jdGlvbiBlcShlKXtyZXR1cm4gdGhpcy5jbXAoZSk9PT0wfTtCTi5yZWQ9ZnVuY3Rpb24gcmVkKGUpe3JldHVybiBuZXcgUmVkKGUpfTtCTi5wcm90b3R5cGUudG9SZWQ9ZnVuY3Rpb24gdG9SZWQoZSl7YXNzZXJ0KCF0aGlzLnJlZCxcIkFscmVhZHkgYSBudW1iZXIgaW4gcmVkdWN0aW9uIGNvbnRleHRcIik7YXNzZXJ0KHRoaXMubmVnYXRpdmU9PT0wLFwicmVkIHdvcmtzIG9ubHkgd2l0aCBwb3NpdGl2ZXNcIik7cmV0dXJuIGUuY29udmVydFRvKHRoaXMpLl9mb3JjZVJlZChlKX07Qk4ucHJvdG90eXBlLmZyb21SZWQ9ZnVuY3Rpb24gZnJvbVJlZCgpe2Fzc2VydCh0aGlzLnJlZCxcImZyb21SZWQgd29ya3Mgb25seSB3aXRoIG51bWJlcnMgaW4gcmVkdWN0aW9uIGNvbnRleHRcIik7cmV0dXJuIHRoaXMucmVkLmNvbnZlcnRGcm9tKHRoaXMpfTtCTi5wcm90b3R5cGUuX2ZvcmNlUmVkPWZ1bmN0aW9uIF9mb3JjZVJlZChlKXt0aGlzLnJlZD1lO3JldHVybiB0aGlzfTtCTi5wcm90b3R5cGUuZm9yY2VSZWQ9ZnVuY3Rpb24gZm9yY2VSZWQoZSl7YXNzZXJ0KCF0aGlzLnJlZCxcIkFscmVhZHkgYSBudW1iZXIgaW4gcmVkdWN0aW9uIGNvbnRleHRcIik7cmV0dXJuIHRoaXMuX2ZvcmNlUmVkKGUpfTtCTi5wcm90b3R5cGUucmVkQWRkPWZ1bmN0aW9uIHJlZEFkZChlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRBZGQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3JldHVybiB0aGlzLnJlZC5hZGQodGhpcyxlKX07Qk4ucHJvdG90eXBlLnJlZElBZGQ9ZnVuY3Rpb24gcmVkSUFkZChlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRJQWRkIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKTtyZXR1cm4gdGhpcy5yZWQuaWFkZCh0aGlzLGUpfTtCTi5wcm90b3R5cGUucmVkU3ViPWZ1bmN0aW9uIHJlZFN1YihlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRTdWIgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3JldHVybiB0aGlzLnJlZC5zdWIodGhpcyxlKX07Qk4ucHJvdG90eXBlLnJlZElTdWI9ZnVuY3Rpb24gcmVkSVN1YihlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRJU3ViIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKTtyZXR1cm4gdGhpcy5yZWQuaXN1Yih0aGlzLGUpfTtCTi5wcm90b3R5cGUucmVkU2hsPWZ1bmN0aW9uIHJlZFNobChlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRTaGwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3JldHVybiB0aGlzLnJlZC5zaGwodGhpcyxlKX07Qk4ucHJvdG90eXBlLnJlZE11bD1mdW5jdGlvbiByZWRNdWwoZSl7YXNzZXJ0KHRoaXMucmVkLFwicmVkTXVsIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKTt0aGlzLnJlZC5fdmVyaWZ5Mih0aGlzLGUpO3JldHVybiB0aGlzLnJlZC5tdWwodGhpcyxlKX07Qk4ucHJvdG90eXBlLnJlZElNdWw9ZnVuY3Rpb24gcmVkSU11bChlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRNdWwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3RoaXMucmVkLl92ZXJpZnkyKHRoaXMsZSk7cmV0dXJuIHRoaXMucmVkLmltdWwodGhpcyxlKX07Qk4ucHJvdG90eXBlLnJlZFNxcj1mdW5jdGlvbiByZWRTcXIoKXthc3NlcnQodGhpcy5yZWQsXCJyZWRTcXIgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3RoaXMucmVkLl92ZXJpZnkxKHRoaXMpO3JldHVybiB0aGlzLnJlZC5zcXIodGhpcyl9O0JOLnByb3RvdHlwZS5yZWRJU3FyPWZ1bmN0aW9uIHJlZElTcXIoKXthc3NlcnQodGhpcy5yZWQsXCJyZWRJU3FyIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKTt0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTtyZXR1cm4gdGhpcy5yZWQuaXNxcih0aGlzKX07Qk4ucHJvdG90eXBlLnJlZFNxcnQ9ZnVuY3Rpb24gcmVkU3FydCgpe2Fzc2VydCh0aGlzLnJlZCxcInJlZFNxcnQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3RoaXMucmVkLl92ZXJpZnkxKHRoaXMpO3JldHVybiB0aGlzLnJlZC5zcXJ0KHRoaXMpfTtCTi5wcm90b3R5cGUucmVkSW52bT1mdW5jdGlvbiByZWRJbnZtKCl7YXNzZXJ0KHRoaXMucmVkLFwicmVkSW52bSB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIik7dGhpcy5yZWQuX3ZlcmlmeTEodGhpcyk7cmV0dXJuIHRoaXMucmVkLmludm0odGhpcyl9O0JOLnByb3RvdHlwZS5yZWROZWc9ZnVuY3Rpb24gcmVkTmVnKCl7YXNzZXJ0KHRoaXMucmVkLFwicmVkTmVnIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKTt0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTtyZXR1cm4gdGhpcy5yZWQubmVnKHRoaXMpfTtCTi5wcm90b3R5cGUucmVkUG93PWZ1bmN0aW9uIHJlZFBvdyhlKXthc3NlcnQodGhpcy5yZWQmJiFlLnJlZCxcInJlZFBvdyhub3JtYWxOdW0pXCIpO3RoaXMucmVkLl92ZXJpZnkxKHRoaXMpO3JldHVybiB0aGlzLnJlZC5wb3codGhpcyxlKX07dmFyIGg9e2syNTY6bnVsbCxwMjI0Om51bGwscDE5MjpudWxsLHAyNTUxOTpudWxsfTtmdW5jdGlvbiBNUHJpbWUoZSx0KXt0aGlzLm5hbWU9ZTt0aGlzLnA9bmV3IEJOKHQsMTYpO3RoaXMubj10aGlzLnAuYml0TGVuZ3RoKCk7dGhpcy5rPW5ldyBCTigxKS5pdXNobG4odGhpcy5uKS5pc3ViKHRoaXMucCk7dGhpcy50bXA9dGhpcy5fdG1wKCl9TVByaW1lLnByb3RvdHlwZS5fdG1wPWZ1bmN0aW9uIF90bXAoKXt2YXIgZT1uZXcgQk4obnVsbCk7ZS53b3Jkcz1uZXcgQXJyYXkoTWF0aC5jZWlsKHRoaXMubi8xMykpO3JldHVybiBlfTtNUHJpbWUucHJvdG90eXBlLmlyZWR1Y2U9ZnVuY3Rpb24gaXJlZHVjZShlKXt2YXIgdD1lO3ZhciByO2Rve3RoaXMuc3BsaXQodCx0aGlzLnRtcCk7dD10aGlzLmltdWxLKHQpO3Q9dC5pYWRkKHRoaXMudG1wKTtyPXQuYml0TGVuZ3RoKCl9d2hpbGUocj50aGlzLm4pO3ZhciBpPXI8dGhpcy5uPy0xOnQudWNtcCh0aGlzLnApO2lmKGk9PT0wKXt0LndvcmRzWzBdPTA7dC5sZW5ndGg9MX1lbHNlIGlmKGk+MCl7dC5pc3ViKHRoaXMucCl9ZWxzZXtpZih0LnN0cmlwIT09dW5kZWZpbmVkKXt0LnN0cmlwKCl9ZWxzZXt0Ll9zdHJpcCgpfX1yZXR1cm4gdH07TVByaW1lLnByb3RvdHlwZS5zcGxpdD1mdW5jdGlvbiBzcGxpdChlLHQpe2UuaXVzaHJuKHRoaXMubiwwLHQpfTtNUHJpbWUucHJvdG90eXBlLmltdWxLPWZ1bmN0aW9uIGltdWxLKGUpe3JldHVybiBlLmltdWwodGhpcy5rKX07ZnVuY3Rpb24gSzI1Nigpe01QcmltZS5jYWxsKHRoaXMsXCJrMjU2XCIsXCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmMyZlwiKX1pbmhlcml0cyhLMjU2LE1QcmltZSk7SzI1Ni5wcm90b3R5cGUuc3BsaXQ9ZnVuY3Rpb24gc3BsaXQoZSx0KXt2YXIgcj00MTk0MzAzO3ZhciBpPU1hdGgubWluKGUubGVuZ3RoLDkpO2Zvcih2YXIgbj0wO248aTtuKyspe3Qud29yZHNbbl09ZS53b3Jkc1tuXX10Lmxlbmd0aD1pO2lmKGUubGVuZ3RoPD05KXtlLndvcmRzWzBdPTA7ZS5sZW5ndGg9MTtyZXR1cm59dmFyIGE9ZS53b3Jkc1s5XTt0LndvcmRzW3QubGVuZ3RoKytdPWEmcjtmb3Iobj0xMDtuPGUubGVuZ3RoO24rKyl7dmFyIHM9ZS53b3Jkc1tuXXwwO2Uud29yZHNbbi0xMF09KHMmcik8PDR8YT4+PjIyO2E9c31hPj4+PTIyO2Uud29yZHNbbi0xMF09YTtpZihhPT09MCYmZS5sZW5ndGg+MTApe2UubGVuZ3RoLT0xMH1lbHNle2UubGVuZ3RoLT05fX07SzI1Ni5wcm90b3R5cGUuaW11bEs9ZnVuY3Rpb24gaW11bEsoZSl7ZS53b3Jkc1tlLmxlbmd0aF09MDtlLndvcmRzW2UubGVuZ3RoKzFdPTA7ZS5sZW5ndGgrPTI7dmFyIHQ9MDtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKyl7dmFyIGk9ZS53b3Jkc1tyXXwwO3QrPWkqOTc3O2Uud29yZHNbcl09dCY2NzEwODg2Mzt0PWkqNjQrKHQvNjcxMDg4NjR8MCl9aWYoZS53b3Jkc1tlLmxlbmd0aC0xXT09PTApe2UubGVuZ3RoLS07aWYoZS53b3Jkc1tlLmxlbmd0aC0xXT09PTApe2UubGVuZ3RoLS19fXJldHVybiBlfTtmdW5jdGlvbiBQMjI0KCl7TVByaW1lLmNhbGwodGhpcyxcInAyMjRcIixcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIDAwMDAwMDAwIDAwMDAwMDAwIDAwMDAwMDAxXCIpfWluaGVyaXRzKFAyMjQsTVByaW1lKTtmdW5jdGlvbiBQMTkyKCl7TVByaW1lLmNhbGwodGhpcyxcInAxOTJcIixcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGZmZmZmZmZmIGZmZmZmZmZmXCIpfWluaGVyaXRzKFAxOTIsTVByaW1lKTtmdW5jdGlvbiBQMjU1MTkoKXtNUHJpbWUuY2FsbCh0aGlzLFwiMjU1MTlcIixcIjdmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZWRcIil9aW5oZXJpdHMoUDI1NTE5LE1QcmltZSk7UDI1NTE5LnByb3RvdHlwZS5pbXVsSz1mdW5jdGlvbiBpbXVsSyhlKXt2YXIgdD0wO2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgaT0oZS53b3Jkc1tyXXwwKSoxOSt0O3ZhciBuPWkmNjcxMDg4NjM7aT4+Pj0yNjtlLndvcmRzW3JdPW47dD1pfWlmKHQhPT0wKXtlLndvcmRzW2UubGVuZ3RoKytdPXR9cmV0dXJuIGV9O0JOLl9wcmltZT1mdW5jdGlvbiBwcmltZShlKXtpZihoW2VdKXJldHVybiBoW2VdO3ZhciBwcmltZTtpZihlPT09XCJrMjU2XCIpe3ByaW1lPW5ldyBLMjU2fWVsc2UgaWYoZT09PVwicDIyNFwiKXtwcmltZT1uZXcgUDIyNH1lbHNlIGlmKGU9PT1cInAxOTJcIil7cHJpbWU9bmV3IFAxOTJ9ZWxzZSBpZihlPT09XCJwMjU1MTlcIil7cHJpbWU9bmV3IFAyNTUxOX1lbHNle3Rocm93IG5ldyBFcnJvcihcIlVua25vd24gcHJpbWUgXCIrZSl9aFtlXT1wcmltZTtyZXR1cm4gcHJpbWV9O2Z1bmN0aW9uIFJlZChlKXtpZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe3ZhciB0PUJOLl9wcmltZShlKTt0aGlzLm09dC5wO3RoaXMucHJpbWU9dH1lbHNle2Fzc2VydChlLmd0bigxKSxcIm1vZHVsdXMgbXVzdCBiZSBncmVhdGVyIHRoYW4gMVwiKTt0aGlzLm09ZTt0aGlzLnByaW1lPW51bGx9fVJlZC5wcm90b3R5cGUuX3ZlcmlmeTE9ZnVuY3Rpb24gX3ZlcmlmeTEoZSl7YXNzZXJ0KGUubmVnYXRpdmU9PT0wLFwicmVkIHdvcmtzIG9ubHkgd2l0aCBwb3NpdGl2ZXNcIik7YXNzZXJ0KGUucmVkLFwicmVkIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKX07UmVkLnByb3RvdHlwZS5fdmVyaWZ5Mj1mdW5jdGlvbiBfdmVyaWZ5MihlLHQpe2Fzc2VydCgoZS5uZWdhdGl2ZXx0Lm5lZ2F0aXZlKT09PTAsXCJyZWQgd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlc1wiKTthc3NlcnQoZS5yZWQmJmUucmVkPT09dC5yZWQsXCJyZWQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpfTtSZWQucHJvdG90eXBlLmltb2Q9ZnVuY3Rpb24gaW1vZChlKXtpZih0aGlzLnByaW1lKXJldHVybiB0aGlzLnByaW1lLmlyZWR1Y2UoZSkuX2ZvcmNlUmVkKHRoaXMpO3JldHVybiBlLnVtb2QodGhpcy5tKS5fZm9yY2VSZWQodGhpcyl9O1JlZC5wcm90b3R5cGUubmVnPWZ1bmN0aW9uIG5lZyhlKXtpZihlLmlzWmVybygpKXtyZXR1cm4gZS5jbG9uZSgpfXJldHVybiB0aGlzLm0uc3ViKGUpLl9mb3JjZVJlZCh0aGlzKX07UmVkLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24gYWRkKGUsdCl7dGhpcy5fdmVyaWZ5MihlLHQpO3ZhciByPWUuYWRkKHQpO2lmKHIuY21wKHRoaXMubSk+PTApe3IuaXN1Yih0aGlzLm0pfXJldHVybiByLl9mb3JjZVJlZCh0aGlzKX07UmVkLnByb3RvdHlwZS5pYWRkPWZ1bmN0aW9uIGlhZGQoZSx0KXt0aGlzLl92ZXJpZnkyKGUsdCk7dmFyIHI9ZS5pYWRkKHQpO2lmKHIuY21wKHRoaXMubSk+PTApe3IuaXN1Yih0aGlzLm0pfXJldHVybiByfTtSZWQucHJvdG90eXBlLnN1Yj1mdW5jdGlvbiBzdWIoZSx0KXt0aGlzLl92ZXJpZnkyKGUsdCk7dmFyIHI9ZS5zdWIodCk7aWYoci5jbXBuKDApPDApe3IuaWFkZCh0aGlzLm0pfXJldHVybiByLl9mb3JjZVJlZCh0aGlzKX07UmVkLnByb3RvdHlwZS5pc3ViPWZ1bmN0aW9uIGlzdWIoZSx0KXt0aGlzLl92ZXJpZnkyKGUsdCk7dmFyIHI9ZS5pc3ViKHQpO2lmKHIuY21wbigwKTwwKXtyLmlhZGQodGhpcy5tKX1yZXR1cm4gcn07UmVkLnByb3RvdHlwZS5zaGw9ZnVuY3Rpb24gc2hsKGUsdCl7dGhpcy5fdmVyaWZ5MShlKTtyZXR1cm4gdGhpcy5pbW9kKGUudXNobG4odCkpfTtSZWQucHJvdG90eXBlLmltdWw9ZnVuY3Rpb24gaW11bChlLHQpe3RoaXMuX3ZlcmlmeTIoZSx0KTtyZXR1cm4gdGhpcy5pbW9kKGUuaW11bCh0KSl9O1JlZC5wcm90b3R5cGUubXVsPWZ1bmN0aW9uIG11bChlLHQpe3RoaXMuX3ZlcmlmeTIoZSx0KTtyZXR1cm4gdGhpcy5pbW9kKGUubXVsKHQpKX07UmVkLnByb3RvdHlwZS5pc3FyPWZ1bmN0aW9uIGlzcXIoZSl7cmV0dXJuIHRoaXMuaW11bChlLGUuY2xvbmUoKSl9O1JlZC5wcm90b3R5cGUuc3FyPWZ1bmN0aW9uIHNxcihlKXtyZXR1cm4gdGhpcy5tdWwoZSxlKX07UmVkLnByb3RvdHlwZS5zcXJ0PWZ1bmN0aW9uIHNxcnQoZSl7aWYoZS5pc1plcm8oKSlyZXR1cm4gZS5jbG9uZSgpO3ZhciB0PXRoaXMubS5hbmRsbigzKTthc3NlcnQodCUyPT09MSk7aWYodD09PTMpe3ZhciByPXRoaXMubS5hZGQobmV3IEJOKDEpKS5pdXNocm4oMik7cmV0dXJuIHRoaXMucG93KGUscil9dmFyIGk9dGhpcy5tLnN1Ym4oMSk7dmFyIG49MDt3aGlsZSghaS5pc1plcm8oKSYmaS5hbmRsbigxKT09PTApe24rKztpLml1c2hybigxKX1hc3NlcnQoIWkuaXNaZXJvKCkpO3ZhciBhPW5ldyBCTigxKS50b1JlZCh0aGlzKTt2YXIgcz1hLnJlZE5lZygpO3ZhciBvPXRoaXMubS5zdWJuKDEpLml1c2hybigxKTt2YXIgaD10aGlzLm0uYml0TGVuZ3RoKCk7aD1uZXcgQk4oMipoKmgpLnRvUmVkKHRoaXMpO3doaWxlKHRoaXMucG93KGgsbykuY21wKHMpIT09MCl7aC5yZWRJQWRkKHMpfXZhciB1PXRoaXMucG93KGgsaSk7dmFyIGQ9dGhpcy5wb3coZSxpLmFkZG4oMSkuaXVzaHJuKDEpKTt2YXIgYz10aGlzLnBvdyhlLGkpO3ZhciBsPW47d2hpbGUoYy5jbXAoYSkhPT0wKXt2YXIgcD1jO2Zvcih2YXIgdj0wO3AuY21wKGEpIT09MDt2Kyspe3A9cC5yZWRTcXIoKX1hc3NlcnQodjxsKTt2YXIgYj10aGlzLnBvdyh1LG5ldyBCTigxKS5pdXNobG4obC12LTEpKTtkPWQucmVkTXVsKGIpO3U9Yi5yZWRTcXIoKTtjPWMucmVkTXVsKHUpO2w9dn1yZXR1cm4gZH07UmVkLnByb3RvdHlwZS5pbnZtPWZ1bmN0aW9uIGludm0oZSl7dmFyIHQ9ZS5faW52bXAodGhpcy5tKTtpZih0Lm5lZ2F0aXZlIT09MCl7dC5uZWdhdGl2ZT0wO3JldHVybiB0aGlzLmltb2QodCkucmVkTmVnKCl9ZWxzZXtyZXR1cm4gdGhpcy5pbW9kKHQpfX07UmVkLnByb3RvdHlwZS5wb3c9ZnVuY3Rpb24gcG93KGUsdCl7aWYodC5pc1plcm8oKSlyZXR1cm4gbmV3IEJOKDEpLnRvUmVkKHRoaXMpO2lmKHQuY21wbigxKT09PTApcmV0dXJuIGUuY2xvbmUoKTt2YXIgcj00O3ZhciBpPW5ldyBBcnJheSgxPDxyKTtpWzBdPW5ldyBCTigxKS50b1JlZCh0aGlzKTtpWzFdPWU7Zm9yKHZhciBuPTI7bjxpLmxlbmd0aDtuKyspe2lbbl09dGhpcy5tdWwoaVtuLTFdLGUpfXZhciBhPWlbMF07dmFyIHM9MDt2YXIgbz0wO3ZhciBoPXQuYml0TGVuZ3RoKCklMjY7aWYoaD09PTApe2g9MjZ9Zm9yKG49dC5sZW5ndGgtMTtuPj0wO24tLSl7dmFyIHU9dC53b3Jkc1tuXTtmb3IodmFyIGQ9aC0xO2Q+PTA7ZC0tKXt2YXIgYz11Pj5kJjE7aWYoYSE9PWlbMF0pe2E9dGhpcy5zcXIoYSl9aWYoYz09PTAmJnM9PT0wKXtvPTA7Y29udGludWV9czw8PTE7c3w9YztvKys7aWYobyE9PXImJihuIT09MHx8ZCE9PTApKWNvbnRpbnVlO2E9dGhpcy5tdWwoYSxpW3NdKTtvPTA7cz0wfWg9MjZ9cmV0dXJuIGF9O1JlZC5wcm90b3R5cGUuY29udmVydFRvPWZ1bmN0aW9uIGNvbnZlcnRUbyhlKXt2YXIgdD1lLnVtb2QodGhpcy5tKTtyZXR1cm4gdD09PWU/dC5jbG9uZSgpOnR9O1JlZC5wcm90b3R5cGUuY29udmVydEZyb209ZnVuY3Rpb24gY29udmVydEZyb20oZSl7dmFyIHQ9ZS5jbG9uZSgpO3QucmVkPW51bGw7cmV0dXJuIHR9O0JOLm1vbnQ9ZnVuY3Rpb24gbW9udChlKXtyZXR1cm4gbmV3IE1vbnQoZSl9O2Z1bmN0aW9uIE1vbnQoZSl7UmVkLmNhbGwodGhpcyxlKTt0aGlzLnNoaWZ0PXRoaXMubS5iaXRMZW5ndGgoKTtpZih0aGlzLnNoaWZ0JTI2IT09MCl7dGhpcy5zaGlmdCs9MjYtdGhpcy5zaGlmdCUyNn10aGlzLnI9bmV3IEJOKDEpLml1c2hsbih0aGlzLnNoaWZ0KTt0aGlzLnIyPXRoaXMuaW1vZCh0aGlzLnIuc3FyKCkpO3RoaXMucmludj10aGlzLnIuX2ludm1wKHRoaXMubSk7dGhpcy5taW52PXRoaXMucmludi5tdWwodGhpcy5yKS5pc3VibigxKS5kaXYodGhpcy5tKTt0aGlzLm1pbnY9dGhpcy5taW52LnVtb2QodGhpcy5yKTt0aGlzLm1pbnY9dGhpcy5yLnN1Yih0aGlzLm1pbnYpfWluaGVyaXRzKE1vbnQsUmVkKTtNb250LnByb3RvdHlwZS5jb252ZXJ0VG89ZnVuY3Rpb24gY29udmVydFRvKGUpe3JldHVybiB0aGlzLmltb2QoZS51c2hsbih0aGlzLnNoaWZ0KSl9O01vbnQucHJvdG90eXBlLmNvbnZlcnRGcm9tPWZ1bmN0aW9uIGNvbnZlcnRGcm9tKGUpe3ZhciB0PXRoaXMuaW1vZChlLm11bCh0aGlzLnJpbnYpKTt0LnJlZD1udWxsO3JldHVybiB0fTtNb250LnByb3RvdHlwZS5pbXVsPWZ1bmN0aW9uIGltdWwoZSx0KXtpZihlLmlzWmVybygpfHx0LmlzWmVybygpKXtlLndvcmRzWzBdPTA7ZS5sZW5ndGg9MTtyZXR1cm4gZX12YXIgcj1lLmltdWwodCk7dmFyIGk9ci5tYXNrbih0aGlzLnNoaWZ0KS5tdWwodGhpcy5taW52KS5pbWFza24odGhpcy5zaGlmdCkubXVsKHRoaXMubSk7dmFyIG49ci5pc3ViKGkpLml1c2hybih0aGlzLnNoaWZ0KTt2YXIgYT1uO2lmKG4uY21wKHRoaXMubSk+PTApe2E9bi5pc3ViKHRoaXMubSl9ZWxzZSBpZihuLmNtcG4oMCk8MCl7YT1uLmlhZGQodGhpcy5tKX1yZXR1cm4gYS5fZm9yY2VSZWQodGhpcyl9O01vbnQucHJvdG90eXBlLm11bD1mdW5jdGlvbiBtdWwoZSx0KXtpZihlLmlzWmVybygpfHx0LmlzWmVybygpKXJldHVybiBuZXcgQk4oMCkuX2ZvcmNlUmVkKHRoaXMpO3ZhciByPWUubXVsKHQpO3ZhciBpPXIubWFza24odGhpcy5zaGlmdCkubXVsKHRoaXMubWludikuaW1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm0pO3ZhciBuPXIuaXN1YihpKS5pdXNocm4odGhpcy5zaGlmdCk7dmFyIGE9bjtpZihuLmNtcCh0aGlzLm0pPj0wKXthPW4uaXN1Yih0aGlzLm0pfWVsc2UgaWYobi5jbXBuKDApPDApe2E9bi5pYWRkKHRoaXMubSl9cmV0dXJuIGEuX2ZvcmNlUmVkKHRoaXMpfTtNb250LnByb3RvdHlwZS5pbnZtPWZ1bmN0aW9uIGludm0oZSl7dmFyIHQ9dGhpcy5pbW9kKGUuX2ludm1wKHRoaXMubSkubXVsKHRoaXMucjIpKTtyZXR1cm4gdC5fZm9yY2VSZWQodGhpcyl9fSkoZmFsc2V8fGUsdGhpcyl9LDE2NzA6ZnVuY3Rpb24oZSx0LHIpe2U9ci5ubWQoZSk7KGZ1bmN0aW9uKGUsdCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYXNzZXJ0KGUsdCl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKHR8fFwiQXNzZXJ0aW9uIGZhaWxlZFwiKX1mdW5jdGlvbiBpbmhlcml0cyhlLHQpe2Uuc3VwZXJfPXQ7dmFyIFRlbXBDdG9yPWZ1bmN0aW9uKCl7fTtUZW1wQ3Rvci5wcm90b3R5cGU9dC5wcm90b3R5cGU7ZS5wcm90b3R5cGU9bmV3IFRlbXBDdG9yO2UucHJvdG90eXBlLmNvbnN0cnVjdG9yPWV9ZnVuY3Rpb24gQk4oZSx0LHIpe2lmKEJOLmlzQk4oZSkpe3JldHVybiBlfXRoaXMubmVnYXRpdmU9MDt0aGlzLndvcmRzPW51bGw7dGhpcy5sZW5ndGg9MDt0aGlzLnJlZD1udWxsO2lmKGUhPT1udWxsKXtpZih0PT09XCJsZVwifHx0PT09XCJiZVwiKXtyPXQ7dD0xMH10aGlzLl9pbml0KGV8fDAsdHx8MTAscnx8XCJiZVwiKX19aWYodHlwZW9mIGU9PT1cIm9iamVjdFwiKXtlLmV4cG9ydHM9Qk59ZWxzZXt0LkJOPUJOfUJOLkJOPUJOO0JOLndvcmRTaXplPTI2O3ZhciBpO3RyeXtpPXIoNDMwMCkuQnVmZmVyfWNhdGNoKGUpe31CTi5pc0JOPWZ1bmN0aW9uIGlzQk4oZSl7aWYoZSBpbnN0YW5jZW9mIEJOKXtyZXR1cm4gdHJ1ZX1yZXR1cm4gZSE9PW51bGwmJnR5cGVvZiBlPT09XCJvYmplY3RcIiYmZS5jb25zdHJ1Y3Rvci53b3JkU2l6ZT09PUJOLndvcmRTaXplJiZBcnJheS5pc0FycmF5KGUud29yZHMpfTtCTi5tYXg9ZnVuY3Rpb24gbWF4KGUsdCl7aWYoZS5jbXAodCk+MClyZXR1cm4gZTtyZXR1cm4gdH07Qk4ubWluPWZ1bmN0aW9uIG1pbihlLHQpe2lmKGUuY21wKHQpPDApcmV0dXJuIGU7cmV0dXJuIHR9O0JOLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbiBpbml0KGUsdCxyKXtpZih0eXBlb2YgZT09PVwibnVtYmVyXCIpe3JldHVybiB0aGlzLl9pbml0TnVtYmVyKGUsdCxyKX1pZih0eXBlb2YgZT09PVwib2JqZWN0XCIpe3JldHVybiB0aGlzLl9pbml0QXJyYXkoZSx0LHIpfWlmKHQ9PT1cImhleFwiKXt0PTE2fWFzc2VydCh0PT09KHR8MCkmJnQ+PTImJnQ8PTM2KTtlPWUudG9TdHJpbmcoKS5yZXBsYWNlKC9cXHMrL2csXCJcIik7dmFyIGk9MDtpZihlWzBdPT09XCItXCIpe2krK31pZih0PT09MTYpe3RoaXMuX3BhcnNlSGV4KGUsaSl9ZWxzZXt0aGlzLl9wYXJzZUJhc2UoZSx0LGkpfWlmKGVbMF09PT1cIi1cIil7dGhpcy5uZWdhdGl2ZT0xfXRoaXMuX3N0cmlwKCk7aWYociE9PVwibGVcIilyZXR1cm47dGhpcy5faW5pdEFycmF5KHRoaXMudG9BcnJheSgpLHQscil9O0JOLnByb3RvdHlwZS5faW5pdE51bWJlcj1mdW5jdGlvbiBfaW5pdE51bWJlcihlLHQscil7aWYoZTwwKXt0aGlzLm5lZ2F0aXZlPTE7ZT0tZX1pZihlPDY3MTA4ODY0KXt0aGlzLndvcmRzPVtlJjY3MTA4ODYzXTt0aGlzLmxlbmd0aD0xfWVsc2UgaWYoZTw0NTAzNTk5NjI3MzcwNDk2KXt0aGlzLndvcmRzPVtlJjY3MTA4ODYzLGUvNjcxMDg4NjQmNjcxMDg4NjNdO3RoaXMubGVuZ3RoPTJ9ZWxzZXthc3NlcnQoZTw5MDA3MTk5MjU0NzQwOTkyKTt0aGlzLndvcmRzPVtlJjY3MTA4ODYzLGUvNjcxMDg4NjQmNjcxMDg4NjMsMV07dGhpcy5sZW5ndGg9M31pZihyIT09XCJsZVwiKXJldHVybjt0aGlzLl9pbml0QXJyYXkodGhpcy50b0FycmF5KCksdCxyKX07Qk4ucHJvdG90eXBlLl9pbml0QXJyYXk9ZnVuY3Rpb24gX2luaXRBcnJheShlLHQscil7YXNzZXJ0KHR5cGVvZiBlLmxlbmd0aD09PVwibnVtYmVyXCIpO2lmKGUubGVuZ3RoPD0wKXt0aGlzLndvcmRzPVswXTt0aGlzLmxlbmd0aD0xO3JldHVybiB0aGlzfXRoaXMubGVuZ3RoPU1hdGguY2VpbChlLmxlbmd0aC8zKTt0aGlzLndvcmRzPW5ldyBBcnJheSh0aGlzLmxlbmd0aCk7Zm9yKHZhciBpPTA7aTx0aGlzLmxlbmd0aDtpKyspe3RoaXMud29yZHNbaV09MH12YXIgbixhO3ZhciBzPTA7aWYocj09PVwiYmVcIil7Zm9yKGk9ZS5sZW5ndGgtMSxuPTA7aT49MDtpLT0zKXthPWVbaV18ZVtpLTFdPDw4fGVbaS0yXTw8MTY7dGhpcy53b3Jkc1tuXXw9YTw8cyY2NzEwODg2Mzt0aGlzLndvcmRzW24rMV09YT4+PjI2LXMmNjcxMDg4NjM7cys9MjQ7aWYocz49MjYpe3MtPTI2O24rK319fWVsc2UgaWYocj09PVwibGVcIil7Zm9yKGk9MCxuPTA7aTxlLmxlbmd0aDtpKz0zKXthPWVbaV18ZVtpKzFdPDw4fGVbaSsyXTw8MTY7dGhpcy53b3Jkc1tuXXw9YTw8cyY2NzEwODg2Mzt0aGlzLndvcmRzW24rMV09YT4+PjI2LXMmNjcxMDg4NjM7cys9MjQ7aWYocz49MjYpe3MtPTI2O24rK319fXJldHVybiB0aGlzLl9zdHJpcCgpfTtmdW5jdGlvbiBwYXJzZUhleChlLHQscil7dmFyIGk9MDt2YXIgbj1NYXRoLm1pbihlLmxlbmd0aCxyKTt2YXIgYT0wO2Zvcih2YXIgcz10O3M8bjtzKyspe3ZhciBvPWUuY2hhckNvZGVBdChzKS00ODtpPDw9NDt2YXIgaDtpZihvPj00OSYmbzw9NTQpe2g9by00OSsxMH1lbHNlIGlmKG8+PTE3JiZvPD0yMil7aD1vLTE3KzEwfWVsc2V7aD1vfWl8PWg7YXw9aH1hc3NlcnQoIShhJjI0MCksXCJJbnZhbGlkIGNoYXJhY3RlciBpbiBcIitlKTtyZXR1cm4gaX1CTi5wcm90b3R5cGUuX3BhcnNlSGV4PWZ1bmN0aW9uIF9wYXJzZUhleChlLHQpe3RoaXMubGVuZ3RoPU1hdGguY2VpbCgoZS5sZW5ndGgtdCkvNik7dGhpcy53b3Jkcz1uZXcgQXJyYXkodGhpcy5sZW5ndGgpO2Zvcih2YXIgcj0wO3I8dGhpcy5sZW5ndGg7cisrKXt0aGlzLndvcmRzW3JdPTB9dmFyIGksbjt2YXIgYT0wO2ZvcihyPWUubGVuZ3RoLTYsaT0wO3I+PXQ7ci09Nil7bj1wYXJzZUhleChlLHIscis2KTt0aGlzLndvcmRzW2ldfD1uPDxhJjY3MTA4ODYzO3RoaXMud29yZHNbaSsxXXw9bj4+PjI2LWEmNDE5NDMwMzthKz0yNDtpZihhPj0yNil7YS09MjY7aSsrfX1pZihyKzYhPT10KXtuPXBhcnNlSGV4KGUsdCxyKzYpO3RoaXMud29yZHNbaV18PW48PGEmNjcxMDg4NjM7dGhpcy53b3Jkc1tpKzFdfD1uPj4+MjYtYSY0MTk0MzAzfXRoaXMuX3N0cmlwKCl9O2Z1bmN0aW9uIHBhcnNlQmFzZShlLHQscixpKXt2YXIgbj0wO3ZhciBhPTA7dmFyIHM9TWF0aC5taW4oZS5sZW5ndGgscik7Zm9yKHZhciBvPXQ7bzxzO28rKyl7dmFyIGg9ZS5jaGFyQ29kZUF0KG8pLTQ4O24qPWk7aWYoaD49NDkpe2E9aC00OSsxMH1lbHNlIGlmKGg+PTE3KXthPWgtMTcrMTB9ZWxzZXthPWh9YXNzZXJ0KGg+PTAmJmE8aSxcIkludmFsaWQgY2hhcmFjdGVyXCIpO24rPWF9cmV0dXJuIG59Qk4ucHJvdG90eXBlLl9wYXJzZUJhc2U9ZnVuY3Rpb24gX3BhcnNlQmFzZShlLHQscil7dGhpcy53b3Jkcz1bMF07dGhpcy5sZW5ndGg9MTtmb3IodmFyIGk9MCxuPTE7bjw9NjcxMDg4NjM7bio9dCl7aSsrfWktLTtuPW4vdHwwO3ZhciBhPWUubGVuZ3RoLXI7dmFyIHM9YSVpO3ZhciBvPU1hdGgubWluKGEsYS1zKStyO3ZhciBoPTA7Zm9yKHZhciB1PXI7dTxvO3UrPWkpe2g9cGFyc2VCYXNlKGUsdSx1K2ksdCk7dGhpcy5pbXVsbihuKTtpZih0aGlzLndvcmRzWzBdK2g8NjcxMDg4NjQpe3RoaXMud29yZHNbMF0rPWh9ZWxzZXt0aGlzLl9pYWRkbihoKX19aWYocyE9PTApe3ZhciBkPTE7aD1wYXJzZUJhc2UoZSx1LGUubGVuZ3RoLHQpO2Zvcih1PTA7dTxzO3UrKyl7ZCo9dH10aGlzLmltdWxuKGQpO2lmKHRoaXMud29yZHNbMF0raDw2NzEwODg2NCl7dGhpcy53b3Jkc1swXSs9aH1lbHNle3RoaXMuX2lhZGRuKGgpfX19O0JOLnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uIGNvcHkoZSl7ZS53b3Jkcz1uZXcgQXJyYXkodGhpcy5sZW5ndGgpO2Zvcih2YXIgdD0wO3Q8dGhpcy5sZW5ndGg7dCsrKXtlLndvcmRzW3RdPXRoaXMud29yZHNbdF19ZS5sZW5ndGg9dGhpcy5sZW5ndGg7ZS5uZWdhdGl2ZT10aGlzLm5lZ2F0aXZlO2UucmVkPXRoaXMucmVkfTtmdW5jdGlvbiBtb3ZlKGUsdCl7ZS53b3Jkcz10LndvcmRzO2UubGVuZ3RoPXQubGVuZ3RoO2UubmVnYXRpdmU9dC5uZWdhdGl2ZTtlLnJlZD10LnJlZH1CTi5wcm90b3R5cGUuX21vdmU9ZnVuY3Rpb24gX21vdmUoZSl7bW92ZShlLHRoaXMpfTtCTi5wcm90b3R5cGUuY2xvbmU9ZnVuY3Rpb24gY2xvbmUoKXt2YXIgZT1uZXcgQk4obnVsbCk7dGhpcy5jb3B5KGUpO3JldHVybiBlfTtCTi5wcm90b3R5cGUuX2V4cGFuZD1mdW5jdGlvbiBfZXhwYW5kKGUpe3doaWxlKHRoaXMubGVuZ3RoPGUpe3RoaXMud29yZHNbdGhpcy5sZW5ndGgrK109MH1yZXR1cm4gdGhpc307Qk4ucHJvdG90eXBlLl9zdHJpcD1mdW5jdGlvbiBzdHJpcCgpe3doaWxlKHRoaXMubGVuZ3RoPjEmJnRoaXMud29yZHNbdGhpcy5sZW5ndGgtMV09PT0wKXt0aGlzLmxlbmd0aC0tfXJldHVybiB0aGlzLl9ub3JtU2lnbigpfTtCTi5wcm90b3R5cGUuX25vcm1TaWduPWZ1bmN0aW9uIF9ub3JtU2lnbigpe2lmKHRoaXMubGVuZ3RoPT09MSYmdGhpcy53b3Jkc1swXT09PTApe3RoaXMubmVnYXRpdmU9MH1yZXR1cm4gdGhpc307aWYodHlwZW9mIFN5bWJvbCE9PVwidW5kZWZpbmVkXCImJnR5cGVvZiBTeW1ib2wuZm9yPT09XCJmdW5jdGlvblwiKXtCTi5wcm90b3R5cGVbU3ltYm9sLmZvcihcIm5vZGVqcy51dGlsLmluc3BlY3QuY3VzdG9tXCIpXT1pbnNwZWN0fWVsc2V7Qk4ucHJvdG90eXBlLmluc3BlY3Q9aW5zcGVjdH1mdW5jdGlvbiBpbnNwZWN0KCl7cmV0dXJuKHRoaXMucmVkP1wiPEJOLVI6IFwiOlwiPEJOOiBcIikrdGhpcy50b1N0cmluZygxNikrXCI+XCJ9dmFyIG49W1wiXCIsXCIwXCIsXCIwMFwiLFwiMDAwXCIsXCIwMDAwXCIsXCIwMDAwMFwiLFwiMDAwMDAwXCIsXCIwMDAwMDAwXCIsXCIwMDAwMDAwMFwiLFwiMDAwMDAwMDAwXCIsXCIwMDAwMDAwMDAwXCIsXCIwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwXCIsXCIwMDAwMDAwMDAwMDAwXCIsXCIwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwXCIsXCIwMDAwMDAwMDAwMDAwMDAwXCIsXCIwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwXCIsXCIwMDAwMDAwMDAwMDAwMDAwMDAwXCIsXCIwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCIsXCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCIsXCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMFwiLFwiMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCIsXCIwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwXCJdO3ZhciBhPVswLDAsMjUsMTYsMTIsMTEsMTAsOSw4LDgsNyw3LDcsNyw2LDYsNiw2LDYsNiw2LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDUsNSw1LDVdO3ZhciBzPVswLDAsMzM1NTQ0MzIsNDMwNDY3MjEsMTY3NzcyMTYsNDg4MjgxMjUsNjA0NjYxNzYsNDAzNTM2MDcsMTY3NzcyMTYsNDMwNDY3MjEsMWU3LDE5NDg3MTcxLDM1ODMxODA4LDYyNzQ4NTE3LDc1Mjk1MzYsMTEzOTA2MjUsMTY3NzcyMTYsMjQxMzc1NjksMzQwMTIyMjQsNDcwNDU4ODEsNjRlNiw0MDg0MTAxLDUxNTM2MzIsNjQzNjM0Myw3OTYyNjI0LDk3NjU2MjUsMTE4ODEzNzYsMTQzNDg5MDcsMTcyMTAzNjgsMjA1MTExNDksMjQzZTUsMjg2MjkxNTEsMzM1NTQ0MzIsMzkxMzUzOTMsNDU0MzU0MjQsNTI1MjE4NzUsNjA0NjYxNzZdO0JOLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbiB0b1N0cmluZyhlLHQpe2U9ZXx8MTA7dD10fDB8fDE7dmFyIHI7aWYoZT09PTE2fHxlPT09XCJoZXhcIil7cj1cIlwiO3ZhciBpPTA7dmFyIG89MDtmb3IodmFyIGg9MDtoPHRoaXMubGVuZ3RoO2grKyl7dmFyIHU9dGhpcy53b3Jkc1toXTt2YXIgZD0oKHU8PGl8bykmMTY3NzcyMTUpLnRvU3RyaW5nKDE2KTtvPXU+Pj4yNC1pJjE2Nzc3MjE1O2lmKG8hPT0wfHxoIT09dGhpcy5sZW5ndGgtMSl7cj1uWzYtZC5sZW5ndGhdK2Qrcn1lbHNle3I9ZCtyfWkrPTI7aWYoaT49MjYpe2ktPTI2O2gtLX19aWYobyE9PTApe3I9by50b1N0cmluZygxNikrcn13aGlsZShyLmxlbmd0aCV0IT09MCl7cj1cIjBcIityfWlmKHRoaXMubmVnYXRpdmUhPT0wKXtyPVwiLVwiK3J9cmV0dXJuIHJ9aWYoZT09PShlfDApJiZlPj0yJiZlPD0zNil7dmFyIGM9YVtlXTt2YXIgbD1zW2VdO3I9XCJcIjt2YXIgcD10aGlzLmNsb25lKCk7cC5uZWdhdGl2ZT0wO3doaWxlKCFwLmlzWmVybygpKXt2YXIgdj1wLm1vZHJuKGwpLnRvU3RyaW5nKGUpO3A9cC5pZGl2bihsKTtpZighcC5pc1plcm8oKSl7cj1uW2Mtdi5sZW5ndGhdK3Yrcn1lbHNle3I9dityfX1pZih0aGlzLmlzWmVybygpKXtyPVwiMFwiK3J9d2hpbGUoci5sZW5ndGgldCE9PTApe3I9XCIwXCIrcn1pZih0aGlzLm5lZ2F0aXZlIT09MCl7cj1cIi1cIityfXJldHVybiByfWFzc2VydChmYWxzZSxcIkJhc2Ugc2hvdWxkIGJlIGJldHdlZW4gMiBhbmQgMzZcIil9O0JOLnByb3RvdHlwZS50b051bWJlcj1mdW5jdGlvbiB0b051bWJlcigpe3ZhciBlPXRoaXMud29yZHNbMF07aWYodGhpcy5sZW5ndGg9PT0yKXtlKz10aGlzLndvcmRzWzFdKjY3MTA4ODY0fWVsc2UgaWYodGhpcy5sZW5ndGg9PT0zJiZ0aGlzLndvcmRzWzJdPT09MSl7ZSs9NDUwMzU5OTYyNzM3MDQ5Nit0aGlzLndvcmRzWzFdKjY3MTA4ODY0fWVsc2UgaWYodGhpcy5sZW5ndGg+Mil7YXNzZXJ0KGZhbHNlLFwiTnVtYmVyIGNhbiBvbmx5IHNhZmVseSBzdG9yZSB1cCB0byA1MyBiaXRzXCIpfXJldHVybiB0aGlzLm5lZ2F0aXZlIT09MD8tZTplfTtCTi5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uIHRvSlNPTigpe3JldHVybiB0aGlzLnRvU3RyaW5nKDE2LDIpfTtpZihpKXtCTi5wcm90b3R5cGUudG9CdWZmZXI9ZnVuY3Rpb24gdG9CdWZmZXIoZSx0KXtyZXR1cm4gdGhpcy50b0FycmF5TGlrZShpLGUsdCl9fUJOLnByb3RvdHlwZS50b0FycmF5PWZ1bmN0aW9uIHRvQXJyYXkoZSx0KXtyZXR1cm4gdGhpcy50b0FycmF5TGlrZShBcnJheSxlLHQpfTt2YXIgbz1mdW5jdGlvbiBhbGxvY2F0ZShlLHQpe2lmKGUuYWxsb2NVbnNhZmUpe3JldHVybiBlLmFsbG9jVW5zYWZlKHQpfXJldHVybiBuZXcgZSh0KX07Qk4ucHJvdG90eXBlLnRvQXJyYXlMaWtlPWZ1bmN0aW9uIHRvQXJyYXlMaWtlKGUsdCxyKXt0aGlzLl9zdHJpcCgpO3ZhciBpPXRoaXMuYnl0ZUxlbmd0aCgpO3ZhciBuPXJ8fE1hdGgubWF4KDEsaSk7YXNzZXJ0KGk8PW4sXCJieXRlIGFycmF5IGxvbmdlciB0aGFuIGRlc2lyZWQgbGVuZ3RoXCIpO2Fzc2VydChuPjAsXCJSZXF1ZXN0ZWQgYXJyYXkgbGVuZ3RoIDw9IDBcIik7dmFyIGE9byhlLG4pO3ZhciBzPXQ9PT1cImxlXCI/XCJMRVwiOlwiQkVcIjt0aGlzW1wiX3RvQXJyYXlMaWtlXCIrc10oYSxpKTtyZXR1cm4gYX07Qk4ucHJvdG90eXBlLl90b0FycmF5TGlrZUxFPWZ1bmN0aW9uIF90b0FycmF5TGlrZUxFKGUsdCl7dmFyIHI9MDt2YXIgaT0wO2Zvcih2YXIgbj0wLGE9MDtuPHRoaXMubGVuZ3RoO24rKyl7dmFyIHM9dGhpcy53b3Jkc1tuXTw8YXxpO2VbcisrXT1zJjI1NTtpZihyPGUubGVuZ3RoKXtlW3IrK109cz4+OCYyNTV9aWYocjxlLmxlbmd0aCl7ZVtyKytdPXM+PjE2JjI1NX1pZihhPT09Nil7aWYocjxlLmxlbmd0aCl7ZVtyKytdPXM+PjI0JjI1NX1pPTA7YT0wfWVsc2V7aT1zPj4+MjQ7YSs9Mn19aWYocjxlLmxlbmd0aCl7ZVtyKytdPWk7d2hpbGUocjxlLmxlbmd0aCl7ZVtyKytdPTB9fX07Qk4ucHJvdG90eXBlLl90b0FycmF5TGlrZUJFPWZ1bmN0aW9uIF90b0FycmF5TGlrZUJFKGUsdCl7dmFyIHI9ZS5sZW5ndGgtMTt2YXIgaT0wO2Zvcih2YXIgbj0wLGE9MDtuPHRoaXMubGVuZ3RoO24rKyl7dmFyIHM9dGhpcy53b3Jkc1tuXTw8YXxpO2Vbci0tXT1zJjI1NTtpZihyPj0wKXtlW3ItLV09cz4+OCYyNTV9aWYocj49MCl7ZVtyLS1dPXM+PjE2JjI1NX1pZihhPT09Nil7aWYocj49MCl7ZVtyLS1dPXM+PjI0JjI1NX1pPTA7YT0wfWVsc2V7aT1zPj4+MjQ7YSs9Mn19aWYocj49MCl7ZVtyLS1dPWk7d2hpbGUocj49MCl7ZVtyLS1dPTB9fX07aWYoTWF0aC5jbHozMil7Qk4ucHJvdG90eXBlLl9jb3VudEJpdHM9ZnVuY3Rpb24gX2NvdW50Qml0cyhlKXtyZXR1cm4gMzItTWF0aC5jbHozMihlKX19ZWxzZXtCTi5wcm90b3R5cGUuX2NvdW50Qml0cz1mdW5jdGlvbiBfY291bnRCaXRzKGUpe3ZhciB0PWU7dmFyIHI9MDtpZih0Pj00MDk2KXtyKz0xMzt0Pj4+PTEzfWlmKHQ+PTY0KXtyKz03O3Q+Pj49N31pZih0Pj04KXtyKz00O3Q+Pj49NH1pZih0Pj0yKXtyKz0yO3Q+Pj49Mn1yZXR1cm4gcit0fX1CTi5wcm90b3R5cGUuX3plcm9CaXRzPWZ1bmN0aW9uIF96ZXJvQml0cyhlKXtpZihlPT09MClyZXR1cm4gMjY7dmFyIHQ9ZTt2YXIgcj0wO2lmKCh0JjgxOTEpPT09MCl7cis9MTM7dD4+Pj0xM31pZigodCYxMjcpPT09MCl7cis9Nzt0Pj4+PTd9aWYoKHQmMTUpPT09MCl7cis9NDt0Pj4+PTR9aWYoKHQmMyk9PT0wKXtyKz0yO3Q+Pj49Mn1pZigodCYxKT09PTApe3IrK31yZXR1cm4gcn07Qk4ucHJvdG90eXBlLmJpdExlbmd0aD1mdW5jdGlvbiBiaXRMZW5ndGgoKXt2YXIgZT10aGlzLndvcmRzW3RoaXMubGVuZ3RoLTFdO3ZhciB0PXRoaXMuX2NvdW50Qml0cyhlKTtyZXR1cm4odGhpcy5sZW5ndGgtMSkqMjYrdH07ZnVuY3Rpb24gdG9CaXRBcnJheShlKXt2YXIgdD1uZXcgQXJyYXkoZS5iaXRMZW5ndGgoKSk7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBpPXIvMjZ8MDt2YXIgbj1yJTI2O3Rbcl09ZS53b3Jkc1tpXT4+Pm4mMX1yZXR1cm4gdH1CTi5wcm90b3R5cGUuemVyb0JpdHM9ZnVuY3Rpb24gemVyb0JpdHMoKXtpZih0aGlzLmlzWmVybygpKXJldHVybiAwO3ZhciBlPTA7Zm9yKHZhciB0PTA7dDx0aGlzLmxlbmd0aDt0Kyspe3ZhciByPXRoaXMuX3plcm9CaXRzKHRoaXMud29yZHNbdF0pO2UrPXI7aWYociE9PTI2KWJyZWFrfXJldHVybiBlfTtCTi5wcm90b3R5cGUuYnl0ZUxlbmd0aD1mdW5jdGlvbiBieXRlTGVuZ3RoKCl7cmV0dXJuIE1hdGguY2VpbCh0aGlzLmJpdExlbmd0aCgpLzgpfTtCTi5wcm90b3R5cGUudG9Ud29zPWZ1bmN0aW9uIHRvVHdvcyhlKXtpZih0aGlzLm5lZ2F0aXZlIT09MCl7cmV0dXJuIHRoaXMuYWJzKCkuaW5vdG4oZSkuaWFkZG4oMSl9cmV0dXJuIHRoaXMuY2xvbmUoKX07Qk4ucHJvdG90eXBlLmZyb21Ud29zPWZ1bmN0aW9uIGZyb21Ud29zKGUpe2lmKHRoaXMudGVzdG4oZS0xKSl7cmV0dXJuIHRoaXMubm90bihlKS5pYWRkbigxKS5pbmVnKCl9cmV0dXJuIHRoaXMuY2xvbmUoKX07Qk4ucHJvdG90eXBlLmlzTmVnPWZ1bmN0aW9uIGlzTmVnKCl7cmV0dXJuIHRoaXMubmVnYXRpdmUhPT0wfTtCTi5wcm90b3R5cGUubmVnPWZ1bmN0aW9uIG5lZygpe3JldHVybiB0aGlzLmNsb25lKCkuaW5lZygpfTtCTi5wcm90b3R5cGUuaW5lZz1mdW5jdGlvbiBpbmVnKCl7aWYoIXRoaXMuaXNaZXJvKCkpe3RoaXMubmVnYXRpdmVePTF9cmV0dXJuIHRoaXN9O0JOLnByb3RvdHlwZS5pdW9yPWZ1bmN0aW9uIGl1b3IoZSl7d2hpbGUodGhpcy5sZW5ndGg8ZS5sZW5ndGgpe3RoaXMud29yZHNbdGhpcy5sZW5ndGgrK109MH1mb3IodmFyIHQ9MDt0PGUubGVuZ3RoO3QrKyl7dGhpcy53b3Jkc1t0XT10aGlzLndvcmRzW3RdfGUud29yZHNbdF19cmV0dXJuIHRoaXMuX3N0cmlwKCl9O0JOLnByb3RvdHlwZS5pb3I9ZnVuY3Rpb24gaW9yKGUpe2Fzc2VydCgodGhpcy5uZWdhdGl2ZXxlLm5lZ2F0aXZlKT09PTApO3JldHVybiB0aGlzLml1b3IoZSl9O0JOLnByb3RvdHlwZS5vcj1mdW5jdGlvbiBvcihlKXtpZih0aGlzLmxlbmd0aD5lLmxlbmd0aClyZXR1cm4gdGhpcy5jbG9uZSgpLmlvcihlKTtyZXR1cm4gZS5jbG9uZSgpLmlvcih0aGlzKX07Qk4ucHJvdG90eXBlLnVvcj1mdW5jdGlvbiB1b3IoZSl7aWYodGhpcy5sZW5ndGg+ZS5sZW5ndGgpcmV0dXJuIHRoaXMuY2xvbmUoKS5pdW9yKGUpO3JldHVybiBlLmNsb25lKCkuaXVvcih0aGlzKX07Qk4ucHJvdG90eXBlLml1YW5kPWZ1bmN0aW9uIGl1YW5kKGUpe3ZhciB0O2lmKHRoaXMubGVuZ3RoPmUubGVuZ3RoKXt0PWV9ZWxzZXt0PXRoaXN9Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3RoaXMud29yZHNbcl09dGhpcy53b3Jkc1tyXSZlLndvcmRzW3JdfXRoaXMubGVuZ3RoPXQubGVuZ3RoO3JldHVybiB0aGlzLl9zdHJpcCgpfTtCTi5wcm90b3R5cGUuaWFuZD1mdW5jdGlvbiBpYW5kKGUpe2Fzc2VydCgodGhpcy5uZWdhdGl2ZXxlLm5lZ2F0aXZlKT09PTApO3JldHVybiB0aGlzLml1YW5kKGUpfTtCTi5wcm90b3R5cGUuYW5kPWZ1bmN0aW9uIGFuZChlKXtpZih0aGlzLmxlbmd0aD5lLmxlbmd0aClyZXR1cm4gdGhpcy5jbG9uZSgpLmlhbmQoZSk7cmV0dXJuIGUuY2xvbmUoKS5pYW5kKHRoaXMpfTtCTi5wcm90b3R5cGUudWFuZD1mdW5jdGlvbiB1YW5kKGUpe2lmKHRoaXMubGVuZ3RoPmUubGVuZ3RoKXJldHVybiB0aGlzLmNsb25lKCkuaXVhbmQoZSk7cmV0dXJuIGUuY2xvbmUoKS5pdWFuZCh0aGlzKX07Qk4ucHJvdG90eXBlLml1eG9yPWZ1bmN0aW9uIGl1eG9yKGUpe3ZhciB0O3ZhciByO2lmKHRoaXMubGVuZ3RoPmUubGVuZ3RoKXt0PXRoaXM7cj1lfWVsc2V7dD1lO3I9dGhpc31mb3IodmFyIGk9MDtpPHIubGVuZ3RoO2krKyl7dGhpcy53b3Jkc1tpXT10LndvcmRzW2ldXnIud29yZHNbaV19aWYodGhpcyE9PXQpe2Zvcig7aTx0Lmxlbmd0aDtpKyspe3RoaXMud29yZHNbaV09dC53b3Jkc1tpXX19dGhpcy5sZW5ndGg9dC5sZW5ndGg7cmV0dXJuIHRoaXMuX3N0cmlwKCl9O0JOLnByb3RvdHlwZS5peG9yPWZ1bmN0aW9uIGl4b3IoZSl7YXNzZXJ0KCh0aGlzLm5lZ2F0aXZlfGUubmVnYXRpdmUpPT09MCk7cmV0dXJuIHRoaXMuaXV4b3IoZSl9O0JOLnByb3RvdHlwZS54b3I9ZnVuY3Rpb24geG9yKGUpe2lmKHRoaXMubGVuZ3RoPmUubGVuZ3RoKXJldHVybiB0aGlzLmNsb25lKCkuaXhvcihlKTtyZXR1cm4gZS5jbG9uZSgpLml4b3IodGhpcyl9O0JOLnByb3RvdHlwZS51eG9yPWZ1bmN0aW9uIHV4b3IoZSl7aWYodGhpcy5sZW5ndGg+ZS5sZW5ndGgpcmV0dXJuIHRoaXMuY2xvbmUoKS5pdXhvcihlKTtyZXR1cm4gZS5jbG9uZSgpLml1eG9yKHRoaXMpfTtCTi5wcm90b3R5cGUuaW5vdG49ZnVuY3Rpb24gaW5vdG4oZSl7YXNzZXJ0KHR5cGVvZiBlPT09XCJudW1iZXJcIiYmZT49MCk7dmFyIHQ9TWF0aC5jZWlsKGUvMjYpfDA7dmFyIHI9ZSUyNjt0aGlzLl9leHBhbmQodCk7aWYocj4wKXt0LS19Zm9yKHZhciBpPTA7aTx0O2krKyl7dGhpcy53b3Jkc1tpXT1+dGhpcy53b3Jkc1tpXSY2NzEwODg2M31pZihyPjApe3RoaXMud29yZHNbaV09fnRoaXMud29yZHNbaV0mNjcxMDg4NjM+PjI2LXJ9cmV0dXJuIHRoaXMuX3N0cmlwKCl9O0JOLnByb3RvdHlwZS5ub3RuPWZ1bmN0aW9uIG5vdG4oZSl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pbm90bihlKX07Qk4ucHJvdG90eXBlLnNldG49ZnVuY3Rpb24gc2V0bihlLHQpe2Fzc2VydCh0eXBlb2YgZT09PVwibnVtYmVyXCImJmU+PTApO3ZhciByPWUvMjZ8MDt2YXIgaT1lJTI2O3RoaXMuX2V4cGFuZChyKzEpO2lmKHQpe3RoaXMud29yZHNbcl09dGhpcy53b3Jkc1tyXXwxPDxpfWVsc2V7dGhpcy53b3Jkc1tyXT10aGlzLndvcmRzW3JdJn4oMTw8aSl9cmV0dXJuIHRoaXMuX3N0cmlwKCl9O0JOLnByb3RvdHlwZS5pYWRkPWZ1bmN0aW9uIGlhZGQoZSl7dmFyIHQ7aWYodGhpcy5uZWdhdGl2ZSE9PTAmJmUubmVnYXRpdmU9PT0wKXt0aGlzLm5lZ2F0aXZlPTA7dD10aGlzLmlzdWIoZSk7dGhpcy5uZWdhdGl2ZV49MTtyZXR1cm4gdGhpcy5fbm9ybVNpZ24oKX1lbHNlIGlmKHRoaXMubmVnYXRpdmU9PT0wJiZlLm5lZ2F0aXZlIT09MCl7ZS5uZWdhdGl2ZT0wO3Q9dGhpcy5pc3ViKGUpO2UubmVnYXRpdmU9MTtyZXR1cm4gdC5fbm9ybVNpZ24oKX12YXIgcixpO2lmKHRoaXMubGVuZ3RoPmUubGVuZ3RoKXtyPXRoaXM7aT1lfWVsc2V7cj1lO2k9dGhpc312YXIgbj0wO2Zvcih2YXIgYT0wO2E8aS5sZW5ndGg7YSsrKXt0PShyLndvcmRzW2FdfDApKyhpLndvcmRzW2FdfDApK247dGhpcy53b3Jkc1thXT10JjY3MTA4ODYzO249dD4+PjI2fWZvcig7biE9PTAmJmE8ci5sZW5ndGg7YSsrKXt0PShyLndvcmRzW2FdfDApK247dGhpcy53b3Jkc1thXT10JjY3MTA4ODYzO249dD4+PjI2fXRoaXMubGVuZ3RoPXIubGVuZ3RoO2lmKG4hPT0wKXt0aGlzLndvcmRzW3RoaXMubGVuZ3RoXT1uO3RoaXMubGVuZ3RoKyt9ZWxzZSBpZihyIT09dGhpcyl7Zm9yKDthPHIubGVuZ3RoO2ErKyl7dGhpcy53b3Jkc1thXT1yLndvcmRzW2FdfX1yZXR1cm4gdGhpc307Qk4ucHJvdG90eXBlLmFkZD1mdW5jdGlvbiBhZGQoZSl7dmFyIHQ7aWYoZS5uZWdhdGl2ZSE9PTAmJnRoaXMubmVnYXRpdmU9PT0wKXtlLm5lZ2F0aXZlPTA7dD10aGlzLnN1YihlKTtlLm5lZ2F0aXZlXj0xO3JldHVybiB0fWVsc2UgaWYoZS5uZWdhdGl2ZT09PTAmJnRoaXMubmVnYXRpdmUhPT0wKXt0aGlzLm5lZ2F0aXZlPTA7dD1lLnN1Yih0aGlzKTt0aGlzLm5lZ2F0aXZlPTE7cmV0dXJuIHR9aWYodGhpcy5sZW5ndGg+ZS5sZW5ndGgpcmV0dXJuIHRoaXMuY2xvbmUoKS5pYWRkKGUpO3JldHVybiBlLmNsb25lKCkuaWFkZCh0aGlzKX07Qk4ucHJvdG90eXBlLmlzdWI9ZnVuY3Rpb24gaXN1YihlKXtpZihlLm5lZ2F0aXZlIT09MCl7ZS5uZWdhdGl2ZT0wO3ZhciB0PXRoaXMuaWFkZChlKTtlLm5lZ2F0aXZlPTE7cmV0dXJuIHQuX25vcm1TaWduKCl9ZWxzZSBpZih0aGlzLm5lZ2F0aXZlIT09MCl7dGhpcy5uZWdhdGl2ZT0wO3RoaXMuaWFkZChlKTt0aGlzLm5lZ2F0aXZlPTE7cmV0dXJuIHRoaXMuX25vcm1TaWduKCl9dmFyIHI9dGhpcy5jbXAoZSk7aWYocj09PTApe3RoaXMubmVnYXRpdmU9MDt0aGlzLmxlbmd0aD0xO3RoaXMud29yZHNbMF09MDtyZXR1cm4gdGhpc312YXIgaSxuO2lmKHI+MCl7aT10aGlzO249ZX1lbHNle2k9ZTtuPXRoaXN9dmFyIGE9MDtmb3IodmFyIHM9MDtzPG4ubGVuZ3RoO3MrKyl7dD0oaS53b3Jkc1tzXXwwKS0obi53b3Jkc1tzXXwwKSthO2E9dD4+MjY7dGhpcy53b3Jkc1tzXT10JjY3MTA4ODYzfWZvcig7YSE9PTAmJnM8aS5sZW5ndGg7cysrKXt0PShpLndvcmRzW3NdfDApK2E7YT10Pj4yNjt0aGlzLndvcmRzW3NdPXQmNjcxMDg4NjN9aWYoYT09PTAmJnM8aS5sZW5ndGgmJmkhPT10aGlzKXtmb3IoO3M8aS5sZW5ndGg7cysrKXt0aGlzLndvcmRzW3NdPWkud29yZHNbc119fXRoaXMubGVuZ3RoPU1hdGgubWF4KHRoaXMubGVuZ3RoLHMpO2lmKGkhPT10aGlzKXt0aGlzLm5lZ2F0aXZlPTF9cmV0dXJuIHRoaXMuX3N0cmlwKCl9O0JOLnByb3RvdHlwZS5zdWI9ZnVuY3Rpb24gc3ViKGUpe3JldHVybiB0aGlzLmNsb25lKCkuaXN1YihlKX07ZnVuY3Rpb24gc21hbGxNdWxUbyhlLHQscil7ci5uZWdhdGl2ZT10Lm5lZ2F0aXZlXmUubmVnYXRpdmU7dmFyIGk9ZS5sZW5ndGgrdC5sZW5ndGh8MDtyLmxlbmd0aD1pO2k9aS0xfDA7dmFyIG49ZS53b3Jkc1swXXwwO3ZhciBhPXQud29yZHNbMF18MDt2YXIgcz1uKmE7dmFyIG89cyY2NzEwODg2Mzt2YXIgaD1zLzY3MTA4ODY0fDA7ci53b3Jkc1swXT1vO2Zvcih2YXIgdT0xO3U8aTt1Kyspe3ZhciBkPWg+Pj4yNjt2YXIgYz1oJjY3MTA4ODYzO3ZhciBsPU1hdGgubWluKHUsdC5sZW5ndGgtMSk7Zm9yKHZhciBwPU1hdGgubWF4KDAsdS1lLmxlbmd0aCsxKTtwPD1sO3ArKyl7dmFyIHY9dS1wfDA7bj1lLndvcmRzW3ZdfDA7YT10LndvcmRzW3BdfDA7cz1uKmErYztkKz1zLzY3MTA4ODY0fDA7Yz1zJjY3MTA4ODYzfXIud29yZHNbdV09Y3wwO2g9ZHwwfWlmKGghPT0wKXtyLndvcmRzW3VdPWh8MH1lbHNle3IubGVuZ3RoLS19cmV0dXJuIHIuX3N0cmlwKCl9dmFyIGg9ZnVuY3Rpb24gY29tYjEwTXVsVG8oZSx0LHIpe3ZhciBpPWUud29yZHM7dmFyIG49dC53b3Jkczt2YXIgYT1yLndvcmRzO3ZhciBzPTA7dmFyIG87dmFyIGg7dmFyIHU7dmFyIGQ9aVswXXwwO3ZhciBjPWQmODE5MTt2YXIgbD1kPj4+MTM7dmFyIHA9aVsxXXwwO3ZhciB2PXAmODE5MTt2YXIgYj1wPj4+MTM7dmFyIG09aVsyXXwwO3ZhciB5PW0mODE5MTt2YXIgZz1tPj4+MTM7dmFyIF89aVszXXwwO3ZhciB3PV8mODE5MTt2YXIgTT1fPj4+MTM7dmFyIEI9aVs0XXwwO3ZhciBFPUImODE5MTt2YXIgaz1CPj4+MTM7dmFyIEE9aVs1XXwwO3ZhciBOPUEmODE5MTt2YXIgUD1BPj4+MTM7dmFyIHg9aVs2XXwwO3ZhciBJPXgmODE5MTt2YXIgQz14Pj4+MTM7dmFyIEQ9aVs3XXwwO3ZhciBUPUQmODE5MTt2YXIgaj1EPj4+MTM7dmFyIHE9aVs4XXwwO3ZhciBPPXEmODE5MTt2YXIgSD1xPj4+MTM7dmFyIEw9aVs5XXwwO3ZhciB6PUwmODE5MTt2YXIgRj1MPj4+MTM7dmFyIFU9blswXXwwO3ZhciBXPVUmODE5MTt2YXIgVj1VPj4+MTM7dmFyIEc9blsxXXwwO3ZhciBKPUcmODE5MTt2YXIgWj1HPj4+MTM7dmFyIFg9blsyXXwwO3ZhciBZPVgmODE5MTt2YXIgJD1YPj4+MTM7dmFyIFE9blszXXwwO3ZhciBlZT1RJjgxOTE7dmFyIHRlPVE+Pj4xMzt2YXIgcmU9bls0XXwwO3ZhciBpZT1yZSY4MTkxO3ZhciBuZT1yZT4+PjEzO3ZhciBhZT1uWzVdfDA7dmFyIGZlPWFlJjgxOTE7dmFyIHNlPWFlPj4+MTM7dmFyIG9lPW5bNl18MDt2YXIgaGU9b2UmODE5MTt2YXIgdWU9b2U+Pj4xMzt2YXIgZGU9bls3XXwwO3ZhciBjZT1kZSY4MTkxO3ZhciBsZT1kZT4+PjEzO3ZhciBwZT1uWzhdfDA7dmFyIHZlPXBlJjgxOTE7dmFyIGJlPXBlPj4+MTM7dmFyIG1lPW5bOV18MDt2YXIgeWU9bWUmODE5MTt2YXIgZ2U9bWU+Pj4xMztyLm5lZ2F0aXZlPWUubmVnYXRpdmVedC5uZWdhdGl2ZTtyLmxlbmd0aD0xOTtvPU1hdGguaW11bChjLFcpO2g9TWF0aC5pbXVsKGMsVik7aD1oK01hdGguaW11bChsLFcpfDA7dT1NYXRoLmltdWwobCxWKTt2YXIgX2U9KHMrb3wwKSsoKGgmODE5MSk8PDEzKXwwO3M9KHUrKGg+Pj4xMyl8MCkrKF9lPj4+MjYpfDA7X2UmPTY3MTA4ODYzO289TWF0aC5pbXVsKHYsVyk7aD1NYXRoLmltdWwodixWKTtoPWgrTWF0aC5pbXVsKGIsVyl8MDt1PU1hdGguaW11bChiLFYpO289bytNYXRoLmltdWwoYyxKKXwwO2g9aCtNYXRoLmltdWwoYyxaKXwwO2g9aCtNYXRoLmltdWwobCxKKXwwO3U9dStNYXRoLmltdWwobCxaKXwwO3ZhciB3ZT0ocytvfDApKygoaCY4MTkxKTw8MTMpfDA7cz0odSsoaD4+PjEzKXwwKSsod2U+Pj4yNil8MDt3ZSY9NjcxMDg4NjM7bz1NYXRoLmltdWwoeSxXKTtoPU1hdGguaW11bCh5LFYpO2g9aCtNYXRoLmltdWwoZyxXKXwwO3U9TWF0aC5pbXVsKGcsVik7bz1vK01hdGguaW11bCh2LEopfDA7aD1oK01hdGguaW11bCh2LFopfDA7aD1oK01hdGguaW11bChiLEopfDA7dT11K01hdGguaW11bChiLFopfDA7bz1vK01hdGguaW11bChjLFkpfDA7aD1oK01hdGguaW11bChjLCQpfDA7aD1oK01hdGguaW11bChsLFkpfDA7dT11K01hdGguaW11bChsLCQpfDA7dmFyIE1lPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhNZT4+PjI2KXwwO01lJj02NzEwODg2MztvPU1hdGguaW11bCh3LFcpO2g9TWF0aC5pbXVsKHcsVik7aD1oK01hdGguaW11bChNLFcpfDA7dT1NYXRoLmltdWwoTSxWKTtvPW8rTWF0aC5pbXVsKHksSil8MDtoPWgrTWF0aC5pbXVsKHksWil8MDtoPWgrTWF0aC5pbXVsKGcsSil8MDt1PXUrTWF0aC5pbXVsKGcsWil8MDtvPW8rTWF0aC5pbXVsKHYsWSl8MDtoPWgrTWF0aC5pbXVsKHYsJCl8MDtoPWgrTWF0aC5pbXVsKGIsWSl8MDt1PXUrTWF0aC5pbXVsKGIsJCl8MDtvPW8rTWF0aC5pbXVsKGMsZWUpfDA7aD1oK01hdGguaW11bChjLHRlKXwwO2g9aCtNYXRoLmltdWwobCxlZSl8MDt1PXUrTWF0aC5pbXVsKGwsdGUpfDA7dmFyIFNlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhTZT4+PjI2KXwwO1NlJj02NzEwODg2MztvPU1hdGguaW11bChFLFcpO2g9TWF0aC5pbXVsKEUsVik7aD1oK01hdGguaW11bChrLFcpfDA7dT1NYXRoLmltdWwoayxWKTtvPW8rTWF0aC5pbXVsKHcsSil8MDtoPWgrTWF0aC5pbXVsKHcsWil8MDtoPWgrTWF0aC5pbXVsKE0sSil8MDt1PXUrTWF0aC5pbXVsKE0sWil8MDtvPW8rTWF0aC5pbXVsKHksWSl8MDtoPWgrTWF0aC5pbXVsKHksJCl8MDtoPWgrTWF0aC5pbXVsKGcsWSl8MDt1PXUrTWF0aC5pbXVsKGcsJCl8MDtvPW8rTWF0aC5pbXVsKHYsZWUpfDA7aD1oK01hdGguaW11bCh2LHRlKXwwO2g9aCtNYXRoLmltdWwoYixlZSl8MDt1PXUrTWF0aC5pbXVsKGIsdGUpfDA7bz1vK01hdGguaW11bChjLGllKXwwO2g9aCtNYXRoLmltdWwoYyxuZSl8MDtoPWgrTWF0aC5pbXVsKGwsaWUpfDA7dT11K01hdGguaW11bChsLG5lKXwwO3ZhciBCZT0ocytvfDApKygoaCY4MTkxKTw8MTMpfDA7cz0odSsoaD4+PjEzKXwwKSsoQmU+Pj4yNil8MDtCZSY9NjcxMDg4NjM7bz1NYXRoLmltdWwoTixXKTtoPU1hdGguaW11bChOLFYpO2g9aCtNYXRoLmltdWwoUCxXKXwwO3U9TWF0aC5pbXVsKFAsVik7bz1vK01hdGguaW11bChFLEopfDA7aD1oK01hdGguaW11bChFLFopfDA7aD1oK01hdGguaW11bChrLEopfDA7dT11K01hdGguaW11bChrLFopfDA7bz1vK01hdGguaW11bCh3LFkpfDA7aD1oK01hdGguaW11bCh3LCQpfDA7aD1oK01hdGguaW11bChNLFkpfDA7dT11K01hdGguaW11bChNLCQpfDA7bz1vK01hdGguaW11bCh5LGVlKXwwO2g9aCtNYXRoLmltdWwoeSx0ZSl8MDtoPWgrTWF0aC5pbXVsKGcsZWUpfDA7dT11K01hdGguaW11bChnLHRlKXwwO289bytNYXRoLmltdWwodixpZSl8MDtoPWgrTWF0aC5pbXVsKHYsbmUpfDA7aD1oK01hdGguaW11bChiLGllKXwwO3U9dStNYXRoLmltdWwoYixuZSl8MDtvPW8rTWF0aC5pbXVsKGMsZmUpfDA7aD1oK01hdGguaW11bChjLHNlKXwwO2g9aCtNYXRoLmltdWwobCxmZSl8MDt1PXUrTWF0aC5pbXVsKGwsc2UpfDA7dmFyIEVlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhFZT4+PjI2KXwwO0VlJj02NzEwODg2MztvPU1hdGguaW11bChJLFcpO2g9TWF0aC5pbXVsKEksVik7aD1oK01hdGguaW11bChDLFcpfDA7dT1NYXRoLmltdWwoQyxWKTtvPW8rTWF0aC5pbXVsKE4sSil8MDtoPWgrTWF0aC5pbXVsKE4sWil8MDtoPWgrTWF0aC5pbXVsKFAsSil8MDt1PXUrTWF0aC5pbXVsKFAsWil8MDtvPW8rTWF0aC5pbXVsKEUsWSl8MDtoPWgrTWF0aC5pbXVsKEUsJCl8MDtoPWgrTWF0aC5pbXVsKGssWSl8MDt1PXUrTWF0aC5pbXVsKGssJCl8MDtvPW8rTWF0aC5pbXVsKHcsZWUpfDA7aD1oK01hdGguaW11bCh3LHRlKXwwO2g9aCtNYXRoLmltdWwoTSxlZSl8MDt1PXUrTWF0aC5pbXVsKE0sdGUpfDA7bz1vK01hdGguaW11bCh5LGllKXwwO2g9aCtNYXRoLmltdWwoeSxuZSl8MDtoPWgrTWF0aC5pbXVsKGcsaWUpfDA7dT11K01hdGguaW11bChnLG5lKXwwO289bytNYXRoLmltdWwodixmZSl8MDtoPWgrTWF0aC5pbXVsKHYsc2UpfDA7aD1oK01hdGguaW11bChiLGZlKXwwO3U9dStNYXRoLmltdWwoYixzZSl8MDtvPW8rTWF0aC5pbXVsKGMsaGUpfDA7aD1oK01hdGguaW11bChjLHVlKXwwO2g9aCtNYXRoLmltdWwobCxoZSl8MDt1PXUrTWF0aC5pbXVsKGwsdWUpfDA7dmFyIGtlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhrZT4+PjI2KXwwO2tlJj02NzEwODg2MztvPU1hdGguaW11bChULFcpO2g9TWF0aC5pbXVsKFQsVik7aD1oK01hdGguaW11bChqLFcpfDA7dT1NYXRoLmltdWwoaixWKTtvPW8rTWF0aC5pbXVsKEksSil8MDtoPWgrTWF0aC5pbXVsKEksWil8MDtoPWgrTWF0aC5pbXVsKEMsSil8MDt1PXUrTWF0aC5pbXVsKEMsWil8MDtvPW8rTWF0aC5pbXVsKE4sWSl8MDtoPWgrTWF0aC5pbXVsKE4sJCl8MDtoPWgrTWF0aC5pbXVsKFAsWSl8MDt1PXUrTWF0aC5pbXVsKFAsJCl8MDtvPW8rTWF0aC5pbXVsKEUsZWUpfDA7aD1oK01hdGguaW11bChFLHRlKXwwO2g9aCtNYXRoLmltdWwoayxlZSl8MDt1PXUrTWF0aC5pbXVsKGssdGUpfDA7bz1vK01hdGguaW11bCh3LGllKXwwO2g9aCtNYXRoLmltdWwodyxuZSl8MDtoPWgrTWF0aC5pbXVsKE0saWUpfDA7dT11K01hdGguaW11bChNLG5lKXwwO289bytNYXRoLmltdWwoeSxmZSl8MDtoPWgrTWF0aC5pbXVsKHksc2UpfDA7aD1oK01hdGguaW11bChnLGZlKXwwO3U9dStNYXRoLmltdWwoZyxzZSl8MDtvPW8rTWF0aC5pbXVsKHYsaGUpfDA7aD1oK01hdGguaW11bCh2LHVlKXwwO2g9aCtNYXRoLmltdWwoYixoZSl8MDt1PXUrTWF0aC5pbXVsKGIsdWUpfDA7bz1vK01hdGguaW11bChjLGNlKXwwO2g9aCtNYXRoLmltdWwoYyxsZSl8MDtoPWgrTWF0aC5pbXVsKGwsY2UpfDA7dT11K01hdGguaW11bChsLGxlKXwwO3ZhciBBZT0ocytvfDApKygoaCY4MTkxKTw8MTMpfDA7cz0odSsoaD4+PjEzKXwwKSsoQWU+Pj4yNil8MDtBZSY9NjcxMDg4NjM7bz1NYXRoLmltdWwoTyxXKTtoPU1hdGguaW11bChPLFYpO2g9aCtNYXRoLmltdWwoSCxXKXwwO3U9TWF0aC5pbXVsKEgsVik7bz1vK01hdGguaW11bChULEopfDA7aD1oK01hdGguaW11bChULFopfDA7aD1oK01hdGguaW11bChqLEopfDA7dT11K01hdGguaW11bChqLFopfDA7bz1vK01hdGguaW11bChJLFkpfDA7aD1oK01hdGguaW11bChJLCQpfDA7aD1oK01hdGguaW11bChDLFkpfDA7dT11K01hdGguaW11bChDLCQpfDA7bz1vK01hdGguaW11bChOLGVlKXwwO2g9aCtNYXRoLmltdWwoTix0ZSl8MDtoPWgrTWF0aC5pbXVsKFAsZWUpfDA7dT11K01hdGguaW11bChQLHRlKXwwO289bytNYXRoLmltdWwoRSxpZSl8MDtoPWgrTWF0aC5pbXVsKEUsbmUpfDA7aD1oK01hdGguaW11bChrLGllKXwwO3U9dStNYXRoLmltdWwoayxuZSl8MDtvPW8rTWF0aC5pbXVsKHcsZmUpfDA7aD1oK01hdGguaW11bCh3LHNlKXwwO2g9aCtNYXRoLmltdWwoTSxmZSl8MDt1PXUrTWF0aC5pbXVsKE0sc2UpfDA7bz1vK01hdGguaW11bCh5LGhlKXwwO2g9aCtNYXRoLmltdWwoeSx1ZSl8MDtoPWgrTWF0aC5pbXVsKGcsaGUpfDA7dT11K01hdGguaW11bChnLHVlKXwwO289bytNYXRoLmltdWwodixjZSl8MDtoPWgrTWF0aC5pbXVsKHYsbGUpfDA7aD1oK01hdGguaW11bChiLGNlKXwwO3U9dStNYXRoLmltdWwoYixsZSl8MDtvPW8rTWF0aC5pbXVsKGMsdmUpfDA7aD1oK01hdGguaW11bChjLGJlKXwwO2g9aCtNYXRoLmltdWwobCx2ZSl8MDt1PXUrTWF0aC5pbXVsKGwsYmUpfDA7dmFyIE5lPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhOZT4+PjI2KXwwO05lJj02NzEwODg2MztvPU1hdGguaW11bCh6LFcpO2g9TWF0aC5pbXVsKHosVik7aD1oK01hdGguaW11bChGLFcpfDA7dT1NYXRoLmltdWwoRixWKTtvPW8rTWF0aC5pbXVsKE8sSil8MDtoPWgrTWF0aC5pbXVsKE8sWil8MDtoPWgrTWF0aC5pbXVsKEgsSil8MDt1PXUrTWF0aC5pbXVsKEgsWil8MDtvPW8rTWF0aC5pbXVsKFQsWSl8MDtoPWgrTWF0aC5pbXVsKFQsJCl8MDtoPWgrTWF0aC5pbXVsKGosWSl8MDt1PXUrTWF0aC5pbXVsKGosJCl8MDtvPW8rTWF0aC5pbXVsKEksZWUpfDA7aD1oK01hdGguaW11bChJLHRlKXwwO2g9aCtNYXRoLmltdWwoQyxlZSl8MDt1PXUrTWF0aC5pbXVsKEMsdGUpfDA7bz1vK01hdGguaW11bChOLGllKXwwO2g9aCtNYXRoLmltdWwoTixuZSl8MDtoPWgrTWF0aC5pbXVsKFAsaWUpfDA7dT11K01hdGguaW11bChQLG5lKXwwO289bytNYXRoLmltdWwoRSxmZSl8MDtoPWgrTWF0aC5pbXVsKEUsc2UpfDA7aD1oK01hdGguaW11bChrLGZlKXwwO3U9dStNYXRoLmltdWwoayxzZSl8MDtvPW8rTWF0aC5pbXVsKHcsaGUpfDA7aD1oK01hdGguaW11bCh3LHVlKXwwO2g9aCtNYXRoLmltdWwoTSxoZSl8MDt1PXUrTWF0aC5pbXVsKE0sdWUpfDA7bz1vK01hdGguaW11bCh5LGNlKXwwO2g9aCtNYXRoLmltdWwoeSxsZSl8MDtoPWgrTWF0aC5pbXVsKGcsY2UpfDA7dT11K01hdGguaW11bChnLGxlKXwwO289bytNYXRoLmltdWwodix2ZSl8MDtoPWgrTWF0aC5pbXVsKHYsYmUpfDA7aD1oK01hdGguaW11bChiLHZlKXwwO3U9dStNYXRoLmltdWwoYixiZSl8MDtvPW8rTWF0aC5pbXVsKGMseWUpfDA7aD1oK01hdGguaW11bChjLGdlKXwwO2g9aCtNYXRoLmltdWwobCx5ZSl8MDt1PXUrTWF0aC5pbXVsKGwsZ2UpfDA7dmFyIFJlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhSZT4+PjI2KXwwO1JlJj02NzEwODg2MztvPU1hdGguaW11bCh6LEopO2g9TWF0aC5pbXVsKHosWik7aD1oK01hdGguaW11bChGLEopfDA7dT1NYXRoLmltdWwoRixaKTtvPW8rTWF0aC5pbXVsKE8sWSl8MDtoPWgrTWF0aC5pbXVsKE8sJCl8MDtoPWgrTWF0aC5pbXVsKEgsWSl8MDt1PXUrTWF0aC5pbXVsKEgsJCl8MDtvPW8rTWF0aC5pbXVsKFQsZWUpfDA7aD1oK01hdGguaW11bChULHRlKXwwO2g9aCtNYXRoLmltdWwoaixlZSl8MDt1PXUrTWF0aC5pbXVsKGosdGUpfDA7bz1vK01hdGguaW11bChJLGllKXwwO2g9aCtNYXRoLmltdWwoSSxuZSl8MDtoPWgrTWF0aC5pbXVsKEMsaWUpfDA7dT11K01hdGguaW11bChDLG5lKXwwO289bytNYXRoLmltdWwoTixmZSl8MDtoPWgrTWF0aC5pbXVsKE4sc2UpfDA7aD1oK01hdGguaW11bChQLGZlKXwwO3U9dStNYXRoLmltdWwoUCxzZSl8MDtvPW8rTWF0aC5pbXVsKEUsaGUpfDA7aD1oK01hdGguaW11bChFLHVlKXwwO2g9aCtNYXRoLmltdWwoayxoZSl8MDt1PXUrTWF0aC5pbXVsKGssdWUpfDA7bz1vK01hdGguaW11bCh3LGNlKXwwO2g9aCtNYXRoLmltdWwodyxsZSl8MDtoPWgrTWF0aC5pbXVsKE0sY2UpfDA7dT11K01hdGguaW11bChNLGxlKXwwO289bytNYXRoLmltdWwoeSx2ZSl8MDtoPWgrTWF0aC5pbXVsKHksYmUpfDA7aD1oK01hdGguaW11bChnLHZlKXwwO3U9dStNYXRoLmltdWwoZyxiZSl8MDtvPW8rTWF0aC5pbXVsKHYseWUpfDA7aD1oK01hdGguaW11bCh2LGdlKXwwO2g9aCtNYXRoLmltdWwoYix5ZSl8MDt1PXUrTWF0aC5pbXVsKGIsZ2UpfDA7dmFyIFBlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhQZT4+PjI2KXwwO1BlJj02NzEwODg2MztvPU1hdGguaW11bCh6LFkpO2g9TWF0aC5pbXVsKHosJCk7aD1oK01hdGguaW11bChGLFkpfDA7dT1NYXRoLmltdWwoRiwkKTtvPW8rTWF0aC5pbXVsKE8sZWUpfDA7aD1oK01hdGguaW11bChPLHRlKXwwO2g9aCtNYXRoLmltdWwoSCxlZSl8MDt1PXUrTWF0aC5pbXVsKEgsdGUpfDA7bz1vK01hdGguaW11bChULGllKXwwO2g9aCtNYXRoLmltdWwoVCxuZSl8MDtoPWgrTWF0aC5pbXVsKGosaWUpfDA7dT11K01hdGguaW11bChqLG5lKXwwO289bytNYXRoLmltdWwoSSxmZSl8MDtoPWgrTWF0aC5pbXVsKEksc2UpfDA7aD1oK01hdGguaW11bChDLGZlKXwwO3U9dStNYXRoLmltdWwoQyxzZSl8MDtvPW8rTWF0aC5pbXVsKE4saGUpfDA7aD1oK01hdGguaW11bChOLHVlKXwwO2g9aCtNYXRoLmltdWwoUCxoZSl8MDt1PXUrTWF0aC5pbXVsKFAsdWUpfDA7bz1vK01hdGguaW11bChFLGNlKXwwO2g9aCtNYXRoLmltdWwoRSxsZSl8MDtoPWgrTWF0aC5pbXVsKGssY2UpfDA7dT11K01hdGguaW11bChrLGxlKXwwO289bytNYXRoLmltdWwodyx2ZSl8MDtoPWgrTWF0aC5pbXVsKHcsYmUpfDA7aD1oK01hdGguaW11bChNLHZlKXwwO3U9dStNYXRoLmltdWwoTSxiZSl8MDtvPW8rTWF0aC5pbXVsKHkseWUpfDA7aD1oK01hdGguaW11bCh5LGdlKXwwO2g9aCtNYXRoLmltdWwoZyx5ZSl8MDt1PXUrTWF0aC5pbXVsKGcsZ2UpfDA7dmFyIHhlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyh4ZT4+PjI2KXwwO3hlJj02NzEwODg2MztvPU1hdGguaW11bCh6LGVlKTtoPU1hdGguaW11bCh6LHRlKTtoPWgrTWF0aC5pbXVsKEYsZWUpfDA7dT1NYXRoLmltdWwoRix0ZSk7bz1vK01hdGguaW11bChPLGllKXwwO2g9aCtNYXRoLmltdWwoTyxuZSl8MDtoPWgrTWF0aC5pbXVsKEgsaWUpfDA7dT11K01hdGguaW11bChILG5lKXwwO289bytNYXRoLmltdWwoVCxmZSl8MDtoPWgrTWF0aC5pbXVsKFQsc2UpfDA7aD1oK01hdGguaW11bChqLGZlKXwwO3U9dStNYXRoLmltdWwoaixzZSl8MDtvPW8rTWF0aC5pbXVsKEksaGUpfDA7aD1oK01hdGguaW11bChJLHVlKXwwO2g9aCtNYXRoLmltdWwoQyxoZSl8MDt1PXUrTWF0aC5pbXVsKEMsdWUpfDA7bz1vK01hdGguaW11bChOLGNlKXwwO2g9aCtNYXRoLmltdWwoTixsZSl8MDtoPWgrTWF0aC5pbXVsKFAsY2UpfDA7dT11K01hdGguaW11bChQLGxlKXwwO289bytNYXRoLmltdWwoRSx2ZSl8MDtoPWgrTWF0aC5pbXVsKEUsYmUpfDA7aD1oK01hdGguaW11bChrLHZlKXwwO3U9dStNYXRoLmltdWwoayxiZSl8MDtvPW8rTWF0aC5pbXVsKHcseWUpfDA7aD1oK01hdGguaW11bCh3LGdlKXwwO2g9aCtNYXRoLmltdWwoTSx5ZSl8MDt1PXUrTWF0aC5pbXVsKE0sZ2UpfDA7dmFyIEllPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhJZT4+PjI2KXwwO0llJj02NzEwODg2MztvPU1hdGguaW11bCh6LGllKTtoPU1hdGguaW11bCh6LG5lKTtoPWgrTWF0aC5pbXVsKEYsaWUpfDA7dT1NYXRoLmltdWwoRixuZSk7bz1vK01hdGguaW11bChPLGZlKXwwO2g9aCtNYXRoLmltdWwoTyxzZSl8MDtoPWgrTWF0aC5pbXVsKEgsZmUpfDA7dT11K01hdGguaW11bChILHNlKXwwO289bytNYXRoLmltdWwoVCxoZSl8MDtoPWgrTWF0aC5pbXVsKFQsdWUpfDA7aD1oK01hdGguaW11bChqLGhlKXwwO3U9dStNYXRoLmltdWwoaix1ZSl8MDtvPW8rTWF0aC5pbXVsKEksY2UpfDA7aD1oK01hdGguaW11bChJLGxlKXwwO2g9aCtNYXRoLmltdWwoQyxjZSl8MDt1PXUrTWF0aC5pbXVsKEMsbGUpfDA7bz1vK01hdGguaW11bChOLHZlKXwwO2g9aCtNYXRoLmltdWwoTixiZSl8MDtoPWgrTWF0aC5pbXVsKFAsdmUpfDA7dT11K01hdGguaW11bChQLGJlKXwwO289bytNYXRoLmltdWwoRSx5ZSl8MDtoPWgrTWF0aC5pbXVsKEUsZ2UpfDA7aD1oK01hdGguaW11bChrLHllKXwwO3U9dStNYXRoLmltdWwoayxnZSl8MDt2YXIgQ2U9KHMrb3wwKSsoKGgmODE5MSk8PDEzKXwwO3M9KHUrKGg+Pj4xMyl8MCkrKENlPj4+MjYpfDA7Q2UmPTY3MTA4ODYzO289TWF0aC5pbXVsKHosZmUpO2g9TWF0aC5pbXVsKHosc2UpO2g9aCtNYXRoLmltdWwoRixmZSl8MDt1PU1hdGguaW11bChGLHNlKTtvPW8rTWF0aC5pbXVsKE8saGUpfDA7aD1oK01hdGguaW11bChPLHVlKXwwO2g9aCtNYXRoLmltdWwoSCxoZSl8MDt1PXUrTWF0aC5pbXVsKEgsdWUpfDA7bz1vK01hdGguaW11bChULGNlKXwwO2g9aCtNYXRoLmltdWwoVCxsZSl8MDtoPWgrTWF0aC5pbXVsKGosY2UpfDA7dT11K01hdGguaW11bChqLGxlKXwwO289bytNYXRoLmltdWwoSSx2ZSl8MDtoPWgrTWF0aC5pbXVsKEksYmUpfDA7aD1oK01hdGguaW11bChDLHZlKXwwO3U9dStNYXRoLmltdWwoQyxiZSl8MDtvPW8rTWF0aC5pbXVsKE4seWUpfDA7aD1oK01hdGguaW11bChOLGdlKXwwO2g9aCtNYXRoLmltdWwoUCx5ZSl8MDt1PXUrTWF0aC5pbXVsKFAsZ2UpfDA7dmFyIERlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhEZT4+PjI2KXwwO0RlJj02NzEwODg2MztvPU1hdGguaW11bCh6LGhlKTtoPU1hdGguaW11bCh6LHVlKTtoPWgrTWF0aC5pbXVsKEYsaGUpfDA7dT1NYXRoLmltdWwoRix1ZSk7bz1vK01hdGguaW11bChPLGNlKXwwO2g9aCtNYXRoLmltdWwoTyxsZSl8MDtoPWgrTWF0aC5pbXVsKEgsY2UpfDA7dT11K01hdGguaW11bChILGxlKXwwO289bytNYXRoLmltdWwoVCx2ZSl8MDtoPWgrTWF0aC5pbXVsKFQsYmUpfDA7aD1oK01hdGguaW11bChqLHZlKXwwO3U9dStNYXRoLmltdWwoaixiZSl8MDtvPW8rTWF0aC5pbXVsKEkseWUpfDA7aD1oK01hdGguaW11bChJLGdlKXwwO2g9aCtNYXRoLmltdWwoQyx5ZSl8MDt1PXUrTWF0aC5pbXVsKEMsZ2UpfDA7dmFyIFRlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhUZT4+PjI2KXwwO1RlJj02NzEwODg2MztvPU1hdGguaW11bCh6LGNlKTtoPU1hdGguaW11bCh6LGxlKTtoPWgrTWF0aC5pbXVsKEYsY2UpfDA7dT1NYXRoLmltdWwoRixsZSk7bz1vK01hdGguaW11bChPLHZlKXwwO2g9aCtNYXRoLmltdWwoTyxiZSl8MDtoPWgrTWF0aC5pbXVsKEgsdmUpfDA7dT11K01hdGguaW11bChILGJlKXwwO289bytNYXRoLmltdWwoVCx5ZSl8MDtoPWgrTWF0aC5pbXVsKFQsZ2UpfDA7aD1oK01hdGguaW11bChqLHllKXwwO3U9dStNYXRoLmltdWwoaixnZSl8MDt2YXIgamU9KHMrb3wwKSsoKGgmODE5MSk8PDEzKXwwO3M9KHUrKGg+Pj4xMyl8MCkrKGplPj4+MjYpfDA7amUmPTY3MTA4ODYzO289TWF0aC5pbXVsKHosdmUpO2g9TWF0aC5pbXVsKHosYmUpO2g9aCtNYXRoLmltdWwoRix2ZSl8MDt1PU1hdGguaW11bChGLGJlKTtvPW8rTWF0aC5pbXVsKE8seWUpfDA7aD1oK01hdGguaW11bChPLGdlKXwwO2g9aCtNYXRoLmltdWwoSCx5ZSl8MDt1PXUrTWF0aC5pbXVsKEgsZ2UpfDA7dmFyIHFlPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhxZT4+PjI2KXwwO3FlJj02NzEwODg2MztvPU1hdGguaW11bCh6LHllKTtoPU1hdGguaW11bCh6LGdlKTtoPWgrTWF0aC5pbXVsKEYseWUpfDA7dT1NYXRoLmltdWwoRixnZSk7dmFyIE9lPShzK298MCkrKChoJjgxOTEpPDwxMyl8MDtzPSh1KyhoPj4+MTMpfDApKyhPZT4+PjI2KXwwO09lJj02NzEwODg2MzthWzBdPV9lO2FbMV09d2U7YVsyXT1NZTthWzNdPVNlO2FbNF09QmU7YVs1XT1FZTthWzZdPWtlO2FbN109QWU7YVs4XT1OZTthWzldPVJlO2FbMTBdPVBlO2FbMTFdPXhlO2FbMTJdPUllO2FbMTNdPUNlO2FbMTRdPURlO2FbMTVdPVRlO2FbMTZdPWplO2FbMTddPXFlO2FbMThdPU9lO2lmKHMhPT0wKXthWzE5XT1zO3IubGVuZ3RoKyt9cmV0dXJuIHJ9O2lmKCFNYXRoLmltdWwpe2g9c21hbGxNdWxUb31mdW5jdGlvbiBiaWdNdWxUbyhlLHQscil7ci5uZWdhdGl2ZT10Lm5lZ2F0aXZlXmUubmVnYXRpdmU7ci5sZW5ndGg9ZS5sZW5ndGgrdC5sZW5ndGg7dmFyIGk9MDt2YXIgbj0wO2Zvcih2YXIgYT0wO2E8ci5sZW5ndGgtMTthKyspe3ZhciBzPW47bj0wO3ZhciBvPWkmNjcxMDg4NjM7dmFyIGg9TWF0aC5taW4oYSx0Lmxlbmd0aC0xKTtmb3IodmFyIHU9TWF0aC5tYXgoMCxhLWUubGVuZ3RoKzEpO3U8PWg7dSsrKXt2YXIgZD1hLXU7dmFyIGM9ZS53b3Jkc1tkXXwwO3ZhciBsPXQud29yZHNbdV18MDt2YXIgcD1jKmw7dmFyIHY9cCY2NzEwODg2MztzPXMrKHAvNjcxMDg4NjR8MCl8MDt2PXYrb3wwO289diY2NzEwODg2MztzPXMrKHY+Pj4yNil8MDtuKz1zPj4+MjY7cyY9NjcxMDg4NjN9ci53b3Jkc1thXT1vO2k9cztzPW59aWYoaSE9PTApe3Iud29yZHNbYV09aX1lbHNle3IubGVuZ3RoLS19cmV0dXJuIHIuX3N0cmlwKCl9ZnVuY3Rpb24ganVtYm9NdWxUbyhlLHQscil7cmV0dXJuIGJpZ011bFRvKGUsdCxyKX1CTi5wcm90b3R5cGUubXVsVG89ZnVuY3Rpb24gbXVsVG8oZSx0KXt2YXIgcjt2YXIgaT10aGlzLmxlbmd0aCtlLmxlbmd0aDtpZih0aGlzLmxlbmd0aD09PTEwJiZlLmxlbmd0aD09PTEwKXtyPWgodGhpcyxlLHQpfWVsc2UgaWYoaTw2Myl7cj1zbWFsbE11bFRvKHRoaXMsZSx0KX1lbHNlIGlmKGk8MTAyNCl7cj1iaWdNdWxUbyh0aGlzLGUsdCl9ZWxzZXtyPWp1bWJvTXVsVG8odGhpcyxlLHQpfXJldHVybiByfTtmdW5jdGlvbiBGRlRNKGUsdCl7dGhpcy54PWU7dGhpcy55PXR9RkZUTS5wcm90b3R5cGUubWFrZVJCVD1mdW5jdGlvbiBtYWtlUkJUKGUpe3ZhciB0PW5ldyBBcnJheShlKTt2YXIgcj1CTi5wcm90b3R5cGUuX2NvdW50Qml0cyhlKS0xO2Zvcih2YXIgaT0wO2k8ZTtpKyspe3RbaV09dGhpcy5yZXZCaW4oaSxyLGUpfXJldHVybiB0fTtGRlRNLnByb3RvdHlwZS5yZXZCaW49ZnVuY3Rpb24gcmV2QmluKGUsdCxyKXtpZihlPT09MHx8ZT09PXItMSlyZXR1cm4gZTt2YXIgaT0wO2Zvcih2YXIgbj0wO248dDtuKyspe2l8PShlJjEpPDx0LW4tMTtlPj49MX1yZXR1cm4gaX07RkZUTS5wcm90b3R5cGUucGVybXV0ZT1mdW5jdGlvbiBwZXJtdXRlKGUsdCxyLGksbixhKXtmb3IodmFyIHM9MDtzPGE7cysrKXtpW3NdPXRbZVtzXV07bltzXT1yW2Vbc11dfX07RkZUTS5wcm90b3R5cGUudHJhbnNmb3JtPWZ1bmN0aW9uIHRyYW5zZm9ybShlLHQscixpLG4sYSl7dGhpcy5wZXJtdXRlKGEsZSx0LHIsaSxuKTtmb3IodmFyIHM9MTtzPG47czw8PTEpe3ZhciBvPXM8PDE7dmFyIGg9TWF0aC5jb3MoMipNYXRoLlBJL28pO3ZhciB1PU1hdGguc2luKDIqTWF0aC5QSS9vKTtmb3IodmFyIGQ9MDtkPG47ZCs9byl7dmFyIGM9aDt2YXIgbD11O2Zvcih2YXIgcD0wO3A8cztwKyspe3ZhciB2PXJbZCtwXTt2YXIgYj1pW2QrcF07dmFyIG09cltkK3Arc107dmFyIHk9aVtkK3Arc107dmFyIGc9YyptLWwqeTt5PWMqeStsKm07bT1nO3JbZCtwXT12K207aVtkK3BdPWIreTtyW2QrcCtzXT12LW07aVtkK3Arc109Yi15O2lmKHAhPT1vKXtnPWgqYy11Kmw7bD1oKmwrdSpjO2M9Z319fX19O0ZGVE0ucHJvdG90eXBlLmd1ZXNzTGVuMTNiPWZ1bmN0aW9uIGd1ZXNzTGVuMTNiKGUsdCl7dmFyIHI9TWF0aC5tYXgodCxlKXwxO3ZhciBpPXImMTt2YXIgbj0wO2ZvcihyPXIvMnwwO3I7cj1yPj4+MSl7bisrfXJldHVybiAxPDxuKzEraX07RkZUTS5wcm90b3R5cGUuY29uanVnYXRlPWZ1bmN0aW9uIGNvbmp1Z2F0ZShlLHQscil7aWYocjw9MSlyZXR1cm47Zm9yKHZhciBpPTA7aTxyLzI7aSsrKXt2YXIgbj1lW2ldO2VbaV09ZVtyLWktMV07ZVtyLWktMV09bjtuPXRbaV07dFtpXT0tdFtyLWktMV07dFtyLWktMV09LW59fTtGRlRNLnByb3RvdHlwZS5ub3JtYWxpemUxM2I9ZnVuY3Rpb24gbm9ybWFsaXplMTNiKGUsdCl7dmFyIHI9MDtmb3IodmFyIGk9MDtpPHQvMjtpKyspe3ZhciBuPU1hdGgucm91bmQoZVsyKmkrMV0vdCkqODE5MitNYXRoLnJvdW5kKGVbMippXS90KStyO2VbaV09biY2NzEwODg2MztpZihuPDY3MTA4ODY0KXtyPTB9ZWxzZXtyPW4vNjcxMDg4NjR8MH19cmV0dXJuIGV9O0ZGVE0ucHJvdG90eXBlLmNvbnZlcnQxM2I9ZnVuY3Rpb24gY29udmVydDEzYihlLHQscixpKXt2YXIgbj0wO2Zvcih2YXIgYT0wO2E8dDthKyspe249bisoZVthXXwwKTtyWzIqYV09biY4MTkxO249bj4+PjEzO3JbMiphKzFdPW4mODE5MTtuPW4+Pj4xM31mb3IoYT0yKnQ7YTxpOysrYSl7clthXT0wfWFzc2VydChuPT09MCk7YXNzZXJ0KChuJn44MTkxKT09PTApfTtGRlRNLnByb3RvdHlwZS5zdHViPWZ1bmN0aW9uIHN0dWIoZSl7dmFyIHQ9bmV3IEFycmF5KGUpO2Zvcih2YXIgcj0wO3I8ZTtyKyspe3Rbcl09MH1yZXR1cm4gdH07RkZUTS5wcm90b3R5cGUubXVscD1mdW5jdGlvbiBtdWxwKGUsdCxyKXt2YXIgaT0yKnRoaXMuZ3Vlc3NMZW4xM2IoZS5sZW5ndGgsdC5sZW5ndGgpO3ZhciBuPXRoaXMubWFrZVJCVChpKTt2YXIgYT10aGlzLnN0dWIoaSk7dmFyIHM9bmV3IEFycmF5KGkpO3ZhciBvPW5ldyBBcnJheShpKTt2YXIgaD1uZXcgQXJyYXkoaSk7dmFyIHU9bmV3IEFycmF5KGkpO3ZhciBkPW5ldyBBcnJheShpKTt2YXIgYz1uZXcgQXJyYXkoaSk7dmFyIGw9ci53b3JkcztsLmxlbmd0aD1pO3RoaXMuY29udmVydDEzYihlLndvcmRzLGUubGVuZ3RoLHMsaSk7dGhpcy5jb252ZXJ0MTNiKHQud29yZHMsdC5sZW5ndGgsdSxpKTt0aGlzLnRyYW5zZm9ybShzLGEsbyxoLGksbik7dGhpcy50cmFuc2Zvcm0odSxhLGQsYyxpLG4pO2Zvcih2YXIgcD0wO3A8aTtwKyspe3ZhciB2PW9bcF0qZFtwXS1oW3BdKmNbcF07aFtwXT1vW3BdKmNbcF0raFtwXSpkW3BdO29bcF09dn10aGlzLmNvbmp1Z2F0ZShvLGgsaSk7dGhpcy50cmFuc2Zvcm0obyxoLGwsYSxpLG4pO3RoaXMuY29uanVnYXRlKGwsYSxpKTt0aGlzLm5vcm1hbGl6ZTEzYihsLGkpO3IubmVnYXRpdmU9ZS5uZWdhdGl2ZV50Lm5lZ2F0aXZlO3IubGVuZ3RoPWUubGVuZ3RoK3QubGVuZ3RoO3JldHVybiByLl9zdHJpcCgpfTtCTi5wcm90b3R5cGUubXVsPWZ1bmN0aW9uIG11bChlKXt2YXIgdD1uZXcgQk4obnVsbCk7dC53b3Jkcz1uZXcgQXJyYXkodGhpcy5sZW5ndGgrZS5sZW5ndGgpO3JldHVybiB0aGlzLm11bFRvKGUsdCl9O0JOLnByb3RvdHlwZS5tdWxmPWZ1bmN0aW9uIG11bGYoZSl7dmFyIHQ9bmV3IEJOKG51bGwpO3Qud29yZHM9bmV3IEFycmF5KHRoaXMubGVuZ3RoK2UubGVuZ3RoKTtyZXR1cm4ganVtYm9NdWxUbyh0aGlzLGUsdCl9O0JOLnByb3RvdHlwZS5pbXVsPWZ1bmN0aW9uIGltdWwoZSl7cmV0dXJuIHRoaXMuY2xvbmUoKS5tdWxUbyhlLHRoaXMpfTtCTi5wcm90b3R5cGUuaW11bG49ZnVuY3Rpb24gaW11bG4oZSl7dmFyIHQ9ZTwwO2lmKHQpZT0tZTthc3NlcnQodHlwZW9mIGU9PT1cIm51bWJlclwiKTthc3NlcnQoZTw2NzEwODg2NCk7dmFyIHI9MDtmb3IodmFyIGk9MDtpPHRoaXMubGVuZ3RoO2krKyl7dmFyIG49KHRoaXMud29yZHNbaV18MCkqZTt2YXIgYT0obiY2NzEwODg2MykrKHImNjcxMDg4NjMpO3I+Pj0yNjtyKz1uLzY3MTA4ODY0fDA7cis9YT4+PjI2O3RoaXMud29yZHNbaV09YSY2NzEwODg2M31pZihyIT09MCl7dGhpcy53b3Jkc1tpXT1yO3RoaXMubGVuZ3RoKyt9cmV0dXJuIHQ/dGhpcy5pbmVnKCk6dGhpc307Qk4ucHJvdG90eXBlLm11bG49ZnVuY3Rpb24gbXVsbihlKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmltdWxuKGUpfTtCTi5wcm90b3R5cGUuc3FyPWZ1bmN0aW9uIHNxcigpe3JldHVybiB0aGlzLm11bCh0aGlzKX07Qk4ucHJvdG90eXBlLmlzcXI9ZnVuY3Rpb24gaXNxcigpe3JldHVybiB0aGlzLmltdWwodGhpcy5jbG9uZSgpKX07Qk4ucHJvdG90eXBlLnBvdz1mdW5jdGlvbiBwb3coZSl7dmFyIHQ9dG9CaXRBcnJheShlKTtpZih0Lmxlbmd0aD09PTApcmV0dXJuIG5ldyBCTigxKTt2YXIgcj10aGlzO2Zvcih2YXIgaT0wO2k8dC5sZW5ndGg7aSsrLHI9ci5zcXIoKSl7aWYodFtpXSE9PTApYnJlYWt9aWYoKytpPHQubGVuZ3RoKXtmb3IodmFyIG49ci5zcXIoKTtpPHQubGVuZ3RoO2krKyxuPW4uc3FyKCkpe2lmKHRbaV09PT0wKWNvbnRpbnVlO3I9ci5tdWwobil9fXJldHVybiByfTtCTi5wcm90b3R5cGUuaXVzaGxuPWZ1bmN0aW9uIGl1c2hsbihlKXthc3NlcnQodHlwZW9mIGU9PT1cIm51bWJlclwiJiZlPj0wKTt2YXIgdD1lJTI2O3ZhciByPShlLXQpLzI2O3ZhciBpPTY3MTA4ODYzPj4+MjYtdDw8MjYtdDt2YXIgbjtpZih0IT09MCl7dmFyIGE9MDtmb3Iobj0wO248dGhpcy5sZW5ndGg7bisrKXt2YXIgcz10aGlzLndvcmRzW25dJmk7dmFyIG89KHRoaXMud29yZHNbbl18MCktczw8dDt0aGlzLndvcmRzW25dPW98YTthPXM+Pj4yNi10fWlmKGEpe3RoaXMud29yZHNbbl09YTt0aGlzLmxlbmd0aCsrfX1pZihyIT09MCl7Zm9yKG49dGhpcy5sZW5ndGgtMTtuPj0wO24tLSl7dGhpcy53b3Jkc1tuK3JdPXRoaXMud29yZHNbbl19Zm9yKG49MDtuPHI7bisrKXt0aGlzLndvcmRzW25dPTB9dGhpcy5sZW5ndGgrPXJ9cmV0dXJuIHRoaXMuX3N0cmlwKCl9O0JOLnByb3RvdHlwZS5pc2hsbj1mdW5jdGlvbiBpc2hsbihlKXthc3NlcnQodGhpcy5uZWdhdGl2ZT09PTApO3JldHVybiB0aGlzLml1c2hsbihlKX07Qk4ucHJvdG90eXBlLml1c2hybj1mdW5jdGlvbiBpdXNocm4oZSx0LHIpe2Fzc2VydCh0eXBlb2YgZT09PVwibnVtYmVyXCImJmU+PTApO3ZhciBpO2lmKHQpe2k9KHQtdCUyNikvMjZ9ZWxzZXtpPTB9dmFyIG49ZSUyNjt2YXIgYT1NYXRoLm1pbigoZS1uKS8yNix0aGlzLmxlbmd0aCk7dmFyIHM9NjcxMDg4NjNeNjcxMDg4NjM+Pj5uPDxuO3ZhciBvPXI7aS09YTtpPU1hdGgubWF4KDAsaSk7aWYobyl7Zm9yKHZhciBoPTA7aDxhO2grKyl7by53b3Jkc1toXT10aGlzLndvcmRzW2hdfW8ubGVuZ3RoPWF9aWYoYT09PTApe31lbHNlIGlmKHRoaXMubGVuZ3RoPmEpe3RoaXMubGVuZ3RoLT1hO2ZvcihoPTA7aDx0aGlzLmxlbmd0aDtoKyspe3RoaXMud29yZHNbaF09dGhpcy53b3Jkc1toK2FdfX1lbHNle3RoaXMud29yZHNbMF09MDt0aGlzLmxlbmd0aD0xfXZhciB1PTA7Zm9yKGg9dGhpcy5sZW5ndGgtMTtoPj0wJiYodSE9PTB8fGg+PWkpO2gtLSl7dmFyIGQ9dGhpcy53b3Jkc1toXXwwO3RoaXMud29yZHNbaF09dTw8MjYtbnxkPj4+bjt1PWQmc31pZihvJiZ1IT09MCl7by53b3Jkc1tvLmxlbmd0aCsrXT11fWlmKHRoaXMubGVuZ3RoPT09MCl7dGhpcy53b3Jkc1swXT0wO3RoaXMubGVuZ3RoPTF9cmV0dXJuIHRoaXMuX3N0cmlwKCl9O0JOLnByb3RvdHlwZS5pc2hybj1mdW5jdGlvbiBpc2hybihlLHQscil7YXNzZXJ0KHRoaXMubmVnYXRpdmU9PT0wKTtyZXR1cm4gdGhpcy5pdXNocm4oZSx0LHIpfTtCTi5wcm90b3R5cGUuc2hsbj1mdW5jdGlvbiBzaGxuKGUpe3JldHVybiB0aGlzLmNsb25lKCkuaXNobG4oZSl9O0JOLnByb3RvdHlwZS51c2hsbj1mdW5jdGlvbiB1c2hsbihlKXtyZXR1cm4gdGhpcy5jbG9uZSgpLml1c2hsbihlKX07Qk4ucHJvdG90eXBlLnNocm49ZnVuY3Rpb24gc2hybihlKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmlzaHJuKGUpfTtCTi5wcm90b3R5cGUudXNocm49ZnVuY3Rpb24gdXNocm4oZSl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pdXNocm4oZSl9O0JOLnByb3RvdHlwZS50ZXN0bj1mdW5jdGlvbiB0ZXN0bihlKXthc3NlcnQodHlwZW9mIGU9PT1cIm51bWJlclwiJiZlPj0wKTt2YXIgdD1lJTI2O3ZhciByPShlLXQpLzI2O3ZhciBpPTE8PHQ7aWYodGhpcy5sZW5ndGg8PXIpcmV0dXJuIGZhbHNlO3ZhciBuPXRoaXMud29yZHNbcl07cmV0dXJuISEobiZpKX07Qk4ucHJvdG90eXBlLmltYXNrbj1mdW5jdGlvbiBpbWFza24oZSl7YXNzZXJ0KHR5cGVvZiBlPT09XCJudW1iZXJcIiYmZT49MCk7dmFyIHQ9ZSUyNjt2YXIgcj0oZS10KS8yNjthc3NlcnQodGhpcy5uZWdhdGl2ZT09PTAsXCJpbWFza24gd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlIG51bWJlcnNcIik7aWYodGhpcy5sZW5ndGg8PXIpe3JldHVybiB0aGlzfWlmKHQhPT0wKXtyKyt9dGhpcy5sZW5ndGg9TWF0aC5taW4ocix0aGlzLmxlbmd0aCk7aWYodCE9PTApe3ZhciBpPTY3MTA4ODYzXjY3MTA4ODYzPj4+dDw8dDt0aGlzLndvcmRzW3RoaXMubGVuZ3RoLTFdJj1pfXJldHVybiB0aGlzLl9zdHJpcCgpfTtCTi5wcm90b3R5cGUubWFza249ZnVuY3Rpb24gbWFza24oZSl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pbWFza24oZSl9O0JOLnByb3RvdHlwZS5pYWRkbj1mdW5jdGlvbiBpYWRkbihlKXthc3NlcnQodHlwZW9mIGU9PT1cIm51bWJlclwiKTthc3NlcnQoZTw2NzEwODg2NCk7aWYoZTwwKXJldHVybiB0aGlzLmlzdWJuKC1lKTtpZih0aGlzLm5lZ2F0aXZlIT09MCl7aWYodGhpcy5sZW5ndGg9PT0xJiYodGhpcy53b3Jkc1swXXwwKTw9ZSl7dGhpcy53b3Jkc1swXT1lLSh0aGlzLndvcmRzWzBdfDApO3RoaXMubmVnYXRpdmU9MDtyZXR1cm4gdGhpc310aGlzLm5lZ2F0aXZlPTA7dGhpcy5pc3VibihlKTt0aGlzLm5lZ2F0aXZlPTE7cmV0dXJuIHRoaXN9cmV0dXJuIHRoaXMuX2lhZGRuKGUpfTtCTi5wcm90b3R5cGUuX2lhZGRuPWZ1bmN0aW9uIF9pYWRkbihlKXt0aGlzLndvcmRzWzBdKz1lO2Zvcih2YXIgdD0wO3Q8dGhpcy5sZW5ndGgmJnRoaXMud29yZHNbdF0+PTY3MTA4ODY0O3QrKyl7dGhpcy53b3Jkc1t0XS09NjcxMDg4NjQ7aWYodD09PXRoaXMubGVuZ3RoLTEpe3RoaXMud29yZHNbdCsxXT0xfWVsc2V7dGhpcy53b3Jkc1t0KzFdKyt9fXRoaXMubGVuZ3RoPU1hdGgubWF4KHRoaXMubGVuZ3RoLHQrMSk7cmV0dXJuIHRoaXN9O0JOLnByb3RvdHlwZS5pc3Vibj1mdW5jdGlvbiBpc3VibihlKXthc3NlcnQodHlwZW9mIGU9PT1cIm51bWJlclwiKTthc3NlcnQoZTw2NzEwODg2NCk7aWYoZTwwKXJldHVybiB0aGlzLmlhZGRuKC1lKTtpZih0aGlzLm5lZ2F0aXZlIT09MCl7dGhpcy5uZWdhdGl2ZT0wO3RoaXMuaWFkZG4oZSk7dGhpcy5uZWdhdGl2ZT0xO3JldHVybiB0aGlzfXRoaXMud29yZHNbMF0tPWU7aWYodGhpcy5sZW5ndGg9PT0xJiZ0aGlzLndvcmRzWzBdPDApe3RoaXMud29yZHNbMF09LXRoaXMud29yZHNbMF07dGhpcy5uZWdhdGl2ZT0xfWVsc2V7Zm9yKHZhciB0PTA7dDx0aGlzLmxlbmd0aCYmdGhpcy53b3Jkc1t0XTwwO3QrKyl7dGhpcy53b3Jkc1t0XSs9NjcxMDg4NjQ7dGhpcy53b3Jkc1t0KzFdLT0xfX1yZXR1cm4gdGhpcy5fc3RyaXAoKX07Qk4ucHJvdG90eXBlLmFkZG49ZnVuY3Rpb24gYWRkbihlKXtyZXR1cm4gdGhpcy5jbG9uZSgpLmlhZGRuKGUpfTtCTi5wcm90b3R5cGUuc3Vibj1mdW5jdGlvbiBzdWJuKGUpe3JldHVybiB0aGlzLmNsb25lKCkuaXN1Ym4oZSl9O0JOLnByb3RvdHlwZS5pYWJzPWZ1bmN0aW9uIGlhYnMoKXt0aGlzLm5lZ2F0aXZlPTA7cmV0dXJuIHRoaXN9O0JOLnByb3RvdHlwZS5hYnM9ZnVuY3Rpb24gYWJzKCl7cmV0dXJuIHRoaXMuY2xvbmUoKS5pYWJzKCl9O0JOLnByb3RvdHlwZS5faXNobG5zdWJtdWw9ZnVuY3Rpb24gX2lzaGxuc3VibXVsKGUsdCxyKXt2YXIgaT1lLmxlbmd0aCtyO3ZhciBuO3RoaXMuX2V4cGFuZChpKTt2YXIgYTt2YXIgcz0wO2ZvcihuPTA7bjxlLmxlbmd0aDtuKyspe2E9KHRoaXMud29yZHNbbityXXwwKStzO3ZhciBvPShlLndvcmRzW25dfDApKnQ7YS09byY2NzEwODg2MztzPShhPj4yNiktKG8vNjcxMDg4NjR8MCk7dGhpcy53b3Jkc1tuK3JdPWEmNjcxMDg4NjN9Zm9yKDtuPHRoaXMubGVuZ3RoLXI7bisrKXthPSh0aGlzLndvcmRzW24rcl18MCkrcztzPWE+PjI2O3RoaXMud29yZHNbbityXT1hJjY3MTA4ODYzfWlmKHM9PT0wKXJldHVybiB0aGlzLl9zdHJpcCgpO2Fzc2VydChzPT09LTEpO3M9MDtmb3Iobj0wO248dGhpcy5sZW5ndGg7bisrKXthPS0odGhpcy53b3Jkc1tuXXwwKStzO3M9YT4+MjY7dGhpcy53b3Jkc1tuXT1hJjY3MTA4ODYzfXRoaXMubmVnYXRpdmU9MTtyZXR1cm4gdGhpcy5fc3RyaXAoKX07Qk4ucHJvdG90eXBlLl93b3JkRGl2PWZ1bmN0aW9uIF93b3JkRGl2KGUsdCl7dmFyIHI9dGhpcy5sZW5ndGgtZS5sZW5ndGg7dmFyIGk9dGhpcy5jbG9uZSgpO3ZhciBuPWU7dmFyIGE9bi53b3Jkc1tuLmxlbmd0aC0xXXwwO3ZhciBzPXRoaXMuX2NvdW50Qml0cyhhKTtyPTI2LXM7aWYociE9PTApe249bi51c2hsbihyKTtpLml1c2hsbihyKTthPW4ud29yZHNbbi5sZW5ndGgtMV18MH12YXIgbz1pLmxlbmd0aC1uLmxlbmd0aDt2YXIgaDtpZih0IT09XCJtb2RcIil7aD1uZXcgQk4obnVsbCk7aC5sZW5ndGg9bysxO2gud29yZHM9bmV3IEFycmF5KGgubGVuZ3RoKTtmb3IodmFyIHU9MDt1PGgubGVuZ3RoO3UrKyl7aC53b3Jkc1t1XT0wfX12YXIgZD1pLmNsb25lKCkuX2lzaGxuc3VibXVsKG4sMSxvKTtpZihkLm5lZ2F0aXZlPT09MCl7aT1kO2lmKGgpe2gud29yZHNbb109MX19Zm9yKHZhciBjPW8tMTtjPj0wO2MtLSl7dmFyIGw9KGkud29yZHNbbi5sZW5ndGgrY118MCkqNjcxMDg4NjQrKGkud29yZHNbbi5sZW5ndGgrYy0xXXwwKTtsPU1hdGgubWluKGwvYXwwLDY3MTA4ODYzKTtpLl9pc2hsbnN1Ym11bChuLGwsYyk7d2hpbGUoaS5uZWdhdGl2ZSE9PTApe2wtLTtpLm5lZ2F0aXZlPTA7aS5faXNobG5zdWJtdWwobiwxLGMpO2lmKCFpLmlzWmVybygpKXtpLm5lZ2F0aXZlXj0xfX1pZihoKXtoLndvcmRzW2NdPWx9fWlmKGgpe2guX3N0cmlwKCl9aS5fc3RyaXAoKTtpZih0IT09XCJkaXZcIiYmciE9PTApe2kuaXVzaHJuKHIpfXJldHVybntkaXY6aHx8bnVsbCxtb2Q6aX19O0JOLnByb3RvdHlwZS5kaXZtb2Q9ZnVuY3Rpb24gZGl2bW9kKGUsdCxyKXthc3NlcnQoIWUuaXNaZXJvKCkpO2lmKHRoaXMuaXNaZXJvKCkpe3JldHVybntkaXY6bmV3IEJOKDApLG1vZDpuZXcgQk4oMCl9fXZhciBpLG4sYTtpZih0aGlzLm5lZ2F0aXZlIT09MCYmZS5uZWdhdGl2ZT09PTApe2E9dGhpcy5uZWcoKS5kaXZtb2QoZSx0KTtpZih0IT09XCJtb2RcIil7aT1hLmRpdi5uZWcoKX1pZih0IT09XCJkaXZcIil7bj1hLm1vZC5uZWcoKTtpZihyJiZuLm5lZ2F0aXZlIT09MCl7bi5pYWRkKGUpfX1yZXR1cm57ZGl2OmksbW9kOm59fWlmKHRoaXMubmVnYXRpdmU9PT0wJiZlLm5lZ2F0aXZlIT09MCl7YT10aGlzLmRpdm1vZChlLm5lZygpLHQpO2lmKHQhPT1cIm1vZFwiKXtpPWEuZGl2Lm5lZygpfXJldHVybntkaXY6aSxtb2Q6YS5tb2R9fWlmKCh0aGlzLm5lZ2F0aXZlJmUubmVnYXRpdmUpIT09MCl7YT10aGlzLm5lZygpLmRpdm1vZChlLm5lZygpLHQpO2lmKHQhPT1cImRpdlwiKXtuPWEubW9kLm5lZygpO2lmKHImJm4ubmVnYXRpdmUhPT0wKXtuLmlzdWIoZSl9fXJldHVybntkaXY6YS5kaXYsbW9kOm59fWlmKGUubGVuZ3RoPnRoaXMubGVuZ3RofHx0aGlzLmNtcChlKTwwKXtyZXR1cm57ZGl2Om5ldyBCTigwKSxtb2Q6dGhpc319aWYoZS5sZW5ndGg9PT0xKXtpZih0PT09XCJkaXZcIil7cmV0dXJue2Rpdjp0aGlzLmRpdm4oZS53b3Jkc1swXSksbW9kOm51bGx9fWlmKHQ9PT1cIm1vZFwiKXtyZXR1cm57ZGl2Om51bGwsbW9kOm5ldyBCTih0aGlzLm1vZHJuKGUud29yZHNbMF0pKX19cmV0dXJue2Rpdjp0aGlzLmRpdm4oZS53b3Jkc1swXSksbW9kOm5ldyBCTih0aGlzLm1vZHJuKGUud29yZHNbMF0pKX19cmV0dXJuIHRoaXMuX3dvcmREaXYoZSx0KX07Qk4ucHJvdG90eXBlLmRpdj1mdW5jdGlvbiBkaXYoZSl7cmV0dXJuIHRoaXMuZGl2bW9kKGUsXCJkaXZcIixmYWxzZSkuZGl2fTtCTi5wcm90b3R5cGUubW9kPWZ1bmN0aW9uIG1vZChlKXtyZXR1cm4gdGhpcy5kaXZtb2QoZSxcIm1vZFwiLGZhbHNlKS5tb2R9O0JOLnByb3RvdHlwZS51bW9kPWZ1bmN0aW9uIHVtb2QoZSl7cmV0dXJuIHRoaXMuZGl2bW9kKGUsXCJtb2RcIix0cnVlKS5tb2R9O0JOLnByb3RvdHlwZS5kaXZSb3VuZD1mdW5jdGlvbiBkaXZSb3VuZChlKXt2YXIgdD10aGlzLmRpdm1vZChlKTtpZih0Lm1vZC5pc1plcm8oKSlyZXR1cm4gdC5kaXY7dmFyIHI9dC5kaXYubmVnYXRpdmUhPT0wP3QubW9kLmlzdWIoZSk6dC5tb2Q7dmFyIGk9ZS51c2hybigxKTt2YXIgbj1lLmFuZGxuKDEpO3ZhciBhPXIuY21wKGkpO2lmKGE8MHx8bj09PTEmJmE9PT0wKXJldHVybiB0LmRpdjtyZXR1cm4gdC5kaXYubmVnYXRpdmUhPT0wP3QuZGl2LmlzdWJuKDEpOnQuZGl2LmlhZGRuKDEpfTtCTi5wcm90b3R5cGUubW9kcm49ZnVuY3Rpb24gbW9kcm4oZSl7dmFyIHQ9ZTwwO2lmKHQpZT0tZTthc3NlcnQoZTw9NjcxMDg4NjMpO3ZhciByPSgxPDwyNiklZTt2YXIgaT0wO2Zvcih2YXIgbj10aGlzLmxlbmd0aC0xO24+PTA7bi0tKXtpPShyKmkrKHRoaXMud29yZHNbbl18MCkpJWV9cmV0dXJuIHQ/LWk6aX07Qk4ucHJvdG90eXBlLm1vZG49ZnVuY3Rpb24gbW9kbihlKXtyZXR1cm4gdGhpcy5tb2RybihlKX07Qk4ucHJvdG90eXBlLmlkaXZuPWZ1bmN0aW9uIGlkaXZuKGUpe3ZhciB0PWU8MDtpZih0KWU9LWU7YXNzZXJ0KGU8PTY3MTA4ODYzKTt2YXIgcj0wO2Zvcih2YXIgaT10aGlzLmxlbmd0aC0xO2k+PTA7aS0tKXt2YXIgbj0odGhpcy53b3Jkc1tpXXwwKStyKjY3MTA4ODY0O3RoaXMud29yZHNbaV09bi9lfDA7cj1uJWV9dGhpcy5fc3RyaXAoKTtyZXR1cm4gdD90aGlzLmluZWcoKTp0aGlzfTtCTi5wcm90b3R5cGUuZGl2bj1mdW5jdGlvbiBkaXZuKGUpe3JldHVybiB0aGlzLmNsb25lKCkuaWRpdm4oZSl9O0JOLnByb3RvdHlwZS5lZ2NkPWZ1bmN0aW9uIGVnY2QoZSl7YXNzZXJ0KGUubmVnYXRpdmU9PT0wKTthc3NlcnQoIWUuaXNaZXJvKCkpO3ZhciB0PXRoaXM7dmFyIHI9ZS5jbG9uZSgpO2lmKHQubmVnYXRpdmUhPT0wKXt0PXQudW1vZChlKX1lbHNle3Q9dC5jbG9uZSgpfXZhciBpPW5ldyBCTigxKTt2YXIgbj1uZXcgQk4oMCk7dmFyIGE9bmV3IEJOKDApO3ZhciBzPW5ldyBCTigxKTt2YXIgbz0wO3doaWxlKHQuaXNFdmVuKCkmJnIuaXNFdmVuKCkpe3QuaXVzaHJuKDEpO3IuaXVzaHJuKDEpOysrb312YXIgaD1yLmNsb25lKCk7dmFyIHU9dC5jbG9uZSgpO3doaWxlKCF0LmlzWmVybygpKXtmb3IodmFyIGQ9MCxjPTE7KHQud29yZHNbMF0mYyk9PT0wJiZkPDI2OysrZCxjPDw9MSk7aWYoZD4wKXt0Lml1c2hybihkKTt3aGlsZShkLS0gPjApe2lmKGkuaXNPZGQoKXx8bi5pc09kZCgpKXtpLmlhZGQoaCk7bi5pc3ViKHUpfWkuaXVzaHJuKDEpO24uaXVzaHJuKDEpfX1mb3IodmFyIGw9MCxwPTE7KHIud29yZHNbMF0mcCk9PT0wJiZsPDI2OysrbCxwPDw9MSk7aWYobD4wKXtyLml1c2hybihsKTt3aGlsZShsLS0gPjApe2lmKGEuaXNPZGQoKXx8cy5pc09kZCgpKXthLmlhZGQoaCk7cy5pc3ViKHUpfWEuaXVzaHJuKDEpO3MuaXVzaHJuKDEpfX1pZih0LmNtcChyKT49MCl7dC5pc3ViKHIpO2kuaXN1YihhKTtuLmlzdWIocyl9ZWxzZXtyLmlzdWIodCk7YS5pc3ViKGkpO3MuaXN1YihuKX19cmV0dXJue2E6YSxiOnMsZ2NkOnIuaXVzaGxuKG8pfX07Qk4ucHJvdG90eXBlLl9pbnZtcD1mdW5jdGlvbiBfaW52bXAoZSl7YXNzZXJ0KGUubmVnYXRpdmU9PT0wKTthc3NlcnQoIWUuaXNaZXJvKCkpO3ZhciB0PXRoaXM7dmFyIHI9ZS5jbG9uZSgpO2lmKHQubmVnYXRpdmUhPT0wKXt0PXQudW1vZChlKX1lbHNle3Q9dC5jbG9uZSgpfXZhciBpPW5ldyBCTigxKTt2YXIgbj1uZXcgQk4oMCk7dmFyIGE9ci5jbG9uZSgpO3doaWxlKHQuY21wbigxKT4wJiZyLmNtcG4oMSk+MCl7Zm9yKHZhciBzPTAsbz0xOyh0LndvcmRzWzBdJm8pPT09MCYmczwyNjsrK3Msbzw8PTEpO2lmKHM+MCl7dC5pdXNocm4ocyk7d2hpbGUocy0tID4wKXtpZihpLmlzT2RkKCkpe2kuaWFkZChhKX1pLml1c2hybigxKX19Zm9yKHZhciBoPTAsdT0xOyhyLndvcmRzWzBdJnUpPT09MCYmaDwyNjsrK2gsdTw8PTEpO2lmKGg+MCl7ci5pdXNocm4oaCk7d2hpbGUoaC0tID4wKXtpZihuLmlzT2RkKCkpe24uaWFkZChhKX1uLml1c2hybigxKX19aWYodC5jbXAocik+PTApe3QuaXN1YihyKTtpLmlzdWIobil9ZWxzZXtyLmlzdWIodCk7bi5pc3ViKGkpfX12YXIgZDtpZih0LmNtcG4oMSk9PT0wKXtkPWl9ZWxzZXtkPW59aWYoZC5jbXBuKDApPDApe2QuaWFkZChlKX1yZXR1cm4gZH07Qk4ucHJvdG90eXBlLmdjZD1mdW5jdGlvbiBnY2QoZSl7aWYodGhpcy5pc1plcm8oKSlyZXR1cm4gZS5hYnMoKTtpZihlLmlzWmVybygpKXJldHVybiB0aGlzLmFicygpO3ZhciB0PXRoaXMuY2xvbmUoKTt2YXIgcj1lLmNsb25lKCk7dC5uZWdhdGl2ZT0wO3IubmVnYXRpdmU9MDtmb3IodmFyIGk9MDt0LmlzRXZlbigpJiZyLmlzRXZlbigpO2krKyl7dC5pdXNocm4oMSk7ci5pdXNocm4oMSl9ZG97d2hpbGUodC5pc0V2ZW4oKSl7dC5pdXNocm4oMSl9d2hpbGUoci5pc0V2ZW4oKSl7ci5pdXNocm4oMSl9dmFyIG49dC5jbXAocik7aWYobjwwKXt2YXIgYT10O3Q9cjtyPWF9ZWxzZSBpZihuPT09MHx8ci5jbXBuKDEpPT09MCl7YnJlYWt9dC5pc3ViKHIpfXdoaWxlKHRydWUpO3JldHVybiByLml1c2hsbihpKX07Qk4ucHJvdG90eXBlLmludm09ZnVuY3Rpb24gaW52bShlKXtyZXR1cm4gdGhpcy5lZ2NkKGUpLmEudW1vZChlKX07Qk4ucHJvdG90eXBlLmlzRXZlbj1mdW5jdGlvbiBpc0V2ZW4oKXtyZXR1cm4odGhpcy53b3Jkc1swXSYxKT09PTB9O0JOLnByb3RvdHlwZS5pc09kZD1mdW5jdGlvbiBpc09kZCgpe3JldHVybih0aGlzLndvcmRzWzBdJjEpPT09MX07Qk4ucHJvdG90eXBlLmFuZGxuPWZ1bmN0aW9uIGFuZGxuKGUpe3JldHVybiB0aGlzLndvcmRzWzBdJmV9O0JOLnByb3RvdHlwZS5iaW5jbj1mdW5jdGlvbiBiaW5jbihlKXthc3NlcnQodHlwZW9mIGU9PT1cIm51bWJlclwiKTt2YXIgdD1lJTI2O3ZhciByPShlLXQpLzI2O3ZhciBpPTE8PHQ7aWYodGhpcy5sZW5ndGg8PXIpe3RoaXMuX2V4cGFuZChyKzEpO3RoaXMud29yZHNbcl18PWk7cmV0dXJuIHRoaXN9dmFyIG49aTtmb3IodmFyIGE9cjtuIT09MCYmYTx0aGlzLmxlbmd0aDthKyspe3ZhciBzPXRoaXMud29yZHNbYV18MDtzKz1uO249cz4+PjI2O3MmPTY3MTA4ODYzO3RoaXMud29yZHNbYV09c31pZihuIT09MCl7dGhpcy53b3Jkc1thXT1uO3RoaXMubGVuZ3RoKyt9cmV0dXJuIHRoaXN9O0JOLnByb3RvdHlwZS5pc1plcm89ZnVuY3Rpb24gaXNaZXJvKCl7cmV0dXJuIHRoaXMubGVuZ3RoPT09MSYmdGhpcy53b3Jkc1swXT09PTB9O0JOLnByb3RvdHlwZS5jbXBuPWZ1bmN0aW9uIGNtcG4oZSl7dmFyIHQ9ZTwwO2lmKHRoaXMubmVnYXRpdmUhPT0wJiYhdClyZXR1cm4tMTtpZih0aGlzLm5lZ2F0aXZlPT09MCYmdClyZXR1cm4gMTt0aGlzLl9zdHJpcCgpO3ZhciByO2lmKHRoaXMubGVuZ3RoPjEpe3I9MX1lbHNle2lmKHQpe2U9LWV9YXNzZXJ0KGU8PTY3MTA4ODYzLFwiTnVtYmVyIGlzIHRvbyBiaWdcIik7dmFyIGk9dGhpcy53b3Jkc1swXXwwO3I9aT09PWU/MDppPGU/LTE6MX1pZih0aGlzLm5lZ2F0aXZlIT09MClyZXR1cm4tcnwwO3JldHVybiByfTtCTi5wcm90b3R5cGUuY21wPWZ1bmN0aW9uIGNtcChlKXtpZih0aGlzLm5lZ2F0aXZlIT09MCYmZS5uZWdhdGl2ZT09PTApcmV0dXJuLTE7aWYodGhpcy5uZWdhdGl2ZT09PTAmJmUubmVnYXRpdmUhPT0wKXJldHVybiAxO3ZhciB0PXRoaXMudWNtcChlKTtpZih0aGlzLm5lZ2F0aXZlIT09MClyZXR1cm4tdHwwO3JldHVybiB0fTtCTi5wcm90b3R5cGUudWNtcD1mdW5jdGlvbiB1Y21wKGUpe2lmKHRoaXMubGVuZ3RoPmUubGVuZ3RoKXJldHVybiAxO2lmKHRoaXMubGVuZ3RoPGUubGVuZ3RoKXJldHVybi0xO3ZhciB0PTA7Zm9yKHZhciByPXRoaXMubGVuZ3RoLTE7cj49MDtyLS0pe3ZhciBpPXRoaXMud29yZHNbcl18MDt2YXIgbj1lLndvcmRzW3JdfDA7aWYoaT09PW4pY29udGludWU7aWYoaTxuKXt0PS0xfWVsc2UgaWYoaT5uKXt0PTF9YnJlYWt9cmV0dXJuIHR9O0JOLnByb3RvdHlwZS5ndG49ZnVuY3Rpb24gZ3RuKGUpe3JldHVybiB0aGlzLmNtcG4oZSk9PT0xfTtCTi5wcm90b3R5cGUuZ3Q9ZnVuY3Rpb24gZ3QoZSl7cmV0dXJuIHRoaXMuY21wKGUpPT09MX07Qk4ucHJvdG90eXBlLmd0ZW49ZnVuY3Rpb24gZ3RlbihlKXtyZXR1cm4gdGhpcy5jbXBuKGUpPj0wfTtCTi5wcm90b3R5cGUuZ3RlPWZ1bmN0aW9uIGd0ZShlKXtyZXR1cm4gdGhpcy5jbXAoZSk+PTB9O0JOLnByb3RvdHlwZS5sdG49ZnVuY3Rpb24gbHRuKGUpe3JldHVybiB0aGlzLmNtcG4oZSk9PT0tMX07Qk4ucHJvdG90eXBlLmx0PWZ1bmN0aW9uIGx0KGUpe3JldHVybiB0aGlzLmNtcChlKT09PS0xfTtCTi5wcm90b3R5cGUubHRlbj1mdW5jdGlvbiBsdGVuKGUpe3JldHVybiB0aGlzLmNtcG4oZSk8PTB9O0JOLnByb3RvdHlwZS5sdGU9ZnVuY3Rpb24gbHRlKGUpe3JldHVybiB0aGlzLmNtcChlKTw9MH07Qk4ucHJvdG90eXBlLmVxbj1mdW5jdGlvbiBlcW4oZSl7cmV0dXJuIHRoaXMuY21wbihlKT09PTB9O0JOLnByb3RvdHlwZS5lcT1mdW5jdGlvbiBlcShlKXtyZXR1cm4gdGhpcy5jbXAoZSk9PT0wfTtCTi5yZWQ9ZnVuY3Rpb24gcmVkKGUpe3JldHVybiBuZXcgUmVkKGUpfTtCTi5wcm90b3R5cGUudG9SZWQ9ZnVuY3Rpb24gdG9SZWQoZSl7YXNzZXJ0KCF0aGlzLnJlZCxcIkFscmVhZHkgYSBudW1iZXIgaW4gcmVkdWN0aW9uIGNvbnRleHRcIik7YXNzZXJ0KHRoaXMubmVnYXRpdmU9PT0wLFwicmVkIHdvcmtzIG9ubHkgd2l0aCBwb3NpdGl2ZXNcIik7cmV0dXJuIGUuY29udmVydFRvKHRoaXMpLl9mb3JjZVJlZChlKX07Qk4ucHJvdG90eXBlLmZyb21SZWQ9ZnVuY3Rpb24gZnJvbVJlZCgpe2Fzc2VydCh0aGlzLnJlZCxcImZyb21SZWQgd29ya3Mgb25seSB3aXRoIG51bWJlcnMgaW4gcmVkdWN0aW9uIGNvbnRleHRcIik7cmV0dXJuIHRoaXMucmVkLmNvbnZlcnRGcm9tKHRoaXMpfTtCTi5wcm90b3R5cGUuX2ZvcmNlUmVkPWZ1bmN0aW9uIF9mb3JjZVJlZChlKXt0aGlzLnJlZD1lO3JldHVybiB0aGlzfTtCTi5wcm90b3R5cGUuZm9yY2VSZWQ9ZnVuY3Rpb24gZm9yY2VSZWQoZSl7YXNzZXJ0KCF0aGlzLnJlZCxcIkFscmVhZHkgYSBudW1iZXIgaW4gcmVkdWN0aW9uIGNvbnRleHRcIik7cmV0dXJuIHRoaXMuX2ZvcmNlUmVkKGUpfTtCTi5wcm90b3R5cGUucmVkQWRkPWZ1bmN0aW9uIHJlZEFkZChlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRBZGQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3JldHVybiB0aGlzLnJlZC5hZGQodGhpcyxlKX07Qk4ucHJvdG90eXBlLnJlZElBZGQ9ZnVuY3Rpb24gcmVkSUFkZChlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRJQWRkIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKTtyZXR1cm4gdGhpcy5yZWQuaWFkZCh0aGlzLGUpfTtCTi5wcm90b3R5cGUucmVkU3ViPWZ1bmN0aW9uIHJlZFN1YihlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRTdWIgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3JldHVybiB0aGlzLnJlZC5zdWIodGhpcyxlKX07Qk4ucHJvdG90eXBlLnJlZElTdWI9ZnVuY3Rpb24gcmVkSVN1YihlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRJU3ViIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKTtyZXR1cm4gdGhpcy5yZWQuaXN1Yih0aGlzLGUpfTtCTi5wcm90b3R5cGUucmVkU2hsPWZ1bmN0aW9uIHJlZFNobChlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRTaGwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3JldHVybiB0aGlzLnJlZC5zaGwodGhpcyxlKX07Qk4ucHJvdG90eXBlLnJlZE11bD1mdW5jdGlvbiByZWRNdWwoZSl7YXNzZXJ0KHRoaXMucmVkLFwicmVkTXVsIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKTt0aGlzLnJlZC5fdmVyaWZ5Mih0aGlzLGUpO3JldHVybiB0aGlzLnJlZC5tdWwodGhpcyxlKX07Qk4ucHJvdG90eXBlLnJlZElNdWw9ZnVuY3Rpb24gcmVkSU11bChlKXthc3NlcnQodGhpcy5yZWQsXCJyZWRNdWwgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3RoaXMucmVkLl92ZXJpZnkyKHRoaXMsZSk7cmV0dXJuIHRoaXMucmVkLmltdWwodGhpcyxlKX07Qk4ucHJvdG90eXBlLnJlZFNxcj1mdW5jdGlvbiByZWRTcXIoKXthc3NlcnQodGhpcy5yZWQsXCJyZWRTcXIgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3RoaXMucmVkLl92ZXJpZnkxKHRoaXMpO3JldHVybiB0aGlzLnJlZC5zcXIodGhpcyl9O0JOLnByb3RvdHlwZS5yZWRJU3FyPWZ1bmN0aW9uIHJlZElTcXIoKXthc3NlcnQodGhpcy5yZWQsXCJyZWRJU3FyIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKTt0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTtyZXR1cm4gdGhpcy5yZWQuaXNxcih0aGlzKX07Qk4ucHJvdG90eXBlLnJlZFNxcnQ9ZnVuY3Rpb24gcmVkU3FydCgpe2Fzc2VydCh0aGlzLnJlZCxcInJlZFNxcnQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpO3RoaXMucmVkLl92ZXJpZnkxKHRoaXMpO3JldHVybiB0aGlzLnJlZC5zcXJ0KHRoaXMpfTtCTi5wcm90b3R5cGUucmVkSW52bT1mdW5jdGlvbiByZWRJbnZtKCl7YXNzZXJ0KHRoaXMucmVkLFwicmVkSW52bSB3b3JrcyBvbmx5IHdpdGggcmVkIG51bWJlcnNcIik7dGhpcy5yZWQuX3ZlcmlmeTEodGhpcyk7cmV0dXJuIHRoaXMucmVkLmludm0odGhpcyl9O0JOLnByb3RvdHlwZS5yZWROZWc9ZnVuY3Rpb24gcmVkTmVnKCl7YXNzZXJ0KHRoaXMucmVkLFwicmVkTmVnIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKTt0aGlzLnJlZC5fdmVyaWZ5MSh0aGlzKTtyZXR1cm4gdGhpcy5yZWQubmVnKHRoaXMpfTtCTi5wcm90b3R5cGUucmVkUG93PWZ1bmN0aW9uIHJlZFBvdyhlKXthc3NlcnQodGhpcy5yZWQmJiFlLnJlZCxcInJlZFBvdyhub3JtYWxOdW0pXCIpO3RoaXMucmVkLl92ZXJpZnkxKHRoaXMpO3JldHVybiB0aGlzLnJlZC5wb3codGhpcyxlKX07dmFyIHU9e2syNTY6bnVsbCxwMjI0Om51bGwscDE5MjpudWxsLHAyNTUxOTpudWxsfTtmdW5jdGlvbiBNUHJpbWUoZSx0KXt0aGlzLm5hbWU9ZTt0aGlzLnA9bmV3IEJOKHQsMTYpO3RoaXMubj10aGlzLnAuYml0TGVuZ3RoKCk7dGhpcy5rPW5ldyBCTigxKS5pdXNobG4odGhpcy5uKS5pc3ViKHRoaXMucCk7dGhpcy50bXA9dGhpcy5fdG1wKCl9TVByaW1lLnByb3RvdHlwZS5fdG1wPWZ1bmN0aW9uIF90bXAoKXt2YXIgZT1uZXcgQk4obnVsbCk7ZS53b3Jkcz1uZXcgQXJyYXkoTWF0aC5jZWlsKHRoaXMubi8xMykpO3JldHVybiBlfTtNUHJpbWUucHJvdG90eXBlLmlyZWR1Y2U9ZnVuY3Rpb24gaXJlZHVjZShlKXt2YXIgdD1lO3ZhciByO2Rve3RoaXMuc3BsaXQodCx0aGlzLnRtcCk7dD10aGlzLmltdWxLKHQpO3Q9dC5pYWRkKHRoaXMudG1wKTtyPXQuYml0TGVuZ3RoKCl9d2hpbGUocj50aGlzLm4pO3ZhciBpPXI8dGhpcy5uPy0xOnQudWNtcCh0aGlzLnApO2lmKGk9PT0wKXt0LndvcmRzWzBdPTA7dC5sZW5ndGg9MX1lbHNlIGlmKGk+MCl7dC5pc3ViKHRoaXMucCl9ZWxzZXtpZih0LnN0cmlwIT09dW5kZWZpbmVkKXt0LnN0cmlwKCl9ZWxzZXt0Ll9zdHJpcCgpfX1yZXR1cm4gdH07TVByaW1lLnByb3RvdHlwZS5zcGxpdD1mdW5jdGlvbiBzcGxpdChlLHQpe2UuaXVzaHJuKHRoaXMubiwwLHQpfTtNUHJpbWUucHJvdG90eXBlLmltdWxLPWZ1bmN0aW9uIGltdWxLKGUpe3JldHVybiBlLmltdWwodGhpcy5rKX07ZnVuY3Rpb24gSzI1Nigpe01QcmltZS5jYWxsKHRoaXMsXCJrMjU2XCIsXCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmMyZlwiKX1pbmhlcml0cyhLMjU2LE1QcmltZSk7SzI1Ni5wcm90b3R5cGUuc3BsaXQ9ZnVuY3Rpb24gc3BsaXQoZSx0KXt2YXIgcj00MTk0MzAzO3ZhciBpPU1hdGgubWluKGUubGVuZ3RoLDkpO2Zvcih2YXIgbj0wO248aTtuKyspe3Qud29yZHNbbl09ZS53b3Jkc1tuXX10Lmxlbmd0aD1pO2lmKGUubGVuZ3RoPD05KXtlLndvcmRzWzBdPTA7ZS5sZW5ndGg9MTtyZXR1cm59dmFyIGE9ZS53b3Jkc1s5XTt0LndvcmRzW3QubGVuZ3RoKytdPWEmcjtmb3Iobj0xMDtuPGUubGVuZ3RoO24rKyl7dmFyIHM9ZS53b3Jkc1tuXXwwO2Uud29yZHNbbi0xMF09KHMmcik8PDR8YT4+PjIyO2E9c31hPj4+PTIyO2Uud29yZHNbbi0xMF09YTtpZihhPT09MCYmZS5sZW5ndGg+MTApe2UubGVuZ3RoLT0xMH1lbHNle2UubGVuZ3RoLT05fX07SzI1Ni5wcm90b3R5cGUuaW11bEs9ZnVuY3Rpb24gaW11bEsoZSl7ZS53b3Jkc1tlLmxlbmd0aF09MDtlLndvcmRzW2UubGVuZ3RoKzFdPTA7ZS5sZW5ndGgrPTI7dmFyIHQ9MDtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKyl7dmFyIGk9ZS53b3Jkc1tyXXwwO3QrPWkqOTc3O2Uud29yZHNbcl09dCY2NzEwODg2Mzt0PWkqNjQrKHQvNjcxMDg4NjR8MCl9aWYoZS53b3Jkc1tlLmxlbmd0aC0xXT09PTApe2UubGVuZ3RoLS07aWYoZS53b3Jkc1tlLmxlbmd0aC0xXT09PTApe2UubGVuZ3RoLS19fXJldHVybiBlfTtmdW5jdGlvbiBQMjI0KCl7TVByaW1lLmNhbGwodGhpcyxcInAyMjRcIixcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIDAwMDAwMDAwIDAwMDAwMDAwIDAwMDAwMDAxXCIpfWluaGVyaXRzKFAyMjQsTVByaW1lKTtmdW5jdGlvbiBQMTkyKCl7TVByaW1lLmNhbGwodGhpcyxcInAxOTJcIixcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGZmZmZmZmZmIGZmZmZmZmZmXCIpfWluaGVyaXRzKFAxOTIsTVByaW1lKTtmdW5jdGlvbiBQMjU1MTkoKXtNUHJpbWUuY2FsbCh0aGlzLFwiMjU1MTlcIixcIjdmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZWRcIil9aW5oZXJpdHMoUDI1NTE5LE1QcmltZSk7UDI1NTE5LnByb3RvdHlwZS5pbXVsSz1mdW5jdGlvbiBpbXVsSyhlKXt2YXIgdD0wO2Zvcih2YXIgcj0wO3I8ZS5sZW5ndGg7cisrKXt2YXIgaT0oZS53b3Jkc1tyXXwwKSoxOSt0O3ZhciBuPWkmNjcxMDg4NjM7aT4+Pj0yNjtlLndvcmRzW3JdPW47dD1pfWlmKHQhPT0wKXtlLndvcmRzW2UubGVuZ3RoKytdPXR9cmV0dXJuIGV9O0JOLl9wcmltZT1mdW5jdGlvbiBwcmltZShlKXtpZih1W2VdKXJldHVybiB1W2VdO3ZhciBwcmltZTtpZihlPT09XCJrMjU2XCIpe3ByaW1lPW5ldyBLMjU2fWVsc2UgaWYoZT09PVwicDIyNFwiKXtwcmltZT1uZXcgUDIyNH1lbHNlIGlmKGU9PT1cInAxOTJcIil7cHJpbWU9bmV3IFAxOTJ9ZWxzZSBpZihlPT09XCJwMjU1MTlcIil7cHJpbWU9bmV3IFAyNTUxOX1lbHNle3Rocm93IG5ldyBFcnJvcihcIlVua25vd24gcHJpbWUgXCIrZSl9dVtlXT1wcmltZTtyZXR1cm4gcHJpbWV9O2Z1bmN0aW9uIFJlZChlKXtpZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe3ZhciB0PUJOLl9wcmltZShlKTt0aGlzLm09dC5wO3RoaXMucHJpbWU9dH1lbHNle2Fzc2VydChlLmd0bigxKSxcIm1vZHVsdXMgbXVzdCBiZSBncmVhdGVyIHRoYW4gMVwiKTt0aGlzLm09ZTt0aGlzLnByaW1lPW51bGx9fVJlZC5wcm90b3R5cGUuX3ZlcmlmeTE9ZnVuY3Rpb24gX3ZlcmlmeTEoZSl7YXNzZXJ0KGUubmVnYXRpdmU9PT0wLFwicmVkIHdvcmtzIG9ubHkgd2l0aCBwb3NpdGl2ZXNcIik7YXNzZXJ0KGUucmVkLFwicmVkIHdvcmtzIG9ubHkgd2l0aCByZWQgbnVtYmVyc1wiKX07UmVkLnByb3RvdHlwZS5fdmVyaWZ5Mj1mdW5jdGlvbiBfdmVyaWZ5MihlLHQpe2Fzc2VydCgoZS5uZWdhdGl2ZXx0Lm5lZ2F0aXZlKT09PTAsXCJyZWQgd29ya3Mgb25seSB3aXRoIHBvc2l0aXZlc1wiKTthc3NlcnQoZS5yZWQmJmUucmVkPT09dC5yZWQsXCJyZWQgd29ya3Mgb25seSB3aXRoIHJlZCBudW1iZXJzXCIpfTtSZWQucHJvdG90eXBlLmltb2Q9ZnVuY3Rpb24gaW1vZChlKXtpZih0aGlzLnByaW1lKXJldHVybiB0aGlzLnByaW1lLmlyZWR1Y2UoZSkuX2ZvcmNlUmVkKHRoaXMpO21vdmUoZSxlLnVtb2QodGhpcy5tKS5fZm9yY2VSZWQodGhpcykpO3JldHVybiBlfTtSZWQucHJvdG90eXBlLm5lZz1mdW5jdGlvbiBuZWcoZSl7aWYoZS5pc1plcm8oKSl7cmV0dXJuIGUuY2xvbmUoKX1yZXR1cm4gdGhpcy5tLnN1YihlKS5fZm9yY2VSZWQodGhpcyl9O1JlZC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uIGFkZChlLHQpe3RoaXMuX3ZlcmlmeTIoZSx0KTt2YXIgcj1lLmFkZCh0KTtpZihyLmNtcCh0aGlzLm0pPj0wKXtyLmlzdWIodGhpcy5tKX1yZXR1cm4gci5fZm9yY2VSZWQodGhpcyl9O1JlZC5wcm90b3R5cGUuaWFkZD1mdW5jdGlvbiBpYWRkKGUsdCl7dGhpcy5fdmVyaWZ5MihlLHQpO3ZhciByPWUuaWFkZCh0KTtpZihyLmNtcCh0aGlzLm0pPj0wKXtyLmlzdWIodGhpcy5tKX1yZXR1cm4gcn07UmVkLnByb3RvdHlwZS5zdWI9ZnVuY3Rpb24gc3ViKGUsdCl7dGhpcy5fdmVyaWZ5MihlLHQpO3ZhciByPWUuc3ViKHQpO2lmKHIuY21wbigwKTwwKXtyLmlhZGQodGhpcy5tKX1yZXR1cm4gci5fZm9yY2VSZWQodGhpcyl9O1JlZC5wcm90b3R5cGUuaXN1Yj1mdW5jdGlvbiBpc3ViKGUsdCl7dGhpcy5fdmVyaWZ5MihlLHQpO3ZhciByPWUuaXN1Yih0KTtpZihyLmNtcG4oMCk8MCl7ci5pYWRkKHRoaXMubSl9cmV0dXJuIHJ9O1JlZC5wcm90b3R5cGUuc2hsPWZ1bmN0aW9uIHNobChlLHQpe3RoaXMuX3ZlcmlmeTEoZSk7cmV0dXJuIHRoaXMuaW1vZChlLnVzaGxuKHQpKX07UmVkLnByb3RvdHlwZS5pbXVsPWZ1bmN0aW9uIGltdWwoZSx0KXt0aGlzLl92ZXJpZnkyKGUsdCk7cmV0dXJuIHRoaXMuaW1vZChlLmltdWwodCkpfTtSZWQucHJvdG90eXBlLm11bD1mdW5jdGlvbiBtdWwoZSx0KXt0aGlzLl92ZXJpZnkyKGUsdCk7cmV0dXJuIHRoaXMuaW1vZChlLm11bCh0KSl9O1JlZC5wcm90b3R5cGUuaXNxcj1mdW5jdGlvbiBpc3FyKGUpe3JldHVybiB0aGlzLmltdWwoZSxlLmNsb25lKCkpfTtSZWQucHJvdG90eXBlLnNxcj1mdW5jdGlvbiBzcXIoZSl7cmV0dXJuIHRoaXMubXVsKGUsZSl9O1JlZC5wcm90b3R5cGUuc3FydD1mdW5jdGlvbiBzcXJ0KGUpe2lmKGUuaXNaZXJvKCkpcmV0dXJuIGUuY2xvbmUoKTt2YXIgdD10aGlzLm0uYW5kbG4oMyk7YXNzZXJ0KHQlMj09PTEpO2lmKHQ9PT0zKXt2YXIgcj10aGlzLm0uYWRkKG5ldyBCTigxKSkuaXVzaHJuKDIpO3JldHVybiB0aGlzLnBvdyhlLHIpfXZhciBpPXRoaXMubS5zdWJuKDEpO3ZhciBuPTA7d2hpbGUoIWkuaXNaZXJvKCkmJmkuYW5kbG4oMSk9PT0wKXtuKys7aS5pdXNocm4oMSl9YXNzZXJ0KCFpLmlzWmVybygpKTt2YXIgYT1uZXcgQk4oMSkudG9SZWQodGhpcyk7dmFyIHM9YS5yZWROZWcoKTt2YXIgbz10aGlzLm0uc3VibigxKS5pdXNocm4oMSk7dmFyIGg9dGhpcy5tLmJpdExlbmd0aCgpO2g9bmV3IEJOKDIqaCpoKS50b1JlZCh0aGlzKTt3aGlsZSh0aGlzLnBvdyhoLG8pLmNtcChzKSE9PTApe2gucmVkSUFkZChzKX12YXIgdT10aGlzLnBvdyhoLGkpO3ZhciBkPXRoaXMucG93KGUsaS5hZGRuKDEpLml1c2hybigxKSk7dmFyIGM9dGhpcy5wb3coZSxpKTt2YXIgbD1uO3doaWxlKGMuY21wKGEpIT09MCl7dmFyIHA9Yztmb3IodmFyIHY9MDtwLmNtcChhKSE9PTA7disrKXtwPXAucmVkU3FyKCl9YXNzZXJ0KHY8bCk7dmFyIGI9dGhpcy5wb3codSxuZXcgQk4oMSkuaXVzaGxuKGwtdi0xKSk7ZD1kLnJlZE11bChiKTt1PWIucmVkU3FyKCk7Yz1jLnJlZE11bCh1KTtsPXZ9cmV0dXJuIGR9O1JlZC5wcm90b3R5cGUuaW52bT1mdW5jdGlvbiBpbnZtKGUpe3ZhciB0PWUuX2ludm1wKHRoaXMubSk7aWYodC5uZWdhdGl2ZSE9PTApe3QubmVnYXRpdmU9MDtyZXR1cm4gdGhpcy5pbW9kKHQpLnJlZE5lZygpfWVsc2V7cmV0dXJuIHRoaXMuaW1vZCh0KX19O1JlZC5wcm90b3R5cGUucG93PWZ1bmN0aW9uIHBvdyhlLHQpe2lmKHQuaXNaZXJvKCkpcmV0dXJuIG5ldyBCTigxKS50b1JlZCh0aGlzKTtpZih0LmNtcG4oMSk9PT0wKXJldHVybiBlLmNsb25lKCk7dmFyIHI9NDt2YXIgaT1uZXcgQXJyYXkoMTw8cik7aVswXT1uZXcgQk4oMSkudG9SZWQodGhpcyk7aVsxXT1lO2Zvcih2YXIgbj0yO248aS5sZW5ndGg7bisrKXtpW25dPXRoaXMubXVsKGlbbi0xXSxlKX12YXIgYT1pWzBdO3ZhciBzPTA7dmFyIG89MDt2YXIgaD10LmJpdExlbmd0aCgpJTI2O2lmKGg9PT0wKXtoPTI2fWZvcihuPXQubGVuZ3RoLTE7bj49MDtuLS0pe3ZhciB1PXQud29yZHNbbl07Zm9yKHZhciBkPWgtMTtkPj0wO2QtLSl7dmFyIGM9dT4+ZCYxO2lmKGEhPT1pWzBdKXthPXRoaXMuc3FyKGEpfWlmKGM9PT0wJiZzPT09MCl7bz0wO2NvbnRpbnVlfXM8PD0xO3N8PWM7bysrO2lmKG8hPT1yJiYobiE9PTB8fGQhPT0wKSljb250aW51ZTthPXRoaXMubXVsKGEsaVtzXSk7bz0wO3M9MH1oPTI2fXJldHVybiBhfTtSZWQucHJvdG90eXBlLmNvbnZlcnRUbz1mdW5jdGlvbiBjb252ZXJ0VG8oZSl7dmFyIHQ9ZS51bW9kKHRoaXMubSk7cmV0dXJuIHQ9PT1lP3QuY2xvbmUoKTp0fTtSZWQucHJvdG90eXBlLmNvbnZlcnRGcm9tPWZ1bmN0aW9uIGNvbnZlcnRGcm9tKGUpe3ZhciB0PWUuY2xvbmUoKTt0LnJlZD1udWxsO3JldHVybiB0fTtCTi5tb250PWZ1bmN0aW9uIG1vbnQoZSl7cmV0dXJuIG5ldyBNb250KGUpfTtmdW5jdGlvbiBNb250KGUpe1JlZC5jYWxsKHRoaXMsZSk7dGhpcy5zaGlmdD10aGlzLm0uYml0TGVuZ3RoKCk7aWYodGhpcy5zaGlmdCUyNiE9PTApe3RoaXMuc2hpZnQrPTI2LXRoaXMuc2hpZnQlMjZ9dGhpcy5yPW5ldyBCTigxKS5pdXNobG4odGhpcy5zaGlmdCk7dGhpcy5yMj10aGlzLmltb2QodGhpcy5yLnNxcigpKTt0aGlzLnJpbnY9dGhpcy5yLl9pbnZtcCh0aGlzLm0pO3RoaXMubWludj10aGlzLnJpbnYubXVsKHRoaXMucikuaXN1Ym4oMSkuZGl2KHRoaXMubSk7dGhpcy5taW52PXRoaXMubWludi51bW9kKHRoaXMucik7dGhpcy5taW52PXRoaXMuci5zdWIodGhpcy5taW52KX1pbmhlcml0cyhNb250LFJlZCk7TW9udC5wcm90b3R5cGUuY29udmVydFRvPWZ1bmN0aW9uIGNvbnZlcnRUbyhlKXtyZXR1cm4gdGhpcy5pbW9kKGUudXNobG4odGhpcy5zaGlmdCkpfTtNb250LnByb3RvdHlwZS5jb252ZXJ0RnJvbT1mdW5jdGlvbiBjb252ZXJ0RnJvbShlKXt2YXIgdD10aGlzLmltb2QoZS5tdWwodGhpcy5yaW52KSk7dC5yZWQ9bnVsbDtyZXR1cm4gdH07TW9udC5wcm90b3R5cGUuaW11bD1mdW5jdGlvbiBpbXVsKGUsdCl7aWYoZS5pc1plcm8oKXx8dC5pc1plcm8oKSl7ZS53b3Jkc1swXT0wO2UubGVuZ3RoPTE7cmV0dXJuIGV9dmFyIHI9ZS5pbXVsKHQpO3ZhciBpPXIubWFza24odGhpcy5zaGlmdCkubXVsKHRoaXMubWludikuaW1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm0pO3ZhciBuPXIuaXN1YihpKS5pdXNocm4odGhpcy5zaGlmdCk7dmFyIGE9bjtpZihuLmNtcCh0aGlzLm0pPj0wKXthPW4uaXN1Yih0aGlzLm0pfWVsc2UgaWYobi5jbXBuKDApPDApe2E9bi5pYWRkKHRoaXMubSl9cmV0dXJuIGEuX2ZvcmNlUmVkKHRoaXMpfTtNb250LnByb3RvdHlwZS5tdWw9ZnVuY3Rpb24gbXVsKGUsdCl7aWYoZS5pc1plcm8oKXx8dC5pc1plcm8oKSlyZXR1cm4gbmV3IEJOKDApLl9mb3JjZVJlZCh0aGlzKTt2YXIgcj1lLm11bCh0KTt2YXIgaT1yLm1hc2tuKHRoaXMuc2hpZnQpLm11bCh0aGlzLm1pbnYpLmltYXNrbih0aGlzLnNoaWZ0KS5tdWwodGhpcy5tKTt2YXIgbj1yLmlzdWIoaSkuaXVzaHJuKHRoaXMuc2hpZnQpO3ZhciBhPW47aWYobi5jbXAodGhpcy5tKT49MCl7YT1uLmlzdWIodGhpcy5tKX1lbHNlIGlmKG4uY21wbigwKTwwKXthPW4uaWFkZCh0aGlzLm0pfXJldHVybiBhLl9mb3JjZVJlZCh0aGlzKX07TW9udC5wcm90b3R5cGUuaW52bT1mdW5jdGlvbiBpbnZtKGUpe3ZhciB0PXRoaXMuaW1vZChlLl9pbnZtcCh0aGlzLm0pLm11bCh0aGlzLnIyKSk7cmV0dXJuIHQuX2ZvcmNlUmVkKHRoaXMpfX0pKGZhbHNlfHxlLHRoaXMpfSwzNTAwOmZ1bmN0aW9uKGUsdCxyKXt2YXIgaTtlLmV4cG9ydHM9ZnVuY3Rpb24gcmFuZChlKXtpZighaSlpPW5ldyBSYW5kKG51bGwpO3JldHVybiBpLmdlbmVyYXRlKGUpfTtmdW5jdGlvbiBSYW5kKGUpe3RoaXMucmFuZD1lfWUuZXhwb3J0cy5SYW5kPVJhbmQ7UmFuZC5wcm90b3R5cGUuZ2VuZXJhdGU9ZnVuY3Rpb24gZ2VuZXJhdGUoZSl7cmV0dXJuIHRoaXMuX3JhbmQoZSl9O1JhbmQucHJvdG90eXBlLl9yYW5kPWZ1bmN0aW9uIF9yYW5kKGUpe2lmKHRoaXMucmFuZC5nZXRCeXRlcylyZXR1cm4gdGhpcy5yYW5kLmdldEJ5dGVzKGUpO3ZhciB0PW5ldyBVaW50OEFycmF5KGUpO2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXRbcl09dGhpcy5yYW5kLmdldEJ5dGUoKTtyZXR1cm4gdH07aWYodHlwZW9mIHNlbGY9PT1cIm9iamVjdFwiKXtpZihzZWxmLmNyeXB0byYmc2VsZi5jcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKXtSYW5kLnByb3RvdHlwZS5fcmFuZD1mdW5jdGlvbiBfcmFuZChlKXt2YXIgdD1uZXcgVWludDhBcnJheShlKTtzZWxmLmNyeXB0by5nZXRSYW5kb21WYWx1ZXModCk7cmV0dXJuIHR9fWVsc2UgaWYoc2VsZi5tc0NyeXB0byYmc2VsZi5tc0NyeXB0by5nZXRSYW5kb21WYWx1ZXMpe1JhbmQucHJvdG90eXBlLl9yYW5kPWZ1bmN0aW9uIF9yYW5kKGUpe3ZhciB0PW5ldyBVaW50OEFycmF5KGUpO3NlbGYubXNDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKHQpO3JldHVybiB0fX1lbHNlIGlmKHR5cGVvZiB3aW5kb3c9PT1cIm9iamVjdFwiKXtSYW5kLnByb3RvdHlwZS5fcmFuZD1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZCB5ZXRcIil9fX1lbHNle3RyeXt2YXIgbj1yKDYxMTMpO2lmKHR5cGVvZiBuLnJhbmRvbUJ5dGVzIT09XCJmdW5jdGlvblwiKXRocm93IG5ldyBFcnJvcihcIk5vdCBzdXBwb3J0ZWRcIik7UmFuZC5wcm90b3R5cGUuX3JhbmQ9ZnVuY3Rpb24gX3JhbmQoZSl7cmV0dXJuIG4ucmFuZG9tQnl0ZXMoZSl9fWNhdGNoKGUpe319fSwxMzg3OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDY5MTEpLkJ1ZmZlcjtmdW5jdGlvbiBhc1VJbnQzMkFycmF5KGUpe2lmKCFpLmlzQnVmZmVyKGUpKWU9aS5mcm9tKGUpO3ZhciB0PWUubGVuZ3RoLzR8MDt2YXIgcj1uZXcgQXJyYXkodCk7Zm9yKHZhciBuPTA7bjx0O24rKyl7cltuXT1lLnJlYWRVSW50MzJCRShuKjQpfXJldHVybiByfWZ1bmN0aW9uIHNjcnViVmVjKGUpe2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7ZSsrKXtlW3RdPTB9fWZ1bmN0aW9uIGNyeXB0QmxvY2soZSx0LHIsaSxuKXt2YXIgYT1yWzBdO3ZhciBzPXJbMV07dmFyIG89clsyXTt2YXIgaD1yWzNdO3ZhciB1PWVbMF1edFswXTt2YXIgZD1lWzFdXnRbMV07dmFyIGM9ZVsyXV50WzJdO3ZhciBsPWVbM11edFszXTt2YXIgcCx2LGIsbTt2YXIgeT00O2Zvcih2YXIgZz0xO2c8bjtnKyspe3A9YVt1Pj4+MjRdXnNbZD4+PjE2JjI1NV1eb1tjPj4+OCYyNTVdXmhbbCYyNTVdXnRbeSsrXTt2PWFbZD4+PjI0XV5zW2M+Pj4xNiYyNTVdXm9bbD4+PjgmMjU1XV5oW3UmMjU1XV50W3krK107Yj1hW2M+Pj4yNF1ec1tsPj4+MTYmMjU1XV5vW3U+Pj44JjI1NV1eaFtkJjI1NV1edFt5KytdO209YVtsPj4+MjRdXnNbdT4+PjE2JjI1NV1eb1tkPj4+OCYyNTVdXmhbYyYyNTVdXnRbeSsrXTt1PXA7ZD12O2M9YjtsPW19cD0oaVt1Pj4+MjRdPDwyNHxpW2Q+Pj4xNiYyNTVdPDwxNnxpW2M+Pj44JjI1NV08PDh8aVtsJjI1NV0pXnRbeSsrXTt2PShpW2Q+Pj4yNF08PDI0fGlbYz4+PjE2JjI1NV08PDE2fGlbbD4+PjgmMjU1XTw8OHxpW3UmMjU1XSledFt5KytdO2I9KGlbYz4+PjI0XTw8MjR8aVtsPj4+MTYmMjU1XTw8MTZ8aVt1Pj4+OCYyNTVdPDw4fGlbZCYyNTVdKV50W3krK107bT0oaVtsPj4+MjRdPDwyNHxpW3U+Pj4xNiYyNTVdPDwxNnxpW2Q+Pj44JjI1NV08PDh8aVtjJjI1NV0pXnRbeSsrXTtwPXA+Pj4wO3Y9dj4+PjA7Yj1iPj4+MDttPW0+Pj4wO3JldHVybltwLHYsYixtXX12YXIgbj1bMCwxLDIsNCw4LDE2LDMyLDY0LDEyOCwyNyw1NF07dmFyIGE9ZnVuY3Rpb24oKXt2YXIgZT1uZXcgQXJyYXkoMjU2KTtmb3IodmFyIHQ9MDt0PDI1Njt0Kyspe2lmKHQ8MTI4KXtlW3RdPXQ8PDF9ZWxzZXtlW3RdPXQ8PDFeMjgzfX12YXIgcj1bXTt2YXIgaT1bXTt2YXIgbj1bW10sW10sW10sW11dO3ZhciBhPVtbXSxbXSxbXSxbXV07dmFyIHM9MDt2YXIgbz0wO2Zvcih2YXIgaD0wO2g8MjU2OysraCl7dmFyIHU9b15vPDwxXm88PDJebzw8M15vPDw0O3U9dT4+PjhedSYyNTVeOTk7cltzXT11O2lbdV09czt2YXIgZD1lW3NdO3ZhciBjPWVbZF07dmFyIGw9ZVtjXTt2YXIgcD1lW3VdKjI1N151KjE2ODQzMDA4O25bMF1bc109cDw8MjR8cD4+Pjg7blsxXVtzXT1wPDwxNnxwPj4+MTY7blsyXVtzXT1wPDw4fHA+Pj4yNDtuWzNdW3NdPXA7cD1sKjE2ODQzMDA5XmMqNjU1MzdeZCoyNTdecyoxNjg0MzAwODthWzBdW3VdPXA8PDI0fHA+Pj44O2FbMV1bdV09cDw8MTZ8cD4+PjE2O2FbMl1bdV09cDw8OHxwPj4+MjQ7YVszXVt1XT1wO2lmKHM9PT0wKXtzPW89MX1lbHNle3M9ZF5lW2VbZVtsXmRdXV07b149ZVtlW29dXX19cmV0dXJue1NCT1g6cixJTlZfU0JPWDppLFNVQl9NSVg6bixJTlZfU1VCX01JWDphfX0oKTtmdW5jdGlvbiBBRVMoZSl7dGhpcy5fa2V5PWFzVUludDMyQXJyYXkoZSk7dGhpcy5fcmVzZXQoKX1BRVMuYmxvY2tTaXplPTQqNDtBRVMua2V5U2l6ZT0yNTYvODtBRVMucHJvdG90eXBlLmJsb2NrU2l6ZT1BRVMuYmxvY2tTaXplO0FFUy5wcm90b3R5cGUua2V5U2l6ZT1BRVMua2V5U2l6ZTtBRVMucHJvdG90eXBlLl9yZXNldD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2tleTt2YXIgdD1lLmxlbmd0aDt2YXIgcj10KzY7dmFyIGk9KHIrMSkqNDt2YXIgcz1bXTtmb3IodmFyIG89MDtvPHQ7bysrKXtzW29dPWVbb119Zm9yKG89dDtvPGk7bysrKXt2YXIgaD1zW28tMV07aWYobyV0PT09MCl7aD1oPDw4fGg+Pj4yNDtoPWEuU0JPWFtoPj4+MjRdPDwyNHxhLlNCT1hbaD4+PjE2JjI1NV08PDE2fGEuU0JPWFtoPj4+OCYyNTVdPDw4fGEuU0JPWFtoJjI1NV07aF49bltvL3R8MF08PDI0fWVsc2UgaWYodD42JiZvJXQ9PT00KXtoPWEuU0JPWFtoPj4+MjRdPDwyNHxhLlNCT1hbaD4+PjE2JjI1NV08PDE2fGEuU0JPWFtoPj4+OCYyNTVdPDw4fGEuU0JPWFtoJjI1NV19c1tvXT1zW28tdF1eaH12YXIgdT1bXTtmb3IodmFyIGQ9MDtkPGk7ZCsrKXt2YXIgYz1pLWQ7dmFyIGw9c1tjLShkJTQ/MDo0KV07aWYoZDw0fHxjPD00KXt1W2RdPWx9ZWxzZXt1W2RdPWEuSU5WX1NVQl9NSVhbMF1bYS5TQk9YW2w+Pj4yNF1dXmEuSU5WX1NVQl9NSVhbMV1bYS5TQk9YW2w+Pj4xNiYyNTVdXV5hLklOVl9TVUJfTUlYWzJdW2EuU0JPWFtsPj4+OCYyNTVdXV5hLklOVl9TVUJfTUlYWzNdW2EuU0JPWFtsJjI1NV1dfX10aGlzLl9uUm91bmRzPXI7dGhpcy5fa2V5U2NoZWR1bGU9czt0aGlzLl9pbnZLZXlTY2hlZHVsZT11fTtBRVMucHJvdG90eXBlLmVuY3J5cHRCbG9ja1Jhdz1mdW5jdGlvbihlKXtlPWFzVUludDMyQXJyYXkoZSk7cmV0dXJuIGNyeXB0QmxvY2soZSx0aGlzLl9rZXlTY2hlZHVsZSxhLlNVQl9NSVgsYS5TQk9YLHRoaXMuX25Sb3VuZHMpfTtBRVMucHJvdG90eXBlLmVuY3J5cHRCbG9jaz1mdW5jdGlvbihlKXt2YXIgdD10aGlzLmVuY3J5cHRCbG9ja1JhdyhlKTt2YXIgcj1pLmFsbG9jVW5zYWZlKDE2KTtyLndyaXRlVUludDMyQkUodFswXSwwKTtyLndyaXRlVUludDMyQkUodFsxXSw0KTtyLndyaXRlVUludDMyQkUodFsyXSw4KTtyLndyaXRlVUludDMyQkUodFszXSwxMik7cmV0dXJuIHJ9O0FFUy5wcm90b3R5cGUuZGVjcnlwdEJsb2NrPWZ1bmN0aW9uKGUpe2U9YXNVSW50MzJBcnJheShlKTt2YXIgdD1lWzFdO2VbMV09ZVszXTtlWzNdPXQ7dmFyIHI9Y3J5cHRCbG9jayhlLHRoaXMuX2ludktleVNjaGVkdWxlLGEuSU5WX1NVQl9NSVgsYS5JTlZfU0JPWCx0aGlzLl9uUm91bmRzKTt2YXIgbj1pLmFsbG9jVW5zYWZlKDE2KTtuLndyaXRlVUludDMyQkUoclswXSwwKTtuLndyaXRlVUludDMyQkUoclszXSw0KTtuLndyaXRlVUludDMyQkUoclsyXSw4KTtuLndyaXRlVUludDMyQkUoclsxXSwxMik7cmV0dXJuIG59O0FFUy5wcm90b3R5cGUuc2NydWI9ZnVuY3Rpb24oKXtzY3J1YlZlYyh0aGlzLl9rZXlTY2hlZHVsZSk7c2NydWJWZWModGhpcy5faW52S2V5U2NoZWR1bGUpO3NjcnViVmVjKHRoaXMuX2tleSl9O2UuZXhwb3J0cy5BRVM9QUVTfSw2NjI0OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDEzODcpO3ZhciBuPXIoNjkxMSkuQnVmZmVyO3ZhciBhPXIoMTA0Myk7dmFyIHM9cigzNzgyKTt2YXIgbz1yKDcyMjUpO3ZhciBoPXIoNDczNCk7dmFyIHU9cig1OTgpO2Z1bmN0aW9uIHhvclRlc3QoZSx0KXt2YXIgcj0wO2lmKGUubGVuZ3RoIT09dC5sZW5ndGgpcisrO3ZhciBpPU1hdGgubWluKGUubGVuZ3RoLHQubGVuZ3RoKTtmb3IodmFyIG49MDtuPGk7KytuKXtyKz1lW25dXnRbbl19cmV0dXJuIHJ9ZnVuY3Rpb24gY2FsY0l2KGUsdCxyKXtpZih0Lmxlbmd0aD09PTEyKXtlLl9maW5JRD1uLmNvbmNhdChbdCxuLmZyb20oWzAsMCwwLDFdKV0pO3JldHVybiBuLmNvbmNhdChbdCxuLmZyb20oWzAsMCwwLDJdKV0pfXZhciBpPW5ldyBvKHIpO3ZhciBhPXQubGVuZ3RoO3ZhciBzPWElMTY7aS51cGRhdGUodCk7aWYocyl7cz0xNi1zO2kudXBkYXRlKG4uYWxsb2MocywwKSl9aS51cGRhdGUobi5hbGxvYyg4LDApKTt2YXIgaD1hKjg7dmFyIGQ9bi5hbGxvYyg4KTtkLndyaXRlVUludEJFKGgsMCw4KTtpLnVwZGF0ZShkKTtlLl9maW5JRD1pLnN0YXRlO3ZhciBjPW4uZnJvbShlLl9maW5JRCk7dShjKTtyZXR1cm4gY31mdW5jdGlvbiBTdHJlYW1DaXBoZXIoZSx0LHIscyl7YS5jYWxsKHRoaXMpO3ZhciBoPW4uYWxsb2MoNCwwKTt0aGlzLl9jaXBoZXI9bmV3IGkuQUVTKHQpO3ZhciB1PXRoaXMuX2NpcGhlci5lbmNyeXB0QmxvY2soaCk7dGhpcy5fZ2hhc2g9bmV3IG8odSk7cj1jYWxjSXYodGhpcyxyLHUpO3RoaXMuX3ByZXY9bi5mcm9tKHIpO3RoaXMuX2NhY2hlPW4uYWxsb2NVbnNhZmUoMCk7dGhpcy5fc2VjQ2FjaGU9bi5hbGxvY1Vuc2FmZSgwKTt0aGlzLl9kZWNyeXB0PXM7dGhpcy5fYWxlbj0wO3RoaXMuX2xlbj0wO3RoaXMuX21vZGU9ZTt0aGlzLl9hdXRoVGFnPW51bGw7dGhpcy5fY2FsbGVkPWZhbHNlfXMoU3RyZWFtQ2lwaGVyLGEpO1N0cmVhbUNpcGhlci5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbihlKXtpZighdGhpcy5fY2FsbGVkJiZ0aGlzLl9hbGVuKXt2YXIgdD0xNi10aGlzLl9hbGVuJTE2O2lmKHQ8MTYpe3Q9bi5hbGxvYyh0LDApO3RoaXMuX2doYXNoLnVwZGF0ZSh0KX19dGhpcy5fY2FsbGVkPXRydWU7dmFyIHI9dGhpcy5fbW9kZS5lbmNyeXB0KHRoaXMsZSk7aWYodGhpcy5fZGVjcnlwdCl7dGhpcy5fZ2hhc2gudXBkYXRlKGUpfWVsc2V7dGhpcy5fZ2hhc2gudXBkYXRlKHIpfXRoaXMuX2xlbis9ZS5sZW5ndGg7cmV0dXJuIHJ9O1N0cmVhbUNpcGhlci5wcm90b3R5cGUuX2ZpbmFsPWZ1bmN0aW9uKCl7aWYodGhpcy5fZGVjcnlwdCYmIXRoaXMuX2F1dGhUYWcpdGhyb3cgbmV3IEVycm9yKFwiVW5zdXBwb3J0ZWQgc3RhdGUgb3IgdW5hYmxlIHRvIGF1dGhlbnRpY2F0ZSBkYXRhXCIpO3ZhciBlPWgodGhpcy5fZ2hhc2guZmluYWwodGhpcy5fYWxlbio4LHRoaXMuX2xlbio4KSx0aGlzLl9jaXBoZXIuZW5jcnlwdEJsb2NrKHRoaXMuX2ZpbklEKSk7aWYodGhpcy5fZGVjcnlwdCYmeG9yVGVzdChlLHRoaXMuX2F1dGhUYWcpKXRocm93IG5ldyBFcnJvcihcIlVuc3VwcG9ydGVkIHN0YXRlIG9yIHVuYWJsZSB0byBhdXRoZW50aWNhdGUgZGF0YVwiKTt0aGlzLl9hdXRoVGFnPWU7dGhpcy5fY2lwaGVyLnNjcnViKCl9O1N0cmVhbUNpcGhlci5wcm90b3R5cGUuZ2V0QXV0aFRhZz1mdW5jdGlvbiBnZXRBdXRoVGFnKCl7aWYodGhpcy5fZGVjcnlwdHx8IW4uaXNCdWZmZXIodGhpcy5fYXV0aFRhZykpdGhyb3cgbmV3IEVycm9yKFwiQXR0ZW1wdGluZyB0byBnZXQgYXV0aCB0YWcgaW4gdW5zdXBwb3J0ZWQgc3RhdGVcIik7cmV0dXJuIHRoaXMuX2F1dGhUYWd9O1N0cmVhbUNpcGhlci5wcm90b3R5cGUuc2V0QXV0aFRhZz1mdW5jdGlvbiBzZXRBdXRoVGFnKGUpe2lmKCF0aGlzLl9kZWNyeXB0KXRocm93IG5ldyBFcnJvcihcIkF0dGVtcHRpbmcgdG8gc2V0IGF1dGggdGFnIGluIHVuc3VwcG9ydGVkIHN0YXRlXCIpO3RoaXMuX2F1dGhUYWc9ZX07U3RyZWFtQ2lwaGVyLnByb3RvdHlwZS5zZXRBQUQ9ZnVuY3Rpb24gc2V0QUFEKGUpe2lmKHRoaXMuX2NhbGxlZCl0aHJvdyBuZXcgRXJyb3IoXCJBdHRlbXB0aW5nIHRvIHNldCBBQUQgaW4gdW5zdXBwb3J0ZWQgc3RhdGVcIik7dGhpcy5fZ2hhc2gudXBkYXRlKGUpO3RoaXMuX2FsZW4rPWUubGVuZ3RofTtlLmV4cG9ydHM9U3RyZWFtQ2lwaGVyfSw2NTk0OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDIpO3ZhciBuPXIoMjU5OCk7dmFyIGE9cig1ODY2KTtmdW5jdGlvbiBnZXRDaXBoZXJzKCl7cmV0dXJuIE9iamVjdC5rZXlzKGEpfXQuY3JlYXRlQ2lwaGVyPXQuQ2lwaGVyPWkuY3JlYXRlQ2lwaGVyO3QuY3JlYXRlQ2lwaGVyaXY9dC5DaXBoZXJpdj1pLmNyZWF0ZUNpcGhlcml2O3QuY3JlYXRlRGVjaXBoZXI9dC5EZWNpcGhlcj1uLmNyZWF0ZURlY2lwaGVyO3QuY3JlYXRlRGVjaXBoZXJpdj10LkRlY2lwaGVyaXY9bi5jcmVhdGVEZWNpcGhlcml2O3QubGlzdENpcGhlcnM9dC5nZXRDaXBoZXJzPWdldENpcGhlcnN9LDI1OTg6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoNjYyNCk7dmFyIG49cig2OTExKS5CdWZmZXI7dmFyIGE9cig2MzcwKTt2YXIgcz1yKDEyNik7dmFyIG89cigxMDQzKTt2YXIgaD1yKDEzODcpO3ZhciB1PXIoODM2OCk7dmFyIGQ9cigzNzgyKTtmdW5jdGlvbiBEZWNpcGhlcihlLHQscil7by5jYWxsKHRoaXMpO3RoaXMuX2NhY2hlPW5ldyBTcGxpdHRlcjt0aGlzLl9sYXN0PXZvaWQgMDt0aGlzLl9jaXBoZXI9bmV3IGguQUVTKHQpO3RoaXMuX3ByZXY9bi5mcm9tKHIpO3RoaXMuX21vZGU9ZTt0aGlzLl9hdXRvcGFkZGluZz10cnVlfWQoRGVjaXBoZXIsbyk7RGVjaXBoZXIucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oZSl7dGhpcy5fY2FjaGUuYWRkKGUpO3ZhciB0O3ZhciByO3ZhciBpPVtdO3doaWxlKHQ9dGhpcy5fY2FjaGUuZ2V0KHRoaXMuX2F1dG9wYWRkaW5nKSl7cj10aGlzLl9tb2RlLmRlY3J5cHQodGhpcyx0KTtpLnB1c2gocil9cmV0dXJuIG4uY29uY2F0KGkpfTtEZWNpcGhlci5wcm90b3R5cGUuX2ZpbmFsPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fY2FjaGUuZmx1c2goKTtpZih0aGlzLl9hdXRvcGFkZGluZyl7cmV0dXJuIHVucGFkKHRoaXMuX21vZGUuZGVjcnlwdCh0aGlzLGUpKX1lbHNlIGlmKGUpe3Rocm93IG5ldyBFcnJvcihcImRhdGEgbm90IG11bHRpcGxlIG9mIGJsb2NrIGxlbmd0aFwiKX19O0RlY2lwaGVyLnByb3RvdHlwZS5zZXRBdXRvUGFkZGluZz1mdW5jdGlvbihlKXt0aGlzLl9hdXRvcGFkZGluZz0hIWU7cmV0dXJuIHRoaXN9O2Z1bmN0aW9uIFNwbGl0dGVyKCl7dGhpcy5jYWNoZT1uLmFsbG9jVW5zYWZlKDApfVNwbGl0dGVyLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oZSl7dGhpcy5jYWNoZT1uLmNvbmNhdChbdGhpcy5jYWNoZSxlXSl9O1NwbGl0dGVyLnByb3RvdHlwZS5nZXQ9ZnVuY3Rpb24oZSl7dmFyIHQ7aWYoZSl7aWYodGhpcy5jYWNoZS5sZW5ndGg+MTYpe3Q9dGhpcy5jYWNoZS5zbGljZSgwLDE2KTt0aGlzLmNhY2hlPXRoaXMuY2FjaGUuc2xpY2UoMTYpO3JldHVybiB0fX1lbHNle2lmKHRoaXMuY2FjaGUubGVuZ3RoPj0xNil7dD10aGlzLmNhY2hlLnNsaWNlKDAsMTYpO3RoaXMuY2FjaGU9dGhpcy5jYWNoZS5zbGljZSgxNik7cmV0dXJuIHR9fXJldHVybiBudWxsfTtTcGxpdHRlci5wcm90b3R5cGUuZmx1c2g9ZnVuY3Rpb24oKXtpZih0aGlzLmNhY2hlLmxlbmd0aClyZXR1cm4gdGhpcy5jYWNoZX07ZnVuY3Rpb24gdW5wYWQoZSl7dmFyIHQ9ZVsxNV07aWYodDwxfHx0PjE2KXt0aHJvdyBuZXcgRXJyb3IoXCJ1bmFibGUgdG8gZGVjcnlwdCBkYXRhXCIpfXZhciByPS0xO3doaWxlKCsrcjx0KXtpZihlW3IrKDE2LXQpXSE9PXQpe3Rocm93IG5ldyBFcnJvcihcInVuYWJsZSB0byBkZWNyeXB0IGRhdGFcIil9fWlmKHQ9PT0xNilyZXR1cm47cmV0dXJuIGUuc2xpY2UoMCwxNi10KX1mdW5jdGlvbiBjcmVhdGVEZWNpcGhlcml2KGUsdCxyKXt2YXIgbz1hW2UudG9Mb3dlckNhc2UoKV07aWYoIW8pdGhyb3cgbmV3IFR5cGVFcnJvcihcImludmFsaWQgc3VpdGUgdHlwZVwiKTtpZih0eXBlb2Ygcj09PVwic3RyaW5nXCIpcj1uLmZyb20ocik7aWYoby5tb2RlIT09XCJHQ01cIiYmci5sZW5ndGghPT1vLml2KXRocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIGl2IGxlbmd0aCBcIityLmxlbmd0aCk7aWYodHlwZW9mIHQ9PT1cInN0cmluZ1wiKXQ9bi5mcm9tKHQpO2lmKHQubGVuZ3RoIT09by5rZXkvOCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiaW52YWxpZCBrZXkgbGVuZ3RoIFwiK3QubGVuZ3RoKTtpZihvLnR5cGU9PT1cInN0cmVhbVwiKXtyZXR1cm4gbmV3IHMoby5tb2R1bGUsdCxyLHRydWUpfWVsc2UgaWYoby50eXBlPT09XCJhdXRoXCIpe3JldHVybiBuZXcgaShvLm1vZHVsZSx0LHIsdHJ1ZSl9cmV0dXJuIG5ldyBEZWNpcGhlcihvLm1vZHVsZSx0LHIpfWZ1bmN0aW9uIGNyZWF0ZURlY2lwaGVyKGUsdCl7dmFyIHI9YVtlLnRvTG93ZXJDYXNlKCldO2lmKCFyKXRocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIHN1aXRlIHR5cGVcIik7dmFyIGk9dSh0LGZhbHNlLHIua2V5LHIuaXYpO3JldHVybiBjcmVhdGVEZWNpcGhlcml2KGUsaS5rZXksaS5pdil9dC5jcmVhdGVEZWNpcGhlcj1jcmVhdGVEZWNpcGhlcjt0LmNyZWF0ZURlY2lwaGVyaXY9Y3JlYXRlRGVjaXBoZXJpdn0sMjpmdW5jdGlvbihlLHQscil7dmFyIGk9cig2MzcwKTt2YXIgbj1yKDY2MjQpO3ZhciBhPXIoNjkxMSkuQnVmZmVyO3ZhciBzPXIoMTI2KTt2YXIgbz1yKDEwNDMpO3ZhciBoPXIoMTM4Nyk7dmFyIHU9cig4MzY4KTt2YXIgZD1yKDM3ODIpO2Z1bmN0aW9uIENpcGhlcihlLHQscil7by5jYWxsKHRoaXMpO3RoaXMuX2NhY2hlPW5ldyBTcGxpdHRlcjt0aGlzLl9jaXBoZXI9bmV3IGguQUVTKHQpO3RoaXMuX3ByZXY9YS5mcm9tKHIpO3RoaXMuX21vZGU9ZTt0aGlzLl9hdXRvcGFkZGluZz10cnVlfWQoQ2lwaGVyLG8pO0NpcGhlci5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbihlKXt0aGlzLl9jYWNoZS5hZGQoZSk7dmFyIHQ7dmFyIHI7dmFyIGk9W107d2hpbGUodD10aGlzLl9jYWNoZS5nZXQoKSl7cj10aGlzLl9tb2RlLmVuY3J5cHQodGhpcyx0KTtpLnB1c2gocil9cmV0dXJuIGEuY29uY2F0KGkpfTt2YXIgYz1hLmFsbG9jKDE2LDE2KTtDaXBoZXIucHJvdG90eXBlLl9maW5hbD1mdW5jdGlvbigpe3ZhciBlPXRoaXMuX2NhY2hlLmZsdXNoKCk7aWYodGhpcy5fYXV0b3BhZGRpbmcpe2U9dGhpcy5fbW9kZS5lbmNyeXB0KHRoaXMsZSk7dGhpcy5fY2lwaGVyLnNjcnViKCk7cmV0dXJuIGV9aWYoIWUuZXF1YWxzKGMpKXt0aGlzLl9jaXBoZXIuc2NydWIoKTt0aHJvdyBuZXcgRXJyb3IoXCJkYXRhIG5vdCBtdWx0aXBsZSBvZiBibG9jayBsZW5ndGhcIil9fTtDaXBoZXIucHJvdG90eXBlLnNldEF1dG9QYWRkaW5nPWZ1bmN0aW9uKGUpe3RoaXMuX2F1dG9wYWRkaW5nPSEhZTtyZXR1cm4gdGhpc307ZnVuY3Rpb24gU3BsaXR0ZXIoKXt0aGlzLmNhY2hlPWEuYWxsb2NVbnNhZmUoMCl9U3BsaXR0ZXIucHJvdG90eXBlLmFkZD1mdW5jdGlvbihlKXt0aGlzLmNhY2hlPWEuY29uY2F0KFt0aGlzLmNhY2hlLGVdKX07U3BsaXR0ZXIucHJvdG90eXBlLmdldD1mdW5jdGlvbigpe2lmKHRoaXMuY2FjaGUubGVuZ3RoPjE1KXt2YXIgZT10aGlzLmNhY2hlLnNsaWNlKDAsMTYpO3RoaXMuY2FjaGU9dGhpcy5jYWNoZS5zbGljZSgxNik7cmV0dXJuIGV9cmV0dXJuIG51bGx9O1NwbGl0dGVyLnByb3RvdHlwZS5mbHVzaD1mdW5jdGlvbigpe3ZhciBlPTE2LXRoaXMuY2FjaGUubGVuZ3RoO3ZhciB0PWEuYWxsb2NVbnNhZmUoZSk7dmFyIHI9LTE7d2hpbGUoKytyPGUpe3Qud3JpdGVVSW50OChlLHIpfXJldHVybiBhLmNvbmNhdChbdGhpcy5jYWNoZSx0XSl9O2Z1bmN0aW9uIGNyZWF0ZUNpcGhlcml2KGUsdCxyKXt2YXIgbz1pW2UudG9Mb3dlckNhc2UoKV07aWYoIW8pdGhyb3cgbmV3IFR5cGVFcnJvcihcImludmFsaWQgc3VpdGUgdHlwZVwiKTtpZih0eXBlb2YgdD09PVwic3RyaW5nXCIpdD1hLmZyb20odCk7aWYodC5sZW5ndGghPT1vLmtleS84KXRocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIGtleSBsZW5ndGggXCIrdC5sZW5ndGgpO2lmKHR5cGVvZiByPT09XCJzdHJpbmdcIilyPWEuZnJvbShyKTtpZihvLm1vZGUhPT1cIkdDTVwiJiZyLmxlbmd0aCE9PW8uaXYpdGhyb3cgbmV3IFR5cGVFcnJvcihcImludmFsaWQgaXYgbGVuZ3RoIFwiK3IubGVuZ3RoKTtpZihvLnR5cGU9PT1cInN0cmVhbVwiKXtyZXR1cm4gbmV3IHMoby5tb2R1bGUsdCxyKX1lbHNlIGlmKG8udHlwZT09PVwiYXV0aFwiKXtyZXR1cm4gbmV3IG4oby5tb2R1bGUsdCxyKX1yZXR1cm4gbmV3IENpcGhlcihvLm1vZHVsZSx0LHIpfWZ1bmN0aW9uIGNyZWF0ZUNpcGhlcihlLHQpe3ZhciByPWlbZS50b0xvd2VyQ2FzZSgpXTtpZighcil0aHJvdyBuZXcgVHlwZUVycm9yKFwiaW52YWxpZCBzdWl0ZSB0eXBlXCIpO3ZhciBuPXUodCxmYWxzZSxyLmtleSxyLml2KTtyZXR1cm4gY3JlYXRlQ2lwaGVyaXYoZSxuLmtleSxuLml2KX10LmNyZWF0ZUNpcGhlcml2PWNyZWF0ZUNpcGhlcml2O3QuY3JlYXRlQ2lwaGVyPWNyZWF0ZUNpcGhlcn0sNzIyNTpmdW5jdGlvbihlLHQscil7dmFyIGk9cig2OTExKS5CdWZmZXI7dmFyIG49aS5hbGxvYygxNiwwKTtmdW5jdGlvbiB0b0FycmF5KGUpe3JldHVybltlLnJlYWRVSW50MzJCRSgwKSxlLnJlYWRVSW50MzJCRSg0KSxlLnJlYWRVSW50MzJCRSg4KSxlLnJlYWRVSW50MzJCRSgxMildfWZ1bmN0aW9uIGZyb21BcnJheShlKXt2YXIgdD1pLmFsbG9jVW5zYWZlKDE2KTt0LndyaXRlVUludDMyQkUoZVswXT4+PjAsMCk7dC53cml0ZVVJbnQzMkJFKGVbMV0+Pj4wLDQpO3Qud3JpdGVVSW50MzJCRShlWzJdPj4+MCw4KTt0LndyaXRlVUludDMyQkUoZVszXT4+PjAsMTIpO3JldHVybiB0fWZ1bmN0aW9uIEdIQVNIKGUpe3RoaXMuaD1lO3RoaXMuc3RhdGU9aS5hbGxvYygxNiwwKTt0aGlzLmNhY2hlPWkuYWxsb2NVbnNhZmUoMCl9R0hBU0gucHJvdG90eXBlLmdoYXNoPWZ1bmN0aW9uKGUpe3ZhciB0PS0xO3doaWxlKCsrdDxlLmxlbmd0aCl7dGhpcy5zdGF0ZVt0XV49ZVt0XX10aGlzLl9tdWx0aXBseSgpfTtHSEFTSC5wcm90b3R5cGUuX211bHRpcGx5PWZ1bmN0aW9uKCl7dmFyIGU9dG9BcnJheSh0aGlzLmgpO3ZhciB0PVswLDAsMCwwXTt2YXIgcixpLG47dmFyIGE9LTE7d2hpbGUoKythPDEyOCl7aT0odGhpcy5zdGF0ZVt+fihhLzgpXSYxPDw3LWElOCkhPT0wO2lmKGkpe3RbMF1ePWVbMF07dFsxXV49ZVsxXTt0WzJdXj1lWzJdO3RbM11ePWVbM119bj0oZVszXSYxKSE9PTA7Zm9yKHI9MztyPjA7ci0tKXtlW3JdPWVbcl0+Pj4xfChlW3ItMV0mMSk8PDMxfWVbMF09ZVswXT4+PjE7aWYobil7ZVswXT1lWzBdXjIyNTw8MjR9fXRoaXMuc3RhdGU9ZnJvbUFycmF5KHQpfTtHSEFTSC5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKGUpe3RoaXMuY2FjaGU9aS5jb25jYXQoW3RoaXMuY2FjaGUsZV0pO3ZhciB0O3doaWxlKHRoaXMuY2FjaGUubGVuZ3RoPj0xNil7dD10aGlzLmNhY2hlLnNsaWNlKDAsMTYpO3RoaXMuY2FjaGU9dGhpcy5jYWNoZS5zbGljZSgxNik7dGhpcy5naGFzaCh0KX19O0dIQVNILnByb3RvdHlwZS5maW5hbD1mdW5jdGlvbihlLHQpe2lmKHRoaXMuY2FjaGUubGVuZ3RoKXt0aGlzLmdoYXNoKGkuY29uY2F0KFt0aGlzLmNhY2hlLG5dLDE2KSl9dGhpcy5naGFzaChmcm9tQXJyYXkoWzAsZSwwLHRdKSk7cmV0dXJuIHRoaXMuc3RhdGV9O2UuZXhwb3J0cz1HSEFTSH0sNTk4OmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIGluY3IzMihlKXt2YXIgdD1lLmxlbmd0aDt2YXIgcjt3aGlsZSh0LS0pe3I9ZS5yZWFkVUludDgodCk7aWYocj09PTI1NSl7ZS53cml0ZVVJbnQ4KDAsdCl9ZWxzZXtyKys7ZS53cml0ZVVJbnQ4KHIsdCk7YnJlYWt9fX1lLmV4cG9ydHM9aW5jcjMyfSw5ODI1OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDQ3MzQpO3QuZW5jcnlwdD1mdW5jdGlvbihlLHQpe3ZhciByPWkodCxlLl9wcmV2KTtlLl9wcmV2PWUuX2NpcGhlci5lbmNyeXB0QmxvY2socik7cmV0dXJuIGUuX3ByZXZ9O3QuZGVjcnlwdD1mdW5jdGlvbihlLHQpe3ZhciByPWUuX3ByZXY7ZS5fcHJldj10O3ZhciBuPWUuX2NpcGhlci5kZWNyeXB0QmxvY2sodCk7cmV0dXJuIGkobixyKX19LDMyMTpmdW5jdGlvbihlLHQscil7dmFyIGk9cig2OTExKS5CdWZmZXI7dmFyIG49cig0NzM0KTtmdW5jdGlvbiBlbmNyeXB0U3RhcnQoZSx0LHIpe3ZhciBhPXQubGVuZ3RoO3ZhciBzPW4odCxlLl9jYWNoZSk7ZS5fY2FjaGU9ZS5fY2FjaGUuc2xpY2UoYSk7ZS5fcHJldj1pLmNvbmNhdChbZS5fcHJldixyP3Q6c10pO3JldHVybiBzfXQuZW5jcnlwdD1mdW5jdGlvbihlLHQscil7dmFyIG49aS5hbGxvY1Vuc2FmZSgwKTt2YXIgYTt3aGlsZSh0Lmxlbmd0aCl7aWYoZS5fY2FjaGUubGVuZ3RoPT09MCl7ZS5fY2FjaGU9ZS5fY2lwaGVyLmVuY3J5cHRCbG9jayhlLl9wcmV2KTtlLl9wcmV2PWkuYWxsb2NVbnNhZmUoMCl9aWYoZS5fY2FjaGUubGVuZ3RoPD10Lmxlbmd0aCl7YT1lLl9jYWNoZS5sZW5ndGg7bj1pLmNvbmNhdChbbixlbmNyeXB0U3RhcnQoZSx0LnNsaWNlKDAsYSkscildKTt0PXQuc2xpY2UoYSl9ZWxzZXtuPWkuY29uY2F0KFtuLGVuY3J5cHRTdGFydChlLHQscildKTticmVha319cmV0dXJuIG59fSwzMTQ3OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDY5MTEpLkJ1ZmZlcjtmdW5jdGlvbiBlbmNyeXB0Qnl0ZShlLHQscil7dmFyIGk7dmFyIG49LTE7dmFyIGE9ODt2YXIgcz0wO3ZhciBvLGg7d2hpbGUoKytuPGEpe2k9ZS5fY2lwaGVyLmVuY3J5cHRCbG9jayhlLl9wcmV2KTtvPXQmMTw8Ny1uPzEyODowO2g9aVswXV5vO3MrPShoJjEyOCk+Pm4lODtlLl9wcmV2PXNoaWZ0SW4oZS5fcHJldixyP286aCl9cmV0dXJuIHN9ZnVuY3Rpb24gc2hpZnRJbihlLHQpe3ZhciByPWUubGVuZ3RoO3ZhciBuPS0xO3ZhciBhPWkuYWxsb2NVbnNhZmUoZS5sZW5ndGgpO2U9aS5jb25jYXQoW2UsaS5mcm9tKFt0XSldKTt3aGlsZSgrK248cil7YVtuXT1lW25dPDwxfGVbbisxXT4+N31yZXR1cm4gYX10LmVuY3J5cHQ9ZnVuY3Rpb24oZSx0LHIpe3ZhciBuPXQubGVuZ3RoO3ZhciBhPWkuYWxsb2NVbnNhZmUobik7dmFyIHM9LTE7d2hpbGUoKytzPG4pe2Fbc109ZW5jcnlwdEJ5dGUoZSx0W3NdLHIpfXJldHVybiBhfX0sMjQzMDpmdW5jdGlvbihlLHQscil7dmFyIGk9cig2OTExKS5CdWZmZXI7ZnVuY3Rpb24gZW5jcnlwdEJ5dGUoZSx0LHIpe3ZhciBuPWUuX2NpcGhlci5lbmNyeXB0QmxvY2soZS5fcHJldik7dmFyIGE9blswXV50O2UuX3ByZXY9aS5jb25jYXQoW2UuX3ByZXYuc2xpY2UoMSksaS5mcm9tKFtyP3Q6YV0pXSk7cmV0dXJuIGF9dC5lbmNyeXB0PWZ1bmN0aW9uKGUsdCxyKXt2YXIgbj10Lmxlbmd0aDt2YXIgYT1pLmFsbG9jVW5zYWZlKG4pO3ZhciBzPS0xO3doaWxlKCsrczxuKXthW3NdPWVuY3J5cHRCeXRlKGUsdFtzXSxyKX1yZXR1cm4gYX19LDMzNjE6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoNDczNCk7dmFyIG49cig2OTExKS5CdWZmZXI7dmFyIGE9cig1OTgpO2Z1bmN0aW9uIGdldEJsb2NrKGUpe3ZhciB0PWUuX2NpcGhlci5lbmNyeXB0QmxvY2tSYXcoZS5fcHJldik7YShlLl9wcmV2KTtyZXR1cm4gdH12YXIgcz0xNjt0LmVuY3J5cHQ9ZnVuY3Rpb24oZSx0KXt2YXIgcj1NYXRoLmNlaWwodC5sZW5ndGgvcyk7dmFyIGE9ZS5fY2FjaGUubGVuZ3RoO2UuX2NhY2hlPW4uY29uY2F0KFtlLl9jYWNoZSxuLmFsbG9jVW5zYWZlKHIqcyldKTtmb3IodmFyIG89MDtvPHI7bysrKXt2YXIgaD1nZXRCbG9jayhlKTt2YXIgdT1hK28qcztlLl9jYWNoZS53cml0ZVVJbnQzMkJFKGhbMF0sdSswKTtlLl9jYWNoZS53cml0ZVVJbnQzMkJFKGhbMV0sdSs0KTtlLl9jYWNoZS53cml0ZVVJbnQzMkJFKGhbMl0sdSs4KTtlLl9jYWNoZS53cml0ZVVJbnQzMkJFKGhbM10sdSsxMil9dmFyIGQ9ZS5fY2FjaGUuc2xpY2UoMCx0Lmxlbmd0aCk7ZS5fY2FjaGU9ZS5fY2FjaGUuc2xpY2UodC5sZW5ndGgpO3JldHVybiBpKHQsZCl9fSwxNTkwOmZ1bmN0aW9uKGUsdCl7dC5lbmNyeXB0PWZ1bmN0aW9uKGUsdCl7cmV0dXJuIGUuX2NpcGhlci5lbmNyeXB0QmxvY2sodCl9O3QuZGVjcnlwdD1mdW5jdGlvbihlLHQpe3JldHVybiBlLl9jaXBoZXIuZGVjcnlwdEJsb2NrKHQpfX0sNjM3MDpmdW5jdGlvbihlLHQscil7dmFyIGk9e0VDQjpyKDE1OTApLENCQzpyKDk4MjUpLENGQjpyKDMyMSksQ0ZCODpyKDI0MzApLENGQjE6cigzMTQ3KSxPRkI6cigzNDEyKSxDVFI6cigzMzYxKSxHQ006cigzMzYxKX07dmFyIG49cig1ODY2KTtmb3IodmFyIGEgaW4gbil7blthXS5tb2R1bGU9aVtuW2FdLm1vZGVdfWUuZXhwb3J0cz1ufSwzNDEyOmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDQ3MzQpO2Z1bmN0aW9uIGdldEJsb2NrKGUpe2UuX3ByZXY9ZS5fY2lwaGVyLmVuY3J5cHRCbG9jayhlLl9wcmV2KTtyZXR1cm4gZS5fcHJldn10LmVuY3J5cHQ9ZnVuY3Rpb24oZSx0KXt3aGlsZShlLl9jYWNoZS5sZW5ndGg8dC5sZW5ndGgpe2UuX2NhY2hlPUJ1ZmZlci5jb25jYXQoW2UuX2NhY2hlLGdldEJsb2NrKGUpXSl9dmFyIHI9ZS5fY2FjaGUuc2xpY2UoMCx0Lmxlbmd0aCk7ZS5fY2FjaGU9ZS5fY2FjaGUuc2xpY2UodC5sZW5ndGgpO3JldHVybiBpKHQscil9fSwxMjY6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoMTM4Nyk7dmFyIG49cig2OTExKS5CdWZmZXI7dmFyIGE9cigxMDQzKTt2YXIgcz1yKDM3ODIpO2Z1bmN0aW9uIFN0cmVhbUNpcGhlcihlLHQscixzKXthLmNhbGwodGhpcyk7dGhpcy5fY2lwaGVyPW5ldyBpLkFFUyh0KTt0aGlzLl9wcmV2PW4uZnJvbShyKTt0aGlzLl9jYWNoZT1uLmFsbG9jVW5zYWZlKDApO3RoaXMuX3NlY0NhY2hlPW4uYWxsb2NVbnNhZmUoMCk7dGhpcy5fZGVjcnlwdD1zO3RoaXMuX21vZGU9ZX1zKFN0cmVhbUNpcGhlcixhKTtTdHJlYW1DaXBoZXIucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHRoaXMuX21vZGUuZW5jcnlwdCh0aGlzLGUsdGhpcy5fZGVjcnlwdCl9O1N0cmVhbUNpcGhlci5wcm90b3R5cGUuX2ZpbmFsPWZ1bmN0aW9uKCl7dGhpcy5fY2lwaGVyLnNjcnViKCl9O2UuZXhwb3J0cz1TdHJlYW1DaXBoZXJ9LDg5OTY6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoNTIzOCk7dmFyIG49cig2NTk0KTt2YXIgYT1yKDYzNzApO3ZhciBzPXIoNjI4MCk7dmFyIG89cig4MzY4KTtmdW5jdGlvbiBjcmVhdGVDaXBoZXIoZSx0KXtlPWUudG9Mb3dlckNhc2UoKTt2YXIgcixpO2lmKGFbZV0pe3I9YVtlXS5rZXk7aT1hW2VdLml2fWVsc2UgaWYoc1tlXSl7cj1zW2VdLmtleSo4O2k9c1tlXS5pdn1lbHNle3Rocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIHN1aXRlIHR5cGVcIil9dmFyIG49byh0LGZhbHNlLHIsaSk7cmV0dXJuIGNyZWF0ZUNpcGhlcml2KGUsbi5rZXksbi5pdil9ZnVuY3Rpb24gY3JlYXRlRGVjaXBoZXIoZSx0KXtlPWUudG9Mb3dlckNhc2UoKTt2YXIgcixpO2lmKGFbZV0pe3I9YVtlXS5rZXk7aT1hW2VdLml2fWVsc2UgaWYoc1tlXSl7cj1zW2VdLmtleSo4O2k9c1tlXS5pdn1lbHNle3Rocm93IG5ldyBUeXBlRXJyb3IoXCJpbnZhbGlkIHN1aXRlIHR5cGVcIil9dmFyIG49byh0LGZhbHNlLHIsaSk7cmV0dXJuIGNyZWF0ZURlY2lwaGVyaXYoZSxuLmtleSxuLml2KX1mdW5jdGlvbiBjcmVhdGVDaXBoZXJpdihlLHQscil7ZT1lLnRvTG93ZXJDYXNlKCk7aWYoYVtlXSlyZXR1cm4gbi5jcmVhdGVDaXBoZXJpdihlLHQscik7aWYoc1tlXSlyZXR1cm4gbmV3IGkoe2tleTp0LGl2OnIsbW9kZTplfSk7dGhyb3cgbmV3IFR5cGVFcnJvcihcImludmFsaWQgc3VpdGUgdHlwZVwiKX1mdW5jdGlvbiBjcmVhdGVEZWNpcGhlcml2KGUsdCxyKXtlPWUudG9Mb3dlckNhc2UoKTtpZihhW2VdKXJldHVybiBuLmNyZWF0ZURlY2lwaGVyaXYoZSx0LHIpO2lmKHNbZV0pcmV0dXJuIG5ldyBpKHtrZXk6dCxpdjpyLG1vZGU6ZSxkZWNyeXB0OnRydWV9KTt0aHJvdyBuZXcgVHlwZUVycm9yKFwiaW52YWxpZCBzdWl0ZSB0eXBlXCIpfWZ1bmN0aW9uIGdldENpcGhlcnMoKXtyZXR1cm4gT2JqZWN0LmtleXMocykuY29uY2F0KG4uZ2V0Q2lwaGVycygpKX10LmNyZWF0ZUNpcGhlcj10LkNpcGhlcj1jcmVhdGVDaXBoZXI7dC5jcmVhdGVDaXBoZXJpdj10LkNpcGhlcml2PWNyZWF0ZUNpcGhlcml2O3QuY3JlYXRlRGVjaXBoZXI9dC5EZWNpcGhlcj1jcmVhdGVEZWNpcGhlcjt0LmNyZWF0ZURlY2lwaGVyaXY9dC5EZWNpcGhlcml2PWNyZWF0ZURlY2lwaGVyaXY7dC5saXN0Q2lwaGVycz10LmdldENpcGhlcnM9Z2V0Q2lwaGVyc30sNTIzODpmdW5jdGlvbihlLHQscil7dmFyIGk9cigxMDQzKTt2YXIgbj1yKDk1MzYpO3ZhciBhPXIoMzc4Mik7dmFyIHM9cig2OTExKS5CdWZmZXI7dmFyIG89e1wiZGVzLWVkZTMtY2JjXCI6bi5DQkMuaW5zdGFudGlhdGUobi5FREUpLFwiZGVzLWVkZTNcIjpuLkVERSxcImRlcy1lZGUtY2JjXCI6bi5DQkMuaW5zdGFudGlhdGUobi5FREUpLFwiZGVzLWVkZVwiOm4uRURFLFwiZGVzLWNiY1wiOm4uQ0JDLmluc3RhbnRpYXRlKG4uREVTKSxcImRlcy1lY2JcIjpuLkRFU307by5kZXM9b1tcImRlcy1jYmNcIl07by5kZXMzPW9bXCJkZXMtZWRlMy1jYmNcIl07ZS5leHBvcnRzPURFUzthKERFUyxpKTtmdW5jdGlvbiBERVMoZSl7aS5jYWxsKHRoaXMpO3ZhciB0PWUubW9kZS50b0xvd2VyQ2FzZSgpO3ZhciByPW9bdF07dmFyIG47aWYoZS5kZWNyeXB0KXtuPVwiZGVjcnlwdFwifWVsc2V7bj1cImVuY3J5cHRcIn12YXIgYT1lLmtleTtpZighcy5pc0J1ZmZlcihhKSl7YT1zLmZyb20oYSl9aWYodD09PVwiZGVzLWVkZVwifHx0PT09XCJkZXMtZWRlLWNiY1wiKXthPXMuY29uY2F0KFthLGEuc2xpY2UoMCw4KV0pfXZhciBoPWUuaXY7aWYoIXMuaXNCdWZmZXIoaCkpe2g9cy5mcm9tKGgpfXRoaXMuX2Rlcz1yLmNyZWF0ZSh7a2V5OmEsaXY6aCx0eXBlOm59KX1ERVMucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHMuZnJvbSh0aGlzLl9kZXMudXBkYXRlKGUpKX07REVTLnByb3RvdHlwZS5fZmluYWw9ZnVuY3Rpb24oKXtyZXR1cm4gcy5mcm9tKHRoaXMuX2Rlcy5maW5hbCgpKX19LDYyODA6ZnVuY3Rpb24oZSx0KXt0W1wiZGVzLWVjYlwiXT17a2V5OjgsaXY6MH07dFtcImRlcy1jYmNcIl09dC5kZXM9e2tleTo4LGl2Ojh9O3RbXCJkZXMtZWRlMy1jYmNcIl09dC5kZXMzPXtrZXk6MjQsaXY6OH07dFtcImRlcy1lZGUzXCJdPXtrZXk6MjQsaXY6MH07dFtcImRlcy1lZGUtY2JjXCJdPXtrZXk6MTYsaXY6OH07dFtcImRlcy1lZGVcIl09e2tleToxNixpdjowfX0sNzE2NjpmdW5jdGlvbihlLHQscil7dmFyIGk9cig3MTEpO3ZhciBuPXIoNzIyMyk7ZS5leHBvcnRzPWNydDtmdW5jdGlvbiBibGluZChlKXt2YXIgdD1nZXRyKGUpO3ZhciByPXQudG9SZWQoaS5tb250KGUubW9kdWx1cykpLnJlZFBvdyhuZXcgaShlLnB1YmxpY0V4cG9uZW50KSkuZnJvbVJlZCgpO3JldHVybntibGluZGVyOnIsdW5ibGluZGVyOnQuaW52bShlLm1vZHVsdXMpfX1mdW5jdGlvbiBjcnQoZSx0KXt2YXIgcj1ibGluZCh0KTt2YXIgbj10Lm1vZHVsdXMuYnl0ZUxlbmd0aCgpO3ZhciBhPWkubW9udCh0Lm1vZHVsdXMpO3ZhciBzPW5ldyBpKGUpLm11bChyLmJsaW5kZXIpLnVtb2QodC5tb2R1bHVzKTt2YXIgbz1zLnRvUmVkKGkubW9udCh0LnByaW1lMSkpO3ZhciBoPXMudG9SZWQoaS5tb250KHQucHJpbWUyKSk7dmFyIHU9dC5jb2VmZmljaWVudDt2YXIgZD10LnByaW1lMTt2YXIgYz10LnByaW1lMjt2YXIgbD1vLnJlZFBvdyh0LmV4cG9uZW50MSk7dmFyIHA9aC5yZWRQb3codC5leHBvbmVudDIpO2w9bC5mcm9tUmVkKCk7cD1wLmZyb21SZWQoKTt2YXIgdj1sLmlzdWIocCkuaW11bCh1KS51bW9kKGQpO3YuaW11bChjKTtwLmlhZGQodik7cmV0dXJuIG5ldyBCdWZmZXIocC5pbXVsKHIudW5ibGluZGVyKS51bW9kKHQubW9kdWx1cykudG9BcnJheShmYWxzZSxuKSl9Y3J0LmdldHI9Z2V0cjtmdW5jdGlvbiBnZXRyKGUpe3ZhciB0PWUubW9kdWx1cy5ieXRlTGVuZ3RoKCk7dmFyIHI9bmV3IGkobih0KSk7d2hpbGUoci5jbXAoZS5tb2R1bHVzKT49MHx8IXIudW1vZChlLnByaW1lMSl8fCFyLnVtb2QoZS5wcmltZTIpKXtyPW5ldyBpKG4odCkpfXJldHVybiByfX0sOTI3NjpmdW5jdGlvbihlLHQscil7ZS5leHBvcnRzPXIoMjkwOCl9LDQwNzg6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoNjkxMSkuQnVmZmVyO3ZhciBuPXIoOTczOSk7dmFyIGE9cigzNzI2KTt2YXIgcz1yKDM3ODIpO3ZhciBvPXIoOTgwNyk7dmFyIGg9cig0MDEzKTt2YXIgdT1yKDI5MDgpO09iamVjdC5rZXlzKHUpLmZvckVhY2goKGZ1bmN0aW9uKGUpe3VbZV0uaWQ9aS5mcm9tKHVbZV0uaWQsXCJoZXhcIik7dVtlLnRvTG93ZXJDYXNlKCldPXVbZV19KSk7ZnVuY3Rpb24gU2lnbihlKXthLldyaXRhYmxlLmNhbGwodGhpcyk7dmFyIHQ9dVtlXTtpZighdCl0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIG1lc3NhZ2UgZGlnZXN0XCIpO3RoaXMuX2hhc2hUeXBlPXQuaGFzaDt0aGlzLl9oYXNoPW4odC5oYXNoKTt0aGlzLl90YWc9dC5pZDt0aGlzLl9zaWduVHlwZT10LnNpZ259cyhTaWduLGEuV3JpdGFibGUpO1NpZ24ucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbiBfd3JpdGUoZSx0LHIpe3RoaXMuX2hhc2gudXBkYXRlKGUpO3IoKX07U2lnbi5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uIHVwZGF0ZShlLHQpe2lmKHR5cGVvZiBlPT09XCJzdHJpbmdcIillPWkuZnJvbShlLHQpO3RoaXMuX2hhc2gudXBkYXRlKGUpO3JldHVybiB0aGlzfTtTaWduLnByb3RvdHlwZS5zaWduPWZ1bmN0aW9uIHNpZ25NZXRob2QoZSx0KXt0aGlzLmVuZCgpO3ZhciByPXRoaXMuX2hhc2guZGlnZXN0KCk7dmFyIGk9byhyLGUsdGhpcy5faGFzaFR5cGUsdGhpcy5fc2lnblR5cGUsdGhpcy5fdGFnKTtyZXR1cm4gdD9pLnRvU3RyaW5nKHQpOml9O2Z1bmN0aW9uIFZlcmlmeShlKXthLldyaXRhYmxlLmNhbGwodGhpcyk7dmFyIHQ9dVtlXTtpZighdCl0aHJvdyBuZXcgRXJyb3IoXCJVbmtub3duIG1lc3NhZ2UgZGlnZXN0XCIpO3RoaXMuX2hhc2g9bih0Lmhhc2gpO3RoaXMuX3RhZz10LmlkO3RoaXMuX3NpZ25UeXBlPXQuc2lnbn1zKFZlcmlmeSxhLldyaXRhYmxlKTtWZXJpZnkucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbiBfd3JpdGUoZSx0LHIpe3RoaXMuX2hhc2gudXBkYXRlKGUpO3IoKX07VmVyaWZ5LnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24gdXBkYXRlKGUsdCl7aWYodHlwZW9mIGU9PT1cInN0cmluZ1wiKWU9aS5mcm9tKGUsdCk7dGhpcy5faGFzaC51cGRhdGUoZSk7cmV0dXJuIHRoaXN9O1ZlcmlmeS5wcm90b3R5cGUudmVyaWZ5PWZ1bmN0aW9uIHZlcmlmeU1ldGhvZChlLHQscil7aWYodHlwZW9mIHQ9PT1cInN0cmluZ1wiKXQ9aS5mcm9tKHQscik7dGhpcy5lbmQoKTt2YXIgbj10aGlzLl9oYXNoLmRpZ2VzdCgpO3JldHVybiBoKHQsbixlLHRoaXMuX3NpZ25UeXBlLHRoaXMuX3RhZyl9O2Z1bmN0aW9uIGNyZWF0ZVNpZ24oZSl7cmV0dXJuIG5ldyBTaWduKGUpfWZ1bmN0aW9uIGNyZWF0ZVZlcmlmeShlKXtyZXR1cm4gbmV3IFZlcmlmeShlKX1lLmV4cG9ydHM9e1NpZ246Y3JlYXRlU2lnbixWZXJpZnk6Y3JlYXRlVmVyaWZ5LGNyZWF0ZVNpZ246Y3JlYXRlU2lnbixjcmVhdGVWZXJpZnk6Y3JlYXRlVmVyaWZ5fX0sOTgwNzpmdW5jdGlvbihlLHQscil7dmFyIGk9cig2OTExKS5CdWZmZXI7dmFyIG49cig0ODczKTt2YXIgYT1yKDcxNjYpO3ZhciBzPXIoOTQ5KS5lYzt2YXIgbz1yKDE2NzApO3ZhciBoPXIoOTkwMik7dmFyIHU9cig5MjY3KTtmdW5jdGlvbiBzaWduKGUsdCxyLG4scyl7dmFyIG89aCh0KTtpZihvLmN1cnZlKXtpZihuIT09XCJlY2RzYVwiJiZuIT09XCJlY2RzYS9yc2FcIil0aHJvdyBuZXcgRXJyb3IoXCJ3cm9uZyBwcml2YXRlIGtleSB0eXBlXCIpO3JldHVybiBlY1NpZ24oZSxvKX1lbHNlIGlmKG8udHlwZT09PVwiZHNhXCIpe2lmKG4hPT1cImRzYVwiKXRocm93IG5ldyBFcnJvcihcIndyb25nIHByaXZhdGUga2V5IHR5cGVcIik7cmV0dXJuIGRzYVNpZ24oZSxvLHIpfWVsc2V7aWYobiE9PVwicnNhXCImJm4hPT1cImVjZHNhL3JzYVwiKXRocm93IG5ldyBFcnJvcihcIndyb25nIHByaXZhdGUga2V5IHR5cGVcIil9ZT1pLmNvbmNhdChbcyxlXSk7dmFyIHU9by5tb2R1bHVzLmJ5dGVMZW5ndGgoKTt2YXIgZD1bMCwxXTt3aGlsZShlLmxlbmd0aCtkLmxlbmd0aCsxPHUpZC5wdXNoKDI1NSk7ZC5wdXNoKDApO3ZhciBjPS0xO3doaWxlKCsrYzxlLmxlbmd0aClkLnB1c2goZVtjXSk7dmFyIGw9YShkLG8pO3JldHVybiBsfWZ1bmN0aW9uIGVjU2lnbihlLHQpe3ZhciByPXVbdC5jdXJ2ZS5qb2luKFwiLlwiKV07aWYoIXIpdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biBjdXJ2ZSBcIit0LmN1cnZlLmpvaW4oXCIuXCIpKTt2YXIgbj1uZXcgcyhyKTt2YXIgYT1uLmtleUZyb21Qcml2YXRlKHQucHJpdmF0ZUtleSk7dmFyIG89YS5zaWduKGUpO3JldHVybiBpLmZyb20oby50b0RFUigpKX1mdW5jdGlvbiBkc2FTaWduKGUsdCxyKXt2YXIgaT10LnBhcmFtcy5wcml2X2tleTt2YXIgbj10LnBhcmFtcy5wO3ZhciBhPXQucGFyYW1zLnE7dmFyIHM9dC5wYXJhbXMuZzt2YXIgaD1uZXcgbygwKTt2YXIgdTt2YXIgZD1iaXRzMmludChlLGEpLm1vZChhKTt2YXIgYz1mYWxzZTt2YXIgbD1nZXRLZXkoaSxhLGUscik7d2hpbGUoYz09PWZhbHNlKXt1PW1ha2VLZXkoYSxsLHIpO2g9bWFrZVIocyx1LG4sYSk7Yz11Lmludm0oYSkuaW11bChkLmFkZChpLm11bChoKSkpLm1vZChhKTtpZihjLmNtcG4oMCk9PT0wKXtjPWZhbHNlO2g9bmV3IG8oMCl9fXJldHVybiB0b0RFUihoLGMpfWZ1bmN0aW9uIHRvREVSKGUsdCl7ZT1lLnRvQXJyYXkoKTt0PXQudG9BcnJheSgpO2lmKGVbMF0mMTI4KWU9WzBdLmNvbmNhdChlKTtpZih0WzBdJjEyOCl0PVswXS5jb25jYXQodCk7dmFyIHI9ZS5sZW5ndGgrdC5sZW5ndGgrNDt2YXIgbj1bNDgsciwyLGUubGVuZ3RoXTtuPW4uY29uY2F0KGUsWzIsdC5sZW5ndGhdLHQpO3JldHVybiBpLmZyb20obil9ZnVuY3Rpb24gZ2V0S2V5KGUsdCxyLGEpe2U9aS5mcm9tKGUudG9BcnJheSgpKTtpZihlLmxlbmd0aDx0LmJ5dGVMZW5ndGgoKSl7dmFyIHM9aS5hbGxvYyh0LmJ5dGVMZW5ndGgoKS1lLmxlbmd0aCk7ZT1pLmNvbmNhdChbcyxlXSl9dmFyIG89ci5sZW5ndGg7dmFyIGg9Yml0czJvY3RldHMocix0KTt2YXIgdT1pLmFsbG9jKG8pO3UuZmlsbCgxKTt2YXIgZD1pLmFsbG9jKG8pO2Q9bihhLGQpLnVwZGF0ZSh1KS51cGRhdGUoaS5mcm9tKFswXSkpLnVwZGF0ZShlKS51cGRhdGUoaCkuZGlnZXN0KCk7dT1uKGEsZCkudXBkYXRlKHUpLmRpZ2VzdCgpO2Q9bihhLGQpLnVwZGF0ZSh1KS51cGRhdGUoaS5mcm9tKFsxXSkpLnVwZGF0ZShlKS51cGRhdGUoaCkuZGlnZXN0KCk7dT1uKGEsZCkudXBkYXRlKHUpLmRpZ2VzdCgpO3JldHVybntrOmQsdjp1fX1mdW5jdGlvbiBiaXRzMmludChlLHQpe3ZhciByPW5ldyBvKGUpO3ZhciBpPShlLmxlbmd0aDw8MyktdC5iaXRMZW5ndGgoKTtpZihpPjApci5pc2hybihpKTtyZXR1cm4gcn1mdW5jdGlvbiBiaXRzMm9jdGV0cyhlLHQpe2U9Yml0czJpbnQoZSx0KTtlPWUubW9kKHQpO3ZhciByPWkuZnJvbShlLnRvQXJyYXkoKSk7aWYoci5sZW5ndGg8dC5ieXRlTGVuZ3RoKCkpe3ZhciBuPWkuYWxsb2ModC5ieXRlTGVuZ3RoKCktci5sZW5ndGgpO3I9aS5jb25jYXQoW24scl0pfXJldHVybiByfWZ1bmN0aW9uIG1ha2VLZXkoZSx0LHIpe3ZhciBhO3ZhciBzO2Rve2E9aS5hbGxvYygwKTt3aGlsZShhLmxlbmd0aCo4PGUuYml0TGVuZ3RoKCkpe3Qudj1uKHIsdC5rKS51cGRhdGUodC52KS5kaWdlc3QoKTthPWkuY29uY2F0KFthLHQudl0pfXM9Yml0czJpbnQoYSxlKTt0Lms9bihyLHQuaykudXBkYXRlKHQudikudXBkYXRlKGkuZnJvbShbMF0pKS5kaWdlc3QoKTt0LnY9bihyLHQuaykudXBkYXRlKHQudikuZGlnZXN0KCl9d2hpbGUocy5jbXAoZSkhPT0tMSk7cmV0dXJuIHN9ZnVuY3Rpb24gbWFrZVIoZSx0LHIsaSl7cmV0dXJuIGUudG9SZWQoby5tb250KHIpKS5yZWRQb3codCkuZnJvbVJlZCgpLm1vZChpKX1lLmV4cG9ydHM9c2lnbjtlLmV4cG9ydHMuZ2V0S2V5PWdldEtleTtlLmV4cG9ydHMubWFrZUtleT1tYWtlS2V5fSw0MDEzOmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDY5MTEpLkJ1ZmZlcjt2YXIgbj1yKDE2NzApO3ZhciBhPXIoOTQ5KS5lYzt2YXIgcz1yKDk5MDIpO3ZhciBvPXIoOTI2Nyk7ZnVuY3Rpb24gdmVyaWZ5KGUsdCxyLGEsbyl7dmFyIGg9cyhyKTtpZihoLnR5cGU9PT1cImVjXCIpe2lmKGEhPT1cImVjZHNhXCImJmEhPT1cImVjZHNhL3JzYVwiKXRocm93IG5ldyBFcnJvcihcIndyb25nIHB1YmxpYyBrZXkgdHlwZVwiKTtyZXR1cm4gZWNWZXJpZnkoZSx0LGgpfWVsc2UgaWYoaC50eXBlPT09XCJkc2FcIil7aWYoYSE9PVwiZHNhXCIpdGhyb3cgbmV3IEVycm9yKFwid3JvbmcgcHVibGljIGtleSB0eXBlXCIpO3JldHVybiBkc2FWZXJpZnkoZSx0LGgpfWVsc2V7aWYoYSE9PVwicnNhXCImJmEhPT1cImVjZHNhL3JzYVwiKXRocm93IG5ldyBFcnJvcihcIndyb25nIHB1YmxpYyBrZXkgdHlwZVwiKX10PWkuY29uY2F0KFtvLHRdKTt2YXIgdT1oLm1vZHVsdXMuYnl0ZUxlbmd0aCgpO3ZhciBkPVsxXTt2YXIgYz0wO3doaWxlKHQubGVuZ3RoK2QubGVuZ3RoKzI8dSl7ZC5wdXNoKDI1NSk7YysrfWQucHVzaCgwKTt2YXIgbD0tMTt3aGlsZSgrK2w8dC5sZW5ndGgpe2QucHVzaCh0W2xdKX1kPWkuZnJvbShkKTt2YXIgcD1uLm1vbnQoaC5tb2R1bHVzKTtlPW5ldyBuKGUpLnRvUmVkKHApO2U9ZS5yZWRQb3cobmV3IG4oaC5wdWJsaWNFeHBvbmVudCkpO2U9aS5mcm9tKGUuZnJvbVJlZCgpLnRvQXJyYXkoKSk7dmFyIHY9Yzw4PzE6MDt1PU1hdGgubWluKGUubGVuZ3RoLGQubGVuZ3RoKTtpZihlLmxlbmd0aCE9PWQubGVuZ3RoKXY9MTtsPS0xO3doaWxlKCsrbDx1KXZ8PWVbbF1eZFtsXTtyZXR1cm4gdj09PTB9ZnVuY3Rpb24gZWNWZXJpZnkoZSx0LHIpe3ZhciBpPW9bci5kYXRhLmFsZ29yaXRobS5jdXJ2ZS5qb2luKFwiLlwiKV07aWYoIWkpdGhyb3cgbmV3IEVycm9yKFwidW5rbm93biBjdXJ2ZSBcIityLmRhdGEuYWxnb3JpdGhtLmN1cnZlLmpvaW4oXCIuXCIpKTt2YXIgbj1uZXcgYShpKTt2YXIgcz1yLmRhdGEuc3ViamVjdFByaXZhdGVLZXkuZGF0YTtyZXR1cm4gbi52ZXJpZnkodCxlLHMpfWZ1bmN0aW9uIGRzYVZlcmlmeShlLHQscil7dmFyIGk9ci5kYXRhLnA7dmFyIGE9ci5kYXRhLnE7dmFyIG89ci5kYXRhLmc7dmFyIGg9ci5kYXRhLnB1Yl9rZXk7dmFyIHU9cy5zaWduYXR1cmUuZGVjb2RlKGUsXCJkZXJcIik7dmFyIGQ9dS5zO3ZhciBjPXUucjtjaGVja1ZhbHVlKGQsYSk7Y2hlY2tWYWx1ZShjLGEpO3ZhciBsPW4ubW9udChpKTt2YXIgcD1kLmludm0oYSk7dmFyIHY9by50b1JlZChsKS5yZWRQb3cobmV3IG4odCkubXVsKHApLm1vZChhKSkuZnJvbVJlZCgpLm11bChoLnRvUmVkKGwpLnJlZFBvdyhjLm11bChwKS5tb2QoYSkpLmZyb21SZWQoKSkubW9kKGkpLm1vZChhKTtyZXR1cm4gdi5jbXAoYyk9PT0wfWZ1bmN0aW9uIGNoZWNrVmFsdWUoZSx0KXtpZihlLmNtcG4oMCk8PTApdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaWdcIik7aWYoZS5jbXAodCk+PXQpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBzaWdcIil9ZS5leHBvcnRzPXZlcmlmeX0sNDczNDpmdW5jdGlvbihlKXtlLmV4cG9ydHM9ZnVuY3Rpb24geG9yKGUsdCl7dmFyIHI9TWF0aC5taW4oZS5sZW5ndGgsdC5sZW5ndGgpO3ZhciBpPW5ldyBCdWZmZXIocik7Zm9yKHZhciBuPTA7bjxyOysrbil7aVtuXT1lW25dXnRbbl19cmV0dXJuIGl9fSwxMDQzOmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDY5MTEpLkJ1ZmZlcjt2YXIgbj1yKDI3ODEpLlRyYW5zZm9ybTt2YXIgYT1yKDE1NzYpLlN0cmluZ0RlY29kZXI7dmFyIHM9cigzNzgyKTtmdW5jdGlvbiBDaXBoZXJCYXNlKGUpe24uY2FsbCh0aGlzKTt0aGlzLmhhc2hNb2RlPXR5cGVvZiBlPT09XCJzdHJpbmdcIjtpZih0aGlzLmhhc2hNb2RlKXt0aGlzW2VdPXRoaXMuX2ZpbmFsT3JEaWdlc3R9ZWxzZXt0aGlzLmZpbmFsPXRoaXMuX2ZpbmFsT3JEaWdlc3R9aWYodGhpcy5fZmluYWwpe3RoaXMuX19maW5hbD10aGlzLl9maW5hbDt0aGlzLl9maW5hbD1udWxsfXRoaXMuX2RlY29kZXI9bnVsbDt0aGlzLl9lbmNvZGluZz1udWxsfXMoQ2lwaGVyQmFzZSxuKTtDaXBoZXJCYXNlLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSx0LHIpe2lmKHR5cGVvZiBlPT09XCJzdHJpbmdcIil7ZT1pLmZyb20oZSx0KX12YXIgbj10aGlzLl91cGRhdGUoZSk7aWYodGhpcy5oYXNoTW9kZSlyZXR1cm4gdGhpcztpZihyKXtuPXRoaXMuX3RvU3RyaW5nKG4scil9cmV0dXJuIG59O0NpcGhlckJhc2UucHJvdG90eXBlLnNldEF1dG9QYWRkaW5nPWZ1bmN0aW9uKCl7fTtDaXBoZXJCYXNlLnByb3RvdHlwZS5nZXRBdXRoVGFnPWZ1bmN0aW9uKCl7dGhyb3cgbmV3IEVycm9yKFwidHJ5aW5nIHRvIGdldCBhdXRoIHRhZyBpbiB1bnN1cHBvcnRlZCBzdGF0ZVwiKX07Q2lwaGVyQmFzZS5wcm90b3R5cGUuc2V0QXV0aFRhZz1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcInRyeWluZyB0byBzZXQgYXV0aCB0YWcgaW4gdW5zdXBwb3J0ZWQgc3RhdGVcIil9O0NpcGhlckJhc2UucHJvdG90eXBlLnNldEFBRD1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcInRyeWluZyB0byBzZXQgYWFkIGluIHVuc3VwcG9ydGVkIHN0YXRlXCIpfTtDaXBoZXJCYXNlLnByb3RvdHlwZS5fdHJhbnNmb3JtPWZ1bmN0aW9uKGUsdCxyKXt2YXIgaTt0cnl7aWYodGhpcy5oYXNoTW9kZSl7dGhpcy5fdXBkYXRlKGUpfWVsc2V7dGhpcy5wdXNoKHRoaXMuX3VwZGF0ZShlKSl9fWNhdGNoKGUpe2k9ZX1maW5hbGx5e3IoaSl9fTtDaXBoZXJCYXNlLnByb3RvdHlwZS5fZmx1c2g9ZnVuY3Rpb24oZSl7dmFyIHQ7dHJ5e3RoaXMucHVzaCh0aGlzLl9fZmluYWwoKSl9Y2F0Y2goZSl7dD1lfWUodCl9O0NpcGhlckJhc2UucHJvdG90eXBlLl9maW5hbE9yRGlnZXN0PWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX19maW5hbCgpfHxpLmFsbG9jKDApO2lmKGUpe3Q9dGhpcy5fdG9TdHJpbmcodCxlLHRydWUpfXJldHVybiB0fTtDaXBoZXJCYXNlLnByb3RvdHlwZS5fdG9TdHJpbmc9ZnVuY3Rpb24oZSx0LHIpe2lmKCF0aGlzLl9kZWNvZGVyKXt0aGlzLl9kZWNvZGVyPW5ldyBhKHQpO3RoaXMuX2VuY29kaW5nPXR9aWYodGhpcy5fZW5jb2RpbmchPT10KXRocm93IG5ldyBFcnJvcihcImNhbid0IHN3aXRjaCBlbmNvZGluZ3NcIik7dmFyIGk9dGhpcy5fZGVjb2Rlci53cml0ZShlKTtpZihyKXtpKz10aGlzLl9kZWNvZGVyLmVuZCgpfXJldHVybiBpfTtlLmV4cG9ydHM9Q2lwaGVyQmFzZX0sOTk0MjpmdW5jdGlvbihlLHQscil7dmFyIGk9cig5NDkpO3ZhciBuPXIoNzExKTtlLmV4cG9ydHM9ZnVuY3Rpb24gY3JlYXRlRUNESChlKXtyZXR1cm4gbmV3IEVDREgoZSl9O3ZhciBhPXtzZWNwMjU2azE6e25hbWU6XCJzZWNwMjU2azFcIixieXRlTGVuZ3RoOjMyfSxzZWNwMjI0cjE6e25hbWU6XCJwMjI0XCIsYnl0ZUxlbmd0aDoyOH0scHJpbWUyNTZ2MTp7bmFtZTpcInAyNTZcIixieXRlTGVuZ3RoOjMyfSxwcmltZTE5MnYxOntuYW1lOlwicDE5MlwiLGJ5dGVMZW5ndGg6MjR9LGVkMjU1MTk6e25hbWU6XCJlZDI1NTE5XCIsYnl0ZUxlbmd0aDozMn0sc2VjcDM4NHIxOntuYW1lOlwicDM4NFwiLGJ5dGVMZW5ndGg6NDh9LHNlY3A1MjFyMTp7bmFtZTpcInA1MjFcIixieXRlTGVuZ3RoOjY2fX07YS5wMjI0PWEuc2VjcDIyNHIxO2EucDI1Nj1hLnNlY3AyNTZyMT1hLnByaW1lMjU2djE7YS5wMTkyPWEuc2VjcDE5MnIxPWEucHJpbWUxOTJ2MTthLnAzODQ9YS5zZWNwMzg0cjE7YS5wNTIxPWEuc2VjcDUyMXIxO2Z1bmN0aW9uIEVDREgoZSl7dGhpcy5jdXJ2ZVR5cGU9YVtlXTtpZighdGhpcy5jdXJ2ZVR5cGUpe3RoaXMuY3VydmVUeXBlPXtuYW1lOmV9fXRoaXMuY3VydmU9bmV3IGkuZWModGhpcy5jdXJ2ZVR5cGUubmFtZSk7dGhpcy5rZXlzPXZvaWQgMH1FQ0RILnByb3RvdHlwZS5nZW5lcmF0ZUtleXM9ZnVuY3Rpb24oZSx0KXt0aGlzLmtleXM9dGhpcy5jdXJ2ZS5nZW5LZXlQYWlyKCk7cmV0dXJuIHRoaXMuZ2V0UHVibGljS2V5KGUsdCl9O0VDREgucHJvdG90eXBlLmNvbXB1dGVTZWNyZXQ9ZnVuY3Rpb24oZSx0LHIpe3Q9dHx8XCJ1dGY4XCI7aWYoIUJ1ZmZlci5pc0J1ZmZlcihlKSl7ZT1uZXcgQnVmZmVyKGUsdCl9dmFyIGk9dGhpcy5jdXJ2ZS5rZXlGcm9tUHVibGljKGUpLmdldFB1YmxpYygpO3ZhciBuPWkubXVsKHRoaXMua2V5cy5nZXRQcml2YXRlKCkpLmdldFgoKTtyZXR1cm4gZm9ybWF0UmV0dXJuVmFsdWUobixyLHRoaXMuY3VydmVUeXBlLmJ5dGVMZW5ndGgpfTtFQ0RILnByb3RvdHlwZS5nZXRQdWJsaWNLZXk9ZnVuY3Rpb24oZSx0KXt2YXIgcj10aGlzLmtleXMuZ2V0UHVibGljKHQ9PT1cImNvbXByZXNzZWRcIix0cnVlKTtpZih0PT09XCJoeWJyaWRcIil7aWYocltyLmxlbmd0aC0xXSUyKXtyWzBdPTd9ZWxzZXtyWzBdPTZ9fXJldHVybiBmb3JtYXRSZXR1cm5WYWx1ZShyLGUpfTtFQ0RILnByb3RvdHlwZS5nZXRQcml2YXRlS2V5PWZ1bmN0aW9uKGUpe3JldHVybiBmb3JtYXRSZXR1cm5WYWx1ZSh0aGlzLmtleXMuZ2V0UHJpdmF0ZSgpLGUpfTtFQ0RILnByb3RvdHlwZS5zZXRQdWJsaWNLZXk9ZnVuY3Rpb24oZSx0KXt0PXR8fFwidXRmOFwiO2lmKCFCdWZmZXIuaXNCdWZmZXIoZSkpe2U9bmV3IEJ1ZmZlcihlLHQpfXRoaXMua2V5cy5faW1wb3J0UHVibGljKGUpO3JldHVybiB0aGlzfTtFQ0RILnByb3RvdHlwZS5zZXRQcml2YXRlS2V5PWZ1bmN0aW9uKGUsdCl7dD10fHxcInV0ZjhcIjtpZighQnVmZmVyLmlzQnVmZmVyKGUpKXtlPW5ldyBCdWZmZXIoZSx0KX12YXIgcj1uZXcgbihlKTtyPXIudG9TdHJpbmcoMTYpO3RoaXMua2V5cz10aGlzLmN1cnZlLmdlbktleVBhaXIoKTt0aGlzLmtleXMuX2ltcG9ydFByaXZhdGUocik7cmV0dXJuIHRoaXN9O2Z1bmN0aW9uIGZvcm1hdFJldHVyblZhbHVlKGUsdCxyKXtpZighQXJyYXkuaXNBcnJheShlKSl7ZT1lLnRvQXJyYXkoKX12YXIgaT1uZXcgQnVmZmVyKGUpO2lmKHImJmkubGVuZ3RoPHIpe3ZhciBuPW5ldyBCdWZmZXIoci1pLmxlbmd0aCk7bi5maWxsKDApO2k9QnVmZmVyLmNvbmNhdChbbixpXSl9aWYoIXQpe3JldHVybiBpfWVsc2V7cmV0dXJuIGkudG9TdHJpbmcodCl9fX0sOTczOTpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9cigzNzgyKTt2YXIgbj1yKDM1MzMpO3ZhciBhPXIoMzIyNSk7dmFyIHM9cig0MzcxKTt2YXIgbz1yKDEwNDMpO2Z1bmN0aW9uIEhhc2goZSl7by5jYWxsKHRoaXMsXCJkaWdlc3RcIik7dGhpcy5faGFzaD1lfWkoSGFzaCxvKTtIYXNoLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKGUpe3RoaXMuX2hhc2gudXBkYXRlKGUpfTtIYXNoLnByb3RvdHlwZS5fZmluYWw9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faGFzaC5kaWdlc3QoKX07ZS5leHBvcnRzPWZ1bmN0aW9uIGNyZWF0ZUhhc2goZSl7ZT1lLnRvTG93ZXJDYXNlKCk7aWYoZT09PVwibWQ1XCIpcmV0dXJuIG5ldyBuO2lmKGU9PT1cInJtZDE2MFwifHxlPT09XCJyaXBlbWQxNjBcIilyZXR1cm4gbmV3IGE7cmV0dXJuIG5ldyBIYXNoKHMoZSkpfX0sNDUwOmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDM1MzMpO2UuZXhwb3J0cz1mdW5jdGlvbihlKXtyZXR1cm4obmV3IGkpLnVwZGF0ZShlKS5kaWdlc3QoKX19LDQ4NzM6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoMzc4Mik7dmFyIG49cig4MTE5KTt2YXIgYT1yKDEwNDMpO3ZhciBzPXIoNjkxMSkuQnVmZmVyO3ZhciBvPXIoNDUwKTt2YXIgaD1yKDMyMjUpO3ZhciB1PXIoNDM3MSk7dmFyIGQ9cy5hbGxvYygxMjgpO2Z1bmN0aW9uIEhtYWMoZSx0KXthLmNhbGwodGhpcyxcImRpZ2VzdFwiKTtpZih0eXBlb2YgdD09PVwic3RyaW5nXCIpe3Q9cy5mcm9tKHQpfXZhciByPWU9PT1cInNoYTUxMlwifHxlPT09XCJzaGEzODRcIj8xMjg6NjQ7dGhpcy5fYWxnPWU7dGhpcy5fa2V5PXQ7aWYodC5sZW5ndGg+cil7dmFyIGk9ZT09PVwicm1kMTYwXCI/bmV3IGg6dShlKTt0PWkudXBkYXRlKHQpLmRpZ2VzdCgpfWVsc2UgaWYodC5sZW5ndGg8cil7dD1zLmNvbmNhdChbdCxkXSxyKX12YXIgbj10aGlzLl9pcGFkPXMuYWxsb2NVbnNhZmUocik7dmFyIG89dGhpcy5fb3BhZD1zLmFsbG9jVW5zYWZlKHIpO2Zvcih2YXIgYz0wO2M8cjtjKyspe25bY109dFtjXV41NDtvW2NdPXRbY11eOTJ9dGhpcy5faGFzaD1lPT09XCJybWQxNjBcIj9uZXcgaDp1KGUpO3RoaXMuX2hhc2gudXBkYXRlKG4pfWkoSG1hYyxhKTtIbWFjLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKGUpe3RoaXMuX2hhc2gudXBkYXRlKGUpfTtIbWFjLnByb3RvdHlwZS5fZmluYWw9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9oYXNoLmRpZ2VzdCgpO3ZhciB0PXRoaXMuX2FsZz09PVwicm1kMTYwXCI/bmV3IGg6dSh0aGlzLl9hbGcpO3JldHVybiB0LnVwZGF0ZSh0aGlzLl9vcGFkKS51cGRhdGUoZSkuZGlnZXN0KCl9O2UuZXhwb3J0cz1mdW5jdGlvbiBjcmVhdGVIbWFjKGUsdCl7ZT1lLnRvTG93ZXJDYXNlKCk7aWYoZT09PVwicm1kMTYwXCJ8fGU9PT1cInJpcGVtZDE2MFwiKXtyZXR1cm4gbmV3IEhtYWMoXCJybWQxNjBcIix0KX1pZihlPT09XCJtZDVcIil7cmV0dXJuIG5ldyBuKG8sdCl9cmV0dXJuIG5ldyBIbWFjKGUsdCl9fSw4MTE5OmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDM3ODIpO3ZhciBuPXIoNjkxMSkuQnVmZmVyO3ZhciBhPXIoMTA0Myk7dmFyIHM9bi5hbGxvYygxMjgpO3ZhciBvPTY0O2Z1bmN0aW9uIEhtYWMoZSx0KXthLmNhbGwodGhpcyxcImRpZ2VzdFwiKTtpZih0eXBlb2YgdD09PVwic3RyaW5nXCIpe3Q9bi5mcm9tKHQpfXRoaXMuX2FsZz1lO3RoaXMuX2tleT10O2lmKHQubGVuZ3RoPm8pe3Q9ZSh0KX1lbHNlIGlmKHQubGVuZ3RoPG8pe3Q9bi5jb25jYXQoW3Qsc10sbyl9dmFyIHI9dGhpcy5faXBhZD1uLmFsbG9jVW5zYWZlKG8pO3ZhciBpPXRoaXMuX29wYWQ9bi5hbGxvY1Vuc2FmZShvKTtmb3IodmFyIGg9MDtoPG87aCsrKXtyW2hdPXRbaF1eNTQ7aVtoXT10W2hdXjkyfXRoaXMuX2hhc2g9W3JdfWkoSG1hYyxhKTtIbWFjLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKGUpe3RoaXMuX2hhc2gucHVzaChlKX07SG1hYy5wcm90b3R5cGUuX2ZpbmFsPWZ1bmN0aW9uKCl7dmFyIGU9dGhpcy5fYWxnKG4uY29uY2F0KHRoaXMuX2hhc2gpKTtyZXR1cm4gdGhpcy5fYWxnKG4uY29uY2F0KFt0aGlzLl9vcGFkLGVdKSl9O2UuZXhwb3J0cz1IbWFjfSw5NTM2OmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt0LnV0aWxzPXIoNTMzNCk7dC5DaXBoZXI9cig5ODc2KTt0LkRFUz1yKDEwMTYpO3QuQ0JDPXIoODY0MSk7dC5FREU9cig2MTU5KX0sODY0MTpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9cigzNTIzKTt2YXIgbj1yKDM3ODIpO3ZhciBhPXt9O2Z1bmN0aW9uIENCQ1N0YXRlKGUpe2kuZXF1YWwoZS5sZW5ndGgsOCxcIkludmFsaWQgSVYgbGVuZ3RoXCIpO3RoaXMuaXY9bmV3IEFycmF5KDgpO2Zvcih2YXIgdD0wO3Q8dGhpcy5pdi5sZW5ndGg7dCsrKXRoaXMuaXZbdF09ZVt0XX1mdW5jdGlvbiBpbnN0YW50aWF0ZShlKXtmdW5jdGlvbiBDQkModCl7ZS5jYWxsKHRoaXMsdCk7dGhpcy5fY2JjSW5pdCgpfW4oQ0JDLGUpO3ZhciB0PU9iamVjdC5rZXlzKGEpO2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKXt2YXIgaT10W3JdO0NCQy5wcm90b3R5cGVbaV09YVtpXX1DQkMuY3JlYXRlPWZ1bmN0aW9uIGNyZWF0ZShlKXtyZXR1cm4gbmV3IENCQyhlKX07cmV0dXJuIENCQ310Lmluc3RhbnRpYXRlPWluc3RhbnRpYXRlO2EuX2NiY0luaXQ9ZnVuY3Rpb24gX2NiY0luaXQoKXt2YXIgZT1uZXcgQ0JDU3RhdGUodGhpcy5vcHRpb25zLml2KTt0aGlzLl9jYmNTdGF0ZT1lfTthLl91cGRhdGU9ZnVuY3Rpb24gX3VwZGF0ZShlLHQscixpKXt2YXIgbj10aGlzLl9jYmNTdGF0ZTt2YXIgYT10aGlzLmNvbnN0cnVjdG9yLnN1cGVyXy5wcm90b3R5cGU7dmFyIHM9bi5pdjtpZih0aGlzLnR5cGU9PT1cImVuY3J5cHRcIil7Zm9yKHZhciBvPTA7bzx0aGlzLmJsb2NrU2l6ZTtvKyspc1tvXV49ZVt0K29dO2EuX3VwZGF0ZS5jYWxsKHRoaXMscywwLHIsaSk7Zm9yKHZhciBvPTA7bzx0aGlzLmJsb2NrU2l6ZTtvKyspc1tvXT1yW2krb119ZWxzZXthLl91cGRhdGUuY2FsbCh0aGlzLGUsdCxyLGkpO2Zvcih2YXIgbz0wO288dGhpcy5ibG9ja1NpemU7bysrKXJbaStvXV49c1tvXTtmb3IodmFyIG89MDtvPHRoaXMuYmxvY2tTaXplO28rKylzW29dPWVbdCtvXX19fSw5ODc2OmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDM1MjMpO2Z1bmN0aW9uIENpcGhlcihlKXt0aGlzLm9wdGlvbnM9ZTt0aGlzLnR5cGU9dGhpcy5vcHRpb25zLnR5cGU7dGhpcy5ibG9ja1NpemU9ODt0aGlzLl9pbml0KCk7dGhpcy5idWZmZXI9bmV3IEFycmF5KHRoaXMuYmxvY2tTaXplKTt0aGlzLmJ1ZmZlck9mZj0wfWUuZXhwb3J0cz1DaXBoZXI7Q2lwaGVyLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbiBfaW5pdCgpe307Q2lwaGVyLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24gdXBkYXRlKGUpe2lmKGUubGVuZ3RoPT09MClyZXR1cm5bXTtpZih0aGlzLnR5cGU9PT1cImRlY3J5cHRcIilyZXR1cm4gdGhpcy5fdXBkYXRlRGVjcnlwdChlKTtlbHNlIHJldHVybiB0aGlzLl91cGRhdGVFbmNyeXB0KGUpfTtDaXBoZXIucHJvdG90eXBlLl9idWZmZXI9ZnVuY3Rpb24gX2J1ZmZlcihlLHQpe3ZhciByPU1hdGgubWluKHRoaXMuYnVmZmVyLmxlbmd0aC10aGlzLmJ1ZmZlck9mZixlLmxlbmd0aC10KTtmb3IodmFyIGk9MDtpPHI7aSsrKXRoaXMuYnVmZmVyW3RoaXMuYnVmZmVyT2ZmK2ldPWVbdCtpXTt0aGlzLmJ1ZmZlck9mZis9cjtyZXR1cm4gcn07Q2lwaGVyLnByb3RvdHlwZS5fZmx1c2hCdWZmZXI9ZnVuY3Rpb24gX2ZsdXNoQnVmZmVyKGUsdCl7dGhpcy5fdXBkYXRlKHRoaXMuYnVmZmVyLDAsZSx0KTt0aGlzLmJ1ZmZlck9mZj0wO3JldHVybiB0aGlzLmJsb2NrU2l6ZX07Q2lwaGVyLnByb3RvdHlwZS5fdXBkYXRlRW5jcnlwdD1mdW5jdGlvbiBfdXBkYXRlRW5jcnlwdChlKXt2YXIgdD0wO3ZhciByPTA7dmFyIGk9KHRoaXMuYnVmZmVyT2ZmK2UubGVuZ3RoKS90aGlzLmJsb2NrU2l6ZXwwO3ZhciBuPW5ldyBBcnJheShpKnRoaXMuYmxvY2tTaXplKTtpZih0aGlzLmJ1ZmZlck9mZiE9PTApe3QrPXRoaXMuX2J1ZmZlcihlLHQpO2lmKHRoaXMuYnVmZmVyT2ZmPT09dGhpcy5idWZmZXIubGVuZ3RoKXIrPXRoaXMuX2ZsdXNoQnVmZmVyKG4scil9dmFyIGE9ZS5sZW5ndGgtKGUubGVuZ3RoLXQpJXRoaXMuYmxvY2tTaXplO2Zvcig7dDxhO3QrPXRoaXMuYmxvY2tTaXplKXt0aGlzLl91cGRhdGUoZSx0LG4scik7cis9dGhpcy5ibG9ja1NpemV9Zm9yKDt0PGUubGVuZ3RoO3QrKyx0aGlzLmJ1ZmZlck9mZisrKXRoaXMuYnVmZmVyW3RoaXMuYnVmZmVyT2ZmXT1lW3RdO3JldHVybiBufTtDaXBoZXIucHJvdG90eXBlLl91cGRhdGVEZWNyeXB0PWZ1bmN0aW9uIF91cGRhdGVEZWNyeXB0KGUpe3ZhciB0PTA7dmFyIHI9MDt2YXIgaT1NYXRoLmNlaWwoKHRoaXMuYnVmZmVyT2ZmK2UubGVuZ3RoKS90aGlzLmJsb2NrU2l6ZSktMTt2YXIgbj1uZXcgQXJyYXkoaSp0aGlzLmJsb2NrU2l6ZSk7Zm9yKDtpPjA7aS0tKXt0Kz10aGlzLl9idWZmZXIoZSx0KTtyKz10aGlzLl9mbHVzaEJ1ZmZlcihuLHIpfXQrPXRoaXMuX2J1ZmZlcihlLHQpO3JldHVybiBufTtDaXBoZXIucHJvdG90eXBlLmZpbmFsPWZ1bmN0aW9uIGZpbmFsKGUpe3ZhciB0O2lmKGUpdD10aGlzLnVwZGF0ZShlKTt2YXIgcjtpZih0aGlzLnR5cGU9PT1cImVuY3J5cHRcIilyPXRoaXMuX2ZpbmFsRW5jcnlwdCgpO2Vsc2Ugcj10aGlzLl9maW5hbERlY3J5cHQoKTtpZih0KXJldHVybiB0LmNvbmNhdChyKTtlbHNlIHJldHVybiByfTtDaXBoZXIucHJvdG90eXBlLl9wYWQ9ZnVuY3Rpb24gX3BhZChlLHQpe2lmKHQ9PT0wKXJldHVybiBmYWxzZTt3aGlsZSh0PGUubGVuZ3RoKWVbdCsrXT0wO3JldHVybiB0cnVlfTtDaXBoZXIucHJvdG90eXBlLl9maW5hbEVuY3J5cHQ9ZnVuY3Rpb24gX2ZpbmFsRW5jcnlwdCgpe2lmKCF0aGlzLl9wYWQodGhpcy5idWZmZXIsdGhpcy5idWZmZXJPZmYpKXJldHVybltdO3ZhciBlPW5ldyBBcnJheSh0aGlzLmJsb2NrU2l6ZSk7dGhpcy5fdXBkYXRlKHRoaXMuYnVmZmVyLDAsZSwwKTtyZXR1cm4gZX07Q2lwaGVyLnByb3RvdHlwZS5fdW5wYWQ9ZnVuY3Rpb24gX3VucGFkKGUpe3JldHVybiBlfTtDaXBoZXIucHJvdG90eXBlLl9maW5hbERlY3J5cHQ9ZnVuY3Rpb24gX2ZpbmFsRGVjcnlwdCgpe2kuZXF1YWwodGhpcy5idWZmZXJPZmYsdGhpcy5ibG9ja1NpemUsXCJOb3QgZW5vdWdoIGRhdGEgdG8gZGVjcnlwdFwiKTt2YXIgZT1uZXcgQXJyYXkodGhpcy5ibG9ja1NpemUpO3RoaXMuX2ZsdXNoQnVmZmVyKGUsMCk7cmV0dXJuIHRoaXMuX3VucGFkKGUpfX0sMTAxNjpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9cigzNTIzKTt2YXIgbj1yKDM3ODIpO3ZhciBhPXIoNTMzNCk7dmFyIHM9cig5ODc2KTtmdW5jdGlvbiBERVNTdGF0ZSgpe3RoaXMudG1wPW5ldyBBcnJheSgyKTt0aGlzLmtleXM9bnVsbH1mdW5jdGlvbiBERVMoZSl7cy5jYWxsKHRoaXMsZSk7dmFyIHQ9bmV3IERFU1N0YXRlO3RoaXMuX2Rlc1N0YXRlPXQ7dGhpcy5kZXJpdmVLZXlzKHQsZS5rZXkpfW4oREVTLHMpO2UuZXhwb3J0cz1ERVM7REVTLmNyZWF0ZT1mdW5jdGlvbiBjcmVhdGUoZSl7cmV0dXJuIG5ldyBERVMoZSl9O3ZhciBvPVsxLDEsMiwyLDIsMiwyLDIsMSwyLDIsMiwyLDIsMiwxXTtERVMucHJvdG90eXBlLmRlcml2ZUtleXM9ZnVuY3Rpb24gZGVyaXZlS2V5cyhlLHQpe2Uua2V5cz1uZXcgQXJyYXkoMTYqMik7aS5lcXVhbCh0Lmxlbmd0aCx0aGlzLmJsb2NrU2l6ZSxcIkludmFsaWQga2V5IGxlbmd0aFwiKTt2YXIgcj1hLnJlYWRVSW50MzJCRSh0LDApO3ZhciBuPWEucmVhZFVJbnQzMkJFKHQsNCk7YS5wYzEocixuLGUudG1wLDApO3I9ZS50bXBbMF07bj1lLnRtcFsxXTtmb3IodmFyIHM9MDtzPGUua2V5cy5sZW5ndGg7cys9Mil7dmFyIGg9b1tzPj4+MV07cj1hLnIyOHNobChyLGgpO249YS5yMjhzaGwobixoKTthLnBjMihyLG4sZS5rZXlzLHMpfX07REVTLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uIF91cGRhdGUoZSx0LHIsaSl7dmFyIG49dGhpcy5fZGVzU3RhdGU7dmFyIHM9YS5yZWFkVUludDMyQkUoZSx0KTt2YXIgbz1hLnJlYWRVSW50MzJCRShlLHQrNCk7YS5pcChzLG8sbi50bXAsMCk7cz1uLnRtcFswXTtvPW4udG1wWzFdO2lmKHRoaXMudHlwZT09PVwiZW5jcnlwdFwiKXRoaXMuX2VuY3J5cHQobixzLG8sbi50bXAsMCk7ZWxzZSB0aGlzLl9kZWNyeXB0KG4scyxvLG4udG1wLDApO3M9bi50bXBbMF07bz1uLnRtcFsxXTthLndyaXRlVUludDMyQkUocixzLGkpO2Eud3JpdGVVSW50MzJCRShyLG8saSs0KX07REVTLnByb3RvdHlwZS5fcGFkPWZ1bmN0aW9uIF9wYWQoZSx0KXt2YXIgcj1lLmxlbmd0aC10O2Zvcih2YXIgaT10O2k8ZS5sZW5ndGg7aSsrKWVbaV09cjtyZXR1cm4gdHJ1ZX07REVTLnByb3RvdHlwZS5fdW5wYWQ9ZnVuY3Rpb24gX3VucGFkKGUpe3ZhciB0PWVbZS5sZW5ndGgtMV07Zm9yKHZhciByPWUubGVuZ3RoLXQ7cjxlLmxlbmd0aDtyKyspaS5lcXVhbChlW3JdLHQpO3JldHVybiBlLnNsaWNlKDAsZS5sZW5ndGgtdCl9O0RFUy5wcm90b3R5cGUuX2VuY3J5cHQ9ZnVuY3Rpb24gX2VuY3J5cHQoZSx0LHIsaSxuKXt2YXIgcz10O3ZhciBvPXI7Zm9yKHZhciBoPTA7aDxlLmtleXMubGVuZ3RoO2grPTIpe3ZhciB1PWUua2V5c1toXTt2YXIgZD1lLmtleXNbaCsxXTthLmV4cGFuZChvLGUudG1wLDApO3VePWUudG1wWzBdO2RePWUudG1wWzFdO3ZhciBjPWEuc3Vic3RpdHV0ZSh1LGQpO3ZhciBsPWEucGVybXV0ZShjKTt2YXIgcD1vO289KHNebCk+Pj4wO3M9cH1hLnJpcChvLHMsaSxuKX07REVTLnByb3RvdHlwZS5fZGVjcnlwdD1mdW5jdGlvbiBfZGVjcnlwdChlLHQscixpLG4pe3ZhciBzPXI7dmFyIG89dDtmb3IodmFyIGg9ZS5rZXlzLmxlbmd0aC0yO2g+PTA7aC09Mil7dmFyIHU9ZS5rZXlzW2hdO3ZhciBkPWUua2V5c1toKzFdO2EuZXhwYW5kKHMsZS50bXAsMCk7dV49ZS50bXBbMF07ZF49ZS50bXBbMV07dmFyIGM9YS5zdWJzdGl0dXRlKHUsZCk7dmFyIGw9YS5wZXJtdXRlKGMpO3ZhciBwPXM7cz0ob15sKT4+PjA7bz1wfWEucmlwKHMsbyxpLG4pfX0sNjE1OTpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9cigzNTIzKTt2YXIgbj1yKDM3ODIpO3ZhciBhPXIoOTg3Nik7dmFyIHM9cigxMDE2KTtmdW5jdGlvbiBFREVTdGF0ZShlLHQpe2kuZXF1YWwodC5sZW5ndGgsMjQsXCJJbnZhbGlkIGtleSBsZW5ndGhcIik7dmFyIHI9dC5zbGljZSgwLDgpO3ZhciBuPXQuc2xpY2UoOCwxNik7dmFyIGE9dC5zbGljZSgxNiwyNCk7aWYoZT09PVwiZW5jcnlwdFwiKXt0aGlzLmNpcGhlcnM9W3MuY3JlYXRlKHt0eXBlOlwiZW5jcnlwdFwiLGtleTpyfSkscy5jcmVhdGUoe3R5cGU6XCJkZWNyeXB0XCIsa2V5Om59KSxzLmNyZWF0ZSh7dHlwZTpcImVuY3J5cHRcIixrZXk6YX0pXX1lbHNle3RoaXMuY2lwaGVycz1bcy5jcmVhdGUoe3R5cGU6XCJkZWNyeXB0XCIsa2V5OmF9KSxzLmNyZWF0ZSh7dHlwZTpcImVuY3J5cHRcIixrZXk6bn0pLHMuY3JlYXRlKHt0eXBlOlwiZGVjcnlwdFwiLGtleTpyfSldfX1mdW5jdGlvbiBFREUoZSl7YS5jYWxsKHRoaXMsZSk7dmFyIHQ9bmV3IEVERVN0YXRlKHRoaXMudHlwZSx0aGlzLm9wdGlvbnMua2V5KTt0aGlzLl9lZGVTdGF0ZT10fW4oRURFLGEpO2UuZXhwb3J0cz1FREU7RURFLmNyZWF0ZT1mdW5jdGlvbiBjcmVhdGUoZSl7cmV0dXJuIG5ldyBFREUoZSl9O0VERS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbiBfdXBkYXRlKGUsdCxyLGkpe3ZhciBuPXRoaXMuX2VkZVN0YXRlO24uY2lwaGVyc1swXS5fdXBkYXRlKGUsdCxyLGkpO24uY2lwaGVyc1sxXS5fdXBkYXRlKHIsaSxyLGkpO24uY2lwaGVyc1syXS5fdXBkYXRlKHIsaSxyLGkpfTtFREUucHJvdG90eXBlLl9wYWQ9cy5wcm90b3R5cGUuX3BhZDtFREUucHJvdG90eXBlLl91bnBhZD1zLnByb3RvdHlwZS5fdW5wYWR9LDUzMzQ6ZnVuY3Rpb24oZSx0KXtcInVzZSBzdHJpY3RcIjt0LnJlYWRVSW50MzJCRT1mdW5jdGlvbiByZWFkVUludDMyQkUoZSx0KXt2YXIgcj1lWzArdF08PDI0fGVbMSt0XTw8MTZ8ZVsyK3RdPDw4fGVbMyt0XTtyZXR1cm4gcj4+PjB9O3Qud3JpdGVVSW50MzJCRT1mdW5jdGlvbiB3cml0ZVVJbnQzMkJFKGUsdCxyKXtlWzArcl09dD4+PjI0O2VbMStyXT10Pj4+MTYmMjU1O2VbMityXT10Pj4+OCYyNTU7ZVszK3JdPXQmMjU1fTt0LmlwPWZ1bmN0aW9uIGlwKGUsdCxyLGkpe3ZhciBuPTA7dmFyIGE9MDtmb3IodmFyIHM9NjtzPj0wO3MtPTIpe2Zvcih2YXIgbz0wO288PTI0O28rPTgpe248PD0xO258PXQ+Pj5vK3MmMX1mb3IodmFyIG89MDtvPD0yNDtvKz04KXtuPDw9MTtufD1lPj4+bytzJjF9fWZvcih2YXIgcz02O3M+PTA7cy09Mil7Zm9yKHZhciBvPTE7bzw9MjU7bys9OCl7YTw8PTE7YXw9dD4+Pm8rcyYxfWZvcih2YXIgbz0xO288PTI1O28rPTgpe2E8PD0xO2F8PWU+Pj5vK3MmMX19cltpKzBdPW4+Pj4wO3JbaSsxXT1hPj4+MH07dC5yaXA9ZnVuY3Rpb24gcmlwKGUsdCxyLGkpe3ZhciBuPTA7dmFyIGE9MDtmb3IodmFyIHM9MDtzPDQ7cysrKXtmb3IodmFyIG89MjQ7bz49MDtvLT04KXtuPDw9MTtufD10Pj4+bytzJjE7bjw8PTE7bnw9ZT4+Pm8rcyYxfX1mb3IodmFyIHM9NDtzPDg7cysrKXtmb3IodmFyIG89MjQ7bz49MDtvLT04KXthPDw9MTthfD10Pj4+bytzJjE7YTw8PTE7YXw9ZT4+Pm8rcyYxfX1yW2krMF09bj4+PjA7cltpKzFdPWE+Pj4wfTt0LnBjMT1mdW5jdGlvbiBwYzEoZSx0LHIsaSl7dmFyIG49MDt2YXIgYT0wO2Zvcih2YXIgcz03O3M+PTU7cy0tKXtmb3IodmFyIG89MDtvPD0yNDtvKz04KXtuPDw9MTtufD10Pj5vK3MmMX1mb3IodmFyIG89MDtvPD0yNDtvKz04KXtuPDw9MTtufD1lPj5vK3MmMX19Zm9yKHZhciBvPTA7bzw9MjQ7bys9OCl7bjw8PTE7bnw9dD4+bytzJjF9Zm9yKHZhciBzPTE7czw9MztzKyspe2Zvcih2YXIgbz0wO288PTI0O28rPTgpe2E8PD0xO2F8PXQ+Pm8rcyYxfWZvcih2YXIgbz0wO288PTI0O28rPTgpe2E8PD0xO2F8PWU+Pm8rcyYxfX1mb3IodmFyIG89MDtvPD0yNDtvKz04KXthPDw9MTthfD1lPj5vK3MmMX1yW2krMF09bj4+PjA7cltpKzFdPWE+Pj4wfTt0LnIyOHNobD1mdW5jdGlvbiByMjhzaGwoZSx0KXtyZXR1cm4gZTw8dCYyNjg0MzU0NTV8ZT4+PjI4LXR9O3ZhciByPVsxNCwxMSwxNyw0LDI3LDIzLDI1LDAsMTMsMjIsNywxOCw1LDksMTYsMjQsMiwyMCwxMiwyMSwxLDgsMTUsMjYsMTUsNCwyNSwxOSw5LDEsMjYsMTYsNSwxMSwyMyw4LDEyLDcsMTcsMCwyMiwzLDEwLDE0LDYsMjAsMjcsMjRdO3QucGMyPWZ1bmN0aW9uIHBjMihlLHQsaSxuKXt2YXIgYT0wO3ZhciBzPTA7dmFyIG89ci5sZW5ndGg+Pj4xO2Zvcih2YXIgaD0wO2g8bztoKyspe2E8PD0xO2F8PWU+Pj5yW2hdJjF9Zm9yKHZhciBoPW87aDxyLmxlbmd0aDtoKyspe3M8PD0xO3N8PXQ+Pj5yW2hdJjF9aVtuKzBdPWE+Pj4wO2lbbisxXT1zPj4+MH07dC5leHBhbmQ9ZnVuY3Rpb24gZXhwYW5kKGUsdCxyKXt2YXIgaT0wO3ZhciBuPTA7aT0oZSYxKTw8NXxlPj4+Mjc7Zm9yKHZhciBhPTIzO2E+PTE1O2EtPTQpe2k8PD02O2l8PWU+Pj5hJjYzfWZvcih2YXIgYT0xMTthPj0zO2EtPTQpe258PWU+Pj5hJjYzO248PD02fW58PShlJjMxKTw8MXxlPj4+MzE7dFtyKzBdPWk+Pj4wO3RbcisxXT1uPj4+MH07dmFyIGk9WzE0LDAsNCwxNSwxMyw3LDEsNCwyLDE0LDE1LDIsMTEsMTMsOCwxLDMsMTAsMTAsNiw2LDEyLDEyLDExLDUsOSw5LDUsMCwzLDcsOCw0LDE1LDEsMTIsMTQsOCw4LDIsMTMsNCw2LDksMiwxLDExLDcsMTUsNSwxMiwxMSw5LDMsNywxNCwzLDEwLDEwLDAsNSw2LDAsMTMsMTUsMywxLDEzLDgsNCwxNCw3LDYsMTUsMTEsMiwzLDgsNCwxNCw5LDEyLDcsMCwyLDEsMTMsMTAsMTIsNiwwLDksNSwxMSwxMCw1LDAsMTMsMTQsOCw3LDEwLDExLDEsMTAsMyw0LDE1LDEzLDQsMSwyLDUsMTEsOCw2LDEyLDcsNiwxMiw5LDAsMyw1LDIsMTQsMTUsOSwxMCwxMywwLDcsOSwwLDE0LDksNiwzLDMsNCwxNSw2LDUsMTAsMSwyLDEzLDgsMTIsNSw3LDE0LDExLDEyLDQsMTEsMiwxNSw4LDEsMTMsMSw2LDEwLDQsMTMsOSwwLDgsNiwxNSw5LDMsOCwwLDcsMTEsNCwxLDE1LDIsMTQsMTIsMyw1LDExLDEwLDUsMTQsMiw3LDEyLDcsMTMsMTMsOCwxNCwxMSwzLDUsMCw2LDYsMTUsOSwwLDEwLDMsMSw0LDIsNyw4LDIsNSwxMiwxMSwxLDEyLDEwLDQsMTQsMTUsOSwxMCwzLDYsMTUsOSwwLDAsNiwxMiwxMCwxMSwxLDcsMTMsMTMsOCwxNSw5LDEsNCwzLDUsMTQsMTEsNSwxMiwyLDcsOCwyLDQsMTQsMiwxNCwxMiwxMSw0LDIsMSwxMiw3LDQsMTAsNywxMSwxMyw2LDEsOCw1LDUsMCwzLDE1LDE1LDEwLDEzLDMsMCw5LDE0LDgsOSw2LDQsMTEsMiw4LDEsMTIsMTEsNywxMCwxLDEzLDE0LDcsMiw4LDEzLDE1LDYsOSwxNSwxMiwwLDUsOSw2LDEwLDMsNCwwLDUsMTQsMywxMiwxMCwxLDE1LDEwLDQsMTUsMiw5LDcsMiwxMiw2LDksOCw1LDAsNiwxMywxLDMsMTMsNCwxNCwxNCwwLDcsMTEsNSwzLDExLDgsOSw0LDE0LDMsMTUsMiw1LDEyLDIsOSw4LDUsMTIsMTUsMywxMCw3LDExLDAsMTQsNCwxLDEwLDcsMSw2LDEzLDAsMTEsOCw2LDEzLDQsMTMsMTEsMCwyLDExLDE0LDcsMTUsNCwwLDksOCwxLDEzLDEwLDMsMTQsMTIsMyw5LDUsNywxMiw1LDIsMTAsMTUsNiw4LDEsNiwxLDYsNCwxMSwxMSwxMywxMyw4LDEyLDEsMyw0LDcsMTAsMTQsNywxMCw5LDE1LDUsNiwwLDgsMTUsMCwxNCw1LDIsOSwzLDIsMTIsMTMsMSwyLDE1LDgsMTMsNCw4LDYsMTAsMTUsMywxMSw3LDEsNCwxMCwxMiw5LDUsMyw2LDE0LDExLDUsMCwwLDE0LDEyLDksNywyLDcsMiwxMSwxLDQsMTQsMSw3LDksNCwxMiwxMCwxNCw4LDIsMTMsMCwxNSw2LDEyLDEwLDksMTMsMCwxNSwzLDMsNSw1LDYsOCwxMV07dC5zdWJzdGl0dXRlPWZ1bmN0aW9uIHN1YnN0aXR1dGUoZSx0KXt2YXIgcj0wO2Zvcih2YXIgbj0wO248NDtuKyspe3ZhciBhPWU+Pj4xOC1uKjYmNjM7dmFyIHM9aVtuKjY0K2FdO3I8PD00O3J8PXN9Zm9yKHZhciBuPTA7bjw0O24rKyl7dmFyIGE9dD4+PjE4LW4qNiY2Mzt2YXIgcz1pWzQqNjQrbio2NCthXTtyPDw9NDtyfD1zfXJldHVybiByPj4+MH07dmFyIG49WzE2LDI1LDEyLDExLDMsMjAsNCwxNSwzMSwxNyw5LDYsMjcsMTQsMSwyMiwzMCwyNCw4LDE4LDAsNSwyOSwyMywxMywxOSwyLDI2LDEwLDIxLDI4LDddO3QucGVybXV0ZT1mdW5jdGlvbiBwZXJtdXRlKGUpe3ZhciB0PTA7Zm9yKHZhciByPTA7cjxuLmxlbmd0aDtyKyspe3Q8PD0xO3R8PWU+Pj5uW3JdJjF9cmV0dXJuIHQ+Pj4wfTt0LnBhZFNwbGl0PWZ1bmN0aW9uIHBhZFNwbGl0KGUsdCxyKXt2YXIgaT1lLnRvU3RyaW5nKDIpO3doaWxlKGkubGVuZ3RoPHQpaT1cIjBcIitpO3ZhciBuPVtdO2Zvcih2YXIgYT0wO2E8dDthKz1yKW4ucHVzaChpLnNsaWNlKGEsYStyKSk7cmV0dXJuIG4uam9pbihcIiBcIil9fSw2NTg3OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDI5Nik7dmFyIG49cig3OTkyKTt2YXIgYT1yKDM3Myk7ZnVuY3Rpb24gZ2V0RGlmZmllSGVsbG1hbihlKXt2YXIgdD1uZXcgQnVmZmVyKG5bZV0ucHJpbWUsXCJoZXhcIik7dmFyIHI9bmV3IEJ1ZmZlcihuW2VdLmdlbixcImhleFwiKTtyZXR1cm4gbmV3IGEodCxyKX12YXIgcz17YmluYXJ5OnRydWUsaGV4OnRydWUsYmFzZTY0OnRydWV9O2Z1bmN0aW9uIGNyZWF0ZURpZmZpZUhlbGxtYW4oZSx0LHIsbil7aWYoQnVmZmVyLmlzQnVmZmVyKHQpfHxzW3RdPT09dW5kZWZpbmVkKXtyZXR1cm4gY3JlYXRlRGlmZmllSGVsbG1hbihlLFwiYmluYXJ5XCIsdCxyKX10PXR8fFwiYmluYXJ5XCI7bj1ufHxcImJpbmFyeVwiO3I9cnx8bmV3IEJ1ZmZlcihbMl0pO2lmKCFCdWZmZXIuaXNCdWZmZXIocikpe3I9bmV3IEJ1ZmZlcihyLG4pfWlmKHR5cGVvZiBlPT09XCJudW1iZXJcIil7cmV0dXJuIG5ldyBhKGkoZSxyKSxyLHRydWUpfWlmKCFCdWZmZXIuaXNCdWZmZXIoZSkpe2U9bmV3IEJ1ZmZlcihlLHQpfXJldHVybiBuZXcgYShlLHIsdHJ1ZSl9dC5EaWZmaWVIZWxsbWFuR3JvdXA9dC5jcmVhdGVEaWZmaWVIZWxsbWFuR3JvdXA9dC5nZXREaWZmaWVIZWxsbWFuPWdldERpZmZpZUhlbGxtYW47dC5jcmVhdGVEaWZmaWVIZWxsbWFuPXQuRGlmZmllSGVsbG1hbj1jcmVhdGVEaWZmaWVIZWxsbWFufSwzNzM6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoNzExKTt2YXIgbj1yKDEzNTQpO3ZhciBhPW5ldyBuO3ZhciBzPW5ldyBpKDI0KTt2YXIgbz1uZXcgaSgxMSk7dmFyIGg9bmV3IGkoMTApO3ZhciB1PW5ldyBpKDMpO3ZhciBkPW5ldyBpKDcpO3ZhciBjPXIoMjk2KTt2YXIgbD1yKDcyMjMpO2UuZXhwb3J0cz1ESDtmdW5jdGlvbiBzZXRQdWJsaWNLZXkoZSx0KXt0PXR8fFwidXRmOFwiO2lmKCFCdWZmZXIuaXNCdWZmZXIoZSkpe2U9bmV3IEJ1ZmZlcihlLHQpfXRoaXMuX3B1Yj1uZXcgaShlKTtyZXR1cm4gdGhpc31mdW5jdGlvbiBzZXRQcml2YXRlS2V5KGUsdCl7dD10fHxcInV0ZjhcIjtpZighQnVmZmVyLmlzQnVmZmVyKGUpKXtlPW5ldyBCdWZmZXIoZSx0KX10aGlzLl9wcml2PW5ldyBpKGUpO3JldHVybiB0aGlzfXZhciBwPXt9O2Z1bmN0aW9uIGNoZWNrUHJpbWUoZSx0KXt2YXIgcj10LnRvU3RyaW5nKFwiaGV4XCIpO3ZhciBpPVtyLGUudG9TdHJpbmcoMTYpXS5qb2luKFwiX1wiKTtpZihpIGluIHApe3JldHVybiBwW2ldfXZhciBuPTA7aWYoZS5pc0V2ZW4oKXx8IWMuc2ltcGxlU2lldmV8fCFjLmZlcm1hdFRlc3QoZSl8fCFhLnRlc3QoZSkpe24rPTE7aWYocj09PVwiMDJcInx8cj09PVwiMDVcIil7bis9OH1lbHNle24rPTR9cFtpXT1uO3JldHVybiBufWlmKCFhLnRlc3QoZS5zaHJuKDEpKSl7bis9Mn12YXIgbDtzd2l0Y2gocil7Y2FzZVwiMDJcIjppZihlLm1vZChzKS5jbXAobykpe24rPTh9YnJlYWs7Y2FzZVwiMDVcIjpsPWUubW9kKGgpO2lmKGwuY21wKHUpJiZsLmNtcChkKSl7bis9OH1icmVhaztkZWZhdWx0Om4rPTR9cFtpXT1uO3JldHVybiBufWZ1bmN0aW9uIERIKGUsdCxyKXt0aGlzLnNldEdlbmVyYXRvcih0KTt0aGlzLl9fcHJpbWU9bmV3IGkoZSk7dGhpcy5fcHJpbWU9aS5tb250KHRoaXMuX19wcmltZSk7dGhpcy5fcHJpbWVMZW49ZS5sZW5ndGg7dGhpcy5fcHViPXVuZGVmaW5lZDt0aGlzLl9wcml2PXVuZGVmaW5lZDt0aGlzLl9wcmltZUNvZGU9dW5kZWZpbmVkO2lmKHIpe3RoaXMuc2V0UHVibGljS2V5PXNldFB1YmxpY0tleTt0aGlzLnNldFByaXZhdGVLZXk9c2V0UHJpdmF0ZUtleX1lbHNle3RoaXMuX3ByaW1lQ29kZT04fX1PYmplY3QuZGVmaW5lUHJvcGVydHkoREgucHJvdG90eXBlLFwidmVyaWZ5RXJyb3JcIix7ZW51bWVyYWJsZTp0cnVlLGdldDpmdW5jdGlvbigpe2lmKHR5cGVvZiB0aGlzLl9wcmltZUNvZGUhPT1cIm51bWJlclwiKXt0aGlzLl9wcmltZUNvZGU9Y2hlY2tQcmltZSh0aGlzLl9fcHJpbWUsdGhpcy5fX2dlbil9cmV0dXJuIHRoaXMuX3ByaW1lQ29kZX19KTtESC5wcm90b3R5cGUuZ2VuZXJhdGVLZXlzPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX3ByaXYpe3RoaXMuX3ByaXY9bmV3IGkobCh0aGlzLl9wcmltZUxlbikpfXRoaXMuX3B1Yj10aGlzLl9nZW4udG9SZWQodGhpcy5fcHJpbWUpLnJlZFBvdyh0aGlzLl9wcml2KS5mcm9tUmVkKCk7cmV0dXJuIHRoaXMuZ2V0UHVibGljS2V5KCl9O0RILnByb3RvdHlwZS5jb21wdXRlU2VjcmV0PWZ1bmN0aW9uKGUpe2U9bmV3IGkoZSk7ZT1lLnRvUmVkKHRoaXMuX3ByaW1lKTt2YXIgdD1lLnJlZFBvdyh0aGlzLl9wcml2KS5mcm9tUmVkKCk7dmFyIHI9bmV3IEJ1ZmZlcih0LnRvQXJyYXkoKSk7dmFyIG49dGhpcy5nZXRQcmltZSgpO2lmKHIubGVuZ3RoPG4ubGVuZ3RoKXt2YXIgYT1uZXcgQnVmZmVyKG4ubGVuZ3RoLXIubGVuZ3RoKTthLmZpbGwoMCk7cj1CdWZmZXIuY29uY2F0KFthLHJdKX1yZXR1cm4gcn07REgucHJvdG90eXBlLmdldFB1YmxpY0tleT1mdW5jdGlvbiBnZXRQdWJsaWNLZXkoZSl7cmV0dXJuIGZvcm1hdFJldHVyblZhbHVlKHRoaXMuX3B1YixlKX07REgucHJvdG90eXBlLmdldFByaXZhdGVLZXk9ZnVuY3Rpb24gZ2V0UHJpdmF0ZUtleShlKXtyZXR1cm4gZm9ybWF0UmV0dXJuVmFsdWUodGhpcy5fcHJpdixlKX07REgucHJvdG90eXBlLmdldFByaW1lPWZ1bmN0aW9uKGUpe3JldHVybiBmb3JtYXRSZXR1cm5WYWx1ZSh0aGlzLl9fcHJpbWUsZSl9O0RILnByb3RvdHlwZS5nZXRHZW5lcmF0b3I9ZnVuY3Rpb24oZSl7cmV0dXJuIGZvcm1hdFJldHVyblZhbHVlKHRoaXMuX2dlbixlKX07REgucHJvdG90eXBlLnNldEdlbmVyYXRvcj1mdW5jdGlvbihlLHQpe3Q9dHx8XCJ1dGY4XCI7aWYoIUJ1ZmZlci5pc0J1ZmZlcihlKSl7ZT1uZXcgQnVmZmVyKGUsdCl9dGhpcy5fX2dlbj1lO3RoaXMuX2dlbj1uZXcgaShlKTtyZXR1cm4gdGhpc307ZnVuY3Rpb24gZm9ybWF0UmV0dXJuVmFsdWUoZSx0KXt2YXIgcj1uZXcgQnVmZmVyKGUudG9BcnJheSgpKTtpZighdCl7cmV0dXJuIHJ9ZWxzZXtyZXR1cm4gci50b1N0cmluZyh0KX19fSwyOTY6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoNzIyMyk7ZS5leHBvcnRzPWZpbmRQcmltZTtmaW5kUHJpbWUuc2ltcGxlU2lldmU9c2ltcGxlU2lldmU7ZmluZFByaW1lLmZlcm1hdFRlc3Q9ZmVybWF0VGVzdDt2YXIgbj1yKDcxMSk7dmFyIGE9bmV3IG4oMjQpO3ZhciBzPXIoMTM1NCk7dmFyIG89bmV3IHM7dmFyIGg9bmV3IG4oMSk7dmFyIHU9bmV3IG4oMik7dmFyIGQ9bmV3IG4oNSk7dmFyIGM9bmV3IG4oMTYpO3ZhciBsPW5ldyBuKDgpO3ZhciBwPW5ldyBuKDEwKTt2YXIgdj1uZXcgbigzKTt2YXIgYj1uZXcgbig3KTt2YXIgbT1uZXcgbigxMSk7dmFyIHk9bmV3IG4oNCk7dmFyIGc9bmV3IG4oMTIpO3ZhciBfPW51bGw7ZnVuY3Rpb24gX2dldFByaW1lcygpe2lmKF8hPT1udWxsKXJldHVybiBfO3ZhciBlPTEwNDg1NzY7dmFyIHQ9W107dFswXT0yO2Zvcih2YXIgcj0xLGk9MztpPGU7aSs9Mil7dmFyIG49TWF0aC5jZWlsKE1hdGguc3FydChpKSk7Zm9yKHZhciBhPTA7YTxyJiZ0W2FdPD1uO2ErKylpZihpJXRbYV09PT0wKWJyZWFrO2lmKHIhPT1hJiZ0W2FdPD1uKWNvbnRpbnVlO3RbcisrXT1pfV89dDtyZXR1cm4gdH1mdW5jdGlvbiBzaW1wbGVTaWV2ZShlKXt2YXIgdD1fZ2V0UHJpbWVzKCk7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspaWYoZS5tb2RuKHRbcl0pPT09MCl7aWYoZS5jbXBuKHRbcl0pPT09MCl7cmV0dXJuIHRydWV9ZWxzZXtyZXR1cm4gZmFsc2V9fXJldHVybiB0cnVlfWZ1bmN0aW9uIGZlcm1hdFRlc3QoZSl7dmFyIHQ9bi5tb250KGUpO3JldHVybiB1LnRvUmVkKHQpLnJlZFBvdyhlLnN1Ym4oMSkpLmZyb21SZWQoKS5jbXBuKDEpPT09MH1mdW5jdGlvbiBmaW5kUHJpbWUoZSx0KXtpZihlPDE2KXtpZih0PT09Mnx8dD09PTUpe3JldHVybiBuZXcgbihbMTQwLDEyM10pfWVsc2V7cmV0dXJuIG5ldyBuKFsxNDAsMzldKX19dD1uZXcgbih0KTt2YXIgcixzO3doaWxlKHRydWUpe3I9bmV3IG4oaShNYXRoLmNlaWwoZS84KSkpO3doaWxlKHIuYml0TGVuZ3RoKCk+ZSl7ci5pc2hybigxKX1pZihyLmlzRXZlbigpKXtyLmlhZGQoaCl9aWYoIXIudGVzdG4oMSkpe3IuaWFkZCh1KX1pZighdC5jbXAodSkpe3doaWxlKHIubW9kKGEpLmNtcChtKSl7ci5pYWRkKHkpfX1lbHNlIGlmKCF0LmNtcChkKSl7d2hpbGUoci5tb2QocCkuY21wKHYpKXtyLmlhZGQoeSl9fXM9ci5zaHJuKDEpO2lmKHNpbXBsZVNpZXZlKHMpJiZzaW1wbGVTaWV2ZShyKSYmZmVybWF0VGVzdChzKSYmZmVybWF0VGVzdChyKSYmby50ZXN0KHMpJiZvLnRlc3Qocikpe3JldHVybiByfX19fSw5NDk6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXQ7aS52ZXJzaW9uPXIoMjUzMSkuaTg7aS51dGlscz1yKDQ0MDEpO2kucmFuZD1yKDM1MDApO2kuY3VydmU9cig5MzU5KTtpLmN1cnZlcz1yKDYyMjYpO2kuZWM9cig0MDg4KTtpLmVkZHNhPXIoODUxMSl9LDI3Mjc6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoNzExKTt2YXIgbj1yKDQ0MDEpO3ZhciBhPW4uZ2V0TkFGO3ZhciBzPW4uZ2V0SlNGO3ZhciBvPW4uYXNzZXJ0O2Z1bmN0aW9uIEJhc2VDdXJ2ZShlLHQpe3RoaXMudHlwZT1lO3RoaXMucD1uZXcgaSh0LnAsMTYpO3RoaXMucmVkPXQucHJpbWU/aS5yZWQodC5wcmltZSk6aS5tb250KHRoaXMucCk7dGhpcy56ZXJvPW5ldyBpKDApLnRvUmVkKHRoaXMucmVkKTt0aGlzLm9uZT1uZXcgaSgxKS50b1JlZCh0aGlzLnJlZCk7dGhpcy50d289bmV3IGkoMikudG9SZWQodGhpcy5yZWQpO3RoaXMubj10Lm4mJm5ldyBpKHQubiwxNik7dGhpcy5nPXQuZyYmdGhpcy5wb2ludEZyb21KU09OKHQuZyx0LmdSZWQpO3RoaXMuX3duYWZUMT1uZXcgQXJyYXkoNCk7dGhpcy5fd25hZlQyPW5ldyBBcnJheSg0KTt0aGlzLl93bmFmVDM9bmV3IEFycmF5KDQpO3RoaXMuX3duYWZUND1uZXcgQXJyYXkoNCk7dGhpcy5fYml0TGVuZ3RoPXRoaXMubj90aGlzLm4uYml0TGVuZ3RoKCk6MDt2YXIgcj10aGlzLm4mJnRoaXMucC5kaXYodGhpcy5uKTtpZighcnx8ci5jbXBuKDEwMCk+MCl7dGhpcy5yZWROPW51bGx9ZWxzZXt0aGlzLl9tYXh3ZWxsVHJpY2s9dHJ1ZTt0aGlzLnJlZE49dGhpcy5uLnRvUmVkKHRoaXMucmVkKX19ZS5leHBvcnRzPUJhc2VDdXJ2ZTtCYXNlQ3VydmUucHJvdG90eXBlLnBvaW50PWZ1bmN0aW9uIHBvaW50KCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpfTtCYXNlQ3VydmUucHJvdG90eXBlLnZhbGlkYXRlPWZ1bmN0aW9uIHZhbGlkYXRlKCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpfTtCYXNlQ3VydmUucHJvdG90eXBlLl9maXhlZE5hZk11bD1mdW5jdGlvbiBfZml4ZWROYWZNdWwoZSx0KXtvKGUucHJlY29tcHV0ZWQpO3ZhciByPWUuX2dldERvdWJsZXMoKTt2YXIgaT1hKHQsMSx0aGlzLl9iaXRMZW5ndGgpO3ZhciBuPSgxPDxyLnN0ZXArMSktKHIuc3RlcCUyPT09MD8yOjEpO24vPTM7dmFyIHM9W107Zm9yKHZhciBoPTA7aDxpLmxlbmd0aDtoKz1yLnN0ZXApe3ZhciB1PTA7Zm9yKHZhciB0PWgrci5zdGVwLTE7dD49aDt0LS0pdT0odTw8MSkraVt0XTtzLnB1c2godSl9dmFyIGQ9dGhpcy5qcG9pbnQobnVsbCxudWxsLG51bGwpO3ZhciBjPXRoaXMuanBvaW50KG51bGwsbnVsbCxudWxsKTtmb3IodmFyIGw9bjtsPjA7bC0tKXtmb3IodmFyIGg9MDtoPHMubGVuZ3RoO2grKyl7dmFyIHU9c1toXTtpZih1PT09bCljPWMubWl4ZWRBZGQoci5wb2ludHNbaF0pO2Vsc2UgaWYodT09PS1sKWM9Yy5taXhlZEFkZChyLnBvaW50c1toXS5uZWcoKSl9ZD1kLmFkZChjKX1yZXR1cm4gZC50b1AoKX07QmFzZUN1cnZlLnByb3RvdHlwZS5fd25hZk11bD1mdW5jdGlvbiBfd25hZk11bChlLHQpe3ZhciByPTQ7dmFyIGk9ZS5fZ2V0TkFGUG9pbnRzKHIpO3I9aS53bmQ7dmFyIG49aS5wb2ludHM7dmFyIHM9YSh0LHIsdGhpcy5fYml0TGVuZ3RoKTt2YXIgaD10aGlzLmpwb2ludChudWxsLG51bGwsbnVsbCk7Zm9yKHZhciB1PXMubGVuZ3RoLTE7dT49MDt1LS0pe2Zvcih2YXIgdD0wO3U+PTAmJnNbdV09PT0wO3UtLSl0Kys7aWYodT49MCl0Kys7aD1oLmRibHAodCk7aWYodTwwKWJyZWFrO3ZhciBkPXNbdV07byhkIT09MCk7aWYoZS50eXBlPT09XCJhZmZpbmVcIil7aWYoZD4wKWg9aC5taXhlZEFkZChuW2QtMT4+MV0pO2Vsc2UgaD1oLm1peGVkQWRkKG5bLWQtMT4+MV0ubmVnKCkpfWVsc2V7aWYoZD4wKWg9aC5hZGQobltkLTE+PjFdKTtlbHNlIGg9aC5hZGQoblstZC0xPj4xXS5uZWcoKSl9fXJldHVybiBlLnR5cGU9PT1cImFmZmluZVwiP2gudG9QKCk6aH07QmFzZUN1cnZlLnByb3RvdHlwZS5fd25hZk11bEFkZD1mdW5jdGlvbiBfd25hZk11bEFkZChlLHQscixpLG4pe3ZhciBvPXRoaXMuX3duYWZUMTt2YXIgaD10aGlzLl93bmFmVDI7dmFyIHU9dGhpcy5fd25hZlQzO3ZhciBkPTA7Zm9yKHZhciBjPTA7YzxpO2MrKyl7dmFyIGw9dFtjXTt2YXIgcD1sLl9nZXROQUZQb2ludHMoZSk7b1tjXT1wLnduZDtoW2NdPXAucG9pbnRzfWZvcih2YXIgYz1pLTE7Yz49MTtjLT0yKXt2YXIgdj1jLTE7dmFyIGI9YztpZihvW3ZdIT09MXx8b1tiXSE9PTEpe3Vbdl09YShyW3ZdLG9bdl0sdGhpcy5fYml0TGVuZ3RoKTt1W2JdPWEocltiXSxvW2JdLHRoaXMuX2JpdExlbmd0aCk7ZD1NYXRoLm1heCh1W3ZdLmxlbmd0aCxkKTtkPU1hdGgubWF4KHVbYl0ubGVuZ3RoLGQpO2NvbnRpbnVlfXZhciBtPVt0W3ZdLG51bGwsbnVsbCx0W2JdXTtpZih0W3ZdLnkuY21wKHRbYl0ueSk9PT0wKXttWzFdPXRbdl0uYWRkKHRbYl0pO21bMl09dFt2XS50b0ooKS5taXhlZEFkZCh0W2JdLm5lZygpKX1lbHNlIGlmKHRbdl0ueS5jbXAodFtiXS55LnJlZE5lZygpKT09PTApe21bMV09dFt2XS50b0ooKS5taXhlZEFkZCh0W2JdKTttWzJdPXRbdl0uYWRkKHRbYl0ubmVnKCkpfWVsc2V7bVsxXT10W3ZdLnRvSigpLm1peGVkQWRkKHRbYl0pO21bMl09dFt2XS50b0ooKS5taXhlZEFkZCh0W2JdLm5lZygpKX12YXIgeT1bLTMsLTEsLTUsLTcsMCw3LDUsMSwzXTt2YXIgZz1zKHJbdl0scltiXSk7ZD1NYXRoLm1heChnWzBdLmxlbmd0aCxkKTt1W3ZdPW5ldyBBcnJheShkKTt1W2JdPW5ldyBBcnJheShkKTtmb3IodmFyIF89MDtfPGQ7XysrKXt2YXIgdz1nWzBdW19dfDA7dmFyIE09Z1sxXVtfXXwwO3Vbdl1bX109eVsodysxKSozKyhNKzEpXTt1W2JdW19dPTA7aFt2XT1tfX12YXIgQj10aGlzLmpwb2ludChudWxsLG51bGwsbnVsbCk7dmFyIEU9dGhpcy5fd25hZlQ0O2Zvcih2YXIgYz1kO2M+PTA7Yy0tKXt2YXIgaz0wO3doaWxlKGM+PTApe3ZhciBBPXRydWU7Zm9yKHZhciBfPTA7XzxpO18rKyl7RVtfXT11W19dW2NdfDA7aWYoRVtfXSE9PTApQT1mYWxzZX1pZighQSlicmVhaztrKys7Yy0tfWlmKGM+PTApaysrO0I9Qi5kYmxwKGspO2lmKGM8MClicmVhaztmb3IodmFyIF89MDtfPGk7XysrKXt2YXIgTj1FW19dO3ZhciBsO2lmKE49PT0wKWNvbnRpbnVlO2Vsc2UgaWYoTj4wKWw9aFtfXVtOLTE+PjFdO2Vsc2UgaWYoTjwwKWw9aFtfXVstTi0xPj4xXS5uZWcoKTtpZihsLnR5cGU9PT1cImFmZmluZVwiKUI9Qi5taXhlZEFkZChsKTtlbHNlIEI9Qi5hZGQobCl9fWZvcih2YXIgYz0wO2M8aTtjKyspaFtjXT1udWxsO2lmKG4pcmV0dXJuIEI7ZWxzZSByZXR1cm4gQi50b1AoKX07ZnVuY3Rpb24gQmFzZVBvaW50KGUsdCl7dGhpcy5jdXJ2ZT1lO3RoaXMudHlwZT10O3RoaXMucHJlY29tcHV0ZWQ9bnVsbH1CYXNlQ3VydmUuQmFzZVBvaW50PUJhc2VQb2ludDtCYXNlUG9pbnQucHJvdG90eXBlLmVxPWZ1bmN0aW9uIGVxKCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkXCIpfTtCYXNlUG9pbnQucHJvdG90eXBlLnZhbGlkYXRlPWZ1bmN0aW9uIHZhbGlkYXRlKCl7cmV0dXJuIHRoaXMuY3VydmUudmFsaWRhdGUodGhpcyl9O0Jhc2VDdXJ2ZS5wcm90b3R5cGUuZGVjb2RlUG9pbnQ9ZnVuY3Rpb24gZGVjb2RlUG9pbnQoZSx0KXtlPW4udG9BcnJheShlLHQpO3ZhciByPXRoaXMucC5ieXRlTGVuZ3RoKCk7aWYoKGVbMF09PT00fHxlWzBdPT09Nnx8ZVswXT09PTcpJiZlLmxlbmd0aC0xPT09MipyKXtpZihlWzBdPT09NilvKGVbZS5sZW5ndGgtMV0lMj09PTApO2Vsc2UgaWYoZVswXT09PTcpbyhlW2UubGVuZ3RoLTFdJTI9PT0xKTt2YXIgaT10aGlzLnBvaW50KGUuc2xpY2UoMSwxK3IpLGUuc2xpY2UoMStyLDErMipyKSk7cmV0dXJuIGl9ZWxzZSBpZigoZVswXT09PTJ8fGVbMF09PT0zKSYmZS5sZW5ndGgtMT09PXIpe3JldHVybiB0aGlzLnBvaW50RnJvbVgoZS5zbGljZSgxLDErciksZVswXT09PTMpfXRocm93IG5ldyBFcnJvcihcIlVua25vd24gcG9pbnQgZm9ybWF0XCIpfTtCYXNlUG9pbnQucHJvdG90eXBlLmVuY29kZUNvbXByZXNzZWQ9ZnVuY3Rpb24gZW5jb2RlQ29tcHJlc3NlZChlKXtyZXR1cm4gdGhpcy5lbmNvZGUoZSx0cnVlKX07QmFzZVBvaW50LnByb3RvdHlwZS5fZW5jb2RlPWZ1bmN0aW9uIF9lbmNvZGUoZSl7dmFyIHQ9dGhpcy5jdXJ2ZS5wLmJ5dGVMZW5ndGgoKTt2YXIgcj10aGlzLmdldFgoKS50b0FycmF5KFwiYmVcIix0KTtpZihlKXJldHVyblt0aGlzLmdldFkoKS5pc0V2ZW4oKT8yOjNdLmNvbmNhdChyKTtyZXR1cm5bNF0uY29uY2F0KHIsdGhpcy5nZXRZKCkudG9BcnJheShcImJlXCIsdCkpfTtCYXNlUG9pbnQucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbiBlbmNvZGUoZSx0KXtyZXR1cm4gbi5lbmNvZGUodGhpcy5fZW5jb2RlKHQpLGUpfTtCYXNlUG9pbnQucHJvdG90eXBlLnByZWNvbXB1dGU9ZnVuY3Rpb24gcHJlY29tcHV0ZShlKXtpZih0aGlzLnByZWNvbXB1dGVkKXJldHVybiB0aGlzO3ZhciB0PXtkb3VibGVzOm51bGwsbmFmOm51bGwsYmV0YTpudWxsfTt0Lm5hZj10aGlzLl9nZXROQUZQb2ludHMoOCk7dC5kb3VibGVzPXRoaXMuX2dldERvdWJsZXMoNCxlKTt0LmJldGE9dGhpcy5fZ2V0QmV0YSgpO3RoaXMucHJlY29tcHV0ZWQ9dDtyZXR1cm4gdGhpc307QmFzZVBvaW50LnByb3RvdHlwZS5faGFzRG91Ymxlcz1mdW5jdGlvbiBfaGFzRG91YmxlcyhlKXtpZighdGhpcy5wcmVjb21wdXRlZClyZXR1cm4gZmFsc2U7dmFyIHQ9dGhpcy5wcmVjb21wdXRlZC5kb3VibGVzO2lmKCF0KXJldHVybiBmYWxzZTtyZXR1cm4gdC5wb2ludHMubGVuZ3RoPj1NYXRoLmNlaWwoKGUuYml0TGVuZ3RoKCkrMSkvdC5zdGVwKX07QmFzZVBvaW50LnByb3RvdHlwZS5fZ2V0RG91Ymxlcz1mdW5jdGlvbiBfZ2V0RG91YmxlcyhlLHQpe2lmKHRoaXMucHJlY29tcHV0ZWQmJnRoaXMucHJlY29tcHV0ZWQuZG91YmxlcylyZXR1cm4gdGhpcy5wcmVjb21wdXRlZC5kb3VibGVzO3ZhciByPVt0aGlzXTt2YXIgaT10aGlzO2Zvcih2YXIgbj0wO248dDtuKz1lKXtmb3IodmFyIGE9MDthPGU7YSsrKWk9aS5kYmwoKTtyLnB1c2goaSl9cmV0dXJue3N0ZXA6ZSxwb2ludHM6cn19O0Jhc2VQb2ludC5wcm90b3R5cGUuX2dldE5BRlBvaW50cz1mdW5jdGlvbiBfZ2V0TkFGUG9pbnRzKGUpe2lmKHRoaXMucHJlY29tcHV0ZWQmJnRoaXMucHJlY29tcHV0ZWQubmFmKXJldHVybiB0aGlzLnByZWNvbXB1dGVkLm5hZjt2YXIgdD1bdGhpc107dmFyIHI9KDE8PGUpLTE7dmFyIGk9cj09PTE/bnVsbDp0aGlzLmRibCgpO2Zvcih2YXIgbj0xO248cjtuKyspdFtuXT10W24tMV0uYWRkKGkpO3JldHVybnt3bmQ6ZSxwb2ludHM6dH19O0Jhc2VQb2ludC5wcm90b3R5cGUuX2dldEJldGE9ZnVuY3Rpb24gX2dldEJldGEoKXtyZXR1cm4gbnVsbH07QmFzZVBvaW50LnByb3RvdHlwZS5kYmxwPWZ1bmN0aW9uIGRibHAoZSl7dmFyIHQ9dGhpcztmb3IodmFyIHI9MDtyPGU7cisrKXQ9dC5kYmwoKTtyZXR1cm4gdH19LDI3MDU6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoNDQwMSk7dmFyIG49cig3MTEpO3ZhciBhPXIoMzc4Mik7dmFyIHM9cigyNzI3KTt2YXIgbz1pLmFzc2VydDtmdW5jdGlvbiBFZHdhcmRzQ3VydmUoZSl7dGhpcy50d2lzdGVkPShlLmF8MCkhPT0xO3RoaXMubU9uZUE9dGhpcy50d2lzdGVkJiYoZS5hfDApPT09LTE7dGhpcy5leHRlbmRlZD10aGlzLm1PbmVBO3MuY2FsbCh0aGlzLFwiZWR3YXJkc1wiLGUpO3RoaXMuYT1uZXcgbihlLmEsMTYpLnVtb2QodGhpcy5yZWQubSk7dGhpcy5hPXRoaXMuYS50b1JlZCh0aGlzLnJlZCk7dGhpcy5jPW5ldyBuKGUuYywxNikudG9SZWQodGhpcy5yZWQpO3RoaXMuYzI9dGhpcy5jLnJlZFNxcigpO3RoaXMuZD1uZXcgbihlLmQsMTYpLnRvUmVkKHRoaXMucmVkKTt0aGlzLmRkPXRoaXMuZC5yZWRBZGQodGhpcy5kKTtvKCF0aGlzLnR3aXN0ZWR8fHRoaXMuYy5mcm9tUmVkKCkuY21wbigxKT09PTApO3RoaXMub25lQz0oZS5jfDApPT09MX1hKEVkd2FyZHNDdXJ2ZSxzKTtlLmV4cG9ydHM9RWR3YXJkc0N1cnZlO0Vkd2FyZHNDdXJ2ZS5wcm90b3R5cGUuX211bEE9ZnVuY3Rpb24gX211bEEoZSl7aWYodGhpcy5tT25lQSlyZXR1cm4gZS5yZWROZWcoKTtlbHNlIHJldHVybiB0aGlzLmEucmVkTXVsKGUpfTtFZHdhcmRzQ3VydmUucHJvdG90eXBlLl9tdWxDPWZ1bmN0aW9uIF9tdWxDKGUpe2lmKHRoaXMub25lQylyZXR1cm4gZTtlbHNlIHJldHVybiB0aGlzLmMucmVkTXVsKGUpfTtFZHdhcmRzQ3VydmUucHJvdG90eXBlLmpwb2ludD1mdW5jdGlvbiBqcG9pbnQoZSx0LHIsaSl7cmV0dXJuIHRoaXMucG9pbnQoZSx0LHIsaSl9O0Vkd2FyZHNDdXJ2ZS5wcm90b3R5cGUucG9pbnRGcm9tWD1mdW5jdGlvbiBwb2ludEZyb21YKGUsdCl7ZT1uZXcgbihlLDE2KTtpZighZS5yZWQpZT1lLnRvUmVkKHRoaXMucmVkKTt2YXIgcj1lLnJlZFNxcigpO3ZhciBpPXRoaXMuYzIucmVkU3ViKHRoaXMuYS5yZWRNdWwocikpO3ZhciBhPXRoaXMub25lLnJlZFN1Yih0aGlzLmMyLnJlZE11bCh0aGlzLmQpLnJlZE11bChyKSk7dmFyIHM9aS5yZWRNdWwoYS5yZWRJbnZtKCkpO3ZhciBvPXMucmVkU3FydCgpO2lmKG8ucmVkU3FyKCkucmVkU3ViKHMpLmNtcCh0aGlzLnplcm8pIT09MCl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHBvaW50XCIpO3ZhciBoPW8uZnJvbVJlZCgpLmlzT2RkKCk7aWYodCYmIWh8fCF0JiZoKW89by5yZWROZWcoKTtyZXR1cm4gdGhpcy5wb2ludChlLG8pfTtFZHdhcmRzQ3VydmUucHJvdG90eXBlLnBvaW50RnJvbVk9ZnVuY3Rpb24gcG9pbnRGcm9tWShlLHQpe2U9bmV3IG4oZSwxNik7aWYoIWUucmVkKWU9ZS50b1JlZCh0aGlzLnJlZCk7dmFyIHI9ZS5yZWRTcXIoKTt2YXIgaT1yLnJlZFN1Yih0aGlzLmMyKTt2YXIgYT1yLnJlZE11bCh0aGlzLmQpLnJlZE11bCh0aGlzLmMyKS5yZWRTdWIodGhpcy5hKTt2YXIgcz1pLnJlZE11bChhLnJlZEludm0oKSk7aWYocy5jbXAodGhpcy56ZXJvKT09PTApe2lmKHQpdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBwb2ludFwiKTtlbHNlIHJldHVybiB0aGlzLnBvaW50KHRoaXMuemVybyxlKX12YXIgbz1zLnJlZFNxcnQoKTtpZihvLnJlZFNxcigpLnJlZFN1YihzKS5jbXAodGhpcy56ZXJvKSE9PTApdGhyb3cgbmV3IEVycm9yKFwiaW52YWxpZCBwb2ludFwiKTtpZihvLmZyb21SZWQoKS5pc09kZCgpIT09dClvPW8ucmVkTmVnKCk7cmV0dXJuIHRoaXMucG9pbnQobyxlKX07RWR3YXJkc0N1cnZlLnByb3RvdHlwZS52YWxpZGF0ZT1mdW5jdGlvbiB2YWxpZGF0ZShlKXtpZihlLmlzSW5maW5pdHkoKSlyZXR1cm4gdHJ1ZTtlLm5vcm1hbGl6ZSgpO3ZhciB0PWUueC5yZWRTcXIoKTt2YXIgcj1lLnkucmVkU3FyKCk7dmFyIGk9dC5yZWRNdWwodGhpcy5hKS5yZWRBZGQocik7dmFyIG49dGhpcy5jMi5yZWRNdWwodGhpcy5vbmUucmVkQWRkKHRoaXMuZC5yZWRNdWwodCkucmVkTXVsKHIpKSk7cmV0dXJuIGkuY21wKG4pPT09MH07ZnVuY3Rpb24gUG9pbnQoZSx0LHIsaSxhKXtzLkJhc2VQb2ludC5jYWxsKHRoaXMsZSxcInByb2plY3RpdmVcIik7aWYodD09PW51bGwmJnI9PT1udWxsJiZpPT09bnVsbCl7dGhpcy54PXRoaXMuY3VydmUuemVybzt0aGlzLnk9dGhpcy5jdXJ2ZS5vbmU7dGhpcy56PXRoaXMuY3VydmUub25lO3RoaXMudD10aGlzLmN1cnZlLnplcm87dGhpcy56T25lPXRydWV9ZWxzZXt0aGlzLng9bmV3IG4odCwxNik7dGhpcy55PW5ldyBuKHIsMTYpO3RoaXMuej1pP25ldyBuKGksMTYpOnRoaXMuY3VydmUub25lO3RoaXMudD1hJiZuZXcgbihhLDE2KTtpZighdGhpcy54LnJlZCl0aGlzLng9dGhpcy54LnRvUmVkKHRoaXMuY3VydmUucmVkKTtpZighdGhpcy55LnJlZCl0aGlzLnk9dGhpcy55LnRvUmVkKHRoaXMuY3VydmUucmVkKTtpZighdGhpcy56LnJlZCl0aGlzLno9dGhpcy56LnRvUmVkKHRoaXMuY3VydmUucmVkKTtpZih0aGlzLnQmJiF0aGlzLnQucmVkKXRoaXMudD10aGlzLnQudG9SZWQodGhpcy5jdXJ2ZS5yZWQpO3RoaXMuek9uZT10aGlzLno9PT10aGlzLmN1cnZlLm9uZTtpZih0aGlzLmN1cnZlLmV4dGVuZGVkJiYhdGhpcy50KXt0aGlzLnQ9dGhpcy54LnJlZE11bCh0aGlzLnkpO2lmKCF0aGlzLnpPbmUpdGhpcy50PXRoaXMudC5yZWRNdWwodGhpcy56LnJlZEludm0oKSl9fX1hKFBvaW50LHMuQmFzZVBvaW50KTtFZHdhcmRzQ3VydmUucHJvdG90eXBlLnBvaW50RnJvbUpTT049ZnVuY3Rpb24gcG9pbnRGcm9tSlNPTihlKXtyZXR1cm4gUG9pbnQuZnJvbUpTT04odGhpcyxlKX07RWR3YXJkc0N1cnZlLnByb3RvdHlwZS5wb2ludD1mdW5jdGlvbiBwb2ludChlLHQscixpKXtyZXR1cm4gbmV3IFBvaW50KHRoaXMsZSx0LHIsaSl9O1BvaW50LmZyb21KU09OPWZ1bmN0aW9uIGZyb21KU09OKGUsdCl7cmV0dXJuIG5ldyBQb2ludChlLHRbMF0sdFsxXSx0WzJdKX07UG9pbnQucHJvdG90eXBlLmluc3BlY3Q9ZnVuY3Rpb24gaW5zcGVjdCgpe2lmKHRoaXMuaXNJbmZpbml0eSgpKXJldHVyblwiPEVDIFBvaW50IEluZmluaXR5PlwiO3JldHVyblwiPEVDIFBvaW50IHg6IFwiK3RoaXMueC5mcm9tUmVkKCkudG9TdHJpbmcoMTYsMikrXCIgeTogXCIrdGhpcy55LmZyb21SZWQoKS50b1N0cmluZygxNiwyKStcIiB6OiBcIit0aGlzLnouZnJvbVJlZCgpLnRvU3RyaW5nKDE2LDIpK1wiPlwifTtQb2ludC5wcm90b3R5cGUuaXNJbmZpbml0eT1mdW5jdGlvbiBpc0luZmluaXR5KCl7cmV0dXJuIHRoaXMueC5jbXBuKDApPT09MCYmKHRoaXMueS5jbXAodGhpcy56KT09PTB8fHRoaXMuek9uZSYmdGhpcy55LmNtcCh0aGlzLmN1cnZlLmMpPT09MCl9O1BvaW50LnByb3RvdHlwZS5fZXh0RGJsPWZ1bmN0aW9uIF9leHREYmwoKXt2YXIgZT10aGlzLngucmVkU3FyKCk7dmFyIHQ9dGhpcy55LnJlZFNxcigpO3ZhciByPXRoaXMuei5yZWRTcXIoKTtyPXIucmVkSUFkZChyKTt2YXIgaT10aGlzLmN1cnZlLl9tdWxBKGUpO3ZhciBuPXRoaXMueC5yZWRBZGQodGhpcy55KS5yZWRTcXIoKS5yZWRJU3ViKGUpLnJlZElTdWIodCk7dmFyIGE9aS5yZWRBZGQodCk7dmFyIHM9YS5yZWRTdWIocik7dmFyIG89aS5yZWRTdWIodCk7dmFyIGg9bi5yZWRNdWwocyk7dmFyIHU9YS5yZWRNdWwobyk7dmFyIGQ9bi5yZWRNdWwobyk7dmFyIGM9cy5yZWRNdWwoYSk7cmV0dXJuIHRoaXMuY3VydmUucG9pbnQoaCx1LGMsZCl9O1BvaW50LnByb3RvdHlwZS5fcHJvakRibD1mdW5jdGlvbiBfcHJvakRibCgpe3ZhciBlPXRoaXMueC5yZWRBZGQodGhpcy55KS5yZWRTcXIoKTt2YXIgdD10aGlzLngucmVkU3FyKCk7dmFyIHI9dGhpcy55LnJlZFNxcigpO3ZhciBpO3ZhciBuO3ZhciBhO2lmKHRoaXMuY3VydmUudHdpc3RlZCl7dmFyIHM9dGhpcy5jdXJ2ZS5fbXVsQSh0KTt2YXIgbz1zLnJlZEFkZChyKTtpZih0aGlzLnpPbmUpe2k9ZS5yZWRTdWIodCkucmVkU3ViKHIpLnJlZE11bChvLnJlZFN1Yih0aGlzLmN1cnZlLnR3bykpO249by5yZWRNdWwocy5yZWRTdWIocikpO2E9by5yZWRTcXIoKS5yZWRTdWIobykucmVkU3ViKG8pfWVsc2V7dmFyIGg9dGhpcy56LnJlZFNxcigpO3ZhciB1PW8ucmVkU3ViKGgpLnJlZElTdWIoaCk7aT1lLnJlZFN1Yih0KS5yZWRJU3ViKHIpLnJlZE11bCh1KTtuPW8ucmVkTXVsKHMucmVkU3ViKHIpKTthPW8ucmVkTXVsKHUpfX1lbHNle3ZhciBzPXQucmVkQWRkKHIpO3ZhciBoPXRoaXMuY3VydmUuX211bEModGhpcy56KS5yZWRTcXIoKTt2YXIgdT1zLnJlZFN1YihoKS5yZWRTdWIoaCk7aT10aGlzLmN1cnZlLl9tdWxDKGUucmVkSVN1YihzKSkucmVkTXVsKHUpO249dGhpcy5jdXJ2ZS5fbXVsQyhzKS5yZWRNdWwodC5yZWRJU3ViKHIpKTthPXMucmVkTXVsKHUpfXJldHVybiB0aGlzLmN1cnZlLnBvaW50KGksbixhKX07UG9pbnQucHJvdG90eXBlLmRibD1mdW5jdGlvbiBkYmwoKXtpZih0aGlzLmlzSW5maW5pdHkoKSlyZXR1cm4gdGhpcztpZih0aGlzLmN1cnZlLmV4dGVuZGVkKXJldHVybiB0aGlzLl9leHREYmwoKTtlbHNlIHJldHVybiB0aGlzLl9wcm9qRGJsKCl9O1BvaW50LnByb3RvdHlwZS5fZXh0QWRkPWZ1bmN0aW9uIF9leHRBZGQoZSl7dmFyIHQ9dGhpcy55LnJlZFN1Yih0aGlzLngpLnJlZE11bChlLnkucmVkU3ViKGUueCkpO3ZhciByPXRoaXMueS5yZWRBZGQodGhpcy54KS5yZWRNdWwoZS55LnJlZEFkZChlLngpKTt2YXIgaT10aGlzLnQucmVkTXVsKHRoaXMuY3VydmUuZGQpLnJlZE11bChlLnQpO3ZhciBuPXRoaXMuei5yZWRNdWwoZS56LnJlZEFkZChlLnopKTt2YXIgYT1yLnJlZFN1Yih0KTt2YXIgcz1uLnJlZFN1YihpKTt2YXIgbz1uLnJlZEFkZChpKTt2YXIgaD1yLnJlZEFkZCh0KTt2YXIgdT1hLnJlZE11bChzKTt2YXIgZD1vLnJlZE11bChoKTt2YXIgYz1hLnJlZE11bChoKTt2YXIgbD1zLnJlZE11bChvKTtyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludCh1LGQsbCxjKX07UG9pbnQucHJvdG90eXBlLl9wcm9qQWRkPWZ1bmN0aW9uIF9wcm9qQWRkKGUpe3ZhciB0PXRoaXMuei5yZWRNdWwoZS56KTt2YXIgcj10LnJlZFNxcigpO3ZhciBpPXRoaXMueC5yZWRNdWwoZS54KTt2YXIgbj10aGlzLnkucmVkTXVsKGUueSk7dmFyIGE9dGhpcy5jdXJ2ZS5kLnJlZE11bChpKS5yZWRNdWwobik7dmFyIHM9ci5yZWRTdWIoYSk7dmFyIG89ci5yZWRBZGQoYSk7dmFyIGg9dGhpcy54LnJlZEFkZCh0aGlzLnkpLnJlZE11bChlLngucmVkQWRkKGUueSkpLnJlZElTdWIoaSkucmVkSVN1YihuKTt2YXIgdT10LnJlZE11bChzKS5yZWRNdWwoaCk7dmFyIGQ7dmFyIGM7aWYodGhpcy5jdXJ2ZS50d2lzdGVkKXtkPXQucmVkTXVsKG8pLnJlZE11bChuLnJlZFN1Yih0aGlzLmN1cnZlLl9tdWxBKGkpKSk7Yz1zLnJlZE11bChvKX1lbHNle2Q9dC5yZWRNdWwobykucmVkTXVsKG4ucmVkU3ViKGkpKTtjPXRoaXMuY3VydmUuX211bEMocykucmVkTXVsKG8pfXJldHVybiB0aGlzLmN1cnZlLnBvaW50KHUsZCxjKX07UG9pbnQucHJvdG90eXBlLmFkZD1mdW5jdGlvbiBhZGQoZSl7aWYodGhpcy5pc0luZmluaXR5KCkpcmV0dXJuIGU7aWYoZS5pc0luZmluaXR5KCkpcmV0dXJuIHRoaXM7aWYodGhpcy5jdXJ2ZS5leHRlbmRlZClyZXR1cm4gdGhpcy5fZXh0QWRkKGUpO2Vsc2UgcmV0dXJuIHRoaXMuX3Byb2pBZGQoZSl9O1BvaW50LnByb3RvdHlwZS5tdWw9ZnVuY3Rpb24gbXVsKGUpe2lmKHRoaXMuX2hhc0RvdWJsZXMoZSkpcmV0dXJuIHRoaXMuY3VydmUuX2ZpeGVkTmFmTXVsKHRoaXMsZSk7ZWxzZSByZXR1cm4gdGhpcy5jdXJ2ZS5fd25hZk11bCh0aGlzLGUpfTtQb2ludC5wcm90b3R5cGUubXVsQWRkPWZ1bmN0aW9uIG11bEFkZChlLHQscil7cmV0dXJuIHRoaXMuY3VydmUuX3duYWZNdWxBZGQoMSxbdGhpcyx0XSxbZSxyXSwyLGZhbHNlKX07UG9pbnQucHJvdG90eXBlLmptdWxBZGQ9ZnVuY3Rpb24gam11bEFkZChlLHQscil7cmV0dXJuIHRoaXMuY3VydmUuX3duYWZNdWxBZGQoMSxbdGhpcyx0XSxbZSxyXSwyLHRydWUpfTtQb2ludC5wcm90b3R5cGUubm9ybWFsaXplPWZ1bmN0aW9uIG5vcm1hbGl6ZSgpe2lmKHRoaXMuek9uZSlyZXR1cm4gdGhpczt2YXIgZT10aGlzLnoucmVkSW52bSgpO3RoaXMueD10aGlzLngucmVkTXVsKGUpO3RoaXMueT10aGlzLnkucmVkTXVsKGUpO2lmKHRoaXMudCl0aGlzLnQ9dGhpcy50LnJlZE11bChlKTt0aGlzLno9dGhpcy5jdXJ2ZS5vbmU7dGhpcy56T25lPXRydWU7cmV0dXJuIHRoaXN9O1BvaW50LnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24gbmVnKCl7cmV0dXJuIHRoaXMuY3VydmUucG9pbnQodGhpcy54LnJlZE5lZygpLHRoaXMueSx0aGlzLnosdGhpcy50JiZ0aGlzLnQucmVkTmVnKCkpfTtQb2ludC5wcm90b3R5cGUuZ2V0WD1mdW5jdGlvbiBnZXRYKCl7dGhpcy5ub3JtYWxpemUoKTtyZXR1cm4gdGhpcy54LmZyb21SZWQoKX07UG9pbnQucHJvdG90eXBlLmdldFk9ZnVuY3Rpb24gZ2V0WSgpe3RoaXMubm9ybWFsaXplKCk7cmV0dXJuIHRoaXMueS5mcm9tUmVkKCl9O1BvaW50LnByb3RvdHlwZS5lcT1mdW5jdGlvbiBlcShlKXtyZXR1cm4gdGhpcz09PWV8fHRoaXMuZ2V0WCgpLmNtcChlLmdldFgoKSk9PT0wJiZ0aGlzLmdldFkoKS5jbXAoZS5nZXRZKCkpPT09MH07UG9pbnQucHJvdG90eXBlLmVxWFRvUD1mdW5jdGlvbiBlcVhUb1AoZSl7dmFyIHQ9ZS50b1JlZCh0aGlzLmN1cnZlLnJlZCkucmVkTXVsKHRoaXMueik7aWYodGhpcy54LmNtcCh0KT09PTApcmV0dXJuIHRydWU7dmFyIHI9ZS5jbG9uZSgpO3ZhciBpPXRoaXMuY3VydmUucmVkTi5yZWRNdWwodGhpcy56KTtmb3IoOzspe3IuaWFkZCh0aGlzLmN1cnZlLm4pO2lmKHIuY21wKHRoaXMuY3VydmUucCk+PTApcmV0dXJuIGZhbHNlO3QucmVkSUFkZChpKTtpZih0aGlzLnguY21wKHQpPT09MClyZXR1cm4gdHJ1ZX19O1BvaW50LnByb3RvdHlwZS50b1A9UG9pbnQucHJvdG90eXBlLm5vcm1hbGl6ZTtQb2ludC5wcm90b3R5cGUubWl4ZWRBZGQ9UG9pbnQucHJvdG90eXBlLmFkZH0sOTM1OTpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9dDtpLmJhc2U9cigyNzI3KTtpLnNob3J0PXIoNDcyMCk7aS5tb250PXIoNjY1Myk7aS5lZHdhcmRzPXIoMjcwNSl9LDY2NTM6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoNzExKTt2YXIgbj1yKDM3ODIpO3ZhciBhPXIoMjcyNyk7dmFyIHM9cig0NDAxKTtmdW5jdGlvbiBNb250Q3VydmUoZSl7YS5jYWxsKHRoaXMsXCJtb250XCIsZSk7dGhpcy5hPW5ldyBpKGUuYSwxNikudG9SZWQodGhpcy5yZWQpO3RoaXMuYj1uZXcgaShlLmIsMTYpLnRvUmVkKHRoaXMucmVkKTt0aGlzLmk0PW5ldyBpKDQpLnRvUmVkKHRoaXMucmVkKS5yZWRJbnZtKCk7dGhpcy50d289bmV3IGkoMikudG9SZWQodGhpcy5yZWQpO3RoaXMuYTI0PXRoaXMuaTQucmVkTXVsKHRoaXMuYS5yZWRBZGQodGhpcy50d28pKX1uKE1vbnRDdXJ2ZSxhKTtlLmV4cG9ydHM9TW9udEN1cnZlO01vbnRDdXJ2ZS5wcm90b3R5cGUudmFsaWRhdGU9ZnVuY3Rpb24gdmFsaWRhdGUoZSl7dmFyIHQ9ZS5ub3JtYWxpemUoKS54O3ZhciByPXQucmVkU3FyKCk7dmFyIGk9ci5yZWRNdWwodCkucmVkQWRkKHIucmVkTXVsKHRoaXMuYSkpLnJlZEFkZCh0KTt2YXIgbj1pLnJlZFNxcnQoKTtyZXR1cm4gbi5yZWRTcXIoKS5jbXAoaSk9PT0wfTtmdW5jdGlvbiBQb2ludChlLHQscil7YS5CYXNlUG9pbnQuY2FsbCh0aGlzLGUsXCJwcm9qZWN0aXZlXCIpO2lmKHQ9PT1udWxsJiZyPT09bnVsbCl7dGhpcy54PXRoaXMuY3VydmUub25lO3RoaXMuej10aGlzLmN1cnZlLnplcm99ZWxzZXt0aGlzLng9bmV3IGkodCwxNik7dGhpcy56PW5ldyBpKHIsMTYpO2lmKCF0aGlzLngucmVkKXRoaXMueD10aGlzLngudG9SZWQodGhpcy5jdXJ2ZS5yZWQpO2lmKCF0aGlzLnoucmVkKXRoaXMuej10aGlzLnoudG9SZWQodGhpcy5jdXJ2ZS5yZWQpfX1uKFBvaW50LGEuQmFzZVBvaW50KTtNb250Q3VydmUucHJvdG90eXBlLmRlY29kZVBvaW50PWZ1bmN0aW9uIGRlY29kZVBvaW50KGUsdCl7cmV0dXJuIHRoaXMucG9pbnQocy50b0FycmF5KGUsdCksMSl9O01vbnRDdXJ2ZS5wcm90b3R5cGUucG9pbnQ9ZnVuY3Rpb24gcG9pbnQoZSx0KXtyZXR1cm4gbmV3IFBvaW50KHRoaXMsZSx0KX07TW9udEN1cnZlLnByb3RvdHlwZS5wb2ludEZyb21KU09OPWZ1bmN0aW9uIHBvaW50RnJvbUpTT04oZSl7cmV0dXJuIFBvaW50LmZyb21KU09OKHRoaXMsZSl9O1BvaW50LnByb3RvdHlwZS5wcmVjb21wdXRlPWZ1bmN0aW9uIHByZWNvbXB1dGUoKXt9O1BvaW50LnByb3RvdHlwZS5fZW5jb2RlPWZ1bmN0aW9uIF9lbmNvZGUoKXtyZXR1cm4gdGhpcy5nZXRYKCkudG9BcnJheShcImJlXCIsdGhpcy5jdXJ2ZS5wLmJ5dGVMZW5ndGgoKSl9O1BvaW50LmZyb21KU09OPWZ1bmN0aW9uIGZyb21KU09OKGUsdCl7cmV0dXJuIG5ldyBQb2ludChlLHRbMF0sdFsxXXx8ZS5vbmUpfTtQb2ludC5wcm90b3R5cGUuaW5zcGVjdD1mdW5jdGlvbiBpbnNwZWN0KCl7aWYodGhpcy5pc0luZmluaXR5KCkpcmV0dXJuXCI8RUMgUG9pbnQgSW5maW5pdHk+XCI7cmV0dXJuXCI8RUMgUG9pbnQgeDogXCIrdGhpcy54LmZyb21SZWQoKS50b1N0cmluZygxNiwyKStcIiB6OiBcIit0aGlzLnouZnJvbVJlZCgpLnRvU3RyaW5nKDE2LDIpK1wiPlwifTtQb2ludC5wcm90b3R5cGUuaXNJbmZpbml0eT1mdW5jdGlvbiBpc0luZmluaXR5KCl7cmV0dXJuIHRoaXMuei5jbXBuKDApPT09MH07UG9pbnQucHJvdG90eXBlLmRibD1mdW5jdGlvbiBkYmwoKXt2YXIgZT10aGlzLngucmVkQWRkKHRoaXMueik7dmFyIHQ9ZS5yZWRTcXIoKTt2YXIgcj10aGlzLngucmVkU3ViKHRoaXMueik7dmFyIGk9ci5yZWRTcXIoKTt2YXIgbj10LnJlZFN1YihpKTt2YXIgYT10LnJlZE11bChpKTt2YXIgcz1uLnJlZE11bChpLnJlZEFkZCh0aGlzLmN1cnZlLmEyNC5yZWRNdWwobikpKTtyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChhLHMpfTtQb2ludC5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uIGFkZCgpe3Rocm93IG5ldyBFcnJvcihcIk5vdCBzdXBwb3J0ZWQgb24gTW9udGdvbWVyeSBjdXJ2ZVwiKX07UG9pbnQucHJvdG90eXBlLmRpZmZBZGQ9ZnVuY3Rpb24gZGlmZkFkZChlLHQpe3ZhciByPXRoaXMueC5yZWRBZGQodGhpcy56KTt2YXIgaT10aGlzLngucmVkU3ViKHRoaXMueik7dmFyIG49ZS54LnJlZEFkZChlLnopO3ZhciBhPWUueC5yZWRTdWIoZS56KTt2YXIgcz1hLnJlZE11bChyKTt2YXIgbz1uLnJlZE11bChpKTt2YXIgaD10LnoucmVkTXVsKHMucmVkQWRkKG8pLnJlZFNxcigpKTt2YXIgdT10LngucmVkTXVsKHMucmVkSVN1YihvKS5yZWRTcXIoKSk7cmV0dXJuIHRoaXMuY3VydmUucG9pbnQoaCx1KX07UG9pbnQucHJvdG90eXBlLm11bD1mdW5jdGlvbiBtdWwoZSl7dmFyIHQ9ZS5jbG9uZSgpO3ZhciByPXRoaXM7dmFyIGk9dGhpcy5jdXJ2ZS5wb2ludChudWxsLG51bGwpO3ZhciBuPXRoaXM7Zm9yKHZhciBhPVtdO3QuY21wbigwKSE9PTA7dC5pdXNocm4oMSkpYS5wdXNoKHQuYW5kbG4oMSkpO2Zvcih2YXIgcz1hLmxlbmd0aC0xO3M+PTA7cy0tKXtpZihhW3NdPT09MCl7cj1yLmRpZmZBZGQoaSxuKTtpPWkuZGJsKCl9ZWxzZXtpPXIuZGlmZkFkZChpLG4pO3I9ci5kYmwoKX19cmV0dXJuIGl9O1BvaW50LnByb3RvdHlwZS5tdWxBZGQ9ZnVuY3Rpb24gbXVsQWRkKCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHN1cHBvcnRlZCBvbiBNb250Z29tZXJ5IGN1cnZlXCIpfTtQb2ludC5wcm90b3R5cGUuanVtbEFkZD1mdW5jdGlvbiBqdW1sQWRkKCl7dGhyb3cgbmV3IEVycm9yKFwiTm90IHN1cHBvcnRlZCBvbiBNb250Z29tZXJ5IGN1cnZlXCIpfTtQb2ludC5wcm90b3R5cGUuZXE9ZnVuY3Rpb24gZXEoZSl7cmV0dXJuIHRoaXMuZ2V0WCgpLmNtcChlLmdldFgoKSk9PT0wfTtQb2ludC5wcm90b3R5cGUubm9ybWFsaXplPWZ1bmN0aW9uIG5vcm1hbGl6ZSgpe3RoaXMueD10aGlzLngucmVkTXVsKHRoaXMuei5yZWRJbnZtKCkpO3RoaXMuej10aGlzLmN1cnZlLm9uZTtyZXR1cm4gdGhpc307UG9pbnQucHJvdG90eXBlLmdldFg9ZnVuY3Rpb24gZ2V0WCgpe3RoaXMubm9ybWFsaXplKCk7cmV0dXJuIHRoaXMueC5mcm9tUmVkKCl9fSw0NzIwOmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDQ0MDEpO3ZhciBuPXIoNzExKTt2YXIgYT1yKDM3ODIpO3ZhciBzPXIoMjcyNyk7dmFyIG89aS5hc3NlcnQ7ZnVuY3Rpb24gU2hvcnRDdXJ2ZShlKXtzLmNhbGwodGhpcyxcInNob3J0XCIsZSk7dGhpcy5hPW5ldyBuKGUuYSwxNikudG9SZWQodGhpcy5yZWQpO3RoaXMuYj1uZXcgbihlLmIsMTYpLnRvUmVkKHRoaXMucmVkKTt0aGlzLnRpbnY9dGhpcy50d28ucmVkSW52bSgpO3RoaXMuemVyb0E9dGhpcy5hLmZyb21SZWQoKS5jbXBuKDApPT09MDt0aGlzLnRocmVlQT10aGlzLmEuZnJvbVJlZCgpLnN1Yih0aGlzLnApLmNtcG4oLTMpPT09MDt0aGlzLmVuZG89dGhpcy5fZ2V0RW5kb21vcnBoaXNtKGUpO3RoaXMuX2VuZG9XbmFmVDE9bmV3IEFycmF5KDQpO3RoaXMuX2VuZG9XbmFmVDI9bmV3IEFycmF5KDQpfWEoU2hvcnRDdXJ2ZSxzKTtlLmV4cG9ydHM9U2hvcnRDdXJ2ZTtTaG9ydEN1cnZlLnByb3RvdHlwZS5fZ2V0RW5kb21vcnBoaXNtPWZ1bmN0aW9uIF9nZXRFbmRvbW9ycGhpc20oZSl7aWYoIXRoaXMuemVyb0F8fCF0aGlzLmd8fCF0aGlzLm58fHRoaXMucC5tb2RuKDMpIT09MSlyZXR1cm47dmFyIHQ7dmFyIHI7aWYoZS5iZXRhKXt0PW5ldyBuKGUuYmV0YSwxNikudG9SZWQodGhpcy5yZWQpfWVsc2V7dmFyIGk9dGhpcy5fZ2V0RW5kb1Jvb3RzKHRoaXMucCk7dD1pWzBdLmNtcChpWzFdKTwwP2lbMF06aVsxXTt0PXQudG9SZWQodGhpcy5yZWQpfWlmKGUubGFtYmRhKXtyPW5ldyBuKGUubGFtYmRhLDE2KX1lbHNle3ZhciBhPXRoaXMuX2dldEVuZG9Sb290cyh0aGlzLm4pO2lmKHRoaXMuZy5tdWwoYVswXSkueC5jbXAodGhpcy5nLngucmVkTXVsKHQpKT09PTApe3I9YVswXX1lbHNle3I9YVsxXTtvKHRoaXMuZy5tdWwocikueC5jbXAodGhpcy5nLngucmVkTXVsKHQpKT09PTApfX12YXIgcztpZihlLmJhc2lzKXtzPWUuYmFzaXMubWFwKChmdW5jdGlvbihlKXtyZXR1cm57YTpuZXcgbihlLmEsMTYpLGI6bmV3IG4oZS5iLDE2KX19KSl9ZWxzZXtzPXRoaXMuX2dldEVuZG9CYXNpcyhyKX1yZXR1cm57YmV0YTp0LGxhbWJkYTpyLGJhc2lzOnN9fTtTaG9ydEN1cnZlLnByb3RvdHlwZS5fZ2V0RW5kb1Jvb3RzPWZ1bmN0aW9uIF9nZXRFbmRvUm9vdHMoZSl7dmFyIHQ9ZT09PXRoaXMucD90aGlzLnJlZDpuLm1vbnQoZSk7dmFyIHI9bmV3IG4oMikudG9SZWQodCkucmVkSW52bSgpO3ZhciBpPXIucmVkTmVnKCk7dmFyIGE9bmV3IG4oMykudG9SZWQodCkucmVkTmVnKCkucmVkU3FydCgpLnJlZE11bChyKTt2YXIgcz1pLnJlZEFkZChhKS5mcm9tUmVkKCk7dmFyIG89aS5yZWRTdWIoYSkuZnJvbVJlZCgpO3JldHVybltzLG9dfTtTaG9ydEN1cnZlLnByb3RvdHlwZS5fZ2V0RW5kb0Jhc2lzPWZ1bmN0aW9uIF9nZXRFbmRvQmFzaXMoZSl7dmFyIHQ9dGhpcy5uLnVzaHJuKE1hdGguZmxvb3IodGhpcy5uLmJpdExlbmd0aCgpLzIpKTt2YXIgcj1lO3ZhciBpPXRoaXMubi5jbG9uZSgpO3ZhciBhPW5ldyBuKDEpO3ZhciBzPW5ldyBuKDApO3ZhciBvPW5ldyBuKDApO3ZhciBoPW5ldyBuKDEpO3ZhciB1O3ZhciBkO3ZhciBjO3ZhciBsO3ZhciBwO3ZhciB2O3ZhciBiO3ZhciBtPTA7dmFyIHk7dmFyIGc7d2hpbGUoci5jbXBuKDApIT09MCl7dmFyIF89aS5kaXYocik7eT1pLnN1YihfLm11bChyKSk7Zz1vLnN1YihfLm11bChhKSk7dmFyIHc9aC5zdWIoXy5tdWwocykpO2lmKCFjJiZ5LmNtcCh0KTwwKXt1PWIubmVnKCk7ZD1hO2M9eS5uZWcoKTtsPWd9ZWxzZSBpZihjJiYrK209PT0yKXticmVha31iPXk7aT1yO3I9eTtvPWE7YT1nO2g9cztzPXd9cD15Lm5lZygpO3Y9Zzt2YXIgTT1jLnNxcigpLmFkZChsLnNxcigpKTt2YXIgQj1wLnNxcigpLmFkZCh2LnNxcigpKTtpZihCLmNtcChNKT49MCl7cD11O3Y9ZH1pZihjLm5lZ2F0aXZlKXtjPWMubmVnKCk7bD1sLm5lZygpfWlmKHAubmVnYXRpdmUpe3A9cC5uZWcoKTt2PXYubmVnKCl9cmV0dXJuW3thOmMsYjpsfSx7YTpwLGI6dn1dfTtTaG9ydEN1cnZlLnByb3RvdHlwZS5fZW5kb1NwbGl0PWZ1bmN0aW9uIF9lbmRvU3BsaXQoZSl7dmFyIHQ9dGhpcy5lbmRvLmJhc2lzO3ZhciByPXRbMF07dmFyIGk9dFsxXTt2YXIgbj1pLmIubXVsKGUpLmRpdlJvdW5kKHRoaXMubik7dmFyIGE9ci5iLm5lZygpLm11bChlKS5kaXZSb3VuZCh0aGlzLm4pO3ZhciBzPW4ubXVsKHIuYSk7dmFyIG89YS5tdWwoaS5hKTt2YXIgaD1uLm11bChyLmIpO3ZhciB1PWEubXVsKGkuYik7dmFyIGQ9ZS5zdWIocykuc3ViKG8pO3ZhciBjPWguYWRkKHUpLm5lZygpO3JldHVybntrMTpkLGsyOmN9fTtTaG9ydEN1cnZlLnByb3RvdHlwZS5wb2ludEZyb21YPWZ1bmN0aW9uIHBvaW50RnJvbVgoZSx0KXtlPW5ldyBuKGUsMTYpO2lmKCFlLnJlZCllPWUudG9SZWQodGhpcy5yZWQpO3ZhciByPWUucmVkU3FyKCkucmVkTXVsKGUpLnJlZElBZGQoZS5yZWRNdWwodGhpcy5hKSkucmVkSUFkZCh0aGlzLmIpO3ZhciBpPXIucmVkU3FydCgpO2lmKGkucmVkU3FyKCkucmVkU3ViKHIpLmNtcCh0aGlzLnplcm8pIT09MCl0aHJvdyBuZXcgRXJyb3IoXCJpbnZhbGlkIHBvaW50XCIpO3ZhciBhPWkuZnJvbVJlZCgpLmlzT2RkKCk7aWYodCYmIWF8fCF0JiZhKWk9aS5yZWROZWcoKTtyZXR1cm4gdGhpcy5wb2ludChlLGkpfTtTaG9ydEN1cnZlLnByb3RvdHlwZS52YWxpZGF0ZT1mdW5jdGlvbiB2YWxpZGF0ZShlKXtpZihlLmluZilyZXR1cm4gdHJ1ZTt2YXIgdD1lLng7dmFyIHI9ZS55O3ZhciBpPXRoaXMuYS5yZWRNdWwodCk7dmFyIG49dC5yZWRTcXIoKS5yZWRNdWwodCkucmVkSUFkZChpKS5yZWRJQWRkKHRoaXMuYik7cmV0dXJuIHIucmVkU3FyKCkucmVkSVN1YihuKS5jbXBuKDApPT09MH07U2hvcnRDdXJ2ZS5wcm90b3R5cGUuX2VuZG9XbmFmTXVsQWRkPWZ1bmN0aW9uIF9lbmRvV25hZk11bEFkZChlLHQscil7dmFyIGk9dGhpcy5fZW5kb1duYWZUMTt2YXIgbj10aGlzLl9lbmRvV25hZlQyO2Zvcih2YXIgYT0wO2E8ZS5sZW5ndGg7YSsrKXt2YXIgcz10aGlzLl9lbmRvU3BsaXQodFthXSk7dmFyIG89ZVthXTt2YXIgaD1vLl9nZXRCZXRhKCk7aWYocy5rMS5uZWdhdGl2ZSl7cy5rMS5pbmVnKCk7bz1vLm5lZyh0cnVlKX1pZihzLmsyLm5lZ2F0aXZlKXtzLmsyLmluZWcoKTtoPWgubmVnKHRydWUpfWlbYSoyXT1vO2lbYSoyKzFdPWg7blthKjJdPXMuazE7blthKjIrMV09cy5rMn12YXIgdT10aGlzLl93bmFmTXVsQWRkKDEsaSxuLGEqMixyKTtmb3IodmFyIGQ9MDtkPGEqMjtkKyspe2lbZF09bnVsbDtuW2RdPW51bGx9cmV0dXJuIHV9O2Z1bmN0aW9uIFBvaW50KGUsdCxyLGkpe3MuQmFzZVBvaW50LmNhbGwodGhpcyxlLFwiYWZmaW5lXCIpO2lmKHQ9PT1udWxsJiZyPT09bnVsbCl7dGhpcy54PW51bGw7dGhpcy55PW51bGw7dGhpcy5pbmY9dHJ1ZX1lbHNle3RoaXMueD1uZXcgbih0LDE2KTt0aGlzLnk9bmV3IG4ociwxNik7aWYoaSl7dGhpcy54LmZvcmNlUmVkKHRoaXMuY3VydmUucmVkKTt0aGlzLnkuZm9yY2VSZWQodGhpcy5jdXJ2ZS5yZWQpfWlmKCF0aGlzLngucmVkKXRoaXMueD10aGlzLngudG9SZWQodGhpcy5jdXJ2ZS5yZWQpO2lmKCF0aGlzLnkucmVkKXRoaXMueT10aGlzLnkudG9SZWQodGhpcy5jdXJ2ZS5yZWQpO3RoaXMuaW5mPWZhbHNlfX1hKFBvaW50LHMuQmFzZVBvaW50KTtTaG9ydEN1cnZlLnByb3RvdHlwZS5wb2ludD1mdW5jdGlvbiBwb2ludChlLHQscil7cmV0dXJuIG5ldyBQb2ludCh0aGlzLGUsdCxyKX07U2hvcnRDdXJ2ZS5wcm90b3R5cGUucG9pbnRGcm9tSlNPTj1mdW5jdGlvbiBwb2ludEZyb21KU09OKGUsdCl7cmV0dXJuIFBvaW50LmZyb21KU09OKHRoaXMsZSx0KX07UG9pbnQucHJvdG90eXBlLl9nZXRCZXRhPWZ1bmN0aW9uIF9nZXRCZXRhKCl7aWYoIXRoaXMuY3VydmUuZW5kbylyZXR1cm47dmFyIGU9dGhpcy5wcmVjb21wdXRlZDtpZihlJiZlLmJldGEpcmV0dXJuIGUuYmV0YTt2YXIgdD10aGlzLmN1cnZlLnBvaW50KHRoaXMueC5yZWRNdWwodGhpcy5jdXJ2ZS5lbmRvLmJldGEpLHRoaXMueSk7aWYoZSl7dmFyIHI9dGhpcy5jdXJ2ZTt2YXIgZW5kb011bD1mdW5jdGlvbihlKXtyZXR1cm4gci5wb2ludChlLngucmVkTXVsKHIuZW5kby5iZXRhKSxlLnkpfTtlLmJldGE9dDt0LnByZWNvbXB1dGVkPXtiZXRhOm51bGwsbmFmOmUubmFmJiZ7d25kOmUubmFmLnduZCxwb2ludHM6ZS5uYWYucG9pbnRzLm1hcChlbmRvTXVsKX0sZG91YmxlczplLmRvdWJsZXMmJntzdGVwOmUuZG91Ymxlcy5zdGVwLHBvaW50czplLmRvdWJsZXMucG9pbnRzLm1hcChlbmRvTXVsKX19fXJldHVybiB0fTtQb2ludC5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uIHRvSlNPTigpe2lmKCF0aGlzLnByZWNvbXB1dGVkKXJldHVyblt0aGlzLngsdGhpcy55XTtyZXR1cm5bdGhpcy54LHRoaXMueSx0aGlzLnByZWNvbXB1dGVkJiZ7ZG91Ymxlczp0aGlzLnByZWNvbXB1dGVkLmRvdWJsZXMmJntzdGVwOnRoaXMucHJlY29tcHV0ZWQuZG91Ymxlcy5zdGVwLHBvaW50czp0aGlzLnByZWNvbXB1dGVkLmRvdWJsZXMucG9pbnRzLnNsaWNlKDEpfSxuYWY6dGhpcy5wcmVjb21wdXRlZC5uYWYmJnt3bmQ6dGhpcy5wcmVjb21wdXRlZC5uYWYud25kLHBvaW50czp0aGlzLnByZWNvbXB1dGVkLm5hZi5wb2ludHMuc2xpY2UoMSl9fV19O1BvaW50LmZyb21KU09OPWZ1bmN0aW9uIGZyb21KU09OKGUsdCxyKXtpZih0eXBlb2YgdD09PVwic3RyaW5nXCIpdD1KU09OLnBhcnNlKHQpO3ZhciBpPWUucG9pbnQodFswXSx0WzFdLHIpO2lmKCF0WzJdKXJldHVybiBpO2Z1bmN0aW9uIG9iajJwb2ludCh0KXtyZXR1cm4gZS5wb2ludCh0WzBdLHRbMV0scil9dmFyIG49dFsyXTtpLnByZWNvbXB1dGVkPXtiZXRhOm51bGwsZG91YmxlczpuLmRvdWJsZXMmJntzdGVwOm4uZG91Ymxlcy5zdGVwLHBvaW50czpbaV0uY29uY2F0KG4uZG91Ymxlcy5wb2ludHMubWFwKG9iajJwb2ludCkpfSxuYWY6bi5uYWYmJnt3bmQ6bi5uYWYud25kLHBvaW50czpbaV0uY29uY2F0KG4ubmFmLnBvaW50cy5tYXAob2JqMnBvaW50KSl9fTtyZXR1cm4gaX07UG9pbnQucHJvdG90eXBlLmluc3BlY3Q9ZnVuY3Rpb24gaW5zcGVjdCgpe2lmKHRoaXMuaXNJbmZpbml0eSgpKXJldHVyblwiPEVDIFBvaW50IEluZmluaXR5PlwiO3JldHVyblwiPEVDIFBvaW50IHg6IFwiK3RoaXMueC5mcm9tUmVkKCkudG9TdHJpbmcoMTYsMikrXCIgeTogXCIrdGhpcy55LmZyb21SZWQoKS50b1N0cmluZygxNiwyKStcIj5cIn07UG9pbnQucHJvdG90eXBlLmlzSW5maW5pdHk9ZnVuY3Rpb24gaXNJbmZpbml0eSgpe3JldHVybiB0aGlzLmluZn07UG9pbnQucHJvdG90eXBlLmFkZD1mdW5jdGlvbiBhZGQoZSl7aWYodGhpcy5pbmYpcmV0dXJuIGU7aWYoZS5pbmYpcmV0dXJuIHRoaXM7aWYodGhpcy5lcShlKSlyZXR1cm4gdGhpcy5kYmwoKTtpZih0aGlzLm5lZygpLmVxKGUpKXJldHVybiB0aGlzLmN1cnZlLnBvaW50KG51bGwsbnVsbCk7aWYodGhpcy54LmNtcChlLngpPT09MClyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChudWxsLG51bGwpO3ZhciB0PXRoaXMueS5yZWRTdWIoZS55KTtpZih0LmNtcG4oMCkhPT0wKXQ9dC5yZWRNdWwodGhpcy54LnJlZFN1YihlLngpLnJlZEludm0oKSk7dmFyIHI9dC5yZWRTcXIoKS5yZWRJU3ViKHRoaXMueCkucmVkSVN1YihlLngpO3ZhciBpPXQucmVkTXVsKHRoaXMueC5yZWRTdWIocikpLnJlZElTdWIodGhpcy55KTtyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChyLGkpfTtQb2ludC5wcm90b3R5cGUuZGJsPWZ1bmN0aW9uIGRibCgpe2lmKHRoaXMuaW5mKXJldHVybiB0aGlzO3ZhciBlPXRoaXMueS5yZWRBZGQodGhpcy55KTtpZihlLmNtcG4oMCk9PT0wKXJldHVybiB0aGlzLmN1cnZlLnBvaW50KG51bGwsbnVsbCk7dmFyIHQ9dGhpcy5jdXJ2ZS5hO3ZhciByPXRoaXMueC5yZWRTcXIoKTt2YXIgaT1lLnJlZEludm0oKTt2YXIgbj1yLnJlZEFkZChyKS5yZWRJQWRkKHIpLnJlZElBZGQodCkucmVkTXVsKGkpO3ZhciBhPW4ucmVkU3FyKCkucmVkSVN1Yih0aGlzLngucmVkQWRkKHRoaXMueCkpO3ZhciBzPW4ucmVkTXVsKHRoaXMueC5yZWRTdWIoYSkpLnJlZElTdWIodGhpcy55KTtyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChhLHMpfTtQb2ludC5wcm90b3R5cGUuZ2V0WD1mdW5jdGlvbiBnZXRYKCl7cmV0dXJuIHRoaXMueC5mcm9tUmVkKCl9O1BvaW50LnByb3RvdHlwZS5nZXRZPWZ1bmN0aW9uIGdldFkoKXtyZXR1cm4gdGhpcy55LmZyb21SZWQoKX07UG9pbnQucHJvdG90eXBlLm11bD1mdW5jdGlvbiBtdWwoZSl7ZT1uZXcgbihlLDE2KTtpZih0aGlzLmlzSW5maW5pdHkoKSlyZXR1cm4gdGhpcztlbHNlIGlmKHRoaXMuX2hhc0RvdWJsZXMoZSkpcmV0dXJuIHRoaXMuY3VydmUuX2ZpeGVkTmFmTXVsKHRoaXMsZSk7ZWxzZSBpZih0aGlzLmN1cnZlLmVuZG8pcmV0dXJuIHRoaXMuY3VydmUuX2VuZG9XbmFmTXVsQWRkKFt0aGlzXSxbZV0pO2Vsc2UgcmV0dXJuIHRoaXMuY3VydmUuX3duYWZNdWwodGhpcyxlKX07UG9pbnQucHJvdG90eXBlLm11bEFkZD1mdW5jdGlvbiBtdWxBZGQoZSx0LHIpe3ZhciBpPVt0aGlzLHRdO3ZhciBuPVtlLHJdO2lmKHRoaXMuY3VydmUuZW5kbylyZXR1cm4gdGhpcy5jdXJ2ZS5fZW5kb1duYWZNdWxBZGQoaSxuKTtlbHNlIHJldHVybiB0aGlzLmN1cnZlLl93bmFmTXVsQWRkKDEsaSxuLDIpfTtQb2ludC5wcm90b3R5cGUuam11bEFkZD1mdW5jdGlvbiBqbXVsQWRkKGUsdCxyKXt2YXIgaT1bdGhpcyx0XTt2YXIgbj1bZSxyXTtpZih0aGlzLmN1cnZlLmVuZG8pcmV0dXJuIHRoaXMuY3VydmUuX2VuZG9XbmFmTXVsQWRkKGksbix0cnVlKTtlbHNlIHJldHVybiB0aGlzLmN1cnZlLl93bmFmTXVsQWRkKDEsaSxuLDIsdHJ1ZSl9O1BvaW50LnByb3RvdHlwZS5lcT1mdW5jdGlvbiBlcShlKXtyZXR1cm4gdGhpcz09PWV8fHRoaXMuaW5mPT09ZS5pbmYmJih0aGlzLmluZnx8dGhpcy54LmNtcChlLngpPT09MCYmdGhpcy55LmNtcChlLnkpPT09MCl9O1BvaW50LnByb3RvdHlwZS5uZWc9ZnVuY3Rpb24gbmVnKGUpe2lmKHRoaXMuaW5mKXJldHVybiB0aGlzO3ZhciB0PXRoaXMuY3VydmUucG9pbnQodGhpcy54LHRoaXMueS5yZWROZWcoKSk7aWYoZSYmdGhpcy5wcmVjb21wdXRlZCl7dmFyIHI9dGhpcy5wcmVjb21wdXRlZDt2YXIgbmVnYXRlPWZ1bmN0aW9uKGUpe3JldHVybiBlLm5lZygpfTt0LnByZWNvbXB1dGVkPXtuYWY6ci5uYWYmJnt3bmQ6ci5uYWYud25kLHBvaW50czpyLm5hZi5wb2ludHMubWFwKG5lZ2F0ZSl9LGRvdWJsZXM6ci5kb3VibGVzJiZ7c3RlcDpyLmRvdWJsZXMuc3RlcCxwb2ludHM6ci5kb3VibGVzLnBvaW50cy5tYXAobmVnYXRlKX19fXJldHVybiB0fTtQb2ludC5wcm90b3R5cGUudG9KPWZ1bmN0aW9uIHRvSigpe2lmKHRoaXMuaW5mKXJldHVybiB0aGlzLmN1cnZlLmpwb2ludChudWxsLG51bGwsbnVsbCk7dmFyIGU9dGhpcy5jdXJ2ZS5qcG9pbnQodGhpcy54LHRoaXMueSx0aGlzLmN1cnZlLm9uZSk7cmV0dXJuIGV9O2Z1bmN0aW9uIEpQb2ludChlLHQscixpKXtzLkJhc2VQb2ludC5jYWxsKHRoaXMsZSxcImphY29iaWFuXCIpO2lmKHQ9PT1udWxsJiZyPT09bnVsbCYmaT09PW51bGwpe3RoaXMueD10aGlzLmN1cnZlLm9uZTt0aGlzLnk9dGhpcy5jdXJ2ZS5vbmU7dGhpcy56PW5ldyBuKDApfWVsc2V7dGhpcy54PW5ldyBuKHQsMTYpO3RoaXMueT1uZXcgbihyLDE2KTt0aGlzLno9bmV3IG4oaSwxNil9aWYoIXRoaXMueC5yZWQpdGhpcy54PXRoaXMueC50b1JlZCh0aGlzLmN1cnZlLnJlZCk7aWYoIXRoaXMueS5yZWQpdGhpcy55PXRoaXMueS50b1JlZCh0aGlzLmN1cnZlLnJlZCk7aWYoIXRoaXMuei5yZWQpdGhpcy56PXRoaXMuei50b1JlZCh0aGlzLmN1cnZlLnJlZCk7dGhpcy56T25lPXRoaXMuej09PXRoaXMuY3VydmUub25lfWEoSlBvaW50LHMuQmFzZVBvaW50KTtTaG9ydEN1cnZlLnByb3RvdHlwZS5qcG9pbnQ9ZnVuY3Rpb24ganBvaW50KGUsdCxyKXtyZXR1cm4gbmV3IEpQb2ludCh0aGlzLGUsdCxyKX07SlBvaW50LnByb3RvdHlwZS50b1A9ZnVuY3Rpb24gdG9QKCl7aWYodGhpcy5pc0luZmluaXR5KCkpcmV0dXJuIHRoaXMuY3VydmUucG9pbnQobnVsbCxudWxsKTt2YXIgZT10aGlzLnoucmVkSW52bSgpO3ZhciB0PWUucmVkU3FyKCk7dmFyIHI9dGhpcy54LnJlZE11bCh0KTt2YXIgaT10aGlzLnkucmVkTXVsKHQpLnJlZE11bChlKTtyZXR1cm4gdGhpcy5jdXJ2ZS5wb2ludChyLGkpfTtKUG9pbnQucHJvdG90eXBlLm5lZz1mdW5jdGlvbiBuZWcoKXtyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQodGhpcy54LHRoaXMueS5yZWROZWcoKSx0aGlzLnopfTtKUG9pbnQucHJvdG90eXBlLmFkZD1mdW5jdGlvbiBhZGQoZSl7aWYodGhpcy5pc0luZmluaXR5KCkpcmV0dXJuIGU7aWYoZS5pc0luZmluaXR5KCkpcmV0dXJuIHRoaXM7dmFyIHQ9ZS56LnJlZFNxcigpO3ZhciByPXRoaXMuei5yZWRTcXIoKTt2YXIgaT10aGlzLngucmVkTXVsKHQpO3ZhciBuPWUueC5yZWRNdWwocik7dmFyIGE9dGhpcy55LnJlZE11bCh0LnJlZE11bChlLnopKTt2YXIgcz1lLnkucmVkTXVsKHIucmVkTXVsKHRoaXMueikpO3ZhciBvPWkucmVkU3ViKG4pO3ZhciBoPWEucmVkU3ViKHMpO2lmKG8uY21wbigwKT09PTApe2lmKGguY21wbigwKSE9PTApcmV0dXJuIHRoaXMuY3VydmUuanBvaW50KG51bGwsbnVsbCxudWxsKTtlbHNlIHJldHVybiB0aGlzLmRibCgpfXZhciB1PW8ucmVkU3FyKCk7dmFyIGQ9dS5yZWRNdWwobyk7dmFyIGM9aS5yZWRNdWwodSk7dmFyIGw9aC5yZWRTcXIoKS5yZWRJQWRkKGQpLnJlZElTdWIoYykucmVkSVN1YihjKTt2YXIgcD1oLnJlZE11bChjLnJlZElTdWIobCkpLnJlZElTdWIoYS5yZWRNdWwoZCkpO3ZhciB2PXRoaXMuei5yZWRNdWwoZS56KS5yZWRNdWwobyk7cmV0dXJuIHRoaXMuY3VydmUuanBvaW50KGwscCx2KX07SlBvaW50LnByb3RvdHlwZS5taXhlZEFkZD1mdW5jdGlvbiBtaXhlZEFkZChlKXtpZih0aGlzLmlzSW5maW5pdHkoKSlyZXR1cm4gZS50b0ooKTtpZihlLmlzSW5maW5pdHkoKSlyZXR1cm4gdGhpczt2YXIgdD10aGlzLnoucmVkU3FyKCk7dmFyIHI9dGhpcy54O3ZhciBpPWUueC5yZWRNdWwodCk7dmFyIG49dGhpcy55O3ZhciBhPWUueS5yZWRNdWwodCkucmVkTXVsKHRoaXMueik7dmFyIHM9ci5yZWRTdWIoaSk7dmFyIG89bi5yZWRTdWIoYSk7aWYocy5jbXBuKDApPT09MCl7aWYoby5jbXBuKDApIT09MClyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQobnVsbCxudWxsLG51bGwpO2Vsc2UgcmV0dXJuIHRoaXMuZGJsKCl9dmFyIGg9cy5yZWRTcXIoKTt2YXIgdT1oLnJlZE11bChzKTt2YXIgZD1yLnJlZE11bChoKTt2YXIgYz1vLnJlZFNxcigpLnJlZElBZGQodSkucmVkSVN1YihkKS5yZWRJU3ViKGQpO3ZhciBsPW8ucmVkTXVsKGQucmVkSVN1YihjKSkucmVkSVN1YihuLnJlZE11bCh1KSk7dmFyIHA9dGhpcy56LnJlZE11bChzKTtyZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQoYyxsLHApfTtKUG9pbnQucHJvdG90eXBlLmRibHA9ZnVuY3Rpb24gZGJscChlKXtpZihlPT09MClyZXR1cm4gdGhpcztpZih0aGlzLmlzSW5maW5pdHkoKSlyZXR1cm4gdGhpcztpZighZSlyZXR1cm4gdGhpcy5kYmwoKTtpZih0aGlzLmN1cnZlLnplcm9BfHx0aGlzLmN1cnZlLnRocmVlQSl7dmFyIHQ9dGhpcztmb3IodmFyIHI9MDtyPGU7cisrKXQ9dC5kYmwoKTtyZXR1cm4gdH12YXIgaT10aGlzLmN1cnZlLmE7dmFyIG49dGhpcy5jdXJ2ZS50aW52O3ZhciBhPXRoaXMueDt2YXIgcz10aGlzLnk7dmFyIG89dGhpcy56O3ZhciBoPW8ucmVkU3FyKCkucmVkU3FyKCk7dmFyIHU9cy5yZWRBZGQocyk7Zm9yKHZhciByPTA7cjxlO3IrKyl7dmFyIGQ9YS5yZWRTcXIoKTt2YXIgYz11LnJlZFNxcigpO3ZhciBsPWMucmVkU3FyKCk7dmFyIHA9ZC5yZWRBZGQoZCkucmVkSUFkZChkKS5yZWRJQWRkKGkucmVkTXVsKGgpKTt2YXIgdj1hLnJlZE11bChjKTt2YXIgYj1wLnJlZFNxcigpLnJlZElTdWIodi5yZWRBZGQodikpO3ZhciBtPXYucmVkSVN1YihiKTt2YXIgeT1wLnJlZE11bChtKTt5PXkucmVkSUFkZCh5KS5yZWRJU3ViKGwpO3ZhciBnPXUucmVkTXVsKG8pO2lmKHIrMTxlKWg9aC5yZWRNdWwobCk7YT1iO289Zzt1PXl9cmV0dXJuIHRoaXMuY3VydmUuanBvaW50KGEsdS5yZWRNdWwobiksbyl9O0pQb2ludC5wcm90b3R5cGUuZGJsPWZ1bmN0aW9uIGRibCgpe2lmKHRoaXMuaXNJbmZpbml0eSgpKXJldHVybiB0aGlzO2lmKHRoaXMuY3VydmUuemVyb0EpcmV0dXJuIHRoaXMuX3plcm9EYmwoKTtlbHNlIGlmKHRoaXMuY3VydmUudGhyZWVBKXJldHVybiB0aGlzLl90aHJlZURibCgpO2Vsc2UgcmV0dXJuIHRoaXMuX2RibCgpfTtKUG9pbnQucHJvdG90eXBlLl96ZXJvRGJsPWZ1bmN0aW9uIF96ZXJvRGJsKCl7dmFyIGU7dmFyIHQ7dmFyIHI7aWYodGhpcy56T25lKXt2YXIgaT10aGlzLngucmVkU3FyKCk7dmFyIG49dGhpcy55LnJlZFNxcigpO3ZhciBhPW4ucmVkU3FyKCk7dmFyIHM9dGhpcy54LnJlZEFkZChuKS5yZWRTcXIoKS5yZWRJU3ViKGkpLnJlZElTdWIoYSk7cz1zLnJlZElBZGQocyk7dmFyIG89aS5yZWRBZGQoaSkucmVkSUFkZChpKTt2YXIgaD1vLnJlZFNxcigpLnJlZElTdWIocykucmVkSVN1YihzKTt2YXIgdT1hLnJlZElBZGQoYSk7dT11LnJlZElBZGQodSk7dT11LnJlZElBZGQodSk7ZT1oO3Q9by5yZWRNdWwocy5yZWRJU3ViKGgpKS5yZWRJU3ViKHUpO3I9dGhpcy55LnJlZEFkZCh0aGlzLnkpfWVsc2V7dmFyIGQ9dGhpcy54LnJlZFNxcigpO3ZhciBjPXRoaXMueS5yZWRTcXIoKTt2YXIgbD1jLnJlZFNxcigpO3ZhciBwPXRoaXMueC5yZWRBZGQoYykucmVkU3FyKCkucmVkSVN1YihkKS5yZWRJU3ViKGwpO3A9cC5yZWRJQWRkKHApO3ZhciB2PWQucmVkQWRkKGQpLnJlZElBZGQoZCk7dmFyIGI9di5yZWRTcXIoKTt2YXIgbT1sLnJlZElBZGQobCk7bT1tLnJlZElBZGQobSk7bT1tLnJlZElBZGQobSk7ZT1iLnJlZElTdWIocCkucmVkSVN1YihwKTt0PXYucmVkTXVsKHAucmVkSVN1YihlKSkucmVkSVN1YihtKTtyPXRoaXMueS5yZWRNdWwodGhpcy56KTtyPXIucmVkSUFkZChyKX1yZXR1cm4gdGhpcy5jdXJ2ZS5qcG9pbnQoZSx0LHIpfTtKUG9pbnQucHJvdG90eXBlLl90aHJlZURibD1mdW5jdGlvbiBfdGhyZWVEYmwoKXt2YXIgZTt2YXIgdDt2YXIgcjtpZih0aGlzLnpPbmUpe3ZhciBpPXRoaXMueC5yZWRTcXIoKTt2YXIgbj10aGlzLnkucmVkU3FyKCk7dmFyIGE9bi5yZWRTcXIoKTt2YXIgcz10aGlzLngucmVkQWRkKG4pLnJlZFNxcigpLnJlZElTdWIoaSkucmVkSVN1YihhKTtzPXMucmVkSUFkZChzKTt2YXIgbz1pLnJlZEFkZChpKS5yZWRJQWRkKGkpLnJlZElBZGQodGhpcy5jdXJ2ZS5hKTt2YXIgaD1vLnJlZFNxcigpLnJlZElTdWIocykucmVkSVN1YihzKTtlPWg7dmFyIHU9YS5yZWRJQWRkKGEpO3U9dS5yZWRJQWRkKHUpO3U9dS5yZWRJQWRkKHUpO3Q9by5yZWRNdWwocy5yZWRJU3ViKGgpKS5yZWRJU3ViKHUpO3I9dGhpcy55LnJlZEFkZCh0aGlzLnkpfWVsc2V7dmFyIGQ9dGhpcy56LnJlZFNxcigpO3ZhciBjPXRoaXMueS5yZWRTcXIoKTt2YXIgbD10aGlzLngucmVkTXVsKGMpO3ZhciBwPXRoaXMueC5yZWRTdWIoZCkucmVkTXVsKHRoaXMueC5yZWRBZGQoZCkpO3A9cC5yZWRBZGQocCkucmVkSUFkZChwKTt2YXIgdj1sLnJlZElBZGQobCk7dj12LnJlZElBZGQodik7dmFyIGI9di5yZWRBZGQodik7ZT1wLnJlZFNxcigpLnJlZElTdWIoYik7cj10aGlzLnkucmVkQWRkKHRoaXMueikucmVkU3FyKCkucmVkSVN1YihjKS5yZWRJU3ViKGQpO3ZhciBtPWMucmVkU3FyKCk7bT1tLnJlZElBZGQobSk7bT1tLnJlZElBZGQobSk7bT1tLnJlZElBZGQobSk7dD1wLnJlZE11bCh2LnJlZElTdWIoZSkpLnJlZElTdWIobSl9cmV0dXJuIHRoaXMuY3VydmUuanBvaW50KGUsdCxyKX07SlBvaW50LnByb3RvdHlwZS5fZGJsPWZ1bmN0aW9uIF9kYmwoKXt2YXIgZT10aGlzLmN1cnZlLmE7dmFyIHQ9dGhpcy54O3ZhciByPXRoaXMueTt2YXIgaT10aGlzLno7dmFyIG49aS5yZWRTcXIoKS5yZWRTcXIoKTt2YXIgYT10LnJlZFNxcigpO3ZhciBzPXIucmVkU3FyKCk7dmFyIG89YS5yZWRBZGQoYSkucmVkSUFkZChhKS5yZWRJQWRkKGUucmVkTXVsKG4pKTt2YXIgaD10LnJlZEFkZCh0KTtoPWgucmVkSUFkZChoKTt2YXIgdT1oLnJlZE11bChzKTt2YXIgZD1vLnJlZFNxcigpLnJlZElTdWIodS5yZWRBZGQodSkpO3ZhciBjPXUucmVkSVN1YihkKTt2YXIgbD1zLnJlZFNxcigpO2w9bC5yZWRJQWRkKGwpO2w9bC5yZWRJQWRkKGwpO2w9bC5yZWRJQWRkKGwpO3ZhciBwPW8ucmVkTXVsKGMpLnJlZElTdWIobCk7dmFyIHY9ci5yZWRBZGQocikucmVkTXVsKGkpO3JldHVybiB0aGlzLmN1cnZlLmpwb2ludChkLHAsdil9O0pQb2ludC5wcm90b3R5cGUudHJwbD1mdW5jdGlvbiB0cnBsKCl7aWYoIXRoaXMuY3VydmUuemVyb0EpcmV0dXJuIHRoaXMuZGJsKCkuYWRkKHRoaXMpO3ZhciBlPXRoaXMueC5yZWRTcXIoKTt2YXIgdD10aGlzLnkucmVkU3FyKCk7dmFyIHI9dGhpcy56LnJlZFNxcigpO3ZhciBpPXQucmVkU3FyKCk7dmFyIG49ZS5yZWRBZGQoZSkucmVkSUFkZChlKTt2YXIgYT1uLnJlZFNxcigpO3ZhciBzPXRoaXMueC5yZWRBZGQodCkucmVkU3FyKCkucmVkSVN1YihlKS5yZWRJU3ViKGkpO3M9cy5yZWRJQWRkKHMpO3M9cy5yZWRBZGQocykucmVkSUFkZChzKTtzPXMucmVkSVN1YihhKTt2YXIgbz1zLnJlZFNxcigpO3ZhciBoPWkucmVkSUFkZChpKTtoPWgucmVkSUFkZChoKTtoPWgucmVkSUFkZChoKTtoPWgucmVkSUFkZChoKTt2YXIgdT1uLnJlZElBZGQocykucmVkU3FyKCkucmVkSVN1YihhKS5yZWRJU3ViKG8pLnJlZElTdWIoaCk7dmFyIGQ9dC5yZWRNdWwodSk7ZD1kLnJlZElBZGQoZCk7ZD1kLnJlZElBZGQoZCk7dmFyIGM9dGhpcy54LnJlZE11bChvKS5yZWRJU3ViKGQpO2M9Yy5yZWRJQWRkKGMpO2M9Yy5yZWRJQWRkKGMpO3ZhciBsPXRoaXMueS5yZWRNdWwodS5yZWRNdWwoaC5yZWRJU3ViKHUpKS5yZWRJU3ViKHMucmVkTXVsKG8pKSk7bD1sLnJlZElBZGQobCk7bD1sLnJlZElBZGQobCk7bD1sLnJlZElBZGQobCk7dmFyIHA9dGhpcy56LnJlZEFkZChzKS5yZWRTcXIoKS5yZWRJU3ViKHIpLnJlZElTdWIobyk7cmV0dXJuIHRoaXMuY3VydmUuanBvaW50KGMsbCxwKX07SlBvaW50LnByb3RvdHlwZS5tdWw9ZnVuY3Rpb24gbXVsKGUsdCl7ZT1uZXcgbihlLHQpO3JldHVybiB0aGlzLmN1cnZlLl93bmFmTXVsKHRoaXMsZSl9O0pQb2ludC5wcm90b3R5cGUuZXE9ZnVuY3Rpb24gZXEoZSl7aWYoZS50eXBlPT09XCJhZmZpbmVcIilyZXR1cm4gdGhpcy5lcShlLnRvSigpKTtpZih0aGlzPT09ZSlyZXR1cm4gdHJ1ZTt2YXIgdD10aGlzLnoucmVkU3FyKCk7dmFyIHI9ZS56LnJlZFNxcigpO2lmKHRoaXMueC5yZWRNdWwocikucmVkSVN1YihlLngucmVkTXVsKHQpKS5jbXBuKDApIT09MClyZXR1cm4gZmFsc2U7dmFyIGk9dC5yZWRNdWwodGhpcy56KTt2YXIgbj1yLnJlZE11bChlLnopO3JldHVybiB0aGlzLnkucmVkTXVsKG4pLnJlZElTdWIoZS55LnJlZE11bChpKSkuY21wbigwKT09PTB9O0pQb2ludC5wcm90b3R5cGUuZXFYVG9QPWZ1bmN0aW9uIGVxWFRvUChlKXt2YXIgdD10aGlzLnoucmVkU3FyKCk7dmFyIHI9ZS50b1JlZCh0aGlzLmN1cnZlLnJlZCkucmVkTXVsKHQpO2lmKHRoaXMueC5jbXAocik9PT0wKXJldHVybiB0cnVlO3ZhciBpPWUuY2xvbmUoKTt2YXIgbj10aGlzLmN1cnZlLnJlZE4ucmVkTXVsKHQpO2Zvcig7Oyl7aS5pYWRkKHRoaXMuY3VydmUubik7aWYoaS5jbXAodGhpcy5jdXJ2ZS5wKT49MClyZXR1cm4gZmFsc2U7ci5yZWRJQWRkKG4pO2lmKHRoaXMueC5jbXAocik9PT0wKXJldHVybiB0cnVlfX07SlBvaW50LnByb3RvdHlwZS5pbnNwZWN0PWZ1bmN0aW9uIGluc3BlY3QoKXtpZih0aGlzLmlzSW5maW5pdHkoKSlyZXR1cm5cIjxFQyBKUG9pbnQgSW5maW5pdHk+XCI7cmV0dXJuXCI8RUMgSlBvaW50IHg6IFwiK3RoaXMueC50b1N0cmluZygxNiwyKStcIiB5OiBcIit0aGlzLnkudG9TdHJpbmcoMTYsMikrXCIgejogXCIrdGhpcy56LnRvU3RyaW5nKDE2LDIpK1wiPlwifTtKUG9pbnQucHJvdG90eXBlLmlzSW5maW5pdHk9ZnVuY3Rpb24gaXNJbmZpbml0eSgpe3JldHVybiB0aGlzLnouY21wbigwKT09PTB9fSw2MjI2OmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT10O3ZhciBuPXIoNzAyOCk7dmFyIGE9cig5MzU5KTt2YXIgcz1yKDQ0MDEpO3ZhciBvPXMuYXNzZXJ0O2Z1bmN0aW9uIFByZXNldEN1cnZlKGUpe2lmKGUudHlwZT09PVwic2hvcnRcIil0aGlzLmN1cnZlPW5ldyBhLnNob3J0KGUpO2Vsc2UgaWYoZS50eXBlPT09XCJlZHdhcmRzXCIpdGhpcy5jdXJ2ZT1uZXcgYS5lZHdhcmRzKGUpO2Vsc2UgdGhpcy5jdXJ2ZT1uZXcgYS5tb250KGUpO3RoaXMuZz10aGlzLmN1cnZlLmc7dGhpcy5uPXRoaXMuY3VydmUubjt0aGlzLmhhc2g9ZS5oYXNoO28odGhpcy5nLnZhbGlkYXRlKCksXCJJbnZhbGlkIGN1cnZlXCIpO28odGhpcy5nLm11bCh0aGlzLm4pLmlzSW5maW5pdHkoKSxcIkludmFsaWQgY3VydmUsIEcqTiAhPSBPXCIpfWkuUHJlc2V0Q3VydmU9UHJlc2V0Q3VydmU7ZnVuY3Rpb24gZGVmaW5lQ3VydmUoZSx0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoaSxlLHtjb25maWd1cmFibGU6dHJ1ZSxlbnVtZXJhYmxlOnRydWUsZ2V0OmZ1bmN0aW9uKCl7dmFyIHI9bmV3IFByZXNldEN1cnZlKHQpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShpLGUse2NvbmZpZ3VyYWJsZTp0cnVlLGVudW1lcmFibGU6dHJ1ZSx2YWx1ZTpyfSk7cmV0dXJuIHJ9fSl9ZGVmaW5lQ3VydmUoXCJwMTkyXCIse3R5cGU6XCJzaG9ydFwiLHByaW1lOlwicDE5MlwiLHA6XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmZmZiBmZmZmZmZmZlwiLGE6XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBmZmZmZmZmZiBmZmZmZmZmY1wiLGI6XCI2NDIxMDUxOSBlNTljODBlNyAwZmE3ZTlhYiA3MjI0MzA0OSBmZWI4ZGVlYyBjMTQ2YjliMVwiLG46XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiA5OWRlZjgzNiAxNDZiYzliMSBiNGQyMjgzMVwiLGhhc2g6bi5zaGEyNTYsZ1JlZDpmYWxzZSxnOltcIjE4OGRhODBlIGIwMzA5MGY2IDdjYmYyMGViIDQzYTE4ODAwIGY0ZmYwYWZkIDgyZmYxMDEyXCIsXCIwNzE5MmI5NSBmZmM4ZGE3OCA2MzEwMTFlZCA2YjI0Y2RkNSA3M2Y5NzdhMSAxZTc5NDgxMVwiXX0pO2RlZmluZUN1cnZlKFwicDIyNFwiLHt0eXBlOlwic2hvcnRcIixwcmltZTpcInAyMjRcIixwOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDFcIixhOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmUgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmVcIixiOlwiYjQwNTBhODUgMGMwNGIzYWIgZjU0MTMyNTYgNTA0NGIwYjcgZDdiZmQ4YmEgMjcwYjM5NDMgMjM1NWZmYjRcIixuOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZjE2YTIgZTBiOGYwM2UgMTNkZDI5NDUgNWM1YzJhM2RcIixoYXNoOm4uc2hhMjU2LGdSZWQ6ZmFsc2UsZzpbXCJiNzBlMGNiZCA2YmI0YmY3ZiAzMjEzOTBiOSA0YTAzYzFkMyA1NmMyMTEyMiAzNDMyODBkNiAxMTVjMWQyMVwiLFwiYmQzNzYzODggYjVmNzIzZmIgNGMyMmRmZTYgY2Q0Mzc1YTAgNWEwNzQ3NjQgNDRkNTgxOTkgODUwMDdlMzRcIl19KTtkZWZpbmVDdXJ2ZShcInAyNTZcIix7dHlwZTpcInNob3J0XCIscHJpbWU6bnVsbCxwOlwiZmZmZmZmZmYgMDAwMDAwMDEgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmZcIixhOlwiZmZmZmZmZmYgMDAwMDAwMDEgMDAwMDAwMDAgMDAwMDAwMDAgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmNcIixiOlwiNWFjNjM1ZDggYWEzYTkzZTcgYjNlYmJkNTUgNzY5ODg2YmMgNjUxZDA2YjAgY2M1M2IwZjYgM2JjZTNjM2UgMjdkMjYwNGJcIixuOlwiZmZmZmZmZmYgMDAwMDAwMDAgZmZmZmZmZmYgZmZmZmZmZmYgYmNlNmZhYWQgYTcxNzllODQgZjNiOWNhYzIgZmM2MzI1NTFcIixoYXNoOm4uc2hhMjU2LGdSZWQ6ZmFsc2UsZzpbXCI2YjE3ZDFmMiBlMTJjNDI0NyBmOGJjZTZlNSA2M2E0NDBmMiA3NzAzN2Q4MSAyZGViMzNhMCBmNGExMzk0NSBkODk4YzI5NlwiLFwiNGZlMzQyZTIgZmUxYTdmOWIgOGVlN2ViNGEgN2MwZjllMTYgMmJjZTMzNTcgNmIzMTVlY2UgY2JiNjQwNjggMzdiZjUxZjVcIl19KTtkZWZpbmVDdXJ2ZShcInAzODRcIix7dHlwZTpcInNob3J0XCIscHJpbWU6bnVsbCxwOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgXCIrXCJmZmZmZmZmZSBmZmZmZmZmZiAwMDAwMDAwMCAwMDAwMDAwMCBmZmZmZmZmZlwiLGE6XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBcIitcImZmZmZmZmZlIGZmZmZmZmZmIDAwMDAwMDAwIDAwMDAwMDAwIGZmZmZmZmZjXCIsYjpcImIzMzEyZmE3IGUyM2VlN2U0IDk4OGUwNTZiIGUzZjgyZDE5IDE4MWQ5YzZlIGZlODE0MTEyIDAzMTQwODhmIFwiK1wiNTAxMzg3NWEgYzY1NjM5OGQgOGEyZWQxOWQgMmE4NWM4ZWQgZDNlYzJhZWZcIixuOlwiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgYzc2MzRkODEgXCIrXCJmNDM3MmRkZiA1ODFhMGRiMiA0OGIwYTc3YSBlY2VjMTk2YSBjY2M1Mjk3M1wiLGhhc2g6bi5zaGEzODQsZ1JlZDpmYWxzZSxnOltcImFhODdjYTIyIGJlOGIwNTM3IDhlYjFjNzFlIGYzMjBhZDc0IDZlMWQzYjYyIDhiYTc5Yjk4IDU5Zjc0MWUwIDgyNTQyYTM4IFwiK1wiNTUwMmYyNWQgYmY1NTI5NmMgM2E1NDVlMzggNzI3NjBhYjdcIixcIjM2MTdkZTRhIDk2MjYyYzZmIDVkOWU5OGJmIDkyOTJkYzI5IGY4ZjQxZGJkIDI4OWExNDdjIGU5ZGEzMTEzIGI1ZjBiOGMwIFwiK1wiMGE2MGIxY2UgMWQ3ZTgxOWQgN2E0MzFkN2MgOTBlYTBlNWZcIl19KTtkZWZpbmVDdXJ2ZShcInA1MjFcIix7dHlwZTpcInNob3J0XCIscHJpbWU6bnVsbCxwOlwiMDAwMDAxZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgXCIrXCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBcIitcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmXCIsYTpcIjAwMDAwMWZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIFwiK1wiZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgXCIrXCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmY1wiLGI6XCIwMDAwMDA1MSA5NTNlYjk2MSA4ZTFjOWExZiA5MjlhMjFhMCBiNjg1NDBlZSBhMmRhNzI1YiBcIitcIjk5YjMxNWYzIGI4YjQ4OTkxIDhlZjEwOWUxIDU2MTkzOTUxIGVjN2U5MzdiIDE2NTJjMGJkIFwiK1wiM2JiMWJmMDcgMzU3M2RmODggM2QyYzM0ZjEgZWY0NTFmZDQgNmI1MDNmMDBcIixuOlwiMDAwMDAxZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgZmZmZmZmZmYgXCIrXCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmYSA1MTg2ODc4MyBiZjJmOTY2YiA3ZmNjMDE0OCBcIitcImY3MDlhNWQwIDNiYjVjOWI4IDg5OWM0N2FlIGJiNmZiNzFlIDkxMzg2NDA5XCIsaGFzaDpuLnNoYTUxMixnUmVkOmZhbHNlLGc6W1wiMDAwMDAwYzYgODU4ZTA2YjcgMDQwNGU5Y2QgOWUzZWNiNjYgMjM5NWI0NDIgOWM2NDgxMzkgXCIrXCIwNTNmYjUyMSBmODI4YWY2MCA2YjRkM2RiYSBhMTRiNWU3NyBlZmU3NTkyOCBmZTFkYzEyNyBcIitcImEyZmZhOGRlIDMzNDhiM2MxIDg1NmE0MjliIGY5N2U3ZTMxIGMyZTViZDY2XCIsXCIwMDAwMDExOCAzOTI5NmE3OCA5YTNiYzAwNCA1YzhhNWZiNCAyYzdkMWJkOSA5OGY1NDQ0OSBcIitcIjU3OWI0NDY4IDE3YWZiZDE3IDI3M2U2NjJjIDk3ZWU3Mjk5IDVlZjQyNjQwIGM1NTBiOTAxIFwiK1wiM2ZhZDA3NjEgMzUzYzcwODYgYTI3MmMyNDAgODhiZTk0NzYgOWZkMTY2NTBcIl19KTtkZWZpbmVDdXJ2ZShcImN1cnZlMjU1MTlcIix7dHlwZTpcIm1vbnRcIixwcmltZTpcInAyNTUxOVwiLHA6XCI3ZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmVkXCIsYTpcIjc2ZDA2XCIsYjpcIjFcIixuOlwiMTAwMDAwMDAwMDAwMDAwMCAwMDAwMDAwMDAwMDAwMDAwIDE0ZGVmOWRlYTJmNzljZDYgNTgxMjYzMWE1Y2Y1ZDNlZFwiLGhhc2g6bi5zaGEyNTYsZ1JlZDpmYWxzZSxnOltcIjlcIl19KTtkZWZpbmVDdXJ2ZShcImVkMjU1MTlcIix7dHlwZTpcImVkd2FyZHNcIixwcmltZTpcInAyNTUxOVwiLHA6XCI3ZmZmZmZmZmZmZmZmZmZmIGZmZmZmZmZmZmZmZmZmZmYgZmZmZmZmZmZmZmZmZmZmZiBmZmZmZmZmZmZmZmZmZmVkXCIsYTpcIi0xXCIsYzpcIjFcIixkOlwiNTIwMzZjZWUyYjZmZmU3MyA4Y2M3NDA3OTc3NzllODk4IDAwNzAwYTRkNDE0MWQ4YWIgNzVlYjRkY2ExMzU5NzhhM1wiLG46XCIxMDAwMDAwMDAwMDAwMDAwIDAwMDAwMDAwMDAwMDAwMDAgMTRkZWY5ZGVhMmY3OWNkNiA1ODEyNjMxYTVjZjVkM2VkXCIsaGFzaDpuLnNoYTI1NixnUmVkOmZhbHNlLGc6W1wiMjE2OTM2ZDNjZDZlNTNmZWMwYTRlMjMxZmRkNmRjNWM2OTJjYzc2MDk1MjVhN2IyYzk1NjJkNjA4ZjI1ZDUxYVwiLFwiNjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY1OFwiXX0pO3ZhciBoO3RyeXtoPXIoOTcwMil9Y2F0Y2goZSl7aD11bmRlZmluZWR9ZGVmaW5lQ3VydmUoXCJzZWNwMjU2azFcIix7dHlwZTpcInNob3J0XCIscHJpbWU6XCJrMjU2XCIscDpcImZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZmIGZmZmZmZmZlIGZmZmZmYzJmXCIsYTpcIjBcIixiOlwiN1wiLG46XCJmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZiBmZmZmZmZmZSBiYWFlZGNlNiBhZjQ4YTAzYiBiZmQyNWU4YyBkMDM2NDE0MVwiLGg6XCIxXCIsaGFzaDpuLnNoYTI1NixiZXRhOlwiN2FlOTZhMmI2NTdjMDcxMDZlNjQ0NzllYWMzNDM0ZTk5Y2YwNDk3NTEyZjU4OTk1YzEzOTZjMjg3MTk1MDFlZVwiLGxhbWJkYTpcIjUzNjNhZDRjYzA1YzMwZTBhNTI2MWMwMjg4MTI2NDVhMTIyZTIyZWEyMDgxNjY3OGRmMDI5NjdjMWIyM2JkNzJcIixiYXNpczpbe2E6XCIzMDg2ZDIyMWE3ZDQ2YmNkZTg2YzkwZTQ5Mjg0ZWIxNVwiLGI6XCItZTQ0MzdlZDYwMTBlODgyODZmNTQ3ZmE5MGFiZmU0YzNcIn0se2E6XCIxMTRjYTUwZjdhOGUyZjNmNjU3YzExMDhkOWQ0NGNmZDhcIixiOlwiMzA4NmQyMjFhN2Q0NmJjZGU4NmM5MGU0OTI4NGViMTVcIn1dLGdSZWQ6ZmFsc2UsZzpbXCI3OWJlNjY3ZWY5ZGNiYmFjNTVhMDYyOTVjZTg3MGIwNzAyOWJmY2RiMmRjZTI4ZDk1OWYyODE1YjE2ZjgxNzk4XCIsXCI0ODNhZGE3NzI2YTNjNDY1NWRhNGZiZmMwZTExMDhhOGZkMTdiNDQ4YTY4NTU0MTk5YzQ3ZDA4ZmZiMTBkNGI4XCIsaF19KX0sNDA4ODpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9cig3MTEpO3ZhciBuPXIoNDkxMCk7dmFyIGE9cig0NDAxKTt2YXIgcz1yKDYyMjYpO3ZhciBvPXIoMzUwMCk7dmFyIGg9YS5hc3NlcnQ7dmFyIHU9cig0NzI0KTt2YXIgZD1yKDc1MjYpO2Z1bmN0aW9uIEVDKGUpe2lmKCEodGhpcyBpbnN0YW5jZW9mIEVDKSlyZXR1cm4gbmV3IEVDKGUpO2lmKHR5cGVvZiBlPT09XCJzdHJpbmdcIil7aChzLmhhc093blByb3BlcnR5KGUpLFwiVW5rbm93biBjdXJ2ZSBcIitlKTtlPXNbZV19aWYoZSBpbnN0YW5jZW9mIHMuUHJlc2V0Q3VydmUpZT17Y3VydmU6ZX07dGhpcy5jdXJ2ZT1lLmN1cnZlLmN1cnZlO3RoaXMubj10aGlzLmN1cnZlLm47dGhpcy5uaD10aGlzLm4udXNocm4oMSk7dGhpcy5nPXRoaXMuY3VydmUuZzt0aGlzLmc9ZS5jdXJ2ZS5nO3RoaXMuZy5wcmVjb21wdXRlKGUuY3VydmUubi5iaXRMZW5ndGgoKSsxKTt0aGlzLmhhc2g9ZS5oYXNofHxlLmN1cnZlLmhhc2h9ZS5leHBvcnRzPUVDO0VDLnByb3RvdHlwZS5rZXlQYWlyPWZ1bmN0aW9uIGtleVBhaXIoZSl7cmV0dXJuIG5ldyB1KHRoaXMsZSl9O0VDLnByb3RvdHlwZS5rZXlGcm9tUHJpdmF0ZT1mdW5jdGlvbiBrZXlGcm9tUHJpdmF0ZShlLHQpe3JldHVybiB1LmZyb21Qcml2YXRlKHRoaXMsZSx0KX07RUMucHJvdG90eXBlLmtleUZyb21QdWJsaWM9ZnVuY3Rpb24ga2V5RnJvbVB1YmxpYyhlLHQpe3JldHVybiB1LmZyb21QdWJsaWModGhpcyxlLHQpfTtFQy5wcm90b3R5cGUuZ2VuS2V5UGFpcj1mdW5jdGlvbiBnZW5LZXlQYWlyKGUpe2lmKCFlKWU9e307dmFyIHQ9bmV3IG4oe2hhc2g6dGhpcy5oYXNoLHBlcnM6ZS5wZXJzLHBlcnNFbmM6ZS5wZXJzRW5jfHxcInV0ZjhcIixlbnRyb3B5OmUuZW50cm9weXx8byh0aGlzLmhhc2guaG1hY1N0cmVuZ3RoKSxlbnRyb3B5RW5jOmUuZW50cm9weSYmZS5lbnRyb3B5RW5jfHxcInV0ZjhcIixub25jZTp0aGlzLm4udG9BcnJheSgpfSk7dmFyIHI9dGhpcy5uLmJ5dGVMZW5ndGgoKTt2YXIgYT10aGlzLm4uc3ViKG5ldyBpKDIpKTtkb3t2YXIgcz1uZXcgaSh0LmdlbmVyYXRlKHIpKTtpZihzLmNtcChhKT4wKWNvbnRpbnVlO3MuaWFkZG4oMSk7cmV0dXJuIHRoaXMua2V5RnJvbVByaXZhdGUocyl9d2hpbGUodHJ1ZSl9O0VDLnByb3RvdHlwZS5fdHJ1bmNhdGVUb049ZnVuY3Rpb24gdHJ1bmNhdGVUb04oZSx0KXt2YXIgcj1lLmJ5dGVMZW5ndGgoKSo4LXRoaXMubi5iaXRMZW5ndGgoKTtpZihyPjApZT1lLnVzaHJuKHIpO2lmKCF0JiZlLmNtcCh0aGlzLm4pPj0wKXJldHVybiBlLnN1Yih0aGlzLm4pO2Vsc2UgcmV0dXJuIGV9O0VDLnByb3RvdHlwZS5zaWduPWZ1bmN0aW9uIHNpZ24oZSx0LHIsYSl7aWYodHlwZW9mIHI9PT1cIm9iamVjdFwiKXthPXI7cj1udWxsfWlmKCFhKWE9e307dD10aGlzLmtleUZyb21Qcml2YXRlKHQscik7ZT10aGlzLl90cnVuY2F0ZVRvTihuZXcgaShlLDE2KSk7dmFyIHM9dGhpcy5uLmJ5dGVMZW5ndGgoKTt2YXIgbz10LmdldFByaXZhdGUoKS50b0FycmF5KFwiYmVcIixzKTt2YXIgaD1lLnRvQXJyYXkoXCJiZVwiLHMpO3ZhciB1PW5ldyBuKHtoYXNoOnRoaXMuaGFzaCxlbnRyb3B5Om8sbm9uY2U6aCxwZXJzOmEucGVycyxwZXJzRW5jOmEucGVyc0VuY3x8XCJ1dGY4XCJ9KTt2YXIgYz10aGlzLm4uc3ViKG5ldyBpKDEpKTtmb3IodmFyIGw9MDt0cnVlO2wrKyl7dmFyIHA9YS5rP2EuayhsKTpuZXcgaSh1LmdlbmVyYXRlKHRoaXMubi5ieXRlTGVuZ3RoKCkpKTtwPXRoaXMuX3RydW5jYXRlVG9OKHAsdHJ1ZSk7aWYocC5jbXBuKDEpPD0wfHxwLmNtcChjKT49MCljb250aW51ZTt2YXIgdj10aGlzLmcubXVsKHApO2lmKHYuaXNJbmZpbml0eSgpKWNvbnRpbnVlO3ZhciBiPXYuZ2V0WCgpO3ZhciBtPWIudW1vZCh0aGlzLm4pO2lmKG0uY21wbigwKT09PTApY29udGludWU7dmFyIHk9cC5pbnZtKHRoaXMubikubXVsKG0ubXVsKHQuZ2V0UHJpdmF0ZSgpKS5pYWRkKGUpKTt5PXkudW1vZCh0aGlzLm4pO2lmKHkuY21wbigwKT09PTApY29udGludWU7dmFyIGc9KHYuZ2V0WSgpLmlzT2RkKCk/MTowKXwoYi5jbXAobSkhPT0wPzI6MCk7aWYoYS5jYW5vbmljYWwmJnkuY21wKHRoaXMubmgpPjApe3k9dGhpcy5uLnN1Yih5KTtnXj0xfXJldHVybiBuZXcgZCh7cjptLHM6eSxyZWNvdmVyeVBhcmFtOmd9KX19O0VDLnByb3RvdHlwZS52ZXJpZnk9ZnVuY3Rpb24gdmVyaWZ5KGUsdCxyLG4pe2U9dGhpcy5fdHJ1bmNhdGVUb04obmV3IGkoZSwxNikpO3I9dGhpcy5rZXlGcm9tUHVibGljKHIsbik7dD1uZXcgZCh0LFwiaGV4XCIpO3ZhciBhPXQucjt2YXIgcz10LnM7aWYoYS5jbXBuKDEpPDB8fGEuY21wKHRoaXMubik+PTApcmV0dXJuIGZhbHNlO2lmKHMuY21wbigxKTwwfHxzLmNtcCh0aGlzLm4pPj0wKXJldHVybiBmYWxzZTt2YXIgbz1zLmludm0odGhpcy5uKTt2YXIgaD1vLm11bChlKS51bW9kKHRoaXMubik7dmFyIHU9by5tdWwoYSkudW1vZCh0aGlzLm4pO2lmKCF0aGlzLmN1cnZlLl9tYXh3ZWxsVHJpY2spe3ZhciBjPXRoaXMuZy5tdWxBZGQoaCxyLmdldFB1YmxpYygpLHUpO2lmKGMuaXNJbmZpbml0eSgpKXJldHVybiBmYWxzZTtyZXR1cm4gYy5nZXRYKCkudW1vZCh0aGlzLm4pLmNtcChhKT09PTB9dmFyIGM9dGhpcy5nLmptdWxBZGQoaCxyLmdldFB1YmxpYygpLHUpO2lmKGMuaXNJbmZpbml0eSgpKXJldHVybiBmYWxzZTtyZXR1cm4gYy5lcVhUb1AoYSl9O0VDLnByb3RvdHlwZS5yZWNvdmVyUHViS2V5PWZ1bmN0aW9uKGUsdCxyLG4pe2goKDMmcik9PT1yLFwiVGhlIHJlY292ZXJ5IHBhcmFtIGlzIG1vcmUgdGhhbiB0d28gYml0c1wiKTt0PW5ldyBkKHQsbik7dmFyIGE9dGhpcy5uO3ZhciBzPW5ldyBpKGUpO3ZhciBvPXQucjt2YXIgdT10LnM7dmFyIGM9ciYxO3ZhciBsPXI+PjE7aWYoby5jbXAodGhpcy5jdXJ2ZS5wLnVtb2QodGhpcy5jdXJ2ZS5uKSk+PTAmJmwpdGhyb3cgbmV3IEVycm9yKFwiVW5hYmxlIHRvIGZpbmQgc2VuY29uZCBrZXkgY2FuZGluYXRlXCIpO2lmKGwpbz10aGlzLmN1cnZlLnBvaW50RnJvbVgoby5hZGQodGhpcy5jdXJ2ZS5uKSxjKTtlbHNlIG89dGhpcy5jdXJ2ZS5wb2ludEZyb21YKG8sYyk7dmFyIHA9dC5yLmludm0oYSk7dmFyIHY9YS5zdWIocykubXVsKHApLnVtb2QoYSk7dmFyIGI9dS5tdWwocCkudW1vZChhKTtyZXR1cm4gdGhpcy5nLm11bEFkZCh2LG8sYil9O0VDLnByb3RvdHlwZS5nZXRLZXlSZWNvdmVyeVBhcmFtPWZ1bmN0aW9uKGUsdCxyLGkpe3Q9bmV3IGQodCxpKTtpZih0LnJlY292ZXJ5UGFyYW0hPT1udWxsKXJldHVybiB0LnJlY292ZXJ5UGFyYW07Zm9yKHZhciBuPTA7bjw0O24rKyl7dmFyIGE7dHJ5e2E9dGhpcy5yZWNvdmVyUHViS2V5KGUsdCxuKX1jYXRjaChlKXtjb250aW51ZX1pZihhLmVxKHIpKXJldHVybiBufXRocm93IG5ldyBFcnJvcihcIlVuYWJsZSB0byBmaW5kIHZhbGlkIHJlY292ZXJ5IGZhY3RvclwiKX19LDQ3MjQ6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoNzExKTt2YXIgbj1yKDQ0MDEpO3ZhciBhPW4uYXNzZXJ0O2Z1bmN0aW9uIEtleVBhaXIoZSx0KXt0aGlzLmVjPWU7dGhpcy5wcml2PW51bGw7dGhpcy5wdWI9bnVsbDtpZih0LnByaXYpdGhpcy5faW1wb3J0UHJpdmF0ZSh0LnByaXYsdC5wcml2RW5jKTtpZih0LnB1Yil0aGlzLl9pbXBvcnRQdWJsaWModC5wdWIsdC5wdWJFbmMpfWUuZXhwb3J0cz1LZXlQYWlyO0tleVBhaXIuZnJvbVB1YmxpYz1mdW5jdGlvbiBmcm9tUHVibGljKGUsdCxyKXtpZih0IGluc3RhbmNlb2YgS2V5UGFpcilyZXR1cm4gdDtyZXR1cm4gbmV3IEtleVBhaXIoZSx7cHViOnQscHViRW5jOnJ9KX07S2V5UGFpci5mcm9tUHJpdmF0ZT1mdW5jdGlvbiBmcm9tUHJpdmF0ZShlLHQscil7aWYodCBpbnN0YW5jZW9mIEtleVBhaXIpcmV0dXJuIHQ7cmV0dXJuIG5ldyBLZXlQYWlyKGUse3ByaXY6dCxwcml2RW5jOnJ9KX07S2V5UGFpci5wcm90b3R5cGUudmFsaWRhdGU9ZnVuY3Rpb24gdmFsaWRhdGUoKXt2YXIgZT10aGlzLmdldFB1YmxpYygpO2lmKGUuaXNJbmZpbml0eSgpKXJldHVybntyZXN1bHQ6ZmFsc2UscmVhc29uOlwiSW52YWxpZCBwdWJsaWMga2V5XCJ9O2lmKCFlLnZhbGlkYXRlKCkpcmV0dXJue3Jlc3VsdDpmYWxzZSxyZWFzb246XCJQdWJsaWMga2V5IGlzIG5vdCBhIHBvaW50XCJ9O2lmKCFlLm11bCh0aGlzLmVjLmN1cnZlLm4pLmlzSW5maW5pdHkoKSlyZXR1cm57cmVzdWx0OmZhbHNlLHJlYXNvbjpcIlB1YmxpYyBrZXkgKiBOICE9IE9cIn07cmV0dXJue3Jlc3VsdDp0cnVlLHJlYXNvbjpudWxsfX07S2V5UGFpci5wcm90b3R5cGUuZ2V0UHVibGljPWZ1bmN0aW9uIGdldFB1YmxpYyhlLHQpe2lmKHR5cGVvZiBlPT09XCJzdHJpbmdcIil7dD1lO2U9bnVsbH1pZighdGhpcy5wdWIpdGhpcy5wdWI9dGhpcy5lYy5nLm11bCh0aGlzLnByaXYpO2lmKCF0KXJldHVybiB0aGlzLnB1YjtyZXR1cm4gdGhpcy5wdWIuZW5jb2RlKHQsZSl9O0tleVBhaXIucHJvdG90eXBlLmdldFByaXZhdGU9ZnVuY3Rpb24gZ2V0UHJpdmF0ZShlKXtpZihlPT09XCJoZXhcIilyZXR1cm4gdGhpcy5wcml2LnRvU3RyaW5nKDE2LDIpO2Vsc2UgcmV0dXJuIHRoaXMucHJpdn07S2V5UGFpci5wcm90b3R5cGUuX2ltcG9ydFByaXZhdGU9ZnVuY3Rpb24gX2ltcG9ydFByaXZhdGUoZSx0KXt0aGlzLnByaXY9bmV3IGkoZSx0fHwxNik7dGhpcy5wcml2PXRoaXMucHJpdi51bW9kKHRoaXMuZWMuY3VydmUubil9O0tleVBhaXIucHJvdG90eXBlLl9pbXBvcnRQdWJsaWM9ZnVuY3Rpb24gX2ltcG9ydFB1YmxpYyhlLHQpe2lmKGUueHx8ZS55KXtpZih0aGlzLmVjLmN1cnZlLnR5cGU9PT1cIm1vbnRcIil7YShlLngsXCJOZWVkIHggY29vcmRpbmF0ZVwiKX1lbHNlIGlmKHRoaXMuZWMuY3VydmUudHlwZT09PVwic2hvcnRcInx8dGhpcy5lYy5jdXJ2ZS50eXBlPT09XCJlZHdhcmRzXCIpe2EoZS54JiZlLnksXCJOZWVkIGJvdGggeCBhbmQgeSBjb29yZGluYXRlXCIpfXRoaXMucHViPXRoaXMuZWMuY3VydmUucG9pbnQoZS54LGUueSk7cmV0dXJufXRoaXMucHViPXRoaXMuZWMuY3VydmUuZGVjb2RlUG9pbnQoZSx0KX07S2V5UGFpci5wcm90b3R5cGUuZGVyaXZlPWZ1bmN0aW9uIGRlcml2ZShlKXtyZXR1cm4gZS5tdWwodGhpcy5wcml2KS5nZXRYKCl9O0tleVBhaXIucHJvdG90eXBlLnNpZ249ZnVuY3Rpb24gc2lnbihlLHQscil7cmV0dXJuIHRoaXMuZWMuc2lnbihlLHRoaXMsdCxyKX07S2V5UGFpci5wcm90b3R5cGUudmVyaWZ5PWZ1bmN0aW9uIHZlcmlmeShlLHQpe3JldHVybiB0aGlzLmVjLnZlcmlmeShlLHQsdGhpcyl9O0tleVBhaXIucHJvdG90eXBlLmluc3BlY3Q9ZnVuY3Rpb24gaW5zcGVjdCgpe3JldHVyblwiPEtleSBwcml2OiBcIisodGhpcy5wcml2JiZ0aGlzLnByaXYudG9TdHJpbmcoMTYsMikpK1wiIHB1YjogXCIrKHRoaXMucHViJiZ0aGlzLnB1Yi5pbnNwZWN0KCkpK1wiID5cIn19LDc1MjY6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoNzExKTt2YXIgbj1yKDQ0MDEpO3ZhciBhPW4uYXNzZXJ0O2Z1bmN0aW9uIFNpZ25hdHVyZShlLHQpe2lmKGUgaW5zdGFuY2VvZiBTaWduYXR1cmUpcmV0dXJuIGU7aWYodGhpcy5faW1wb3J0REVSKGUsdCkpcmV0dXJuO2EoZS5yJiZlLnMsXCJTaWduYXR1cmUgd2l0aG91dCByIG9yIHNcIik7dGhpcy5yPW5ldyBpKGUuciwxNik7dGhpcy5zPW5ldyBpKGUucywxNik7aWYoZS5yZWNvdmVyeVBhcmFtPT09dW5kZWZpbmVkKXRoaXMucmVjb3ZlcnlQYXJhbT1udWxsO2Vsc2UgdGhpcy5yZWNvdmVyeVBhcmFtPWUucmVjb3ZlcnlQYXJhbX1lLmV4cG9ydHM9U2lnbmF0dXJlO2Z1bmN0aW9uIFBvc2l0aW9uKCl7dGhpcy5wbGFjZT0wfWZ1bmN0aW9uIGdldExlbmd0aChlLHQpe3ZhciByPWVbdC5wbGFjZSsrXTtpZighKHImMTI4KSl7cmV0dXJuIHJ9dmFyIGk9ciYxNTtpZihpPT09MHx8aT40KXtyZXR1cm4gZmFsc2V9dmFyIG49MDtmb3IodmFyIGE9MCxzPXQucGxhY2U7YTxpO2ErKyxzKyspe248PD04O258PWVbc107bj4+Pj0wfWlmKG48PTEyNyl7cmV0dXJuIGZhbHNlfXQucGxhY2U9cztyZXR1cm4gbn1mdW5jdGlvbiBybVBhZGRpbmcoZSl7dmFyIHQ9MDt2YXIgcj1lLmxlbmd0aC0xO3doaWxlKCFlW3RdJiYhKGVbdCsxXSYxMjgpJiZ0PHIpe3QrK31pZih0PT09MCl7cmV0dXJuIGV9cmV0dXJuIGUuc2xpY2UodCl9U2lnbmF0dXJlLnByb3RvdHlwZS5faW1wb3J0REVSPWZ1bmN0aW9uIF9pbXBvcnRERVIoZSx0KXtlPW4udG9BcnJheShlLHQpO3ZhciByPW5ldyBQb3NpdGlvbjtpZihlW3IucGxhY2UrK10hPT00OCl7cmV0dXJuIGZhbHNlfXZhciBhPWdldExlbmd0aChlLHIpO2lmKGE9PT1mYWxzZSl7cmV0dXJuIGZhbHNlfWlmKGErci5wbGFjZSE9PWUubGVuZ3RoKXtyZXR1cm4gZmFsc2V9aWYoZVtyLnBsYWNlKytdIT09Mil7cmV0dXJuIGZhbHNlfXZhciBzPWdldExlbmd0aChlLHIpO2lmKHM9PT1mYWxzZSl7cmV0dXJuIGZhbHNlfXZhciBvPWUuc2xpY2Uoci5wbGFjZSxzK3IucGxhY2UpO3IucGxhY2UrPXM7aWYoZVtyLnBsYWNlKytdIT09Mil7cmV0dXJuIGZhbHNlfXZhciBoPWdldExlbmd0aChlLHIpO2lmKGg9PT1mYWxzZSl7cmV0dXJuIGZhbHNlfWlmKGUubGVuZ3RoIT09aCtyLnBsYWNlKXtyZXR1cm4gZmFsc2V9dmFyIHU9ZS5zbGljZShyLnBsYWNlLGgrci5wbGFjZSk7aWYob1swXT09PTApe2lmKG9bMV0mMTI4KXtvPW8uc2xpY2UoMSl9ZWxzZXtyZXR1cm4gZmFsc2V9fWlmKHVbMF09PT0wKXtpZih1WzFdJjEyOCl7dT11LnNsaWNlKDEpfWVsc2V7cmV0dXJuIGZhbHNlfX10aGlzLnI9bmV3IGkobyk7dGhpcy5zPW5ldyBpKHUpO3RoaXMucmVjb3ZlcnlQYXJhbT1udWxsO3JldHVybiB0cnVlfTtmdW5jdGlvbiBjb25zdHJ1Y3RMZW5ndGgoZSx0KXtpZih0PDEyOCl7ZS5wdXNoKHQpO3JldHVybn12YXIgcj0xKyhNYXRoLmxvZyh0KS9NYXRoLkxOMj4+PjMpO2UucHVzaChyfDEyOCk7d2hpbGUoLS1yKXtlLnB1c2godD4+PihyPDwzKSYyNTUpfWUucHVzaCh0KX1TaWduYXR1cmUucHJvdG90eXBlLnRvREVSPWZ1bmN0aW9uIHRvREVSKGUpe3ZhciB0PXRoaXMuci50b0FycmF5KCk7dmFyIHI9dGhpcy5zLnRvQXJyYXkoKTtpZih0WzBdJjEyOCl0PVswXS5jb25jYXQodCk7aWYoclswXSYxMjgpcj1bMF0uY29uY2F0KHIpO3Q9cm1QYWRkaW5nKHQpO3I9cm1QYWRkaW5nKHIpO3doaWxlKCFyWzBdJiYhKHJbMV0mMTI4KSl7cj1yLnNsaWNlKDEpfXZhciBpPVsyXTtjb25zdHJ1Y3RMZW5ndGgoaSx0Lmxlbmd0aCk7aT1pLmNvbmNhdCh0KTtpLnB1c2goMik7Y29uc3RydWN0TGVuZ3RoKGksci5sZW5ndGgpO3ZhciBhPWkuY29uY2F0KHIpO3ZhciBzPVs0OF07Y29uc3RydWN0TGVuZ3RoKHMsYS5sZW5ndGgpO3M9cy5jb25jYXQoYSk7cmV0dXJuIG4uZW5jb2RlKHMsZSl9fSw4NTExOmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDcwMjgpO3ZhciBuPXIoNjIyNik7dmFyIGE9cig0NDAxKTt2YXIgcz1hLmFzc2VydDt2YXIgbz1hLnBhcnNlQnl0ZXM7dmFyIGg9cig5OTE3KTt2YXIgdT1yKDkzMTQpO2Z1bmN0aW9uIEVERFNBKGUpe3MoZT09PVwiZWQyNTUxOVwiLFwib25seSB0ZXN0ZWQgd2l0aCBlZDI1NTE5IHNvIGZhclwiKTtpZighKHRoaXMgaW5zdGFuY2VvZiBFRERTQSkpcmV0dXJuIG5ldyBFRERTQShlKTt2YXIgZT1uW2VdLmN1cnZlO3RoaXMuY3VydmU9ZTt0aGlzLmc9ZS5nO3RoaXMuZy5wcmVjb21wdXRlKGUubi5iaXRMZW5ndGgoKSsxKTt0aGlzLnBvaW50Q2xhc3M9ZS5wb2ludCgpLmNvbnN0cnVjdG9yO3RoaXMuZW5jb2RpbmdMZW5ndGg9TWF0aC5jZWlsKGUubi5iaXRMZW5ndGgoKS84KTt0aGlzLmhhc2g9aS5zaGE1MTJ9ZS5leHBvcnRzPUVERFNBO0VERFNBLnByb3RvdHlwZS5zaWduPWZ1bmN0aW9uIHNpZ24oZSx0KXtlPW8oZSk7dmFyIHI9dGhpcy5rZXlGcm9tU2VjcmV0KHQpO3ZhciBpPXRoaXMuaGFzaEludChyLm1lc3NhZ2VQcmVmaXgoKSxlKTt2YXIgbj10aGlzLmcubXVsKGkpO3ZhciBhPXRoaXMuZW5jb2RlUG9pbnQobik7dmFyIHM9dGhpcy5oYXNoSW50KGEsci5wdWJCeXRlcygpLGUpLm11bChyLnByaXYoKSk7dmFyIGg9aS5hZGQocykudW1vZCh0aGlzLmN1cnZlLm4pO3JldHVybiB0aGlzLm1ha2VTaWduYXR1cmUoe1I6bixTOmgsUmVuY29kZWQ6YX0pfTtFRERTQS5wcm90b3R5cGUudmVyaWZ5PWZ1bmN0aW9uIHZlcmlmeShlLHQscil7ZT1vKGUpO3Q9dGhpcy5tYWtlU2lnbmF0dXJlKHQpO3ZhciBpPXRoaXMua2V5RnJvbVB1YmxpYyhyKTt2YXIgbj10aGlzLmhhc2hJbnQodC5SZW5jb2RlZCgpLGkucHViQnl0ZXMoKSxlKTt2YXIgYT10aGlzLmcubXVsKHQuUygpKTt2YXIgcz10LlIoKS5hZGQoaS5wdWIoKS5tdWwobikpO3JldHVybiBzLmVxKGEpfTtFRERTQS5wcm90b3R5cGUuaGFzaEludD1mdW5jdGlvbiBoYXNoSW50KCl7dmFyIGU9dGhpcy5oYXNoKCk7Zm9yKHZhciB0PTA7dDxhcmd1bWVudHMubGVuZ3RoO3QrKyllLnVwZGF0ZShhcmd1bWVudHNbdF0pO3JldHVybiBhLmludEZyb21MRShlLmRpZ2VzdCgpKS51bW9kKHRoaXMuY3VydmUubil9O0VERFNBLnByb3RvdHlwZS5rZXlGcm9tUHVibGljPWZ1bmN0aW9uIGtleUZyb21QdWJsaWMoZSl7cmV0dXJuIGguZnJvbVB1YmxpYyh0aGlzLGUpfTtFRERTQS5wcm90b3R5cGUua2V5RnJvbVNlY3JldD1mdW5jdGlvbiBrZXlGcm9tU2VjcmV0KGUpe3JldHVybiBoLmZyb21TZWNyZXQodGhpcyxlKX07RUREU0EucHJvdG90eXBlLm1ha2VTaWduYXR1cmU9ZnVuY3Rpb24gbWFrZVNpZ25hdHVyZShlKXtpZihlIGluc3RhbmNlb2YgdSlyZXR1cm4gZTtyZXR1cm4gbmV3IHUodGhpcyxlKX07RUREU0EucHJvdG90eXBlLmVuY29kZVBvaW50PWZ1bmN0aW9uIGVuY29kZVBvaW50KGUpe3ZhciB0PWUuZ2V0WSgpLnRvQXJyYXkoXCJsZVwiLHRoaXMuZW5jb2RpbmdMZW5ndGgpO3RbdGhpcy5lbmNvZGluZ0xlbmd0aC0xXXw9ZS5nZXRYKCkuaXNPZGQoKT8xMjg6MDtyZXR1cm4gdH07RUREU0EucHJvdG90eXBlLmRlY29kZVBvaW50PWZ1bmN0aW9uIGRlY29kZVBvaW50KGUpe2U9YS5wYXJzZUJ5dGVzKGUpO3ZhciB0PWUubGVuZ3RoLTE7dmFyIHI9ZS5zbGljZSgwLHQpLmNvbmNhdChlW3RdJn4xMjgpO3ZhciBpPShlW3RdJjEyOCkhPT0wO3ZhciBuPWEuaW50RnJvbUxFKHIpO3JldHVybiB0aGlzLmN1cnZlLnBvaW50RnJvbVkobixpKX07RUREU0EucHJvdG90eXBlLmVuY29kZUludD1mdW5jdGlvbiBlbmNvZGVJbnQoZSl7cmV0dXJuIGUudG9BcnJheShcImxlXCIsdGhpcy5lbmNvZGluZ0xlbmd0aCl9O0VERFNBLnByb3RvdHlwZS5kZWNvZGVJbnQ9ZnVuY3Rpb24gZGVjb2RlSW50KGUpe3JldHVybiBhLmludEZyb21MRShlKX07RUREU0EucHJvdG90eXBlLmlzUG9pbnQ9ZnVuY3Rpb24gaXNQb2ludChlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIHRoaXMucG9pbnRDbGFzc319LDk5MTc6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoNDQwMSk7dmFyIG49aS5hc3NlcnQ7dmFyIGE9aS5wYXJzZUJ5dGVzO3ZhciBzPWkuY2FjaGVkUHJvcGVydHk7ZnVuY3Rpb24gS2V5UGFpcihlLHQpe3RoaXMuZWRkc2E9ZTt0aGlzLl9zZWNyZXQ9YSh0LnNlY3JldCk7aWYoZS5pc1BvaW50KHQucHViKSl0aGlzLl9wdWI9dC5wdWI7ZWxzZSB0aGlzLl9wdWJCeXRlcz1hKHQucHViKX1LZXlQYWlyLmZyb21QdWJsaWM9ZnVuY3Rpb24gZnJvbVB1YmxpYyhlLHQpe2lmKHQgaW5zdGFuY2VvZiBLZXlQYWlyKXJldHVybiB0O3JldHVybiBuZXcgS2V5UGFpcihlLHtwdWI6dH0pfTtLZXlQYWlyLmZyb21TZWNyZXQ9ZnVuY3Rpb24gZnJvbVNlY3JldChlLHQpe2lmKHQgaW5zdGFuY2VvZiBLZXlQYWlyKXJldHVybiB0O3JldHVybiBuZXcgS2V5UGFpcihlLHtzZWNyZXQ6dH0pfTtLZXlQYWlyLnByb3RvdHlwZS5zZWNyZXQ9ZnVuY3Rpb24gc2VjcmV0KCl7cmV0dXJuIHRoaXMuX3NlY3JldH07cyhLZXlQYWlyLFwicHViQnl0ZXNcIiwoZnVuY3Rpb24gcHViQnl0ZXMoKXtyZXR1cm4gdGhpcy5lZGRzYS5lbmNvZGVQb2ludCh0aGlzLnB1YigpKX0pKTtzKEtleVBhaXIsXCJwdWJcIiwoZnVuY3Rpb24gcHViKCl7aWYodGhpcy5fcHViQnl0ZXMpcmV0dXJuIHRoaXMuZWRkc2EuZGVjb2RlUG9pbnQodGhpcy5fcHViQnl0ZXMpO3JldHVybiB0aGlzLmVkZHNhLmcubXVsKHRoaXMucHJpdigpKX0pKTtzKEtleVBhaXIsXCJwcml2Qnl0ZXNcIiwoZnVuY3Rpb24gcHJpdkJ5dGVzKCl7dmFyIGU9dGhpcy5lZGRzYTt2YXIgdD10aGlzLmhhc2goKTt2YXIgcj1lLmVuY29kaW5nTGVuZ3RoLTE7dmFyIGk9dC5zbGljZSgwLGUuZW5jb2RpbmdMZW5ndGgpO2lbMF0mPTI0ODtpW3JdJj0xMjc7aVtyXXw9NjQ7cmV0dXJuIGl9KSk7cyhLZXlQYWlyLFwicHJpdlwiLChmdW5jdGlvbiBwcml2KCl7cmV0dXJuIHRoaXMuZWRkc2EuZGVjb2RlSW50KHRoaXMucHJpdkJ5dGVzKCkpfSkpO3MoS2V5UGFpcixcImhhc2hcIiwoZnVuY3Rpb24gaGFzaCgpe3JldHVybiB0aGlzLmVkZHNhLmhhc2goKS51cGRhdGUodGhpcy5zZWNyZXQoKSkuZGlnZXN0KCl9KSk7cyhLZXlQYWlyLFwibWVzc2FnZVByZWZpeFwiLChmdW5jdGlvbiBtZXNzYWdlUHJlZml4KCl7cmV0dXJuIHRoaXMuaGFzaCgpLnNsaWNlKHRoaXMuZWRkc2EuZW5jb2RpbmdMZW5ndGgpfSkpO0tleVBhaXIucHJvdG90eXBlLnNpZ249ZnVuY3Rpb24gc2lnbihlKXtuKHRoaXMuX3NlY3JldCxcIktleVBhaXIgY2FuIG9ubHkgdmVyaWZ5XCIpO3JldHVybiB0aGlzLmVkZHNhLnNpZ24oZSx0aGlzKX07S2V5UGFpci5wcm90b3R5cGUudmVyaWZ5PWZ1bmN0aW9uIHZlcmlmeShlLHQpe3JldHVybiB0aGlzLmVkZHNhLnZlcmlmeShlLHQsdGhpcyl9O0tleVBhaXIucHJvdG90eXBlLmdldFNlY3JldD1mdW5jdGlvbiBnZXRTZWNyZXQoZSl7bih0aGlzLl9zZWNyZXQsXCJLZXlQYWlyIGlzIHB1YmxpYyBvbmx5XCIpO3JldHVybiBpLmVuY29kZSh0aGlzLnNlY3JldCgpLGUpfTtLZXlQYWlyLnByb3RvdHlwZS5nZXRQdWJsaWM9ZnVuY3Rpb24gZ2V0UHVibGljKGUpe3JldHVybiBpLmVuY29kZSh0aGlzLnB1YkJ5dGVzKCksZSl9O2UuZXhwb3J0cz1LZXlQYWlyfSw5MzE0OmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDcxMSk7dmFyIG49cig0NDAxKTt2YXIgYT1uLmFzc2VydDt2YXIgcz1uLmNhY2hlZFByb3BlcnR5O3ZhciBvPW4ucGFyc2VCeXRlcztmdW5jdGlvbiBTaWduYXR1cmUoZSx0KXt0aGlzLmVkZHNhPWU7aWYodHlwZW9mIHQhPT1cIm9iamVjdFwiKXQ9byh0KTtpZihBcnJheS5pc0FycmF5KHQpKXt0PXtSOnQuc2xpY2UoMCxlLmVuY29kaW5nTGVuZ3RoKSxTOnQuc2xpY2UoZS5lbmNvZGluZ0xlbmd0aCl9fWEodC5SJiZ0LlMsXCJTaWduYXR1cmUgd2l0aG91dCBSIG9yIFNcIik7aWYoZS5pc1BvaW50KHQuUikpdGhpcy5fUj10LlI7aWYodC5TIGluc3RhbmNlb2YgaSl0aGlzLl9TPXQuUzt0aGlzLl9SZW5jb2RlZD1BcnJheS5pc0FycmF5KHQuUik/dC5SOnQuUmVuY29kZWQ7dGhpcy5fU2VuY29kZWQ9QXJyYXkuaXNBcnJheSh0LlMpP3QuUzp0LlNlbmNvZGVkfXMoU2lnbmF0dXJlLFwiU1wiLChmdW5jdGlvbiBTKCl7cmV0dXJuIHRoaXMuZWRkc2EuZGVjb2RlSW50KHRoaXMuU2VuY29kZWQoKSl9KSk7cyhTaWduYXR1cmUsXCJSXCIsKGZ1bmN0aW9uIFIoKXtyZXR1cm4gdGhpcy5lZGRzYS5kZWNvZGVQb2ludCh0aGlzLlJlbmNvZGVkKCkpfSkpO3MoU2lnbmF0dXJlLFwiUmVuY29kZWRcIiwoZnVuY3Rpb24gUmVuY29kZWQoKXtyZXR1cm4gdGhpcy5lZGRzYS5lbmNvZGVQb2ludCh0aGlzLlIoKSl9KSk7cyhTaWduYXR1cmUsXCJTZW5jb2RlZFwiLChmdW5jdGlvbiBTZW5jb2RlZCgpe3JldHVybiB0aGlzLmVkZHNhLmVuY29kZUludCh0aGlzLlMoKSl9KSk7U2lnbmF0dXJlLnByb3RvdHlwZS50b0J5dGVzPWZ1bmN0aW9uIHRvQnl0ZXMoKXtyZXR1cm4gdGhpcy5SZW5jb2RlZCgpLmNvbmNhdCh0aGlzLlNlbmNvZGVkKCkpfTtTaWduYXR1cmUucHJvdG90eXBlLnRvSGV4PWZ1bmN0aW9uIHRvSGV4KCl7cmV0dXJuIG4uZW5jb2RlKHRoaXMudG9CeXRlcygpLFwiaGV4XCIpLnRvVXBwZXJDYXNlKCl9O2UuZXhwb3J0cz1TaWduYXR1cmV9LDk3MDI6ZnVuY3Rpb24oZSl7ZS5leHBvcnRzPXtkb3VibGVzOntzdGVwOjQscG9pbnRzOltbXCJlNjBmY2U5M2I1OWU5ZWM1MzAxMWFhYmMyMWMyM2U5N2IyYTMxMzY5Yjg3YTVhZTljNDRlZTg5ZTJhNmRlYzBhXCIsXCJmN2UzNTA3Mzk5ZTU5NTkyOWRiOTlmMzRmNTc5MzcxMDEyOTY4OTFlNDRkMjNmMGJlMWYzMmNjZTY5NjE2ODIxXCJdLFtcIjgyODIyNjMyMTJjNjA5ZDllYTJhNmUzZTE3MmRlMjM4ZDhjMzljYWJkNWFjMWNhMTA2NDZlMjNmZDVmNTE1MDhcIixcIjExZjhhODA5ODU1N2RmZTQ1ZTgyNTZlODMwYjYwYWNlNjJkNjEzYWMyZjdiMTdiZWQzMWI2ZWFmZjZlMjZjYWZcIl0sW1wiMTc1ZTE1OWY3MjhiODY1YTcyZjk5Y2M2YzZmYzg0NmRlMGI5MzgzM2ZkMjIyMmVkNzNmY2U1YjU1MWU1YjczOVwiLFwiZDM1MDZlMGQ5ZTNjNzllYmE0ZWY5N2E1MWZmNzFmNWVhY2I1OTU1YWRkMjQzNDVjNmVmYTZmZmVlOWZlZDY5NVwiXSxbXCIzNjNkOTBkNDQ3YjAwYzljOTljZWFjMDViNjI2MmVlMDUzNDQxYzdlNTU1NTJmZmU1MjZiYWQ4ZjgzZmY0NjQwXCIsXCI0ZTI3M2FkZmM3MzIyMjE5NTNiNDQ1Mzk3ZjMzNjMxNDViOWE4OTAwODE5OWVjYjYyMDAzYzdmM2JlZTlkZTlcIl0sW1wiOGI0YjVmMTY1ZGYzYzJiZThjNjI0NGI1Yjc0NTYzODg0M2U0YTc4MWExNWJjZDFiNjlmNzlhNTVkZmZkZjgwY1wiLFwiNGFhZDBhNmY2OGQzMDhiNGIzZmJkNzgxM2FiMGRhMDRmOWUzMzY1NDYxNjJlZTU2YjNlZmYwYzY1ZmQ0ZmQzNlwiXSxbXCI3MjNjYmFhNmU1ZGI5OTZkNmJmNzcxYzAwYmQ1NDhjN2I3MDBkYmZmYTZjMGU3N2JjYjYxMTU5MjUyMzJmY2RhXCIsXCI5NmU4NjdiNTU5NWNjNDk4YTkyMTEzNzQ4ODgyNGQ2ZTI2NjBhMDY1Mzc3OTQ5NDgwMWRjMDY5ZDllYjM5ZjVmXCJdLFtcImVlYmZhNGQ0OTNiZWJmOThiYTVmZWVjODEyYzJkM2I1MDk0Nzk2MTIzN2E5MTk4MzlhNTMzZWNhMGU3ZGQ3ZmFcIixcIjVkOWE4Y2EzOTcwZWYwZjI2OWVlN2VkYWYxNzgwODlkOWFlNGNkYzNhNzExZjcxMmRkZmQ0ZmRhZTFkZTg5OTlcIl0sW1wiMTAwZjQ0ZGE2OTZlNzE2NzI3OTFkMGEwOWI3YmRlNDU5ZjEyMTVhMjliM2MwM2JmZWZkNzgzNWIzOWE0OGRiMFwiLFwiY2RkOWUxMzE5MmEwMGI3NzJlYzhmMzMwMGMwOTA2NjZiN2ZmNGExOGZmNTE5NWFjMGZiZDVjZDYyYmM2NWEwOVwiXSxbXCJlMTAzMWJlMjYyYzdlZDFiMWRjOTIyN2E0YTA0YzAxN2E3N2Y4ZDQ0NjRmM2IzODUyYzhhY2RlNmU1MzRmZDJkXCIsXCI5ZDcwNjE5Mjg5NDA0MDVlNmJiNmE0MTc2NTk3NTM1YWYyOTJkZDQxOWUxY2VkNzlhNDRmMThmMjk0NTZhMDBkXCJdLFtcImZlZWE2Y2FlNDZkNTViNTMwYWMyODM5ZjE0M2JkN2VjNWNmOGIyNjZhNDFkNmFmNTJkNWU2ODhkOTA5NDY5NmRcIixcImU1N2M2YjZjOTdkY2UxYmFiMDZlNGUxMmJmM2VjZDVjOTgxYzg5NTdjYzQxNDQyZDMxNTVkZWJmMTgwOTAwODhcIl0sW1wiZGE2N2E5MWQ5MTA0OWNkY2IzNjdiZTRiZTZmZmNhM2NmZWVkNjU3ZDgwODU4M2RlMzNmYTk3OGJjMWVjNmNiMVwiLFwiOWJhY2FhMzU0ODE2NDJiYzQxZjQ2M2Y3ZWM5NzgwZTVkZWM3YWRjNTA4Zjc0MGExN2U5ZWE4ZTI3YTY4YmUxZFwiXSxbXCI1MzkwNGZhYTBiMzM0Y2RkYTZlMDAwOTM1ZWYyMjE1MWVjMDhkMGY3YmIxMTA2OWY1NzU0NWNjYzFhMzdiN2MwXCIsXCI1YmMwODdkMGJjODAxMDZkODhjOWVjY2FjMjBkM2MxYzEzOTk5OTgxZTE0NDM0Njk5ZGNiMDk2YjAyMjc3MWM4XCJdLFtcIjhlN2JjZDBiZDM1OTgzYTc3MTljY2E3NzY0Y2E5MDY3NzliNTNhMDQzYTliOGJjYWVmZjk1OWY0M2FkODYwNDdcIixcIjEwYjc3NzBiMmEzZGE0YjM5NDAzMTA0MjBjYTk1MTQ1NzllODhlMmU0N2ZkNjhiM2VhMTAwNDdlODQ2MDM3MmFcIl0sW1wiMzg1ZWVkMzRjMWNkZmYyMWU2ZDA4MTg2ODliODFiZGU3MWE3ZjRmMTgzOTdlNjY5MGE4NDFlMTU5OWM0Mzg2MlwiLFwiMjgzYmViYzNlOGVhMjNmNTY3MDFkZTE5ZTllYmY0NTc2YjMwNGVlYzIwODZkYzhjYzA0NThmZTU1NDJlNTQ1M1wiXSxbXCI2ZjlkOWI4MDNlY2YxOTE2MzdjNzNhNDQxM2RmYTE4MGZkZGY4NGE1OTQ3ZmJjOWM2MDZlZDg2YzNmYWMzYTdcIixcIjdjODBjNjhlNjAzMDU5YmE2OWI4ZTJhMzBlNDVjNGQ0N2VhNGRkMmY1YzI4MTAwMmQ4Njg5MDYwM2E4NDIxNjBcIl0sW1wiMzMyMmQ0MDEyNDNjNGUyNTgyYTIxNDdjMTA0ZDZlY2JmNzc0ZDE2M2RiMGY1ZTUzMTNiN2UwZTc0MmQwZTZiZFwiLFwiNTZlNzA3OTdlOTY2NGVmNWJmYjAxOWJjNGRkYWY5YjcyODA1ZjYzZWEyODczYWY2MjRmM2EyZTk2YzI4YjJhMFwiXSxbXCI4NTY3MmM3ZDJkZTBiN2RhMmJkMTc3MGQ4OTY2NTg2ODc0MWIzZjlhZjc2NDMzOTc3MjFkNzRkMjgxMzRhYjgzXCIsXCI3YzQ4MWI5YjViNDNiMmViNjM3NDA0OWJmYTYyYzJlNWU3N2YxN2ZjYzUyOThmNDRjOGUzMDk0Zjc5MDMxM2E2XCJdLFtcIjk0OGJmODA5YjE5ODhhNDZiMDZjOWYxOTE5NDEzYjEwZjkyMjZjNjBmNjY4ODMyZmZkOTU5YWY2MGM4MmEwYVwiLFwiNTNhNTYyODU2ZGNiNjY0NmRjNmI3NGM1ZDFjMzQxOGM2ZDRkZmYwOGM5N2NkMmJlZDRjYjdmODhkOGM4ZTU4OVwiXSxbXCI2MjYwY2U3ZjQ2MTgwMWMzNGYwNjdjZTBmMDI4NzNhOGYxYjBlNDRkZmM2OTc1MmFjY2VjZDgxOWYzOGZkOGU4XCIsXCJiYzJkYTgyYjZmYTViNTcxYTdmMDkwNDk3NzZhMWVmN2VjZDI5MjIzODA1MWMxOThjMWE4NGU5NWIyYjRhZTE3XCJdLFtcImU1MDM3ZGUwYWZjMWQ4ZDQzZDgzNDg0MTRiYmY0MTAzMDQzZWM4ZjU3NWJmZGM0MzI5NTNjYzhkMjAzN2ZhMmRcIixcIjQ1NzE1MzRiYWE5NGQzYjVmOWY5OGQwOWZiOTkwYmRkYmQ1ZjViMDNlYzQ4MWYxMGUwZTVkYzg0MWQ3NTViZGFcIl0sW1wiZTA2MzcyYjBmNGEyMDdhZGY1ZWE5MDVlOGYxNzcxYjRlN2U4ZGJkMWM2YTZjNWI3MjU4NjZhMGFlNGZjZTcyNVwiLFwiN2E5MDg5NzRiY2UxOGNmZTEyYTI3YmIyYWQ1YTQ4OGNkNzQ4NGE3Nzg3MTA0ODcwYjI3MDM0Zjk0ZWVlMzFkZFwiXSxbXCIyMTNjN2E3MTVjZDVkNDUzNThkMGJiZjlkYzBjZTAyMjA0YjEwYmRkZTJhM2Y1ODU0MGFkNjkwOGQwNTU5NzU0XCIsXCI0YjZkYWQwYjVhZTQ2MjUwNzAxM2FkMDYyNDViYTE5MGJiNDg1MGY1ZjM2YTdlZWRkZmYyYzI3NTM0YjQ1OGYyXCJdLFtcIjRlN2MyNzJhN2FmNGIzNGU4ZGJiOTM1MmE1NDE5YTg3ZTI4MzhjNzBhZGM2MmNkZGYwY2MzYTNiMDhmYmQ1M2NcIixcIjE3NzQ5Yzc2NmM5ZDBiMThlMTZmZDA5ZjZkZWY2ODFiNTMwYjk2MTRiZmY3ZGQzM2UwYjM5NDE4MTdkY2FhZTZcIl0sW1wiZmVhNzRlM2RiZTc3OGIxYjEwZjIzOGFkNjE2ODZhYTVjNzZlM2RiMmJlNDMwNTc2MzI0MjdlMjg0MGZiMjdiNlwiLFwiNmUwNTY4ZGI5YjBiMTMyOTdjZjY3NGRlY2NiNmFmOTMxMjZiNTk2Yjk3M2Y3Yjc3NzAxZDNkYjdmMjNjYjk2ZlwiXSxbXCI3NmU2NDExM2Y2NzdjZjBlMTBhMjU3MGQ1OTk5NjhkMzE1NDRlMTc5Yjc2MDQzMjk1MmMwMmE0NDE3YmRkZTM5XCIsXCJjOTBkZGY4ZGVlNGU5NWNmNTc3MDY2ZDcwNjgxZjBkMzVlMmEzM2QyYjU2ZDIwMzJiNGIxNzUyZDE5MDFhYzAxXCJdLFtcImM3MzhjNTZiMDNiMmFiZTFlODI4MWJhYTc0M2Y4ZjlhOGY3Y2M2NDNkZjI2Y2JlZTNhYjE1MDI0MmJjYmI4OTFcIixcIjg5M2ZiNTc4OTUxYWQyNTM3ZjcxOGYyZWFjYmZiYmJiODIzMTRlZWY3ODgwY2ZlOTE3ZTczNWQ5Njk5YTg0YzNcIl0sW1wiZDg5NTYyNjU0OGI2NWI4MWUyNjRjNzYzN2M5NzI4NzdkMWQ3MmU1ZjNhOTI1MDE0MzcyZTlmNjU4OGY2YzE0YlwiLFwiZmViZmFhMzhmMmJjN2VhZTcyOGVjNjA4MThjMzQwZWIwMzQyOGQ2MzJiYjA2N2UxNzkzNjNlZDc1ZDdkOTkxZlwiXSxbXCJiOGRhOTQwMzJhOTU3NTE4ZWIwZjY0MzM1NzFlODc2MWNlZmZjNzM2OTNlODRlZGQ0OTE1MGE1NjRmNjc2ZTAzXCIsXCIyODA0ZGZhNDQ4MDVhMWU0ZDdjOTljYzk3NjI4MDhiMDkyY2M1ODRkOTVmZjNiNTExNDg4ZTRlNzRlZmRmNmU3XCJdLFtcImU4MGZlYTE0NDQxZmIzM2E3ZDhhZGFiOTQ3NWQ3ZmFiMjAxOWVmZmI1MTU2YTc5MmYxYTExNzc4ZTNjMGRmNWRcIixcImVlZDFkZTdmNjM4ZTAwNzcxZTg5NzY4Y2EzY2E5NDQ3MmQxNTVlODBhZjMyMmVhOWZjYjQyOTFiNmFjOWVjNzhcIl0sW1wiYTMwMTY5N2JkZmNkNzA0MzEzYmE0OGU1MWQ1Njc1NDNmMmExODIwMzFlZmQ2OTE1ZGRjMDdiYmNjNGUxNjA3MFwiLFwiNzM3MGY5MWNmYjY3ZTRmNTA4MTgwOWZhMjVkNDBmOWIxNzM1ZGJmN2MwYTExYTEzMGMwZDFhMDQxZTE3N2VhMVwiXSxbXCI5MGFkODViMzg5ZDZiOTM2NDYzZjlkMDUxMjY3OGRlMjA4Y2MzMzBiMTEzMDdmZmZhYjdhYzYzZTNmYjA0ZWQ0XCIsXCJlNTA3YTM2MjBhMzgyNjFhZmZkY2JkOTQyNzIyMmI4MzlhZWZhYmUxNTgyODk0ZDk5MWQ0ZDQ4Y2I2ZWYxNTBcIl0sW1wiOGY2OGI5ZDJmNjNiNWYzMzkyMzljMWFkOTgxZjE2MmVlODhjNTY3ODcyM2VhMzM1MWI3YjQ0NGM5ZWM0YzBkYVwiLFwiNjYyYTlmMmRiYTA2Mzk4NmRlMWQ5MGMyYjZiZTIxNWRiYmVhMmNmZTk1NTEwYmZkZjIzY2JmNzk1MDFmZmY4MlwiXSxbXCJlNGYzZmIwMTc2YWY4NWQ2NWZmOTlmZjkxOThjMzYwOTFmNDhlODY1MDM2ODFlM2U2Njg2ZmQ1MDUzMjMxZTExXCIsXCIxZTYzNjMzYWQwZWY0ZjFjMTY2MWE2ZDBlYTAyYjcyODZjYzdlNzRlYzk1MWQxYzk4MjJjMzg1NzZmZWI3M2JjXCJdLFtcIjhjMDBmYTliMThlYmYzMzFlYjk2MTUzN2E0NWE0MjY2YzcwMzRmMmYwZDRlMWQwNzE2ZmI2ZWFlMjBlYWUyOWVcIixcImVmYTQ3MjY3ZmVhNTIxYTFhOWRjMzQzYTM3MzZjOTc0YzJmYWRhZmE4MWUzNmM1NGU3ZDJhNGM2NjcwMjQxNGJcIl0sW1wiZTdhMjZjZTY5ZGQ0ODI5ZjNlMTBjZWMwYTllOThlZDMxNDNkMDg0ZjMwOGI5MmMwOTk3ZmRkZmM2MGNiM2U0MVwiLFwiMmE3NThlMzAwZmE3OTg0YjQ3MWIwMDZhMWFhZmJiMThkMGE2YjJjMDQyMGU4M2UyMGU4YTk0MjFjZjJjZmQ1MVwiXSxbXCJiNjQ1OWUwZWUzNjYyZWM4ZDIzNTQwYzIyM2JjYmRjNTcxY2JjYjk2N2Q3OTQyNGYzY2YyOWViM2RlNmI4MGVmXCIsXCI2N2M4NzZkMDZmM2UwNmRlMWRhZGYxNmU1NjYxZGIzYzRiM2FlNmQ0OGUzNWIyZmYzMGJmMGI2MWE3MWJhNDVcIl0sW1wiZDY4YTgwYzgyODBiYjg0MDc5MzIzNGFhMTE4ZjA2MjMxZDZmMWZjNjdlNzNjNWE1ZGVkYTBmNWI0OTY5NDNlOFwiLFwiZGI4YmE5ZmZmNGI1ODZkMDBjNGIxZjkxNzdiMGUyOGI1YjBlN2I4Zjc4NDUyOTVhMjk0Yzg0MjY2YjEzMzEyMFwiXSxbXCIzMjRhZWQ3ZGY2NWM4MDQyNTJkYzAyNzA5MDdhMzBiMDk2MTJhZWI5NzM0NDljZWE0MDk1OTgwZmMyOGQzZDVkXCIsXCI2NDhhMzY1Nzc0YjYxZjJmZjEzMGMwYzM1YWVjMWY0ZjE5MjEzYjBjN2UzMzI4NDM5NjcyMjRhZjk2YWI3Yzg0XCJdLFtcIjRkZjljMTQ5MTljZGU2MWY2ZDUxZGZkYmU1ZmVlNWRjZWVjNDE0M2JhOGQxY2E4ODhlOGJkMzczZmQwNTRjOTZcIixcIjM1ZWM1MTA5MmQ4NzI4MDUwOTc0YzIzYTFkODVkNGI1ZDUwNmNkYzI4ODQ5MDE5MmViYWMwNmNhZDEwZDVkXCJdLFtcIjljMzkxOWE4NGE0NzQ4NzBmYWVkOGE5YzFjYzY2MDIxNTIzNDg5MDU0ZDdmMDMwOGNiZmM5OWM4YWMxZjk4Y2RcIixcImRkYjg0ZjBmNGE0ZGRkNTc1ODRmMDQ0YmYyNjBlNjQxOTA1MzI2Zjc2YzY0YzhlNmJlN2U1ZTAzZDRmYzU5OWRcIl0sW1wiNjA1NzE3MGIxZGQxMmZkZjhkZTA1ZjI4MWQ4ZTA2YmI5MWUxNDkzYThiOTFkNGNjNWEyMTM4MjEyMGE5NTllNVwiLFwiOWExYWYwYjI2YTZhNDgwN2FkZDlhMmRhZjcxZGYyNjI0NjUxNTJiYzNlZTI0YzY1ZTg5OWJlOTMyMzg1YTJhOFwiXSxbXCJhNTc2ZGY4ZTIzYTA4NDExNDIxNDM5YTQ1MThkYTMxODgwY2VmMGZiYTdkNGRmMTJiMWE2OTczZWVjYjk0MjY2XCIsXCI0MGE2YmYyMGU3NjY0MGIyYzkyYjk3YWZlNThjZDgyYzQzMmUxMGE3ZjUxNGQ5ZjNlZThiZTExYWUxYjI4ZWM4XCJdLFtcIjc3NzhhNzhjMjhkZWMzZTMwYTA1ZmU5NjI5ZGU4YzM4YmIzMGQxZjVjZjlhM2EyMDhmNzYzODg5YmU1OGFkNzFcIixcIjM0NjI2ZDlhYjVhNWIyMmZmNzA5OGUxMmYyZmY1ODAwODdiMzg0MTFmZjI0YWM1NjNiNTEzZmMxZmQ5ZjQzYWNcIl0sW1wiOTI4OTU1ZWU2MzdhODQ0NjM3MjlmZDMwZTdhZmQyZWQ1Zjk2Mjc0ZTVhZDdlNWNiMDllZGE5YzA2ZDkwM2FjXCIsXCJjMjU2MjEwMDNkM2Y0MmE4MjdiNzhhMTMwOTNhOTVlZWFjM2QyNmVmYThhOGQ4M2ZjNTE4MGU5MzViY2QwOTFmXCJdLFtcIjg1ZDBmZWYzZWM2ZGIxMDkzOTkwNjRmM2EwZTNiMjg1NTY0NWI0YTkwN2FkMzU0NTI3YWFlNzUxNjNkODI3NTFcIixcIjFmMDM2NDg0MTNhMzhjMGJlMjlkNDk2ZTU4MmNmNTY2M2U4NzUxZTk2ODc3MzMxNTgyYzIzN2EyNGViMWY5NjJcIl0sW1wiZmYyYjBkY2U5N2VlY2U5N2MxYzliNjA0MTc5OGI4NWRmZGZiNmQ4ODgyZGEyMDMwOGY1NDA0ODI0NTI2MDg3ZVwiLFwiNDkzZDEzZmVmNTI0YmExODhhZjRjNGRjNTRkMDc5MzZjN2I3ZWQ2ZmI5MGUyY2ViMmM5NTFlMDFmMGMyOTkwN1wiXSxbXCI4MjdmYmJlNGIxZTg4MGVhOWVkMmIyZTYzMDFiMjEyYjU3ZjFlZTE0OGNkNmRkMjg3ODBlNWUyY2Y4NTZlMjQxXCIsXCJjNjBmOWM5MjNjNzI3YjBiNzFiZWYyYzY3ZDFkMTI2ODdmZjdhNjMxODY5MDMxNjZkNjA1YjY4YmFlYzI5M2VjXCJdLFtcImVhYTY0OWYyMWY1MWJkYmFlN2JlNGFlMzRjZTZlNTIxN2E1OGZkY2U3ZjQ3ZjlhYTdmM2I1OGZhMjEyMGUyYjNcIixcImJlMzI3OWVkNWJiYmIwM2FjNjlhODBmODk4NzlhYTVhMDFhNmI5NjVmMTNmN2U1OWQ0N2E1MzA1YmE1YWQ5M2RcIl0sW1wiZTRhNDJkNDNjNWNmMTY5ZDkzOTFkZjZkZWNmNDJlZTU0MWI2ZDhmMGM5YTEzNzQwMWUyMzYzMmRkYTM0ZDI0ZlwiLFwiNGQ5ZjkyZTcxNmQxYzczNTI2ZmM5OWNjZmI4YWQzNGNlODg2ZWVkZmE4ZDhlNGYxM2E3ZjcxMzFkZWJhOTQxNFwiXSxbXCIxZWM4MGZlZjM2MGNiZGQ5NTQxNjBmYWRhYjM1MmI2YjkyYjUzNTc2YTg4ZmVhNDk0NzE3M2I5ZDQzMDBiZjE5XCIsXCJhZWVmZTkzNzU2YjUzNDBkMmYzYTQ5NThhN2FiYmY1ZTAxNDZlNzdmNjI5NWEwN2I2NzFjZGMxY2MxMDdjZWZkXCJdLFtcIjE0NmE3NzhjMDQ2NzBjMmY5MWIwMGFmNDY4MGRmYThiY2UzNDkwNzE3ZDU4YmE4ODlkZGI1OTI4MzY2NjQyYmVcIixcImIzMThlMGVjMzM1NDAyOGFkZDY2OTgyN2Y5ZDRiMjg3MGFhYTk3MWQyZjdlNWVkMWQwYjI5NzQ4M2Q4M2VmZDBcIl0sW1wiZmE1MGMwZjYxZDIyZTVmMDdlM2FjZWJiMWFhMDdiMTI4ZDAwMTIyMDlhMjhiOTc3NmQ3NmE4NzkzMTgwZWVmOVwiLFwiNmI4NGM2OTIyMzk3ZWJhOWI3MmNkMjg3MjI4MWE2OGE1ZTY4MzI5M2E1N2EyMTNiMzhjZDhkN2QzZjRmMjgxMVwiXSxbXCJkYTFkNjFkMGNhNzIxYTExYjFhNWJmNmI3ZDg4ZTg0MjFhMjg4YWI1ZDViYmE1MjIwZTUzZDMyYjVmMDY3ZWMyXCIsXCI4MTU3ZjU1YTdjOTkzMDZjNzljMDc2NjE2MWM5MWUyOTY2YTczODk5ZDI3OWI0OGE2NTVmYmEwZjFhZDgzNmYxXCJdLFtcImE4ZTI4MmZmMGM5NzA2OTA3MjE1ZmY5OGU4ZmQ0MTY2MTUzMTFkZTA0NDZmMWUwNjJhNzNiMDYxMGQwNjRlMTNcIixcIjdmOTczNTViOGRiODFjMDlhYmZiN2YzYzViMjUxNTg4OGI2NzlhM2U1MGRkNmJkNmNlZjdjNzMxMTFmNGNjMGNcIl0sW1wiMTc0YTUzYjljOWEyODU4NzJkMzllNTZlNjkxM2NhYjE1ZDU5YjFmYTUxMjUwOGMwMjJmMzgyZGU4MzE5NDk3Y1wiLFwiY2NjOWRjMzdhYmZjOWMxNjU3YjQxNTVmMmM0N2Y5ZTY2NDZiM2ExZDhjYjk4NTQzODNkYTEzYWMwNzlhZmE3M1wiXSxbXCI5NTkzOTY5ODE5NDM3ODVjM2QzZTU3ZWRmNTAxOGNkYmUwMzllNzMwZTQ5MThiM2Q4ODRmZGZmMDk0NzViN2JhXCIsXCIyZTdlNTUyODg4YzMzMWRkOGJhMDM4NmE0YjljZDY4NDljNjUzZjY0Yzg3MDkzODVlOWI4YWJmODc1MjRmMmZkXCJdLFtcImQyYTYzYTUwYWU0MDFlNTZkNjQ1YTExNTNiMTA5YThmY2NhMGE0M2Q1NjFmYmEyZGJiNTEzNDBjOWQ4MmIxNTFcIixcImU4MmQ4NmZiNjQ0M2ZjYjc1NjVhZWU1OGIyOTQ4MjIwYTcwZjc1MGFmNDg0Y2E1MmQ0MTQyMTc0ZGNmODk0MDVcIl0sW1wiNjQ1ODdlMjMzNTQ3MWViODkwZWU3ODk2ZDdjZmRjODY2YmFjYmRiZDM4MzkzMTdiMzQzNmY5YjQ1NjE3ZTA3M1wiLFwiZDk5ZmNkZDViZjY5MDJlMmFlOTZkZDY0NDdjMjk5YTE4NWI5MGEzOTEzM2FlYWIzNTgyOTllNWU5ZmFmNjU4OVwiXSxbXCI4NDgxYmRlMGU0ZTRkODg1YjNhNTQ2ZDNlNTQ5ZGUwNDJmMGFhNmNlYTI1MGU3ZmQzNThkNmM4NmRkNDVlNDU4XCIsXCIzOGVlN2I4Y2JhNTQwNGRkODRhMjViZjM5Y2VjYjJjYTkwMGE3OWM0MmIyNjJlNTU2ZDY0YjFiNTk3NzkwNTdlXCJdLFtcIjEzNDY0YTU3YTc4MTAyYWE2MmI2OTc5YWU4MTdmNDYzN2ZmY2ZlZDNjNGIxY2UzMGJjZDYzMDNmNmNhZjY2NmJcIixcIjY5YmUxNTkwMDQ2MTQ1ODBlZjdlNDMzNDUzY2NiMGNhNDhmMzAwYTgxZDA5NDJlMTNmNDk1YTkwN2Y2ZWNjMjdcIl0sW1wiYmM0YTlkZjViNzEzZmUyZTlhZWY0MzBiY2MxZGM5N2EwY2Q5Y2NlZGUyZjI4NTg4Y2FkYTNhMGQyZDgzZjM2NlwiLFwiZDNhODFjYTZlNzg1YzA2MzgzOTM3YWRmNGI3OThjYWE2ZThhOWZiZmE1NDdiMTZkNzU4ZDY2NjU4MWYzM2MxXCJdLFtcIjhjMjhhOTdiZjgyOThiYzBkMjNkOGM3NDk0NTJhMzJlNjk0YjY1ZTMwYTk0NzJhMzk1NGFiMzBmZTUzMjRjYWFcIixcIjQwYTMwNDYzYTMzMDUxOTMzNzhmZWRmMzFmN2NjMGViN2FlNzg0ZjA0NTFjYjk0NTllNzFkYzczY2JlZjk0ODJcIl0sW1wiOGVhOTY2NjEzOTUyN2E4YzFkZDk0Y2U0ZjA3MWZkMjNjOGIzNTBjNWE0YmIzMzc0OGM0YmExMTFmYWNjYWUwXCIsXCI2MjBlZmFiYmM4ZWUyNzgyZTI0ZTdjMGNmYjk1YzVkNzM1Yjc4M2JlOWNmMGY4ZTk1NWFmMzRhMzBlNjJiOTQ1XCJdLFtcImRkMzYyNWZhZWY1YmEwNjA3NDY2OTcxNmJiZDM3ODhkODliZGRlODE1OTU5OTY4MDkyZjc2Y2M0ZWI5YTk3ODdcIixcIjdhMTg4ZmEzNTIwZTMwZDQ2MWRhMjUwMTA0NTczMWNhOTQxNDYxOTgyODgzMzk1OTM3ZjY4ZDAwYzY0NGE1NzNcIl0sW1wiZjcxMGQ3OWQ5ZWI5NjIyOTdlNGY2MjMyYjQwZThmN2ZlYjJiYzYzODE0NjE0ZDY5MmMxMmRlNzUyNDA4MjIxZVwiLFwiZWE5OGU2NzIzMmQzYjMyOTVkM2I1MzU1MzIxMTVjY2FjODYxMmM3MjE4NTE2MTc1MjZhZTQ3YTljNzdiZmM4MlwiXV19LG5hZjp7d25kOjcscG9pbnRzOltbXCJmOTMwOGEwMTkyNThjMzEwNDkzNDRmODVmODlkNTIyOWI1MzFjODQ1ODM2Zjk5YjA4NjAxZjExM2JjZTAzNmY5XCIsXCIzODhmN2IwZjYzMmRlODE0MGZlMzM3ZTYyYTM3ZjM1NjY1MDBhOTk5MzRjMjIzMWI2Y2I5ZmQ3NTg0YjhlNjcyXCJdLFtcIjJmOGJkZTRkMWEwNzIwOTM1NWI0YTcyNTBhNWM1MTI4ZTg4Yjg0YmRkYzYxOWFiN2NiYThkNTY5YjI0MGVmZTRcIixcImQ4YWMyMjI2MzZlNWUzZDZkNGRiYTlkZGE2YzljNDI2Zjc4ODI3MWJhYjBkNjg0MGRjYTg3ZDNhYTZhYzYyZDZcIl0sW1wiNWNiZGYwNjQ2ZTVkYjRlYWEzOThmMzY1ZjJlYTdhMGUzZDQxOWI3ZTAzMzBlMzljZTkyYmRkZWRjYWM0ZjliY1wiLFwiNmFlYmNhNDBiYTI1NTk2MGEzMTc4ZDZkODYxYTU0ZGJhODEzZDBiODEzZmRlN2I1YTUwODI2MjgwODcyNjRkYVwiXSxbXCJhY2Q0ODRlMmYwYzdmNjUzMDlhZDE3OGE5ZjU1OWFiZGUwOTc5Njk3NGM1N2U3MTRjMzVmMTEwZGZjMjdjY2JlXCIsXCJjYzMzODkyMWIwYTdkOWZkNjQzODA5NzE3NjNiNjFlOWFkZDg4OGE0Mzc1ZjhlMGYwNWNjMjYyYWM2NGY5YzM3XCJdLFtcIjc3NGFlN2Y4NThhOTQxMWU1ZWY0MjQ2YjcwYzY1YWFjNTY0OTk4MGJlNWMxNzg5MWJiZWMxNzg5NWRhMDA4Y2JcIixcImQ5ODRhMDMyZWI2YjVlMTkwMjQzZGQ1NmQ3YjdiMzY1MzcyZGIxZTJkZmY5ZDZhODMwMWQ3NGM5Yzk1M2M2MWJcIl0sW1wiZjI4NzczYzJkOTc1Mjg4YmM3ZDFkMjA1YzM3NDg2NTFiMDc1ZmJjNjYxMGU1OGNkZGVlZGRmOGYxOTQwNWFhOFwiLFwiYWIwOTAyZThkODgwYTg5NzU4MjEyZWI2NWNkYWY0NzNhMWEwNmRhNTIxZmE5MWYyOWI1Y2I1MmRiMDNlZDgxXCJdLFtcImQ3OTI0ZDRmN2Q0M2VhOTY1YTQ2NWFlMzA5NWZmNDExMzFlNTk0NmYzYzg1Zjc5ZTQ0YWRiY2Y4ZTI3ZTA4MGVcIixcIjU4MWUyODcyYTg2YzcyYTY4Mzg0MmVjMjI4Y2M2ZGVmZWE0MGFmMmJkODk2ZDNhNWM1MDRkYzlmZjZhMjZiNThcIl0sW1wiZGVmZGVhNGNkYjY3Nzc1MGE0MjBmZWU4MDdlYWNmMjFlYjk4OThhZTc5Yjk3Njg3NjZlNGZhYTA0YTJkNGEzNFwiLFwiNDIxMWFiMDY5NDYzNTE2OGU5OTdiMGVhZDJhOTNkYWVjZWQxZjRhMDRhOTVjMGY2Y2ZiMTk5ZjY5ZTU2ZWI3N1wiXSxbXCIyYjRlYTBhNzk3YTQ0M2QyOTNlZjVjZmY0NDRmNDk3OWYwNmFjZmViZDdlODZkMjc3NDc1NjU2MTM4Mzg1YjZjXCIsXCI4NWU4OWJjMDM3OTQ1ZDkzYjM0MzA4M2I1YTFjODYxMzFhMDFmNjBjNTAyNjk3NjNiNTcwYzg1NGU1YzA5YjdhXCJdLFtcIjM1MmJiZjRhNGNkZDEyNTY0ZjkzZmEzMzJjZTMzMzMwMWQ5YWQ0MDI3MWY4MTA3MTgxMzQwYWVmMjViZTU5ZDVcIixcIjMyMWViNDA3NTM0OGY1MzRkNTljMTgyNTlkZGEzZTFmNGExYjNiMmU3MWIxMDM5YzY3YmQzZDhiY2Y4MTk5OGNcIl0sW1wiMmZhMjEwNGQ2YjM4ZDExYjAyMzAwMTA1NTk4NzkxMjRlNDJhYjhkZmVmZjVmZjI5ZGM5Y2RhZGQ0ZWNhY2MzZlwiLFwiMmRlMTA2ODI5NWRkODY1YjY0NTY5MzM1YmQ1ZGQ4MDE4MWQ3MGVjZmM4ODI2NDg0MjNiYTc2YjUzMmI3ZDY3XCJdLFtcIjkyNDgyNzliMDliNGQ2OGRhYjIxYTliMDY2ZWRkYTgzMjYzYzNkODRlMDk1NzJlMjY5Y2EwY2Q3ZjU0NTM3MTRcIixcIjczMDE2ZjdiZjIzNGFhZGU1ZDFhYTcxYmRlYTJiMWZmM2ZjMGRlMmE4ODc5MTJmZmU1NGEzMmNlOTdjYjM0MDJcIl0sW1wiZGFlZDRmMmJlM2E4YmYyNzhlNzAxMzJmYjBiZWI3NTIyZjU3MGUxNDRiZjYxNWMwN2U5OTZkNDQzZGVlODcyOVwiLFwiYTY5ZGNlNGE3ZDZjOThlOGQ0YTFhY2E4N2VmOGQ3MDAzZjgzYzIzMGYzYWZhNzI2YWI0MGU1MjI5MGJlMWM1NVwiXSxbXCJjNDRkMTJjNzA2NWQ4MTJlOGFjZjI4ZDdjYmIxOWY5MDExZWNkOWU5ZmRmMjgxYjBlNmEzYjVlODdkMjJlN2RiXCIsXCIyMTE5YTQ2MGNlMzI2Y2RjNzZjNDU5MjZjOTgyZmRhYzBlMTA2ZTg2MWVkZjYxYzVhMDM5MDYzZjBlMGU2NDgyXCJdLFtcIjZhMjQ1YmY2ZGM2OTg1MDRjODlhMjBjZmRlZDYwODUzMTUyYjY5NTMzNmMyODA2M2I2MWM2NWNiZDI2OWU2YjRcIixcImUwMjJjZjQyYzJiZDRhNzA4YjNmNTEyNmYxNmEyNGFkOGIzM2JhNDhkMDQyM2I2ZWZkNWU2MzQ4MTAwZDhhODJcIl0sW1wiMTY5N2ZmYTZmZDlkZTYyN2MwNzdlM2QyZmU1NDEwODRjZTEzMzAwYjBiZWMxMTQ2Zjk1YWU1N2YwZDBiZDZhNVwiLFwiYjljMzk4ZjE4NjgwNmY1ZDI3NTYxNTA2ZTQ1NTc0MzNhMmNmMTUwMDllNDk4YWU3YWRlZTlkNjNkMDFiMjM5NlwiXSxbXCI2MDViZGIwMTk5ODE3MThiOTg2ZDBmMDdlODM0Y2IwZDlkZWI4MzYwZmZiN2Y2MWRmOTgyMzQ1ZWYyN2E3NDc5XCIsXCIyOTcyZDJkZTRmOGQyMDY4MWE3OGQ5M2VjOTZmZTIzYzI2YmZhZTg0ZmIxNGRiNDNiMDFlMWU5MDU2YjhjNDlcIl0sW1wiNjJkMTRkYWI0MTUwYmY0OTc0MDJmZGM0NWEyMTVlMTBkY2IwMWMzNTQ5NTliMTBjZmUzMWM3ZTlkODdmZjMzZFwiLFwiODBmYzA2YmQ4Y2M1YjAxMDk4MDg4YTE5NTBlZWQwZGIwMWFhMTMyOTY3YWI0NzIyMzVmNTY0MjQ4M2IyNWVhZlwiXSxbXCI4MGM2MGFkMDA0MGYyN2RhZGU1YjRiMDZjNDA4ZTU2YjJjNTBlOWY1NmI5YjhiNDI1ZTU1NWMyZjg2MzA4YjZmXCIsXCIxYzM4MzAzZjFjYzVjMzBmMjZlNjZiYWQ3ZmU3MmY3MGE2NWVlZDRjYmU3MDI0ZWIxYWEwMWY1NjQzMGJkNTdhXCJdLFtcIjdhOTM3NWFkNjE2N2FkNTRhYTc0YzYzNDhjYzU0ZDM0NGNjNWRjOTQ4N2Q4NDcwNDlkNWVhYmIwZmEwM2M4ZmJcIixcImQwZTNmYTllY2E4NzI2OTA5NTU5ZTBkNzkyNjkwNDZiZGM1OWVhMTBjNzBjZTJiMDJkNDk5ZWMyMjRkYzdmN1wiXSxbXCJkNTI4ZWNkOWI2OTZiNTRjOTA3YTllZDA0NTQ0N2E3OWJiNDA4ZWMzOWI2OGRmNTA0YmI1MWY0NTliYzNmZmM5XCIsXCJlZWNmNDEyNTMxMzZlNWY5OTk2NmYyMTg4MWZkNjU2ZWJjNDM0NTQwNWM1MjBkYmMwNjM0NjViNTIxNDA5OTMzXCJdLFtcIjQ5MzcwYTRiNWY0MzQxMmVhMjVmNTE0ZThlY2RhZDA1MjY2MTE1ZTRhN2VjYjEzODcyMzE4MDhmOGI0NTk2M1wiLFwiNzU4ZjNmNDFhZmQ2ZWQ0MjhiMzA4MWIwNTEyZmQ2MmE1NGMzZjNhZmJiNWI2NzY0YjY1MzA1MmExMjk0OWM5YVwiXSxbXCI3N2YyMzA5MzZlZTg4Y2JiZDczZGY5MzBkNjQ3MDJlZjg4MWQ4MTFlMGUxNDk4ZTJmMWMxM2ViMWZjMzQ1ZDc0XCIsXCI5NThlZjQyYTc4ODZiNjQwMGEwODI2NmU5YmExYjM3ODk2Yzk1MzMwZDk3MDc3Y2JiZThlYjNjNzY3MWM2MGQ2XCJdLFtcImYyZGFjOTkxY2M0Y2U0YjllYTQ0ODg3ZTVjN2MwYmNlNThjODAwNzRhYjlkNGRiYWViMjg1MzFiNzczOWY1MzBcIixcImUwZGVkYzliM2IyZjhkYWQ0ZGExZjMyZGVjMjUzMWRmOWViNWZiZWIwNTk4ZTRmZDFhMTE3ZGJhNzAzYTNjMzdcIl0sW1wiNDYzYjNkOWY2NjI2MjFmYjFiNGJlOGZiYmUyNTIwMTI1YTIxNmNkZmM5ZGFlM2RlYmNiYTQ4NTBjNjkwZDQ1YlwiLFwiNWVkNDMwZDc4YzI5NmMzNTQzMTE0MzA2ZGQ4NjIyZDdjNjIyZTI3Yzk3MGExZGUzMWNiMzc3YjAxYWY3MzA3ZVwiXSxbXCJmMTZmODA0MjQ0ZTQ2ZTJhMDkyMzJkNGFmZjNiNTk5NzZiOThmYWMxNDMyOGEyZDFhMzI0OTZiNDk5OThmMjQ3XCIsXCJjZWRhYmQ5YjgyMjAzZjdlMTNkMjA2ZmNkZjRlMzNkOTJhNmM1M2MyNmU1Y2NlMjZkNjU3OTk2MmM0ZTMxZGY2XCJdLFtcImNhZjc1NDI3MmRjODQ1NjNiMDM1MmI3YTE0MzExYWY1NWQyNDUzMTVhY2UyN2M2NTM2OWUxNWY3MTUxZDQxZDFcIixcImNiNDc0NjYwZWYzNWY1ZjJhNDFiNjQzZmE1ZTQ2MDU3NWY0ZmE5Yjc5NjIyMzJhNWMzMmY5MDgzMThhMDQ0NzZcIl0sW1wiMjYwMGNhNGIyODJjYjk4NmY4NWQwZjE3MDk5NzlkOGI0NGEwOWMwN2NiODZkN2MxMjQ0OTdiYzg2ZjA4MjEyMFwiLFwiNDExOWI4ODc1M2MxNWJkNmE2OTNiMDNmY2RkYmI0NWQ1YWM2YmU3NGFiNWYwZWY0NGIwYmU5NDc1YTdlNGI0MFwiXSxbXCI3NjM1Y2E3MmQ3ZTg0MzJjMzM4ZWM1M2NkMTIyMjBiYzAxYzQ4Njg1ZTI0ZjdkYzhjNjAyYTc3NDY5OThlNDM1XCIsXCI5MWI2NDk2MDk0ODlkNjEzZDFkNWU1OTBmNzhlNmQ3NGVjZmMwNjFkNTcwNDhiYWQ5ZTc2ZjMwMmM1YjljNjFcIl0sW1wiNzU0ZTMyMzlmMzI1NTcwY2RiYmY0YTg3ZGVlZThhNjZiN2YyYjMzNDc5ZDQ2OGZiYzFhNTA3NDNiZjU2Y2MxOFwiLFwiNjczZmI4NmU1YmRhMzBmYjNjZDBlZDMwNGVhNDlhMDIzZWUzM2QwMTk3YTY5NWQwYzVkOTgwOTNjNTM2NjgzXCJdLFtcImUzZTZiZDEwNzFhMWU5NmFmZjU3ODU5YzgyZDU3MGYwMzMwODAwNjYxZDFjOTUyZjlmZTI2OTQ2OTFkOWI5ZThcIixcIjU5YzllMGJiYTM5NGU3NmY0MGMwYWE1ODM3OWEzY2I2YTVhMjI4Mzk5M2U5MGM0MTY3MDAyYWY0OTIwZTM3ZjVcIl0sW1wiMTg2YjQ4M2QwNTZhMDMzODI2YWU3M2Q4OGY3MzI5ODVjNGNjYjFmMzJiYTM1ZjRiNGNjNDdmZGNmMDRhYTZlYlwiLFwiM2I5NTJkMzJjNjdjZjc3ZTJlMTc0NDZlMjA0MTgwYWIyMWZiODA5MDg5NTEzOGI0YTRhNzk3Zjg2ZTgwODg4YlwiXSxbXCJkZjlkNzBhNmI5ODc2Y2U1NDRjOTg1NjFmNGJlNGY3MjU0NDJlNmQyYjczN2Q5YzkxYTgzMjE3MjRjZTA5NjNmXCIsXCI1NWViMmRhZmQ4NGQ2Y2NkNWY4NjJiNzg1ZGMzOWQ0YWIxNTcyMjI3MjBlZjlkYTIxN2I4YzQ1Y2YyYmEyNDE3XCJdLFtcIjVlZGQ1Y2MyM2M1MWU4N2E0OTdjYTgxNWQ1ZGNlMGY4YWI1MjU1NGY4NDllZDg5OTVkZTY0YzVmMzRjZTcxNDNcIixcImVmYWU5YzhkYmMxNDEzMDY2MWU4Y2VjMDMwYzg5YWQwYzEzYzY2YzBkMTdhMjkwNWNkYzcwNmFiNzM5OWE4NjhcIl0sW1wiMjkwNzk4YzJiNjQ3NjgzMGRhMTJmZTAyMjg3ZTllNzc3YWEzZmJhMWMzNTViMTdhNzIyZDM2MmY4NDYxNGZiYVwiLFwiZTM4ZGE3NmRjZDQ0MDYyMTk4OGQwMGJjZjc5YWYyNWQ1YjI5YzA5NGRiMmEyMzE0NmQwMDNhZmQ0MTk0M2U3YVwiXSxbXCJhZjNjNDIzYTk1ZDlmNWIzMDU0NzU0ZWZhMTUwYWMzOWNkMjk1NTJmZTM2MDI1NzM2MmRmZGVjZWY0MDUzYjQ1XCIsXCJmOThhM2ZkODMxZWIyYjc0OWE5M2IwZTZmMzVjZmI0MGM4Y2Q1YWE2NjdhMTU1ODFiYzJmZWRlZDQ5OGZkOWM2XCJdLFtcIjc2NmRiYjI0ZDEzNGU3NDVjY2NhYTI4Yzk5YmYyNzQ5MDZiYjY2YjI2ZGNmOThkZjhkMmZlZDUwZDg4NDI0OWFcIixcIjc0NGIxMTUyZWFjYmU1ZTM4ZGNjODg3OTgwZGEzOGI4OTc1ODRhNjVmYTA2Y2VkZDJjOTI0Zjk3Y2JhYzU5OTZcIl0sW1wiNTlkYmY0NmY4Yzk0NzU5YmEyMTI3N2MzMzc4NGY0MTY0NWY3YjQ0ZjZjNTk2YTU4Y2U5MmU2NjYxOTFhYmUzZVwiLFwiYzUzNGFkNDQxNzVmYmMzMDBmNGVhNmNlNjQ4MzA5YTA0MmNlNzM5YTc5MTk3OThjZDg1ZTIxNmM0YTMwN2Y2ZVwiXSxbXCJmMTNhZGE5NTEwM2M0NTM3MzA1ZTY5MWU3NGU5YTRhOGRkNjQ3ZTcxMWE5NWU3M2NiNjJkYzYwMThjZmQ4N2I4XCIsXCJlMTM4MTdiNDRlZTE0ZGU2NjNiZjRiYzgwODM0MWYzMjY5NDllMjFhNmE3NWMyNTcwNzc4NDE5YmRhZjU3MzNkXCJdLFtcIjc3NTRiNGZhMGU4YWNlZDA2ZDQxNjdhMmM1OWNjYTRjZGExODY5YzA2ZWJhZGZiNjQ4ODU1MDAxNWE4ODUyMmNcIixcIjMwZTkzZTg2NGU2NjlkODIyMjRiOTY3YzMwMjBiOGZhOGQxZTRlMzUwYjZjYmNjNTM3YTQ4YjU3ODQxMTYzYTJcIl0sW1wiOTQ4ZGNhZGY1OTkwZTA0OGFhMzg3NGQ0NmFiZWY5ZDcwMTg1OGY5NWRlODA0MWQyYTY4MjhjOTllMjI2MjUxOVwiLFwiZTQ5MWE0MjUzN2Y2ZTU5N2Q1ZDI4YTMyMjRiMWJjMjVkZjkxNTRlZmJkMmVmMWQyY2JiYTJjYWU1MzQ3ZDU3ZVwiXSxbXCI3OTYyNDE0NDUwYzc2YzE2ODljN2I0OGY4MjAyZWMzN2ZiMjI0Y2Y1YWMwYmZhMTU3MDMyOGE4YTNkN2M3N2FiXCIsXCIxMDBiNjEwZWM0ZmZiNDc2MGQ1YzFmYzEzM2VmNmY2YjEyNTA3YTA1MWYwNGFjNTc2MGFmYTViMjlkYjgzNDM3XCJdLFtcIjM1MTQwODc4MzQ5NjRiNTRiMTViMTYwNjQ0ZDkxNTQ4NWExNjk3NzIyNWI4ODQ3YmIwZGQwODUxMzdlYzQ3Y2FcIixcImVmMGFmYmIyMDU2MjA1NDQ4ZTE2NTJjNDhlODEyN2ZjNjAzOWU3N2MxNWMyMzc4YjdlN2QxNWEwZGUyOTMzMTFcIl0sW1wiZDNjYzMwYWQ2YjQ4M2U0YmM3OWNlMmM5ZGQ4YmM1NDk5M2U5NDdlYjhkZjc4N2I0NDI5NDNkM2Y3YjUyN2VhZlwiLFwiOGIzNzhhMjJkODI3Mjc4ZDg5YzVlOWJlOGY5NTA4YWUzYzJhZDQ2MjkwMzU4NjMwYWZiMzRkYjA0ZWVkZTBhNFwiXSxbXCIxNjI0ZDg0NzgwNzMyODYwY2UxYzc4ZmNiZmVmZTA4YjJiMjk4MjNkYjkxM2Y2NDkzOTc1YmEwZmY0ODQ3NjEwXCIsXCI2ODY1MWNmOWI2ZGE5MDNlMDkxNDQ0OGM2Y2Q5ZDRjYTg5Njg3OGY1MjgyYmU0YzhjYzA2ZTJhNDA0MDc4NTc1XCJdLFtcIjczM2NlODBkYTk1NWE4YTI2OTAyYzk1NjMzZTYyYTk4NTE5MjQ3NGI1YWYyMDdkYTZkZjdiNGZkNWZjNjFjZDRcIixcImY1NDM1YTJiZDJiYWRmN2Q0ODVhNGQ4YjhkYjlmY2NlM2UxZWY4ZTAyMDFlNDU3OGM1NDY3M2JjMWRjNWVhMWRcIl0sW1wiMTVkOTQ0MTI1NDk0NTA2NGNmMWExYzMzYmJkM2I0OWY4OTY2YzUwOTIxNzFlNjk5ZWYyNThkZmFiODFjMDQ1Y1wiLFwiZDU2ZWIzMGI2OTQ2M2U3MjM0ZjUxMzdiNzNiODQxNzc0MzQ4MDBiYWNlYmZjNjg1ZmMzN2JiZTllZmU0MDcwZFwiXSxbXCJhMWQwZmNmMmVjOWRlNjc1YjYxMjEzNmU1Y2U3MGQyNzFjMjE0MTdjOWQyYjhhYWFhYzEzODU5OWQwNzE3OTQwXCIsXCJlZGQ3N2Y1MGJjYjVhM2NhYjJlOTA3MzczMDk2NjdmMjY0MTQ2MmE1NDA3MGYzZDUxOTIxMmQzOWMxOTdhNjI5XCJdLFtcImUyMmZiZTE1YzBhZjhjY2M1NzgwYzA3MzVmODRkYmU5YTc5MGJhZGVlODI0NWMwNmM3Y2EzNzMzMWNiMzY5ODBcIixcImE4NTViYWJhZDVjZDYwYzg4YjQzMGE2OWY1M2ExYTdhMzgyODkxNTQ5NjQ3OTliZTQzZDA2ZDc3ZDMxZGEwNlwiXSxbXCIzMTEwOTFkZDk4NjBlOGUyMGVlMTM0NzNjMTE1NWY1ZjY5NjM1ZTM5NDcwNGVhYTc0MDA5NDUyMjQ2Y2ZhOWIzXCIsXCI2NmRiNjU2Zjg3ZDFmMDRmZmZkMWYwNDc4OGMwNjgzMDg3MWVjNWE2NGZlZWU2ODViZDgwZjBiMTI4NmQ4Mzc0XCJdLFtcIjM0YzFmZDA0ZDMwMWJlODliMzFjMDQ0MmQzZTZhYzI0ODgzOTI4YjQ1YTkzNDA3ODE4NjdkNDIzMmVjMmRiZGZcIixcIjk0MTQ2ODVlOTdiMWI1OTU0YmQ0NmY3MzAxNzQxMzZkNTdmMWNlZWI0ODc0NDNkYzUzMjE4NTdiYTczYWJlZVwiXSxbXCJmMjE5ZWE1ZDZiNTQ3MDFjMWMxNGRlNWI1NTdlYjQyYThkMTNmM2FiYmNkMDhhZmZjYzJhNWU2YjA0OWI4ZDYzXCIsXCI0Y2I5NTk1N2U4M2Q0MGIwZjczYWY0NTQ0Y2NjZjZiMWY0YjA4ZDNjMDdiMjdmYjhkOGMyOTYyYTQwMDc2NmQxXCJdLFtcImQ3Yjg3NDBmNzRhOGZiYWFiMWY2ODNkYjhmNDVkZTI2NTQzYTU0OTBiY2E2MjcwODcyMzY5MTI0NjlhMGI0NDhcIixcImZhNzc5NjgxMjhkOWM5MmVlMTAxMGYzMzdhZDQ3MTdlZmYxNWRiNWVkM2MwNDliMzQxMWUwMzE1ZWFhNDU5M2JcIl0sW1wiMzJkMzFjMjIyZjhmNmYwZWY4NmY3Yzk4ZDNhMzMzNWVhZDViY2QzMmFiZGQ5NDI4OWZlNGQzMDkxYWE4MjRiZlwiLFwiNWYzMDMyZjU4OTIxNTZlMzljY2QzZDc5MTViOWUxZGEyZTZkYWM5ZTZmMjZlOTYxMTE4ZDE0Yjg0NjJlMTY2MVwiXSxbXCI3NDYxZjM3MTkxNGFiMzI2NzEwNDVhMTU1ZDk4MzFlYTg3OTNkNzdjZDU5NTkyYzQzNDBmODZjYmMxODM0N2I1XCIsXCI4ZWMwYmEyMzhiOTZiZWMwY2JkZGRjYWUwYWE0NDI1NDJlZWUxZmY1MGM5ODZlYTZiMzk4NDdiM2NjMDkyZmY2XCJdLFtcImVlMDc5YWRiMWRmMTg2MDA3NDM1NmEyNWFhMzgyMDZhNmQ3MTZiMmMzZTY3NDUzZDI4NzY5OGJhZDdiMmIyZDZcIixcIjhkYzI0MTJhYWZlM2JlNWM0YzVmMzdlMGVjYzVmOWY2YTQ0Njk4OWFmMDRjNGUyNWViYWFjNDc5ZWMxYzhjMWVcIl0sW1wiMTZlYzkzZTQ0N2VjODNmMDQ2N2IxODMwMmVlNjIwZjdlNjVkZTMzMTg3NGM5ZGM3MmJmZDg2MTZiYTlkYTZiNVwiLFwiNWU0NjMxMTUwZTYyZmI0MGQwZThjMmE3Y2E1ODA0YTM5ZDU4MTg2YTUwZTQ5NzEzOTYyNjc3OGUyNWIwNjc0ZFwiXSxbXCJlYWE1Zjk4MGMyNDVmNmYwMzg5NzgyOTBhZmE3MGI2YmQ4ODU1ODk3Zjk4YjZhYTQ4NWI5NjA2NWQ1MzdiZDk5XCIsXCJmNjVmNWQzZTI5MmMyZTA4MTlhNTI4MzkxYzk5NDYyNGQ3ODQ4NjlkN2U2ZWE2N2ZiMTgwNDEwMjRlZGMwN2RjXCJdLFtcIjc4Yzk0MDc1NDRhYzEzMjY5MmVlMTkxMGEwMjQzOTk1OGFlMDQ4NzcxNTEzNDJlYTk2YzRiNmIzNWE0OWY1MVwiLFwiZjNlMDMxOTE2OWViOWI4NWQ1NDA0Nzk1NTM5YTVlNjhmYTFmYmQ1ODNjMDY0ZDI0NjJiNjc1ZjE5NGEzZGRiNFwiXSxbXCI0OTRmNGJlMjE5YTFhNzcwMTZkY2Q4Mzg0MzFhZWEwMDAxY2RjOGFlN2E2ZmM2ODg3MjY1NzhkOTcwMjg1N2E1XCIsXCI0MjI0MmE5NjkyODNhNWYzMzliYTdmMDc1ZTM2YmEyYWY5MjVjZTMwZDc2N2VkNmU1NWY0YjAzMTg4MGQ1NjJjXCJdLFtcImE1OThhODAzMGRhNmQ4NmM2YmM3ZjJmNTE0NGVhNTQ5ZDI4MjExZWE1OGZhYTcwZWJmNGMxZTY2NWMxZmU5YjVcIixcIjIwNGI1ZDZmODQ4MjJjMzA3ZTRiNGE3MTQwNzM3YWVjMjNmYzYzYjY1YjM1Zjg2YTEwMDI2ZGJkMmQ4NjRlNmJcIl0sW1wiYzQxOTE2MzY1YWJiMmI1ZDA5MTkyZjVmMmRiZWFmZWMyMDhmMDIwZjEyNTcwYTE4NGRiYWRjM2U1ODU5NTk5N1wiLFwiNGYxNDM1MWQwMDg3ZWZhNDlkMjQ1YjMyODk4NDk4OWQ1Y2FmOTQ1MGYzNGJmYzBlZDE2ZTk2YjU4ZmE5OTEzXCJdLFtcIjg0MWQ2MDYzYTU4NmZhNDc1YTcyNDYwNGRhMDNiYzViOTJhMmUwZDJlMGEzNmFjZmU0YzczYTU1MTQ3NDI4ODFcIixcIjczODY3ZjU5YzA2NTllODE5MDRmOWExYzc1NDM2OThlNjI1NjJkNjc0NGMxNjljZTdhMzZkZTAxYThkNjE1NFwiXSxbXCI1ZTk1YmIzOTlhNjk3MWQzNzYwMjY5NDdmODliZGUyZjI4MmIzMzgxMDkyOGJlNGRlZDExMmFjNGQ3MGUyMGQ1XCIsXCIzOWYyM2YzNjY4MDkwODViZWViZmM3MTE4MTMxMzc3NWE5OWM5YWVkN2Q4YmEzOGIxNjEzODRjNzQ2MDEyODY1XCJdLFtcIjM2ZTQ2NDFhNTM5NDhmZDQ3NmMzOWY4YTk5ZmQ5NzRlNWVjMDc1NjRiNTMxNWQ4YmY5OTQ3MWJjYTBlZjJmNjZcIixcImQyNDI0YjFiMWFiZTRlYjgxNjQyMjdiMDg1YzlhYTk0NTZlYTEzNDkzZmQ1NjNlMDZmZDUxY2Y1Njk0Yzc4ZmNcIl0sW1wiMzM2NTgxZWE3YmZiYmIyOTBjMTkxYTJmNTA3YTQxY2Y1NjQzODQyMTcwZTkxNGZhZWFiMjdjMmM1NzlmNzI2XCIsXCJlYWQxMjE2ODU5NWZlMWJlOTkyNTIxMjliNmU1NmIzMzkxZjdhYjE0MTBjZDFlMGVmM2RjZGNhYmQyZmRhMjI0XCJdLFtcIjhhYjg5ODE2ZGFkZmQ2YjZhMWYyNjM0ZmNmMDBlYzg0MDM3ODEwMjVlZDY4OTBjNDg0OTc0MjcwNmJkNDNlZGVcIixcIjZmZGNlZjA5ZjJmNmQwYTA0NGU2NTRhZWY2MjQxMzZmNTAzZDQ1OWMzZTg5ODQ1ODU4YTQ3YTkxMjljZGQyNGVcIl0sW1wiMWUzM2YxYTc0NmM5YzU3NzgxMzMzNDRkOTI5OWZjYWEyMGIwOTM4ZThhY2ZmMjU0NGJiNDAyODRiOGM1ZmI5NFwiLFwiNjA2NjAyNTdkZDExYjNhYTljOGVkNjE4ZDI0ZWRmZjIzMDZkMzIwZjFkMDMwMTBlMzNhN2QyMDU3ZjNiM2I2XCJdLFtcIjg1YjdjMWRjYjNjZWMxYjdlZTdmMzBkZWQ3OWRkMjBhMGVkMWY0Y2MxOGNiY2ZjZmE0MTAzNjFmZDhmMDhmMzFcIixcIjNkOThhOWNkZDAyNmRkNDNmMzkwNDhmMjVhODg0N2Y0ZmNhZmFkMTg5NWQ3YTYzM2M2ZmVkM2MzNWU5OTk1MTFcIl0sW1wiMjlkZjlmYmQ4ZDllNDY1MDkyNzVmNGIxMjVkNmQ0NWQ3ZmJlOWEzYjg3OGE3YWY4NzJhMjgwMDY2MWFjNWY1MVwiLFwiYjRjNGZlOTljNzc1YTYwNmUyZDg4NjIxNzkxMzlmZmRhNjFkYzg2MWMwMTllNTVjZDI4NzZlYjJhMjdkODRiXCJdLFtcImEwYjFjYWUwNmIwYTg0N2EzZmVhNmU2NzFhYWY4YWRmZGZlNThjYTJmNzY4MTA1YzgwODJiMmU0NDlmY2UyNTJcIixcImFlNDM0MTAyZWRkZTA5NThlYzRiMTlkOTE3YTZhMjhlNmI3MmRhMTgzNGFmZjBlNjUwZjA0OTUwM2EyOTZjZjJcIl0sW1wiNGU4Y2VhZmI5YjNlOWExMzZkYzdmZjY3ZTg0MDI5NWI0OTlkZmIzYjIxMzNlNGJhMTEzZjJlNGMwZTEyMWU1XCIsXCJjZjIxNzQxMThjOGI2ZDdhNGI0OGY2ZDUzNGNlNWM3OTQyMmMwODZhNjM0NjA1MDJiODI3Y2U2MmEzMjY2ODNjXCJdLFtcImQyNGE0NGUwNDdlMTliNmY1YWZiODFjN2NhMmY2OTA4MGE1MDc2Njg5YTAxMDkxOWY0MjcyNWMyYjc4OWEzM2JcIixcIjZmYjhkNTU5MWI0NjZmOGZjNjNkYjUwZjFjMGYxYzY5MDEzZjk5Njg4N2I4MjQ0ZDJjZGVjNDE3YWZlYThmYTNcIl0sW1wiZWEwMTYwNmE3YTZjOWNkZDI0OWZkZmNmYWNiOTk1ODQwMDFlZGQyOGFiYmFiNzdiNTEwNGU5OGU4ZTNiMzVkNFwiLFwiMzIyYWY0OTA4YzczMTJiMGNmYmZlMzY5ZjdhN2IzY2RiN2Q0NDk0YmMyODIzNzAwY2ZkNjUyMTg4YTNlYTk4ZFwiXSxbXCJhZjhhZGRiZjJiNjYxYzhhNmM2MzI4NjU1ZWI5NjY1MTI1MjAwN2Q4YzVlYTMxYmU0YWQxOTZkZThjZTIxMzFmXCIsXCI2NzQ5ZTY3YzAyOWI4NWY1MmEwMzRlYWZkMDk2ODM2YjI1MjA4MTg2ODBlMjZhYzhmM2RmYmNkYjcxNzQ5NzAwXCJdLFtcImUzYWUxOTc0NTY2Y2EwNmNjNTE2ZDQ3ZTBmYjE2NWE2NzRhM2RhYmNmY2ExNWU3MjJmMGUzNDUwZjQ1ODg5XCIsXCIyYWVhYmU3ZTQ1MzE1MTAxMTYyMTdmMDdiZjRkMDczMDBkZTk3ZTQ4NzRmODFmNTMzNDIwYTcyZWViMGJkNmE0XCJdLFtcIjU5MWVlMzU1MzEzZDk5NzIxY2Y2OTkzZmZlZDFlM2UzMDE5OTNmZjNlZDI1ODgwMjA3NWVhOGNlZDM5N2UyNDZcIixcImIwZWE1NThhMTEzYzMwYmVhNjBmYzQ3NzU0NjBjNzkwMWZmMGIwNTNkMjVjYTJiZGVlZTk4ZjFhNGJlNWQxOTZcIl0sW1wiMTEzOTZkNTVmZGE1NGM0OWYxOWFhOTczMThkOGRhNjFmYTg1ODRlNDdiMDg0OTQ1MDc3Y2YwMzI1NWI1Mjk4NFwiLFwiOTk4Yzc0YThjZDQ1YWMwMTI4OWQ1ODMzYTdiZWI0NzQ0ZmY1MzZiMDFiMjU3YmU0YzU3NjdiZWE5M2VhNTdhNFwiXSxbXCIzYzVkMmExYmEzOWM1YTE3OTAwMDA3MzhjOWUwYzQwYjhkY2RmZDU0Njg3NTRiNjQwNTU0MDE1N2UwMTdhYTdhXCIsXCJiMjI4NDI3OTk5NWEzNGUyZjlkNGRlNzM5NmZjMThiODBmOWI4YjlmZGQyNzBmNjY2MWY3OWNhNGM4MWJkMjU3XCJdLFtcImNjODcwNGI4YTYwYTBkZWZhM2E5OWE3Mjk5ZjJlOWMzZmJjMzk1YWZiMDRhYzA3ODQyNWVmOGExNzkzY2MwMzBcIixcImJkZDQ2MDM5ZmVlZDE3ODgxZDFlMDg2MmRiMzQ3ZjhjZjM5NWI3NGZjNGJjZGM0ZTk0MGI3NGUzYWMxZjFiMTNcIl0sW1wiYzUzM2U0ZjdlYTg1NTVhYWNkOTc3N2FjNWNhZDI5Yjk3ZGQ0ZGVmY2NjNTNlZTdlYTIwNDExOWIyODg5YjE5N1wiLFwiNmYwYTI1NmJjNWVmZGY0MjlhMmZiNjI0MmYxYTQzYTJkOWI5MjViYjRhNGIzYTI2YmI4ZTBmNDVlYjU5NjA5NlwiXSxbXCJjMTRmOGYyY2NiMjdkNmYxMDlmNmQwOGQwM2NjOTZhNjliYThjMzRlZWMwN2JiY2Y1NjZkNDhlMzNkYTY1OTNcIixcImMzNTlkNjkyM2JiMzk4ZjdmZDQ0NzNlMTZmZTFjMjg0NzViNzQwZGQwOTgwNzVlNmMwZTg2NDkxMTNkYzNhMzhcIl0sW1wiYTZjYmMzMDQ2YmM2YTQ1MGJhYzI0Nzg5ZmExNzExNWE0Yzk3MzllZDc1ZjhmMjFjZTQ0MWY3MmUwYjkwZTZlZlwiLFwiMjFhZTdmNDY4MGU4ODliYjEzMDYxOWUyYzBmOTVhMzYwY2ViNTczYzcwNjAzMTM5ODYyYWZkNjE3ZmE5YjlmXCJdLFtcIjM0N2Q2ZDlhMDJjNDg5MjdlYmZiODZjMTM1OWIxY2FmMTMwYTNjMDI2N2QxMWNlNjM0NGIzOWY5OWQ0M2NjMzhcIixcIjYwZWE3ZjYxYTM1MzUyNGQxYzk4N2Y2ZWNlYzkyZjA4NmQ1NjVhYjY4Nzg3MGNiMTI2ODlmZjFlMzFjNzQ0NDhcIl0sW1wiZGE2NTQ1ZDIxODFkYjhkOTgzZjdkY2IzNzVlZjU4NjZkNDdjNjdiMWJmMzFjOGNmODU1ZWY3NDM3YjcyNjU2YVwiLFwiNDliOTY3MTVhYjY4NzhhNzllNzhmMDdjZTU2ODBjNWQ2NjczMDUxYjQ5MzViZDg5N2ZlYTgyNGI3N2RjMjA4YVwiXSxbXCJjNDA3NDdjYzlkMDEyY2IxYTEzYjgxNDgzMDljNmRlN2VjMjVkNjk0NWQ2NTcxNDZiOWQ1OTk0YjhmZWIxMTExXCIsXCI1Y2E1NjA3NTNiZTJhMTJmYzZkZTZjYWYyY2I0ODk1NjVkYjkzNjE1NmI5NTE0ZTFiYjVlODMwMzdlMGZhMmQ0XCJdLFtcIjRlNDJjOGVjODJjOTk3OThjY2YzYTYxMGJlODcwZTc4MzM4YzdmNzEzMzQ4YmQzNGM4MjAzZWY0MDM3ZjM1MDJcIixcIjc1NzFkNzRlZTVlMGZiOTJhN2E4YjMzYTA3NzgzMzQxYTU0OTIxNDRjYzU0YmNjNDBhOTQ0NzM2OTM2MDY0MzdcIl0sW1wiMzc3NWFiNzA4OWJjNmFmODIzYWJhMmUxYWY3MGIyMzZkMjUxY2FkYjBjODY3NDMyODc1MjJhMWIzYjBkZWRlYVwiLFwiYmU1MmQxMDdiY2ZhMDlkOGJjYjk3MzZhODI4Y2ZhN2ZhYzhkYjE3YmY3YTc2YTJjNDJhZDk2MTQwOTAxOGNmN1wiXSxbXCJjZWUzMWNiZjdlMzRlYzM3OWQ5NGZiODE0ZDNkNzc1YWQ5NTQ1OTVkMTMxNGJhODg0Njk1OWUzZTgyZjc0ZTI2XCIsXCI4ZmQ2NGExNGMwNmI1ODljMjZiOTQ3YWUyYmNmNmJmYTAxNDllZjBiZTE0ZWQ0ZDgwZjQ0OGEwMWM0M2IxYzZkXCJdLFtcImI0ZjllYWVhMDliNjkxNzYxOWY2ZWE2YTRlYjU0NjRlZmRkYjU4ZmQ0NWIxZWJlZmNkYzFhMDFkMDhiNDc5ODZcIixcIjM5ZTVjOTkyNWI1YTU0YjA3NDMzYTRmMThjNjE3MjZmOGJiMTMxYzAxMmNhNTQyZWIyNGE4YWMwNzIwMDY4MmFcIl0sW1wiZDQyNjNkZmMzZDJkZjkyM2EwMTc5YTQ4OTY2ZDMwY2U4NGUyNTE1YWZjM2RjY2MxYjc3OTA3NzkyZWJjYzYwZVwiLFwiNjJkZmFmMDdhMGY3OGZlYjMwZTMwZDYyOTU4NTNjZTE4OWUxMjc3NjBhZDZjZjdmYWUxNjRlMTIyYTIwOGQ1NFwiXSxbXCI0ODQ1NzUyNDgyMGZhNjVhNGY4ZDM1ZWI2OTMwODU3YzAwMzJhY2MwYTRhMmRlNDIyMjMzZWVkYTg5NzYxMmM0XCIsXCIyNWE3NDhhYjM2Nzk3OWQ5ODczM2MzOGExZmExYzJlN2RjNmNjMDdkYjJkNjBhOWFlN2E3NmFhYTQ5YmQwZjc3XCJdLFtcImRmZWVlZjE4ODExMDFmMmNiMTE2NDRmM2EyYWZkZmMyMDQ1ZTE5OTE5MTUyOTIzZjM2N2ExNzY3YzExY2NlZGFcIixcImVjZmI3MDU2Y2YxZGUwNDJmOTQyMGJhYjM5Njc5M2MwYzM5MGJkZTc0YjRiYmRmZjE2YTgzYWUwOWE5YTc1MTdcIl0sW1wiNmQ3ZWY2YjE3NTQzZjgzNzNjNTczZjQ0ZTFmMzg5ODM1ZDg5YmNiYzYwNjJjZWQzNmM4MmRmODNiOGZhZTg1OVwiLFwiY2Q0NTBlYzMzNTQzODk4NmRmZWZhMTBjNTdmZWE5YmNjNTIxYTA5NTliMmQ4MGJiZjc0YjE5MGRjYTcxMmQxMFwiXSxbXCJlNzU2MDVkNTkxMDJhNWEyNjg0NTAwZDNiOTkxZjJlM2YzYzg4YjkzMjI1NTQ3MDM1YWYyNWFmNjZlMDQ1NDFmXCIsXCJmNWM1NDc1NGE4ZjcxZWU1NDBiOWI0ODcyODQ3M2UzMTRmNzI5YWM1MzA4YjA2OTM4MzYwOTkwZTJiZmFkMTI1XCJdLFtcImViOTg2NjBmNGM0ZGZhYTA2YTJiZTQ1M2Q1MDIwYmM5OWEwYzJlNjBhYmUzODg0NTdkZDQzZmVmYjFlZDYyMGNcIixcIjZjYjlhODg3NmQ5Y2I4NTIwNjA5YWYzYWRkMjZjZDIwYTBhN2NkOGE5NDExMTMxY2U4NWY0NDEwMDA5OTIyM2VcIl0sW1wiMTNlODdiMDI3ZDg1MTRkMzU5MzlmMmU2ODkyYjE5OTIyMTU0NTk2OTQxODg4MzM2ZGMzNTYzZTNiOGRiYTk0MlwiLFwiZmVmNWEzYzY4MDU5YTZkZWM1ZDYyNDExNGJmMWU5MWFhYzJiOWRhNTY4ZDZhYmViMjU3MGQ1NTY0NmI4YWRmMVwiXSxbXCJlZTE2MzAyNmU5ZmQ2ZmUwMTdjMzhmMDZhNWJlNmZjMTI1NDI0YjM3MWNlMjcwOGU3YmY0NDkxNjkxZTU3NjRhXCIsXCIxYWNiMjUwZjI1NWRkNjFjNDNkOTRjY2M2NzBkMGY1OGY0OWFlM2ZhMTViOTY2MjNlNTQzMGRhMGFkNmM2MmIyXCJdLFtcImIyNjhmNWVmOWFkNTFlNGQ3OGRlM2E3NTBjMmRjODliMWU2MjZkNDM1MDU4Njc5OTk5MzJlNWRiMzNhZjNkODBcIixcIjVmMzEwZDRiM2M5OWI5ZWJiMTlmNzdkNDFjMWRlZTAxOGNmMGQzNGZkNDE5MTYxNDAwM2U5NDVhMTIxNmU0MjNcIl0sW1wiZmYwN2YzMTE4YTlkZjAzNWU5ZmFkODVlYjZjN2JmZTQyYjAyZjAxY2E5OWNlZWEzYmY3ZmZkYmE5M2M0NzUwZFwiLFwiNDM4MTM2ZDYwM2U4NThhM2E1YzQ0MGMzOGVjY2JhZGRjMWQyOTQyMTE0ZTJlZGRkNDc0MGQwOThjZWQxZjBkOFwiXSxbXCI4ZDhiOTg1NWM3YzA1MmEzNDE0NmZkMjBmZmI2NThiZWE0YjlmNjllMGQ4MjVlYmVjMTZlOGMzY2UyYjUyNmExXCIsXCJjZGI1NTllZWRjMmQ3OWY5MjZiYWY0NGZiODRlYTRkNDRiY2Y1MGZlZTUxZDdjZWIzMGUyZTdmNDYzMDM2NzU4XCJdLFtcIjUyZGIwYjUzODRkZmJmMDViZmE5ZDQ3MmQ3YWUyNmRmZTRiODUxY2VjYTkxYjFlYmE1NDI2MzE4MGRhMzJiNjNcIixcImMzYjk5N2QwNTBlZTVkNDIzZWJhZjY2YTZkYjlmNTdiMzE4MGM5MDI4NzU2NzlkZTkyNGI2OWQ4NGE3YjM3NVwiXSxbXCJlNjJmOTQ5MGQzZDUxZGE2Mzk1ZWZkMjRlODA5MTljYzdkMGYyOWMzZjNmYTQ4YzZmZmY1NDNiZWNiZDQzMzUyXCIsXCI2ZDg5YWQ3YmE0ODc2YjBiMjJjMmNhMjgwYzY4Mjg2MmYzNDJjODU5MWYxZGFmNTE3MGUwN2JmZDljY2FmYTdkXCJdLFtcIjdmMzBlYTI0NzZiMzk5YjQ5NTc1MDljODhmNzdkMDE5MWFmYTJmZjVjYjdiMTRmZDZkOGU3ZDY1YWFhYjExOTNcIixcImNhNWVmN2Q0YjIzMWM5NGMzYjE1Mzg5YTVmNjMxMWU5ZGFmZjdiYjY3YjEwM2U5ODgwZWY0YmZmNjM3YWNhZWNcIl0sW1wiNTA5OGZmMWUxZDlmMTRmYjQ2YTIxMGZhZGE2YzkwM2ZlZjBmYjdiNGExZGQxZDlhYzYwYTAzNjE4MDBiN2EwMFwiLFwiOTczMTE0MWQ4MWZjOGY4MDg0ZDM3YzZlNzU0MjAwNmIzZWUxYjQwZDYwZGZlNTM2MmE1YjEzMmZkMTdkZGMwXCJdLFtcIjMyYjc4YzdkZTllZTUxMmE3Mjg5NWJlNmI5Y2JlZmE2ZTJmM2M0Y2NjZTQ0NWM5NmI5ZjJjODFlMjc3OGFkNThcIixcImVlMTg0OWY1MTNkZjcxZTMyZWZjMzg5NmVlMjgyNjBjNzNiYjgwNTQ3YWUyMjc1YmE0OTcyMzc3OTRjODc1M2NcIl0sW1wiZTJjYjc0ZmRkYzhlOWZiY2QwNzZlZWYyYTdjNzJiMGNlMzdkNTBmMDgyNjlkZmMwNzRiNTgxNTUwNTQ3YTRmN1wiLFwiZDNhYTJlZDcxYzlkZDIyNDdhNjJkZjA2MjczNmViMGJhZGRlYTllMzYxMjJkMmJlODY0MWFiY2IwMDVjYzRhNFwiXSxbXCI4NDM4NDQ3NTY2ZDRkN2JlZGFkYzI5OTQ5NmFiMzU3NDI2MDA5YTM1ZjIzNWNiMTQxYmUwZDk5Y2QxMGFlM2E4XCIsXCJjNGUxMDIwOTE2OTgwYTRkYTVkMDFhYzVlNmFkMzMwNzM0ZWYwZDc5MDY2MzFjNGYyMzkwNDI2YjJlZGQ3OTFmXCJdLFtcIjQxNjJkNDg4Yjg5NDAyMDM5YjU4NGM2ZmM2YzMwODg3MDU4N2Q5YzQ2ZjY2MGI4NzhhYjY1YzgyYzcxMWQ2N2VcIixcIjY3MTYzZTkwMzIzNjI4OWY3NzZmMjJjMjVmYjhhM2FmYzE3MzJmMmI4NGI0ZTk1ZGJkYTQ3YWU1YTA4NTI2NDlcIl0sW1wiM2ZhZDNmYTg0Y2FmMGYzNGYwZjg5YmZkMmRjZjU0ZmMxNzVkNzY3YWVjM2U1MDY4NGYzYmE0YTRiZjVmNjgzZFwiLFwiY2QxYmM3Y2I2Y2M0MDdiYjJmMGNhNjQ3YzcxOGE3MzBjZjcxODcyZTdkMGQyYTUzZmEyMGVmY2RmZTYxODI2XCJdLFtcIjY3NGYyNjAwYTMwMDdhMDA1NjhjMWE3Y2UwNWQwODE2YzFmYjg0YmYxMzcwNzk4ZjFjNjk1MzJmYWViMWE4NmJcIixcIjI5OWQyMWY5NDEzZjMzYjNlZGY0M2IyNTcwMDQ1ODBiNzBkYjU3ZGEwYjE4MjI1OWUwOWVlY2M2OWUwZDM4YTVcIl0sW1wiZDMyZjRkYTU0YWRlNzRhYmI4MWI4MTVhZDFmYjNiMjYzZDgyZDZjNjkyNzE0YmNmZjg3ZDI5YmQ1ZWU5ZjA4ZlwiLFwiZjk0MjllNzM4YjhlNTNiOTY4ZTk5MDE2YzA1OTcwNzc4MmUxNGY0NTM1MzU5ZDU4MmZjNDE2OTEwYjNlZWE4N1wiXSxbXCIzMGU0ZTY3MDQzNTM4NTU1NmU1OTM2NTcxMzU4NDVkMzZmYmI2OTMxZjcyYjA4Y2IxZWQ5NTRmMWUzY2UzZmY2XCIsXCI0NjJmOWJjZTYxOTg5ODYzODQ5OTM1MDExM2JiYzliMTBhODc4ZDM1ZGE3MDc0MGRjNjk1YTU1OWViODhkYjdiXCJdLFtcImJlMjA2MjAwM2M1MWNjMzAwNDY4MjkwNDMzMGU0ZGVlN2YzZGNkMTBiMDFlNTgwYmYxOTcxYjA0ZDRjYWQyOTdcIixcIjYyMTg4YmM0OWQ2MWU1NDI4NTczZDQ4YTc0ZTFjNjU1YjFjNjEwOTA5MDU2ODJhMGQ1NTU4ZWQ3MmRjY2I5YmNcIl0sW1wiOTMxNDQ0MjNhY2UzNDUxZWQyOWUwZmI5YWMyYWYyMTFjYjZlODRhNjAxZGY1OTkzYzQxOTg1OWZmZjVkZjA0YVwiLFwiN2MxMGRmYjE2NGMzNDI1ZjVjNzFhM2Y5ZDc5OTIwMzhmMTA2NTIyNGY3MmJiOWQxZDkwMmE2ZDEzMDM3YjQ3Y1wiXSxbXCJiMDE1ZjgwNDRmNWZjYmRjZjIxY2EyNmQ2YzM0ZmI4MTk3ODI5MjA1YzdiN2QyYTdjYjY2NDE4YzE1N2IxMTJjXCIsXCJhYjhjMWUwODZkMDRlODEzNzQ0YTY1NWIyZGY4ZDVmODNiM2NkYzZmYWEzMDg4YzFkM2FlYTE0NTRlM2ExZDVmXCJdLFtcImQ1ZTllMWRhNjQ5ZDk3ZDg5ZTQ4NjgxMTdhNDY1YTNhNGY4YTE4ZGU1N2ExNDBkMzZiM2YyYWYzNDFhMjFiNTJcIixcIjRjYjA0NDM3ZjM5MWVkNzMxMTFhMTNjYzFkNGRkMGRiMTY5MzQ2NWMyMjQwNDgwZDg5NTVlODU5MmYyNzQ0N2FcIl0sW1wiZDNhZTQxMDQ3ZGQ3Y2EwNjVkYmY4ZWQ3N2I5OTI0Mzk5ODMwMDVjZDcyZTE2ZDZmOTk2YTUzMTZkMzY5NjZiYlwiLFwiYmQxYWViMjFhZDIyZWJiMjJhMTBmMDMwMzQxN2M2ZDk2NGY4Y2RkN2RmMGFjYTYxNGIxMGRjMTRkMTI1YWM0NlwiXSxbXCI0NjNlMjc2M2Q4ODVmOTU4ZmM2NmNkZDIyODAwZjBhNDg3MTk3ZDBhODJlMzc3YjQ5ZjgwYWY4N2M4OTdiMDY1XCIsXCJiZmVmYWNkYjBlNWQwZmQ3ZGYzYTMxMWE5NGRlMDYyYjI2YjgwYzYxZmJjOTc1MDhiNzk5OTI2NzFlZjdjYTdmXCJdLFtcIjc5ODVmZGZkMTI3YzA1NjdjNmY1M2VjMWJiNjNlYzMxNThlNTk3YzQwYmZlNzQ3YzgzY2RkZmM5MTA2NDE5MTdcIixcIjYwM2MxMmRhZjNkOTg2MmVmMmIyNWZlMWRlMjg5YWVkMjRlZDI5MWUwZWM2NzA4NzAzYTViZDU2N2YzMmVkMDNcIl0sW1wiNzRhMWFkNmI1Zjc2ZTM5ZGIyZGQyNDk0MTBlYWM3Zjk5ZTc0YzU5Y2I4M2QyZDBlZDVmZjE1NDNkYTc3MDNlOVwiLFwiY2M2MTU3ZWYxOGM5YzYzY2Q2MTkzZDgzNjMxYmJlYTAwOTNlMDk2ODk0MmU4YzMzZDU3MzdmZDc5MGUwZGIwOFwiXSxbXCIzMDY4MmE1MDcwMzM3NWY2MDJkNDE2NjY0YmExOWI3ZmM5YmFiNDJjNzI3NDc0NjNhNzFkMDg5NmIyMmY2ZGEzXCIsXCI1NTNlMDRmNmIwMThiNGZhNmM4ZjM5ZTdmMzExZDMxNzYyOTBkMGUwZjE5Y2E3M2YxNzcxNGQ5OTc3YTIyZmY4XCJdLFtcIjllMjE1OGYwZDdjMGQ1ZjI2YzM3OTFlZmVmYTc5NTk3NjU0ZTdhMmIyNDY0ZjUyYjFlZTZjMTM0Nzc2OWVmNTdcIixcIjcxMmZjZGQxYjkwNTNmMDkwMDNhMzQ4MWZhNzc2MmU5ZmZkN2M4ZWYzNWEzODUwOWUyZmJmMjYyOTAwODM3M1wiXSxbXCIxNzZlMjY5ODlhNDNjOWNmZWJhNDAyOWMyMDI1MzhjMjgxNzJlNTY2ZTNjNGZjZTczMjI4NTdmM2JlMzI3ZDY2XCIsXCJlZDhjYzlkMDRiMjllYjg3N2QyNzBiNDg3OGRjNDNjMTlhZWZkMzFmNGVlZTA5ZWU3YjQ3ODM0YzFmYTRiMWMzXCJdLFtcIjc1ZDQ2ZWZlYTM3NzFlNmU2OGFiYjg5YTEzYWQ3NDdlY2YxODkyMzkzZGZjNGYxYjcwMDQ3ODhjNTAzNzRkYThcIixcIjk4NTIzOTBhOTk1MDc2NzlmZDBiODZmZDJiMzlhODY4ZDdlZmMyMjE1MTM0NmUxYTNjYTQ3MjY1ODZhNmJlZDhcIl0sW1wiODA5YTIwYzY3ZDY0OTAwZmZiNjk4YzRjODI1ZjZkNWYyMzEwZmIwNDUxYzg2OTM0NWI3MzE5ZjY0NTYwNTcyMVwiLFwiOWU5OTQ5ODBkOTkxN2UyMmI3NmIwNjE5MjdmYTA0MTQzZDA5NmNjYzU0OTYzZTZhNWViZmE1ZjNmOGUyODZjMVwiXSxbXCIxYjM4OTAzYTQzZjdmMTE0ZWQ0NTAwYjRlYWM3MDgzZmRlZmVjZTFjZjI5YzYzNTI4ZDU2MzQ0NmY5NzJjMTgwXCIsXCI0MDM2ZWRjOTMxYTYwYWU4ODkzNTNmNzdmZDUzZGU0YTI3MDhiMjZiNmY1ZGE3MmFkMzM5NDExOWRhZjQwOGY5XCJdXX19fSw0NDAxOmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT10O3ZhciBuPXIoNzExKTt2YXIgYT1yKDM1MjMpO3ZhciBzPXIoNjU0NSk7aS5hc3NlcnQ9YTtpLnRvQXJyYXk9cy50b0FycmF5O2kuemVybzI9cy56ZXJvMjtpLnRvSGV4PXMudG9IZXg7aS5lbmNvZGU9cy5lbmNvZGU7ZnVuY3Rpb24gZ2V0TkFGKGUsdCxyKXt2YXIgaT1uZXcgQXJyYXkoTWF0aC5tYXgoZS5iaXRMZW5ndGgoKSxyKSsxKTtpLmZpbGwoMCk7dmFyIG49MTw8dCsxO3ZhciBhPWUuY2xvbmUoKTtmb3IodmFyIHM9MDtzPGkubGVuZ3RoO3MrKyl7dmFyIG87dmFyIGg9YS5hbmRsbihuLTEpO2lmKGEuaXNPZGQoKSl7aWYoaD4obj4+MSktMSlvPShuPj4xKS1oO2Vsc2Ugbz1oO2EuaXN1Ym4obyl9ZWxzZXtvPTB9aVtzXT1vO2EuaXVzaHJuKDEpfXJldHVybiBpfWkuZ2V0TkFGPWdldE5BRjtmdW5jdGlvbiBnZXRKU0YoZSx0KXt2YXIgcj1bW10sW11dO2U9ZS5jbG9uZSgpO3Q9dC5jbG9uZSgpO3ZhciBpPTA7dmFyIG49MDt3aGlsZShlLmNtcG4oLWkpPjB8fHQuY21wbigtbik+MCl7dmFyIGE9ZS5hbmRsbigzKStpJjM7dmFyIHM9dC5hbmRsbigzKStuJjM7aWYoYT09PTMpYT0tMTtpZihzPT09MylzPS0xO3ZhciBvO2lmKChhJjEpPT09MCl7bz0wfWVsc2V7dmFyIGg9ZS5hbmRsbig3KStpJjc7aWYoKGg9PT0zfHxoPT09NSkmJnM9PT0yKW89LWE7ZWxzZSBvPWF9clswXS5wdXNoKG8pO3ZhciB1O2lmKChzJjEpPT09MCl7dT0wfWVsc2V7dmFyIGg9dC5hbmRsbig3KStuJjc7aWYoKGg9PT0zfHxoPT09NSkmJmE9PT0yKXU9LXM7ZWxzZSB1PXN9clsxXS5wdXNoKHUpO2lmKDIqaT09PW8rMSlpPTEtaTtpZigyKm49PT11KzEpbj0xLW47ZS5pdXNocm4oMSk7dC5pdXNocm4oMSl9cmV0dXJuIHJ9aS5nZXRKU0Y9Z2V0SlNGO2Z1bmN0aW9uIGNhY2hlZFByb3BlcnR5KGUsdCxyKXt2YXIgaT1cIl9cIit0O2UucHJvdG90eXBlW3RdPWZ1bmN0aW9uIGNhY2hlZFByb3BlcnR5KCl7cmV0dXJuIHRoaXNbaV0hPT11bmRlZmluZWQ/dGhpc1tpXTp0aGlzW2ldPXIuY2FsbCh0aGlzKX19aS5jYWNoZWRQcm9wZXJ0eT1jYWNoZWRQcm9wZXJ0eTtmdW5jdGlvbiBwYXJzZUJ5dGVzKGUpe3JldHVybiB0eXBlb2YgZT09PVwic3RyaW5nXCI/aS50b0FycmF5KGUsXCJoZXhcIik6ZX1pLnBhcnNlQnl0ZXM9cGFyc2VCeXRlcztmdW5jdGlvbiBpbnRGcm9tTEUoZSl7cmV0dXJuIG5ldyBuKGUsXCJoZXhcIixcImxlXCIpfWkuaW50RnJvbUxFPWludEZyb21MRX0sODM2ODpmdW5jdGlvbihlLHQscil7dmFyIGk9cig2OTExKS5CdWZmZXI7dmFyIG49cigzNTMzKTtmdW5jdGlvbiBFVlBfQnl0ZXNUb0tleShlLHQscixhKXtpZighaS5pc0J1ZmZlcihlKSllPWkuZnJvbShlLFwiYmluYXJ5XCIpO2lmKHQpe2lmKCFpLmlzQnVmZmVyKHQpKXQ9aS5mcm9tKHQsXCJiaW5hcnlcIik7aWYodC5sZW5ndGghPT04KXRocm93IG5ldyBSYW5nZUVycm9yKFwic2FsdCBzaG91bGQgYmUgQnVmZmVyIHdpdGggOCBieXRlIGxlbmd0aFwiKX12YXIgcz1yLzg7dmFyIG89aS5hbGxvYyhzKTt2YXIgaD1pLmFsbG9jKGF8fDApO3ZhciB1PWkuYWxsb2MoMCk7d2hpbGUocz4wfHxhPjApe3ZhciBkPW5ldyBuO2QudXBkYXRlKHUpO2QudXBkYXRlKGUpO2lmKHQpZC51cGRhdGUodCk7dT1kLmRpZ2VzdCgpO3ZhciBjPTA7aWYocz4wKXt2YXIgbD1vLmxlbmd0aC1zO2M9TWF0aC5taW4ocyx1Lmxlbmd0aCk7dS5jb3B5KG8sbCwwLGMpO3MtPWN9aWYoYzx1Lmxlbmd0aCYmYT4wKXt2YXIgcD1oLmxlbmd0aC1hO3ZhciB2PU1hdGgubWluKGEsdS5sZW5ndGgtYyk7dS5jb3B5KGgscCxjLGMrdik7YS09dn19dS5maWxsKDApO3JldHVybntrZXk6byxpdjpofX1lLmV4cG9ydHM9RVZQX0J5dGVzVG9LZXl9LDkwMjk6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoNjkxMSkuQnVmZmVyO3ZhciBuPXIoMzcyNikuVHJhbnNmb3JtO3ZhciBhPXIoMzc4Mik7ZnVuY3Rpb24gdGhyb3dJZk5vdFN0cmluZ09yQnVmZmVyKGUsdCl7aWYoIWkuaXNCdWZmZXIoZSkmJnR5cGVvZiBlIT09XCJzdHJpbmdcIil7dGhyb3cgbmV3IFR5cGVFcnJvcih0K1wiIG11c3QgYmUgYSBzdHJpbmcgb3IgYSBidWZmZXJcIil9fWZ1bmN0aW9uIEhhc2hCYXNlKGUpe24uY2FsbCh0aGlzKTt0aGlzLl9ibG9jaz1pLmFsbG9jVW5zYWZlKGUpO3RoaXMuX2Jsb2NrU2l6ZT1lO3RoaXMuX2Jsb2NrT2Zmc2V0PTA7dGhpcy5fbGVuZ3RoPVswLDAsMCwwXTt0aGlzLl9maW5hbGl6ZWQ9ZmFsc2V9YShIYXNoQmFzZSxuKTtIYXNoQmFzZS5wcm90b3R5cGUuX3RyYW5zZm9ybT1mdW5jdGlvbihlLHQscil7dmFyIGk9bnVsbDt0cnl7dGhpcy51cGRhdGUoZSx0KX1jYXRjaChlKXtpPWV9cihpKX07SGFzaEJhc2UucHJvdG90eXBlLl9mbHVzaD1mdW5jdGlvbihlKXt2YXIgdD1udWxsO3RyeXt0aGlzLnB1c2godGhpcy5kaWdlc3QoKSl9Y2F0Y2goZSl7dD1lfWUodCl9O0hhc2hCYXNlLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oZSx0KXt0aHJvd0lmTm90U3RyaW5nT3JCdWZmZXIoZSxcIkRhdGFcIik7aWYodGhpcy5fZmluYWxpemVkKXRocm93IG5ldyBFcnJvcihcIkRpZ2VzdCBhbHJlYWR5IGNhbGxlZFwiKTtpZighaS5pc0J1ZmZlcihlKSllPWkuZnJvbShlLHQpO3ZhciByPXRoaXMuX2Jsb2NrO3ZhciBuPTA7d2hpbGUodGhpcy5fYmxvY2tPZmZzZXQrZS5sZW5ndGgtbj49dGhpcy5fYmxvY2tTaXplKXtmb3IodmFyIGE9dGhpcy5fYmxvY2tPZmZzZXQ7YTx0aGlzLl9ibG9ja1NpemU7KXJbYSsrXT1lW24rK107dGhpcy5fdXBkYXRlKCk7dGhpcy5fYmxvY2tPZmZzZXQ9MH13aGlsZShuPGUubGVuZ3RoKXJbdGhpcy5fYmxvY2tPZmZzZXQrK109ZVtuKytdO2Zvcih2YXIgcz0wLG89ZS5sZW5ndGgqODtvPjA7KytzKXt0aGlzLl9sZW5ndGhbc10rPW87bz10aGlzLl9sZW5ndGhbc10vNDI5NDk2NzI5NnwwO2lmKG8+MCl0aGlzLl9sZW5ndGhbc10tPTQyOTQ5NjcyOTYqb31yZXR1cm4gdGhpc307SGFzaEJhc2UucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJfdXBkYXRlIGlzIG5vdCBpbXBsZW1lbnRlZFwiKX07SGFzaEJhc2UucHJvdG90eXBlLmRpZ2VzdD1mdW5jdGlvbihlKXtpZih0aGlzLl9maW5hbGl6ZWQpdGhyb3cgbmV3IEVycm9yKFwiRGlnZXN0IGFscmVhZHkgY2FsbGVkXCIpO3RoaXMuX2ZpbmFsaXplZD10cnVlO3ZhciB0PXRoaXMuX2RpZ2VzdCgpO2lmKGUhPT11bmRlZmluZWQpdD10LnRvU3RyaW5nKGUpO3RoaXMuX2Jsb2NrLmZpbGwoMCk7dGhpcy5fYmxvY2tPZmZzZXQ9MDtmb3IodmFyIHI9MDtyPDQ7KytyKXRoaXMuX2xlbmd0aFtyXT0wO3JldHVybiB0fTtIYXNoQmFzZS5wcm90b3R5cGUuX2RpZ2VzdD1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihcIl9kaWdlc3QgaXMgbm90IGltcGxlbWVudGVkXCIpfTtlLmV4cG9ydHM9SGFzaEJhc2V9LDcwMjg6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXQ7aS51dGlscz1yKDI2Myk7aS5jb21tb249cigxMzMwKTtpLnNoYT1yKDMwMSk7aS5yaXBlbWQ9cigzMDc5KTtpLmhtYWM9cigzMDkyKTtpLnNoYTE9aS5zaGEuc2hhMTtpLnNoYTI1Nj1pLnNoYS5zaGEyNTY7aS5zaGEyMjQ9aS5zaGEuc2hhMjI0O2kuc2hhMzg0PWkuc2hhLnNoYTM4NDtpLnNoYTUxMj1pLnNoYS5zaGE1MTI7aS5yaXBlbWQxNjA9aS5yaXBlbWQucmlwZW1kMTYwfSwxMzMwOmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDI2Myk7dmFyIG49cigzNTIzKTtmdW5jdGlvbiBCbG9ja0hhc2goKXt0aGlzLnBlbmRpbmc9bnVsbDt0aGlzLnBlbmRpbmdUb3RhbD0wO3RoaXMuYmxvY2tTaXplPXRoaXMuY29uc3RydWN0b3IuYmxvY2tTaXplO3RoaXMub3V0U2l6ZT10aGlzLmNvbnN0cnVjdG9yLm91dFNpemU7dGhpcy5obWFjU3RyZW5ndGg9dGhpcy5jb25zdHJ1Y3Rvci5obWFjU3RyZW5ndGg7dGhpcy5wYWRMZW5ndGg9dGhpcy5jb25zdHJ1Y3Rvci5wYWRMZW5ndGgvODt0aGlzLmVuZGlhbj1cImJpZ1wiO3RoaXMuX2RlbHRhOD10aGlzLmJsb2NrU2l6ZS84O3RoaXMuX2RlbHRhMzI9dGhpcy5ibG9ja1NpemUvMzJ9dC5CbG9ja0hhc2g9QmxvY2tIYXNoO0Jsb2NrSGFzaC5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uIHVwZGF0ZShlLHQpe2U9aS50b0FycmF5KGUsdCk7aWYoIXRoaXMucGVuZGluZyl0aGlzLnBlbmRpbmc9ZTtlbHNlIHRoaXMucGVuZGluZz10aGlzLnBlbmRpbmcuY29uY2F0KGUpO3RoaXMucGVuZGluZ1RvdGFsKz1lLmxlbmd0aDtpZih0aGlzLnBlbmRpbmcubGVuZ3RoPj10aGlzLl9kZWx0YTgpe2U9dGhpcy5wZW5kaW5nO3ZhciByPWUubGVuZ3RoJXRoaXMuX2RlbHRhODt0aGlzLnBlbmRpbmc9ZS5zbGljZShlLmxlbmd0aC1yLGUubGVuZ3RoKTtpZih0aGlzLnBlbmRpbmcubGVuZ3RoPT09MCl0aGlzLnBlbmRpbmc9bnVsbDtlPWkuam9pbjMyKGUsMCxlLmxlbmd0aC1yLHRoaXMuZW5kaWFuKTtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rPXRoaXMuX2RlbHRhMzIpdGhpcy5fdXBkYXRlKGUsbixuK3RoaXMuX2RlbHRhMzIpfXJldHVybiB0aGlzfTtCbG9ja0hhc2gucHJvdG90eXBlLmRpZ2VzdD1mdW5jdGlvbiBkaWdlc3QoZSl7dGhpcy51cGRhdGUodGhpcy5fcGFkKCkpO24odGhpcy5wZW5kaW5nPT09bnVsbCk7cmV0dXJuIHRoaXMuX2RpZ2VzdChlKX07QmxvY2tIYXNoLnByb3RvdHlwZS5fcGFkPWZ1bmN0aW9uIHBhZCgpe3ZhciBlPXRoaXMucGVuZGluZ1RvdGFsO3ZhciB0PXRoaXMuX2RlbHRhODt2YXIgcj10LShlK3RoaXMucGFkTGVuZ3RoKSV0O3ZhciBpPW5ldyBBcnJheShyK3RoaXMucGFkTGVuZ3RoKTtpWzBdPTEyODtmb3IodmFyIG49MTtuPHI7bisrKWlbbl09MDtlPDw9MztpZih0aGlzLmVuZGlhbj09PVwiYmlnXCIpe2Zvcih2YXIgYT04O2E8dGhpcy5wYWRMZW5ndGg7YSsrKWlbbisrXT0wO2lbbisrXT0wO2lbbisrXT0wO2lbbisrXT0wO2lbbisrXT0wO2lbbisrXT1lPj4+MjQmMjU1O2lbbisrXT1lPj4+MTYmMjU1O2lbbisrXT1lPj4+OCYyNTU7aVtuKytdPWUmMjU1fWVsc2V7aVtuKytdPWUmMjU1O2lbbisrXT1lPj4+OCYyNTU7aVtuKytdPWU+Pj4xNiYyNTU7aVtuKytdPWU+Pj4yNCYyNTU7aVtuKytdPTA7aVtuKytdPTA7aVtuKytdPTA7aVtuKytdPTA7Zm9yKGE9ODthPHRoaXMucGFkTGVuZ3RoO2ErKylpW24rK109MH1yZXR1cm4gaX19LDMwOTI6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoMjYzKTt2YXIgbj1yKDM1MjMpO2Z1bmN0aW9uIEhtYWMoZSx0LHIpe2lmKCEodGhpcyBpbnN0YW5jZW9mIEhtYWMpKXJldHVybiBuZXcgSG1hYyhlLHQscik7dGhpcy5IYXNoPWU7dGhpcy5ibG9ja1NpemU9ZS5ibG9ja1NpemUvODt0aGlzLm91dFNpemU9ZS5vdXRTaXplLzg7dGhpcy5pbm5lcj1udWxsO3RoaXMub3V0ZXI9bnVsbDt0aGlzLl9pbml0KGkudG9BcnJheSh0LHIpKX1lLmV4cG9ydHM9SG1hYztIbWFjLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbiBpbml0KGUpe2lmKGUubGVuZ3RoPnRoaXMuYmxvY2tTaXplKWU9KG5ldyB0aGlzLkhhc2gpLnVwZGF0ZShlKS5kaWdlc3QoKTtuKGUubGVuZ3RoPD10aGlzLmJsb2NrU2l6ZSk7Zm9yKHZhciB0PWUubGVuZ3RoO3Q8dGhpcy5ibG9ja1NpemU7dCsrKWUucHVzaCgwKTtmb3IodD0wO3Q8ZS5sZW5ndGg7dCsrKWVbdF1ePTU0O3RoaXMuaW5uZXI9KG5ldyB0aGlzLkhhc2gpLnVwZGF0ZShlKTtmb3IodD0wO3Q8ZS5sZW5ndGg7dCsrKWVbdF1ePTEwNjt0aGlzLm91dGVyPShuZXcgdGhpcy5IYXNoKS51cGRhdGUoZSl9O0htYWMucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbiB1cGRhdGUoZSx0KXt0aGlzLmlubmVyLnVwZGF0ZShlLHQpO3JldHVybiB0aGlzfTtIbWFjLnByb3RvdHlwZS5kaWdlc3Q9ZnVuY3Rpb24gZGlnZXN0KGUpe3RoaXMub3V0ZXIudXBkYXRlKHRoaXMuaW5uZXIuZGlnZXN0KCkpO3JldHVybiB0aGlzLm91dGVyLmRpZ2VzdChlKX19LDMwNzk6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoMjYzKTt2YXIgbj1yKDEzMzApO3ZhciBhPWkucm90bDMyO3ZhciBzPWkuc3VtMzI7dmFyIG89aS5zdW0zMl8zO3ZhciBoPWkuc3VtMzJfNDt2YXIgdT1uLkJsb2NrSGFzaDtmdW5jdGlvbiBSSVBFTUQxNjAoKXtpZighKHRoaXMgaW5zdGFuY2VvZiBSSVBFTUQxNjApKXJldHVybiBuZXcgUklQRU1EMTYwO3UuY2FsbCh0aGlzKTt0aGlzLmg9WzE3MzI1ODQxOTMsNDAyMzIzMzQxNywyNTYyMzgzMTAyLDI3MTczMzg3OCwzMjg1Mzc3NTIwXTt0aGlzLmVuZGlhbj1cImxpdHRsZVwifWkuaW5oZXJpdHMoUklQRU1EMTYwLHUpO3QucmlwZW1kMTYwPVJJUEVNRDE2MDtSSVBFTUQxNjAuYmxvY2tTaXplPTUxMjtSSVBFTUQxNjAub3V0U2l6ZT0xNjA7UklQRU1EMTYwLmhtYWNTdHJlbmd0aD0xOTI7UklQRU1EMTYwLnBhZExlbmd0aD02NDtSSVBFTUQxNjAucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24gdXBkYXRlKGUsdCl7dmFyIHI9dGhpcy5oWzBdO3ZhciBpPXRoaXMuaFsxXTt2YXIgbj10aGlzLmhbMl07dmFyIHU9dGhpcy5oWzNdO3ZhciB2PXRoaXMuaFs0XTt2YXIgYj1yO3ZhciBtPWk7dmFyIHk9bjt2YXIgZz11O3ZhciBfPXY7Zm9yKHZhciB3PTA7dzw4MDt3Kyspe3ZhciBNPXMoYShoKHIsZih3LGksbix1KSxlW2Rbd10rdF0sSyh3KSksbFt3XSksdik7cj12O3Y9dTt1PWEobiwxMCk7bj1pO2k9TTtNPXMoYShoKGIsZig3OS13LG0seSxnKSxlW2Nbd10rdF0sS2godykpLHBbd10pLF8pO2I9XztfPWc7Zz1hKHksMTApO3k9bTttPU19TT1vKHRoaXMuaFsxXSxuLGcpO3RoaXMuaFsxXT1vKHRoaXMuaFsyXSx1LF8pO3RoaXMuaFsyXT1vKHRoaXMuaFszXSx2LGIpO3RoaXMuaFszXT1vKHRoaXMuaFs0XSxyLG0pO3RoaXMuaFs0XT1vKHRoaXMuaFswXSxpLHkpO3RoaXMuaFswXT1NfTtSSVBFTUQxNjAucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24gZGlnZXN0KGUpe2lmKGU9PT1cImhleFwiKXJldHVybiBpLnRvSGV4MzIodGhpcy5oLFwibGl0dGxlXCIpO2Vsc2UgcmV0dXJuIGkuc3BsaXQzMih0aGlzLmgsXCJsaXR0bGVcIil9O2Z1bmN0aW9uIGYoZSx0LHIsaSl7aWYoZTw9MTUpcmV0dXJuIHRecl5pO2Vsc2UgaWYoZTw9MzEpcmV0dXJuIHQmcnx+dCZpO2Vsc2UgaWYoZTw9NDcpcmV0dXJuKHR8fnIpXmk7ZWxzZSBpZihlPD02MylyZXR1cm4gdCZpfHImfmk7ZWxzZSByZXR1cm4gdF4ocnx+aSl9ZnVuY3Rpb24gSyhlKXtpZihlPD0xNSlyZXR1cm4gMDtlbHNlIGlmKGU8PTMxKXJldHVybiAxNTE4NTAwMjQ5O2Vsc2UgaWYoZTw9NDcpcmV0dXJuIDE4NTk3NzUzOTM7ZWxzZSBpZihlPD02MylyZXR1cm4gMjQwMDk1OTcwODtlbHNlIHJldHVybiAyODQwODUzODM4fWZ1bmN0aW9uIEtoKGUpe2lmKGU8PTE1KXJldHVybiAxMzUyODI5OTI2O2Vsc2UgaWYoZTw9MzEpcmV0dXJuIDE1NDg2MDM2ODQ7ZWxzZSBpZihlPD00NylyZXR1cm4gMTgzNjA3MjY5MTtlbHNlIGlmKGU8PTYzKXJldHVybiAyMDUzOTk0MjE3O2Vsc2UgcmV0dXJuIDB9dmFyIGQ9WzAsMSwyLDMsNCw1LDYsNyw4LDksMTAsMTEsMTIsMTMsMTQsMTUsNyw0LDEzLDEsMTAsNiwxNSwzLDEyLDAsOSw1LDIsMTQsMTEsOCwzLDEwLDE0LDQsOSwxNSw4LDEsMiw3LDAsNiwxMywxMSw1LDEyLDEsOSwxMSwxMCwwLDgsMTIsNCwxMywzLDcsMTUsMTQsNSw2LDIsNCwwLDUsOSw3LDEyLDIsMTAsMTQsMSwzLDgsMTEsNiwxNSwxM107dmFyIGM9WzUsMTQsNywwLDksMiwxMSw0LDEzLDYsMTUsOCwxLDEwLDMsMTIsNiwxMSwzLDcsMCwxMyw1LDEwLDE0LDE1LDgsMTIsNCw5LDEsMiwxNSw1LDEsMyw3LDE0LDYsOSwxMSw4LDEyLDIsMTAsMCw0LDEzLDgsNiw0LDEsMywxMSwxNSwwLDUsMTIsMiwxMyw5LDcsMTAsMTQsMTIsMTUsMTAsNCwxLDUsOCw3LDYsMiwxMywxNCwwLDMsOSwxMV07dmFyIGw9WzExLDE0LDE1LDEyLDUsOCw3LDksMTEsMTMsMTQsMTUsNiw3LDksOCw3LDYsOCwxMywxMSw5LDcsMTUsNywxMiwxNSw5LDExLDcsMTMsMTIsMTEsMTMsNiw3LDE0LDksMTMsMTUsMTQsOCwxMyw2LDUsMTIsNyw1LDExLDEyLDE0LDE1LDE0LDE1LDksOCw5LDE0LDUsNiw4LDYsNSwxMiw5LDE1LDUsMTEsNiw4LDEzLDEyLDUsMTIsMTMsMTQsMTEsOCw1LDZdO3ZhciBwPVs4LDksOSwxMSwxMywxNSwxNSw1LDcsNyw4LDExLDE0LDE0LDEyLDYsOSwxMywxNSw3LDEyLDgsOSwxMSw3LDcsMTIsNyw2LDE1LDEzLDExLDksNywxNSwxMSw4LDYsNiwxNCwxMiwxMyw1LDE0LDEzLDEzLDcsNSwxNSw1LDgsMTEsMTQsMTQsNiwxNCw2LDksMTIsOSwxMiw1LDE1LDgsOCw1LDEyLDksMTIsNSwxNCw2LDgsMTMsNiw1LDE1LDEzLDExLDExXX0sMzAxOmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt0LnNoYTE9cigyNzQyKTt0LnNoYTIyND1yKDcxMDUpO3Quc2hhMjU2PXIoMTUyNSk7dC5zaGEzODQ9cig5OTQ4KTt0LnNoYTUxMj1yKDEzMTkpfSwyNzQyOmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDI2Myk7dmFyIG49cigxMzMwKTt2YXIgYT1yKDI5NzUpO3ZhciBzPWkucm90bDMyO3ZhciBvPWkuc3VtMzI7dmFyIGg9aS5zdW0zMl81O3ZhciB1PWEuZnRfMTt2YXIgZD1uLkJsb2NrSGFzaDt2YXIgYz1bMTUxODUwMDI0OSwxODU5Nzc1MzkzLDI0MDA5NTk3MDgsMzM5NTQ2OTc4Ml07ZnVuY3Rpb24gU0hBMSgpe2lmKCEodGhpcyBpbnN0YW5jZW9mIFNIQTEpKXJldHVybiBuZXcgU0hBMTtkLmNhbGwodGhpcyk7dGhpcy5oPVsxNzMyNTg0MTkzLDQwMjMyMzM0MTcsMjU2MjM4MzEwMiwyNzE3MzM4NzgsMzI4NTM3NzUyMF07dGhpcy5XPW5ldyBBcnJheSg4MCl9aS5pbmhlcml0cyhTSEExLGQpO2UuZXhwb3J0cz1TSEExO1NIQTEuYmxvY2tTaXplPTUxMjtTSEExLm91dFNpemU9MTYwO1NIQTEuaG1hY1N0cmVuZ3RoPTgwO1NIQTEucGFkTGVuZ3RoPTY0O1NIQTEucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24gX3VwZGF0ZShlLHQpe3ZhciByPXRoaXMuVztmb3IodmFyIGk9MDtpPDE2O2krKylyW2ldPWVbdCtpXTtmb3IoO2k8ci5sZW5ndGg7aSsrKXJbaV09cyhyW2ktM11ecltpLThdXnJbaS0xNF1ecltpLTE2XSwxKTt2YXIgbj10aGlzLmhbMF07dmFyIGE9dGhpcy5oWzFdO3ZhciBkPXRoaXMuaFsyXTt2YXIgbD10aGlzLmhbM107dmFyIHA9dGhpcy5oWzRdO2ZvcihpPTA7aTxyLmxlbmd0aDtpKyspe3ZhciB2PX5+KGkvMjApO3ZhciBiPWgocyhuLDUpLHUodixhLGQsbCkscCxyW2ldLGNbdl0pO3A9bDtsPWQ7ZD1zKGEsMzApO2E9bjtuPWJ9dGhpcy5oWzBdPW8odGhpcy5oWzBdLG4pO3RoaXMuaFsxXT1vKHRoaXMuaFsxXSxhKTt0aGlzLmhbMl09byh0aGlzLmhbMl0sZCk7dGhpcy5oWzNdPW8odGhpcy5oWzNdLGwpO3RoaXMuaFs0XT1vKHRoaXMuaFs0XSxwKX07U0hBMS5wcm90b3R5cGUuX2RpZ2VzdD1mdW5jdGlvbiBkaWdlc3QoZSl7aWYoZT09PVwiaGV4XCIpcmV0dXJuIGkudG9IZXgzMih0aGlzLmgsXCJiaWdcIik7ZWxzZSByZXR1cm4gaS5zcGxpdDMyKHRoaXMuaCxcImJpZ1wiKX19LDcxMDU6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoMjYzKTt2YXIgbj1yKDE1MjUpO2Z1bmN0aW9uIFNIQTIyNCgpe2lmKCEodGhpcyBpbnN0YW5jZW9mIFNIQTIyNCkpcmV0dXJuIG5ldyBTSEEyMjQ7bi5jYWxsKHRoaXMpO3RoaXMuaD1bMzIzODM3MTAzMiw5MTQxNTA2NjMsODEyNzAyOTk5LDQxNDQ5MTI2OTcsNDI5MDc3NTg1NywxNzUwNjAzMDI1LDE2OTQwNzY4MzksMzIwNDA3NTQyOF19aS5pbmhlcml0cyhTSEEyMjQsbik7ZS5leHBvcnRzPVNIQTIyNDtTSEEyMjQuYmxvY2tTaXplPTUxMjtTSEEyMjQub3V0U2l6ZT0yMjQ7U0hBMjI0LmhtYWNTdHJlbmd0aD0xOTI7U0hBMjI0LnBhZExlbmd0aD02NDtTSEEyMjQucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24gZGlnZXN0KGUpe2lmKGU9PT1cImhleFwiKXJldHVybiBpLnRvSGV4MzIodGhpcy5oLnNsaWNlKDAsNyksXCJiaWdcIik7ZWxzZSByZXR1cm4gaS5zcGxpdDMyKHRoaXMuaC5zbGljZSgwLDcpLFwiYmlnXCIpfX0sMTUyNTpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9cigyNjMpO3ZhciBuPXIoMTMzMCk7dmFyIGE9cigyOTc1KTt2YXIgcz1yKDM1MjMpO3ZhciBvPWkuc3VtMzI7dmFyIGg9aS5zdW0zMl80O3ZhciB1PWkuc3VtMzJfNTt2YXIgZD1hLmNoMzI7dmFyIGM9YS5tYWozMjt2YXIgbD1hLnMwXzI1Njt2YXIgcD1hLnMxXzI1Njt2YXIgdj1hLmcwXzI1Njt2YXIgYj1hLmcxXzI1Njt2YXIgbT1uLkJsb2NrSGFzaDt2YXIgeT1bMTExNjM1MjQwOCwxODk5NDQ3NDQxLDMwNDkzMjM0NzEsMzkyMTAwOTU3Myw5NjE5ODcxNjMsMTUwODk3MDk5MywyNDUzNjM1NzQ4LDI4NzA3NjMyMjEsMzYyNDM4MTA4MCwzMTA1OTg0MDEsNjA3MjI1Mjc4LDE0MjY4ODE5ODcsMTkyNTA3ODM4OCwyMTYyMDc4MjA2LDI2MTQ4ODgxMDMsMzI0ODIyMjU4MCwzODM1MzkwNDAxLDQwMjIyMjQ3NzQsMjY0MzQ3MDc4LDYwNDgwNzYyOCw3NzAyNTU5ODMsMTI0OTE1MDEyMiwxNTU1MDgxNjkyLDE5OTYwNjQ5ODYsMjU1NDIyMDg4MiwyODIxODM0MzQ5LDI5NTI5OTY4MDgsMzIxMDMxMzY3MSwzMzM2NTcxODkxLDM1ODQ1Mjg3MTEsMTEzOTI2OTkzLDMzODI0MTg5NSw2NjYzMDcyMDUsNzczNTI5OTEyLDEyOTQ3NTczNzIsMTM5NjE4MjI5MSwxNjk1MTgzNzAwLDE5ODY2NjEwNTEsMjE3NzAyNjM1MCwyNDU2OTU2MDM3LDI3MzA0ODU5MjEsMjgyMDMwMjQxMSwzMjU5NzMwODAwLDMzNDU3NjQ3NzEsMzUxNjA2NTgxNywzNjAwMzUyODA0LDQwOTQ1NzE5MDksMjc1NDIzMzQ0LDQzMDIyNzczNCw1MDY5NDg2MTYsNjU5MDYwNTU2LDg4Mzk5Nzg3Nyw5NTgxMzk1NzEsMTMyMjgyMjIxOCwxNTM3MDAyMDYzLDE3NDc4NzM3NzksMTk1NTU2MjIyMiwyMDI0MTA0ODE1LDIyMjc3MzA0NTIsMjM2MTg1MjQyNCwyNDI4NDM2NDc0LDI3NTY3MzQxODcsMzIwNDAzMTQ3OSwzMzI5MzI1Mjk4XTtmdW5jdGlvbiBTSEEyNTYoKXtpZighKHRoaXMgaW5zdGFuY2VvZiBTSEEyNTYpKXJldHVybiBuZXcgU0hBMjU2O20uY2FsbCh0aGlzKTt0aGlzLmg9WzE3NzkwMzM3MDMsMzE0NDEzNDI3NywxMDEzOTA0MjQyLDI3NzM0ODA3NjIsMTM1OTg5MzExOSwyNjAwODIyOTI0LDUyODczNDYzNSwxNTQxNDU5MjI1XTt0aGlzLms9eTt0aGlzLlc9bmV3IEFycmF5KDY0KX1pLmluaGVyaXRzKFNIQTI1NixtKTtlLmV4cG9ydHM9U0hBMjU2O1NIQTI1Ni5ibG9ja1NpemU9NTEyO1NIQTI1Ni5vdXRTaXplPTI1NjtTSEEyNTYuaG1hY1N0cmVuZ3RoPTE5MjtTSEEyNTYucGFkTGVuZ3RoPTY0O1NIQTI1Ni5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbiBfdXBkYXRlKGUsdCl7dmFyIHI9dGhpcy5XO2Zvcih2YXIgaT0wO2k8MTY7aSsrKXJbaV09ZVt0K2ldO2Zvcig7aTxyLmxlbmd0aDtpKyspcltpXT1oKGIocltpLTJdKSxyW2ktN10sdihyW2ktMTVdKSxyW2ktMTZdKTt2YXIgbj10aGlzLmhbMF07dmFyIGE9dGhpcy5oWzFdO3ZhciBtPXRoaXMuaFsyXTt2YXIgeT10aGlzLmhbM107dmFyIGc9dGhpcy5oWzRdO3ZhciBfPXRoaXMuaFs1XTt2YXIgdz10aGlzLmhbNl07dmFyIE09dGhpcy5oWzddO3ModGhpcy5rLmxlbmd0aD09PXIubGVuZ3RoKTtmb3IoaT0wO2k8ci5sZW5ndGg7aSsrKXt2YXIgQj11KE0scChnKSxkKGcsXyx3KSx0aGlzLmtbaV0scltpXSk7dmFyIEU9byhsKG4pLGMobixhLG0pKTtNPXc7dz1fO189ZztnPW8oeSxCKTt5PW07bT1hO2E9bjtuPW8oQixFKX10aGlzLmhbMF09byh0aGlzLmhbMF0sbik7dGhpcy5oWzFdPW8odGhpcy5oWzFdLGEpO3RoaXMuaFsyXT1vKHRoaXMuaFsyXSxtKTt0aGlzLmhbM109byh0aGlzLmhbM10seSk7dGhpcy5oWzRdPW8odGhpcy5oWzRdLGcpO3RoaXMuaFs1XT1vKHRoaXMuaFs1XSxfKTt0aGlzLmhbNl09byh0aGlzLmhbNl0sdyk7dGhpcy5oWzddPW8odGhpcy5oWzddLE0pfTtTSEEyNTYucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24gZGlnZXN0KGUpe2lmKGU9PT1cImhleFwiKXJldHVybiBpLnRvSGV4MzIodGhpcy5oLFwiYmlnXCIpO2Vsc2UgcmV0dXJuIGkuc3BsaXQzMih0aGlzLmgsXCJiaWdcIil9fSw5OTQ4OmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDI2Myk7dmFyIG49cigxMzE5KTtmdW5jdGlvbiBTSEEzODQoKXtpZighKHRoaXMgaW5zdGFuY2VvZiBTSEEzODQpKXJldHVybiBuZXcgU0hBMzg0O24uY2FsbCh0aGlzKTt0aGlzLmg9WzM0MTgwNzAzNjUsMzIzODM3MTAzMiwxNjU0MjcwMjUwLDkxNDE1MDY2MywyNDM4NTI5MzcwLDgxMjcwMjk5OSwzNTU0NjIzNjAsNDE0NDkxMjY5NywxNzMxNDA1NDE1LDQyOTA3NzU4NTcsMjM5NDE4MDIzMSwxNzUwNjAzMDI1LDM2NzUwMDg1MjUsMTY5NDA3NjgzOSwxMjAzMDYyODEzLDMyMDQwNzU0MjhdfWkuaW5oZXJpdHMoU0hBMzg0LG4pO2UuZXhwb3J0cz1TSEEzODQ7U0hBMzg0LmJsb2NrU2l6ZT0xMDI0O1NIQTM4NC5vdXRTaXplPTM4NDtTSEEzODQuaG1hY1N0cmVuZ3RoPTE5MjtTSEEzODQucGFkTGVuZ3RoPTEyODtTSEEzODQucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24gZGlnZXN0KGUpe2lmKGU9PT1cImhleFwiKXJldHVybiBpLnRvSGV4MzIodGhpcy5oLnNsaWNlKDAsMTIpLFwiYmlnXCIpO2Vsc2UgcmV0dXJuIGkuc3BsaXQzMih0aGlzLmguc2xpY2UoMCwxMiksXCJiaWdcIil9fSwxMzE5OmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDI2Myk7dmFyIG49cigxMzMwKTt2YXIgYT1yKDM1MjMpO3ZhciBzPWkucm90cjY0X2hpO3ZhciBvPWkucm90cjY0X2xvO3ZhciBoPWkuc2hyNjRfaGk7dmFyIHU9aS5zaHI2NF9sbzt2YXIgZD1pLnN1bTY0O3ZhciBjPWkuc3VtNjRfaGk7dmFyIGw9aS5zdW02NF9sbzt2YXIgcD1pLnN1bTY0XzRfaGk7dmFyIHY9aS5zdW02NF80X2xvO3ZhciBiPWkuc3VtNjRfNV9oaTt2YXIgbT1pLnN1bTY0XzVfbG87dmFyIHk9bi5CbG9ja0hhc2g7dmFyIGc9WzExMTYzNTI0MDgsMzYwOTc2NzQ1OCwxODk5NDQ3NDQxLDYwMjg5MTcyNSwzMDQ5MzIzNDcxLDM5NjQ0ODQzOTksMzkyMTAwOTU3MywyMTczMjk1NTQ4LDk2MTk4NzE2Myw0MDgxNjI4NDcyLDE1MDg5NzA5OTMsMzA1MzgzNDI2NSwyNDUzNjM1NzQ4LDI5Mzc2NzE1NzksMjg3MDc2MzIyMSwzNjY0NjA5NTYwLDM2MjQzODEwODAsMjczNDg4MzM5NCwzMTA1OTg0MDEsMTE2NDk5NjU0Miw2MDcyMjUyNzgsMTMyMzYxMDc2NCwxNDI2ODgxOTg3LDM1OTAzMDQ5OTQsMTkyNTA3ODM4OCw0MDY4MTgyMzgzLDIxNjIwNzgyMDYsOTkxMzM2MTEzLDI2MTQ4ODgxMDMsNjMzODAzMzE3LDMyNDgyMjI1ODAsMzQ3OTc3NDg2OCwzODM1MzkwNDAxLDI2NjY2MTM0NTgsNDAyMjIyNDc3NCw5NDQ3MTExMzksMjY0MzQ3MDc4LDIzNDEyNjI3NzMsNjA0ODA3NjI4LDIwMDc4MDA5MzMsNzcwMjU1OTgzLDE0OTU5OTA5MDEsMTI0OTE1MDEyMiwxODU2NDMxMjM1LDE1NTUwODE2OTIsMzE3NTIxODEzMiwxOTk2MDY0OTg2LDIxOTg5NTA4MzcsMjU1NDIyMDg4MiwzOTk5NzE5MzM5LDI4MjE4MzQzNDksNzY2Nzg0MDE2LDI5NTI5OTY4MDgsMjU2NjU5NDg3OSwzMjEwMzEzNjcxLDMyMDMzMzc5NTYsMzMzNjU3MTg5MSwxMDM0NDU3MDI2LDM1ODQ1Mjg3MTEsMjQ2Njk0ODkwMSwxMTM5MjY5OTMsMzc1ODMyNjM4MywzMzgyNDE4OTUsMTY4NzE3OTM2LDY2NjMwNzIwNSwxMTg4MTc5OTY0LDc3MzUyOTkxMiwxNTQ2MDQ1NzM0LDEyOTQ3NTczNzIsMTUyMjgwNTQ4NSwxMzk2MTgyMjkxLDI2NDM4MzM4MjMsMTY5NTE4MzcwMCwyMzQzNTI3MzkwLDE5ODY2NjEwNTEsMTAxNDQ3NzQ4MCwyMTc3MDI2MzUwLDEyMDY3NTkxNDIsMjQ1Njk1NjAzNywzNDQwNzc2MjcsMjczMDQ4NTkyMSwxMjkwODYzNDYwLDI4MjAzMDI0MTEsMzE1ODQ1NDI3MywzMjU5NzMwODAwLDM1MDU5NTI2NTcsMzM0NTc2NDc3MSwxMDYyMTcwMDgsMzUxNjA2NTgxNywzNjA2MDA4MzQ0LDM2MDAzNTI4MDQsMTQzMjcyNTc3Niw0MDk0NTcxOTA5LDE0NjcwMzE1OTQsMjc1NDIzMzQ0LDg1MTE2OTcyMCw0MzAyMjc3MzQsMzEwMDgyMzc1Miw1MDY5NDg2MTYsMTM2MzI1ODE5NSw2NTkwNjA1NTYsMzc1MDY4NTU5Myw4ODM5OTc4NzcsMzc4NTA1MDI4MCw5NTgxMzk1NzEsMzMxODMwNzQyNywxMzIyODIyMjE4LDM4MTI3MjM0MDMsMTUzNzAwMjA2MywyMDAzMDM0OTk1LDE3NDc4NzM3NzksMzYwMjAzNjg5OSwxOTU1NTYyMjIyLDE1NzU5OTAwMTIsMjAyNDEwNDgxNSwxMTI1NTkyOTI4LDIyMjc3MzA0NTIsMjcxNjkwNDMwNiwyMzYxODUyNDI0LDQ0Mjc3NjA0NCwyNDI4NDM2NDc0LDU5MzY5ODM0NCwyNzU2NzM0MTg3LDM3MzMxMTAyNDksMzIwNDAzMTQ3OSwyOTk5MzUxNTczLDMzMjkzMjUyOTgsMzgxNTkyMDQyNywzMzkxNTY5NjE0LDM5MjgzODM5MDAsMzUxNTI2NzI3MSw1NjYyODA3MTEsMzk0MDE4NzYwNiwzNDU0MDY5NTM0LDQxMTg2MzAyNzEsNDAwMDIzOTk5MiwxMTY0MTg0NzQsMTkxNDEzODU1NCwxNzQyOTI0MjEsMjczMTA1NTI3MCwyODkzODAzNTYsMzIwMzk5MzAwNiw0NjAzOTMyNjksMzIwNjIwMzE1LDY4NTQ3MTczMyw1ODc0OTY4MzYsODUyMTQyOTcxLDEwODY3OTI4NTEsMTAxNzAzNjI5OCwzNjU1NDMxMDAsMTEyNjAwMDU4MCwyNjE4Mjk3Njc2LDEyODgwMzM0NzAsMzQwOTg1NTE1OCwxNTAxNTA1OTQ4LDQyMzQ1MDk4NjYsMTYwNzE2NzkxNSw5ODcxNjc0NjgsMTgxNjQwMjMxNiwxMjQ2MTg5NTkxXTtmdW5jdGlvbiBTSEE1MTIoKXtpZighKHRoaXMgaW5zdGFuY2VvZiBTSEE1MTIpKXJldHVybiBuZXcgU0hBNTEyO3kuY2FsbCh0aGlzKTt0aGlzLmg9WzE3NzkwMzM3MDMsNDA4OTIzNTcyMCwzMTQ0MTM0Mjc3LDIyMjc4NzM1OTUsMTAxMzkwNDI0Miw0MjcxMTc1NzIzLDI3NzM0ODA3NjIsMTU5NTc1MDEyOSwxMzU5ODkzMTE5LDI5MTc1NjUxMzcsMjYwMDgyMjkyNCw3MjU1MTExOTksNTI4NzM0NjM1LDQyMTUzODk1NDcsMTU0MTQ1OTIyNSwzMjcwMzMyMDldO3RoaXMuaz1nO3RoaXMuVz1uZXcgQXJyYXkoMTYwKX1pLmluaGVyaXRzKFNIQTUxMix5KTtlLmV4cG9ydHM9U0hBNTEyO1NIQTUxMi5ibG9ja1NpemU9MTAyNDtTSEE1MTIub3V0U2l6ZT01MTI7U0hBNTEyLmhtYWNTdHJlbmd0aD0xOTI7U0hBNTEyLnBhZExlbmd0aD0xMjg7U0hBNTEyLnByb3RvdHlwZS5fcHJlcGFyZUJsb2NrPWZ1bmN0aW9uIF9wcmVwYXJlQmxvY2soZSx0KXt2YXIgcj10aGlzLlc7Zm9yKHZhciBpPTA7aTwzMjtpKyspcltpXT1lW3QraV07Zm9yKDtpPHIubGVuZ3RoO2krPTIpe3ZhciBuPWcxXzUxMl9oaShyW2ktNF0scltpLTNdKTt2YXIgYT1nMV81MTJfbG8ocltpLTRdLHJbaS0zXSk7dmFyIHM9cltpLTE0XTt2YXIgbz1yW2ktMTNdO3ZhciBoPWcwXzUxMl9oaShyW2ktMzBdLHJbaS0yOV0pO3ZhciB1PWcwXzUxMl9sbyhyW2ktMzBdLHJbaS0yOV0pO3ZhciBkPXJbaS0zMl07dmFyIGM9cltpLTMxXTtyW2ldPXAobixhLHMsbyxoLHUsZCxjKTtyW2krMV09dihuLGEscyxvLGgsdSxkLGMpfX07U0hBNTEyLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uIF91cGRhdGUoZSx0KXt0aGlzLl9wcmVwYXJlQmxvY2soZSx0KTt2YXIgcj10aGlzLlc7dmFyIGk9dGhpcy5oWzBdO3ZhciBuPXRoaXMuaFsxXTt2YXIgcz10aGlzLmhbMl07dmFyIG89dGhpcy5oWzNdO3ZhciBoPXRoaXMuaFs0XTt2YXIgdT10aGlzLmhbNV07dmFyIHA9dGhpcy5oWzZdO3ZhciB2PXRoaXMuaFs3XTt2YXIgeT10aGlzLmhbOF07dmFyIGc9dGhpcy5oWzldO3ZhciBfPXRoaXMuaFsxMF07dmFyIHc9dGhpcy5oWzExXTt2YXIgTT10aGlzLmhbMTJdO3ZhciBCPXRoaXMuaFsxM107dmFyIEU9dGhpcy5oWzE0XTt2YXIgaz10aGlzLmhbMTVdO2EodGhpcy5rLmxlbmd0aD09PXIubGVuZ3RoKTtmb3IodmFyIEE9MDtBPHIubGVuZ3RoO0ErPTIpe3ZhciBOPUU7dmFyIFA9azt2YXIgeD1zMV81MTJfaGkoeSxnKTt2YXIgST1zMV81MTJfbG8oeSxnKTt2YXIgQz1jaDY0X2hpKHksZyxfLHcsTSxCKTt2YXIgRD1jaDY0X2xvKHksZyxfLHcsTSxCKTt2YXIgVD10aGlzLmtbQV07dmFyIGo9dGhpcy5rW0ErMV07dmFyIHE9cltBXTt2YXIgTz1yW0ErMV07dmFyIEg9YihOLFAseCxJLEMsRCxULGoscSxPKTt2YXIgTD1tKE4sUCx4LEksQyxELFQsaixxLE8pO049czBfNTEyX2hpKGksbik7UD1zMF81MTJfbG8oaSxuKTt4PW1hajY0X2hpKGksbixzLG8saCx1KTtJPW1hajY0X2xvKGksbixzLG8saCx1KTt2YXIgej1jKE4sUCx4LEkpO3ZhciBGPWwoTixQLHgsSSk7RT1NO2s9QjtNPV87Qj13O189eTt3PWc7eT1jKHAsdixILEwpO2c9bCh2LHYsSCxMKTtwPWg7dj11O2g9czt1PW87cz1pO289bjtpPWMoSCxMLHosRik7bj1sKEgsTCx6LEYpfWQodGhpcy5oLDAsaSxuKTtkKHRoaXMuaCwyLHMsbyk7ZCh0aGlzLmgsNCxoLHUpO2QodGhpcy5oLDYscCx2KTtkKHRoaXMuaCw4LHksZyk7ZCh0aGlzLmgsMTAsXyx3KTtkKHRoaXMuaCwxMixNLEIpO2QodGhpcy5oLDE0LEUsayl9O1NIQTUxMi5wcm90b3R5cGUuX2RpZ2VzdD1mdW5jdGlvbiBkaWdlc3QoZSl7aWYoZT09PVwiaGV4XCIpcmV0dXJuIGkudG9IZXgzMih0aGlzLmgsXCJiaWdcIik7ZWxzZSByZXR1cm4gaS5zcGxpdDMyKHRoaXMuaCxcImJpZ1wiKX07ZnVuY3Rpb24gY2g2NF9oaShlLHQscixpLG4pe3ZhciBhPWUmcl5+ZSZuO2lmKGE8MClhKz00Mjk0OTY3Mjk2O3JldHVybiBhfWZ1bmN0aW9uIGNoNjRfbG8oZSx0LHIsaSxuLGEpe3ZhciBzPXQmaV5+dCZhO2lmKHM8MClzKz00Mjk0OTY3Mjk2O3JldHVybiBzfWZ1bmN0aW9uIG1hajY0X2hpKGUsdCxyLGksbil7dmFyIGE9ZSZyXmUmbl5yJm47aWYoYTwwKWErPTQyOTQ5NjcyOTY7cmV0dXJuIGF9ZnVuY3Rpb24gbWFqNjRfbG8oZSx0LHIsaSxuLGEpe3ZhciBzPXQmaV50JmFeaSZhO2lmKHM8MClzKz00Mjk0OTY3Mjk2O3JldHVybiBzfWZ1bmN0aW9uIHMwXzUxMl9oaShlLHQpe3ZhciByPXMoZSx0LDI4KTt2YXIgaT1zKHQsZSwyKTt2YXIgbj1zKHQsZSw3KTt2YXIgYT1yXmlebjtpZihhPDApYSs9NDI5NDk2NzI5NjtyZXR1cm4gYX1mdW5jdGlvbiBzMF81MTJfbG8oZSx0KXt2YXIgcj1vKGUsdCwyOCk7dmFyIGk9byh0LGUsMik7dmFyIG49byh0LGUsNyk7dmFyIGE9cl5pXm47aWYoYTwwKWErPTQyOTQ5NjcyOTY7cmV0dXJuIGF9ZnVuY3Rpb24gczFfNTEyX2hpKGUsdCl7dmFyIHI9cyhlLHQsMTQpO3ZhciBpPXMoZSx0LDE4KTt2YXIgbj1zKHQsZSw5KTt2YXIgYT1yXmlebjtpZihhPDApYSs9NDI5NDk2NzI5NjtyZXR1cm4gYX1mdW5jdGlvbiBzMV81MTJfbG8oZSx0KXt2YXIgcj1vKGUsdCwxNCk7dmFyIGk9byhlLHQsMTgpO3ZhciBuPW8odCxlLDkpO3ZhciBhPXJeaV5uO2lmKGE8MClhKz00Mjk0OTY3Mjk2O3JldHVybiBhfWZ1bmN0aW9uIGcwXzUxMl9oaShlLHQpe3ZhciByPXMoZSx0LDEpO3ZhciBpPXMoZSx0LDgpO3ZhciBuPWgoZSx0LDcpO3ZhciBhPXJeaV5uO2lmKGE8MClhKz00Mjk0OTY3Mjk2O3JldHVybiBhfWZ1bmN0aW9uIGcwXzUxMl9sbyhlLHQpe3ZhciByPW8oZSx0LDEpO3ZhciBpPW8oZSx0LDgpO3ZhciBuPXUoZSx0LDcpO3ZhciBhPXJeaV5uO2lmKGE8MClhKz00Mjk0OTY3Mjk2O3JldHVybiBhfWZ1bmN0aW9uIGcxXzUxMl9oaShlLHQpe3ZhciByPXMoZSx0LDE5KTt2YXIgaT1zKHQsZSwyOSk7dmFyIG49aChlLHQsNik7dmFyIGE9cl5pXm47aWYoYTwwKWErPTQyOTQ5NjcyOTY7cmV0dXJuIGF9ZnVuY3Rpb24gZzFfNTEyX2xvKGUsdCl7dmFyIHI9byhlLHQsMTkpO3ZhciBpPW8odCxlLDI5KTt2YXIgbj11KGUsdCw2KTt2YXIgYT1yXmlebjtpZihhPDApYSs9NDI5NDk2NzI5NjtyZXR1cm4gYX19LDI5NzU6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoMjYzKTt2YXIgbj1pLnJvdHIzMjtmdW5jdGlvbiBmdF8xKGUsdCxyLGkpe2lmKGU9PT0wKXJldHVybiBjaDMyKHQscixpKTtpZihlPT09MXx8ZT09PTMpcmV0dXJuIHAzMih0LHIsaSk7aWYoZT09PTIpcmV0dXJuIG1hajMyKHQscixpKX10LmZ0XzE9ZnRfMTtmdW5jdGlvbiBjaDMyKGUsdCxyKXtyZXR1cm4gZSZ0Xn5lJnJ9dC5jaDMyPWNoMzI7ZnVuY3Rpb24gbWFqMzIoZSx0LHIpe3JldHVybiBlJnReZSZyXnQmcn10Lm1hajMyPW1hajMyO2Z1bmN0aW9uIHAzMihlLHQscil7cmV0dXJuIGVedF5yfXQucDMyPXAzMjtmdW5jdGlvbiBzMF8yNTYoZSl7cmV0dXJuIG4oZSwyKV5uKGUsMTMpXm4oZSwyMil9dC5zMF8yNTY9czBfMjU2O2Z1bmN0aW9uIHMxXzI1NihlKXtyZXR1cm4gbihlLDYpXm4oZSwxMSlebihlLDI1KX10LnMxXzI1Nj1zMV8yNTY7ZnVuY3Rpb24gZzBfMjU2KGUpe3JldHVybiBuKGUsNylebihlLDE4KV5lPj4+M310LmcwXzI1Nj1nMF8yNTY7ZnVuY3Rpb24gZzFfMjU2KGUpe3JldHVybiBuKGUsMTcpXm4oZSwxOSleZT4+PjEwfXQuZzFfMjU2PWcxXzI1Nn0sMjYzOmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDM1MjMpO3ZhciBuPXIoMzc4Mik7dC5pbmhlcml0cz1uO2Z1bmN0aW9uIGlzU3Vycm9nYXRlUGFpcihlLHQpe2lmKChlLmNoYXJDb2RlQXQodCkmNjQ1MTIpIT09NTUyOTYpe3JldHVybiBmYWxzZX1pZih0PDB8fHQrMT49ZS5sZW5ndGgpe3JldHVybiBmYWxzZX1yZXR1cm4oZS5jaGFyQ29kZUF0KHQrMSkmNjQ1MTIpPT09NTYzMjB9ZnVuY3Rpb24gdG9BcnJheShlLHQpe2lmKEFycmF5LmlzQXJyYXkoZSkpcmV0dXJuIGUuc2xpY2UoKTtpZighZSlyZXR1cm5bXTt2YXIgcj1bXTtpZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe2lmKCF0KXt2YXIgaT0wO2Zvcih2YXIgbj0wO248ZS5sZW5ndGg7bisrKXt2YXIgYT1lLmNoYXJDb2RlQXQobik7aWYoYTwxMjgpe3JbaSsrXT1hfWVsc2UgaWYoYTwyMDQ4KXtyW2krK109YT4+NnwxOTI7cltpKytdPWEmNjN8MTI4fWVsc2UgaWYoaXNTdXJyb2dhdGVQYWlyKGUsbikpe2E9NjU1MzYrKChhJjEwMjMpPDwxMCkrKGUuY2hhckNvZGVBdCgrK24pJjEwMjMpO3JbaSsrXT1hPj4xOHwyNDA7cltpKytdPWE+PjEyJjYzfDEyODtyW2krK109YT4+NiY2M3wxMjg7cltpKytdPWEmNjN8MTI4fWVsc2V7cltpKytdPWE+PjEyfDIyNDtyW2krK109YT4+NiY2M3wxMjg7cltpKytdPWEmNjN8MTI4fX19ZWxzZSBpZih0PT09XCJoZXhcIil7ZT1lLnJlcGxhY2UoL1teYS16MC05XSsvZ2ksXCJcIik7aWYoZS5sZW5ndGglMiE9PTApZT1cIjBcIitlO2ZvcihuPTA7bjxlLmxlbmd0aDtuKz0yKXIucHVzaChwYXJzZUludChlW25dK2VbbisxXSwxNikpfX1lbHNle2ZvcihuPTA7bjxlLmxlbmd0aDtuKyspcltuXT1lW25dfDB9cmV0dXJuIHJ9dC50b0FycmF5PXRvQXJyYXk7ZnVuY3Rpb24gdG9IZXgoZSl7dmFyIHQ9XCJcIjtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKyl0Kz16ZXJvMihlW3JdLnRvU3RyaW5nKDE2KSk7cmV0dXJuIHR9dC50b0hleD10b0hleDtmdW5jdGlvbiBodG9ubChlKXt2YXIgdD1lPj4+MjR8ZT4+PjgmNjUyODB8ZTw8OCYxNjcxMTY4MHwoZSYyNTUpPDwyNDtyZXR1cm4gdD4+PjB9dC5odG9ubD1odG9ubDtmdW5jdGlvbiB0b0hleDMyKGUsdCl7dmFyIHI9XCJcIjtmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKyl7dmFyIG49ZVtpXTtpZih0PT09XCJsaXR0bGVcIiluPWh0b25sKG4pO3IrPXplcm84KG4udG9TdHJpbmcoMTYpKX1yZXR1cm4gcn10LnRvSGV4MzI9dG9IZXgzMjtmdW5jdGlvbiB6ZXJvMihlKXtpZihlLmxlbmd0aD09PTEpcmV0dXJuXCIwXCIrZTtlbHNlIHJldHVybiBlfXQuemVybzI9emVybzI7ZnVuY3Rpb24gemVybzgoZSl7aWYoZS5sZW5ndGg9PT03KXJldHVyblwiMFwiK2U7ZWxzZSBpZihlLmxlbmd0aD09PTYpcmV0dXJuXCIwMFwiK2U7ZWxzZSBpZihlLmxlbmd0aD09PTUpcmV0dXJuXCIwMDBcIitlO2Vsc2UgaWYoZS5sZW5ndGg9PT00KXJldHVyblwiMDAwMFwiK2U7ZWxzZSBpZihlLmxlbmd0aD09PTMpcmV0dXJuXCIwMDAwMFwiK2U7ZWxzZSBpZihlLmxlbmd0aD09PTIpcmV0dXJuXCIwMDAwMDBcIitlO2Vsc2UgaWYoZS5sZW5ndGg9PT0xKXJldHVyblwiMDAwMDAwMFwiK2U7ZWxzZSByZXR1cm4gZX10Lnplcm84PXplcm84O2Z1bmN0aW9uIGpvaW4zMihlLHQscixuKXt2YXIgYT1yLXQ7aShhJTQ9PT0wKTt2YXIgcz1uZXcgQXJyYXkoYS80KTtmb3IodmFyIG89MCxoPXQ7bzxzLmxlbmd0aDtvKyssaCs9NCl7dmFyIHU7aWYobj09PVwiYmlnXCIpdT1lW2hdPDwyNHxlW2grMV08PDE2fGVbaCsyXTw8OHxlW2grM107ZWxzZSB1PWVbaCszXTw8MjR8ZVtoKzJdPDwxNnxlW2grMV08PDh8ZVtoXTtzW29dPXU+Pj4wfXJldHVybiBzfXQuam9pbjMyPWpvaW4zMjtmdW5jdGlvbiBzcGxpdDMyKGUsdCl7dmFyIHI9bmV3IEFycmF5KGUubGVuZ3RoKjQpO2Zvcih2YXIgaT0wLG49MDtpPGUubGVuZ3RoO2krKyxuKz00KXt2YXIgYT1lW2ldO2lmKHQ9PT1cImJpZ1wiKXtyW25dPWE+Pj4yNDtyW24rMV09YT4+PjE2JjI1NTtyW24rMl09YT4+PjgmMjU1O3JbbiszXT1hJjI1NX1lbHNle3JbbiszXT1hPj4+MjQ7cltuKzJdPWE+Pj4xNiYyNTU7cltuKzFdPWE+Pj44JjI1NTtyW25dPWEmMjU1fX1yZXR1cm4gcn10LnNwbGl0MzI9c3BsaXQzMjtmdW5jdGlvbiByb3RyMzIoZSx0KXtyZXR1cm4gZT4+PnR8ZTw8MzItdH10LnJvdHIzMj1yb3RyMzI7ZnVuY3Rpb24gcm90bDMyKGUsdCl7cmV0dXJuIGU8PHR8ZT4+PjMyLXR9dC5yb3RsMzI9cm90bDMyO2Z1bmN0aW9uIHN1bTMyKGUsdCl7cmV0dXJuIGUrdD4+PjB9dC5zdW0zMj1zdW0zMjtmdW5jdGlvbiBzdW0zMl8zKGUsdCxyKXtyZXR1cm4gZSt0K3I+Pj4wfXQuc3VtMzJfMz1zdW0zMl8zO2Z1bmN0aW9uIHN1bTMyXzQoZSx0LHIsaSl7cmV0dXJuIGUrdCtyK2k+Pj4wfXQuc3VtMzJfND1zdW0zMl80O2Z1bmN0aW9uIHN1bTMyXzUoZSx0LHIsaSxuKXtyZXR1cm4gZSt0K3IraStuPj4+MH10LnN1bTMyXzU9c3VtMzJfNTtmdW5jdGlvbiBzdW02NChlLHQscixpKXt2YXIgbj1lW3RdO3ZhciBhPWVbdCsxXTt2YXIgcz1pK2E+Pj4wO3ZhciBvPShzPGk/MTowKStyK247ZVt0XT1vPj4+MDtlW3QrMV09c310LnN1bTY0PXN1bTY0O2Z1bmN0aW9uIHN1bTY0X2hpKGUsdCxyLGkpe3ZhciBuPXQraT4+PjA7dmFyIGE9KG48dD8xOjApK2UrcjtyZXR1cm4gYT4+PjB9dC5zdW02NF9oaT1zdW02NF9oaTtmdW5jdGlvbiBzdW02NF9sbyhlLHQscixpKXt2YXIgbj10K2k7cmV0dXJuIG4+Pj4wfXQuc3VtNjRfbG89c3VtNjRfbG87ZnVuY3Rpb24gc3VtNjRfNF9oaShlLHQscixpLG4sYSxzLG8pe3ZhciBoPTA7dmFyIHU9dDt1PXUraT4+PjA7aCs9dTx0PzE6MDt1PXUrYT4+PjA7aCs9dTxhPzE6MDt1PXUrbz4+PjA7aCs9dTxvPzE6MDt2YXIgZD1lK3IrbitzK2g7cmV0dXJuIGQ+Pj4wfXQuc3VtNjRfNF9oaT1zdW02NF80X2hpO2Z1bmN0aW9uIHN1bTY0XzRfbG8oZSx0LHIsaSxuLGEscyxvKXt2YXIgaD10K2krYStvO3JldHVybiBoPj4+MH10LnN1bTY0XzRfbG89c3VtNjRfNF9sbztmdW5jdGlvbiBzdW02NF81X2hpKGUsdCxyLGksbixhLHMsbyxoLHUpe3ZhciBkPTA7dmFyIGM9dDtjPWMraT4+PjA7ZCs9Yzx0PzE6MDtjPWMrYT4+PjA7ZCs9YzxhPzE6MDtjPWMrbz4+PjA7ZCs9YzxvPzE6MDtjPWMrdT4+PjA7ZCs9Yzx1PzE6MDt2YXIgbD1lK3IrbitzK2grZDtyZXR1cm4gbD4+PjB9dC5zdW02NF81X2hpPXN1bTY0XzVfaGk7ZnVuY3Rpb24gc3VtNjRfNV9sbyhlLHQscixpLG4sYSxzLG8saCx1KXt2YXIgZD10K2krYStvK3U7cmV0dXJuIGQ+Pj4wfXQuc3VtNjRfNV9sbz1zdW02NF81X2xvO2Z1bmN0aW9uIHJvdHI2NF9oaShlLHQscil7dmFyIGk9dDw8MzItcnxlPj4+cjtyZXR1cm4gaT4+PjB9dC5yb3RyNjRfaGk9cm90cjY0X2hpO2Z1bmN0aW9uIHJvdHI2NF9sbyhlLHQscil7dmFyIGk9ZTw8MzItcnx0Pj4+cjtyZXR1cm4gaT4+PjB9dC5yb3RyNjRfbG89cm90cjY0X2xvO2Z1bmN0aW9uIHNocjY0X2hpKGUsdCxyKXtyZXR1cm4gZT4+PnJ9dC5zaHI2NF9oaT1zaHI2NF9oaTtmdW5jdGlvbiBzaHI2NF9sbyhlLHQscil7dmFyIGk9ZTw8MzItcnx0Pj4+cjtyZXR1cm4gaT4+PjB9dC5zaHI2NF9sbz1zaHI2NF9sb30sNDkxMDpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9cig3MDI4KTt2YXIgbj1yKDY1NDUpO3ZhciBhPXIoMzUyMyk7ZnVuY3Rpb24gSG1hY0RSQkcoZSl7aWYoISh0aGlzIGluc3RhbmNlb2YgSG1hY0RSQkcpKXJldHVybiBuZXcgSG1hY0RSQkcoZSk7dGhpcy5oYXNoPWUuaGFzaDt0aGlzLnByZWRSZXNpc3Q9ISFlLnByZWRSZXNpc3Q7dGhpcy5vdXRMZW49dGhpcy5oYXNoLm91dFNpemU7dGhpcy5taW5FbnRyb3B5PWUubWluRW50cm9weXx8dGhpcy5oYXNoLmhtYWNTdHJlbmd0aDt0aGlzLl9yZXNlZWQ9bnVsbDt0aGlzLnJlc2VlZEludGVydmFsPW51bGw7dGhpcy5LPW51bGw7dGhpcy5WPW51bGw7dmFyIHQ9bi50b0FycmF5KGUuZW50cm9weSxlLmVudHJvcHlFbmN8fFwiaGV4XCIpO3ZhciByPW4udG9BcnJheShlLm5vbmNlLGUubm9uY2VFbmN8fFwiaGV4XCIpO3ZhciBpPW4udG9BcnJheShlLnBlcnMsZS5wZXJzRW5jfHxcImhleFwiKTthKHQubGVuZ3RoPj10aGlzLm1pbkVudHJvcHkvOCxcIk5vdCBlbm91Z2ggZW50cm9weS4gTWluaW11bSBpczogXCIrdGhpcy5taW5FbnRyb3B5K1wiIGJpdHNcIik7dGhpcy5faW5pdCh0LHIsaSl9ZS5leHBvcnRzPUhtYWNEUkJHO0htYWNEUkJHLnByb3RvdHlwZS5faW5pdD1mdW5jdGlvbiBpbml0KGUsdCxyKXt2YXIgaT1lLmNvbmNhdCh0KS5jb25jYXQocik7dGhpcy5LPW5ldyBBcnJheSh0aGlzLm91dExlbi84KTt0aGlzLlY9bmV3IEFycmF5KHRoaXMub3V0TGVuLzgpO2Zvcih2YXIgbj0wO248dGhpcy5WLmxlbmd0aDtuKyspe3RoaXMuS1tuXT0wO3RoaXMuVltuXT0xfXRoaXMuX3VwZGF0ZShpKTt0aGlzLl9yZXNlZWQ9MTt0aGlzLnJlc2VlZEludGVydmFsPTI4MTQ3NDk3NjcxMDY1Nn07SG1hY0RSQkcucHJvdG90eXBlLl9obWFjPWZ1bmN0aW9uIGhtYWMoKXtyZXR1cm4gbmV3IGkuaG1hYyh0aGlzLmhhc2gsdGhpcy5LKX07SG1hY0RSQkcucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24gdXBkYXRlKGUpe3ZhciB0PXRoaXMuX2htYWMoKS51cGRhdGUodGhpcy5WKS51cGRhdGUoWzBdKTtpZihlKXQ9dC51cGRhdGUoZSk7dGhpcy5LPXQuZGlnZXN0KCk7dGhpcy5WPXRoaXMuX2htYWMoKS51cGRhdGUodGhpcy5WKS5kaWdlc3QoKTtpZighZSlyZXR1cm47dGhpcy5LPXRoaXMuX2htYWMoKS51cGRhdGUodGhpcy5WKS51cGRhdGUoWzFdKS51cGRhdGUoZSkuZGlnZXN0KCk7dGhpcy5WPXRoaXMuX2htYWMoKS51cGRhdGUodGhpcy5WKS5kaWdlc3QoKX07SG1hY0RSQkcucHJvdG90eXBlLnJlc2VlZD1mdW5jdGlvbiByZXNlZWQoZSx0LHIsaSl7aWYodHlwZW9mIHQhPT1cInN0cmluZ1wiKXtpPXI7cj10O3Q9bnVsbH1lPW4udG9BcnJheShlLHQpO3I9bi50b0FycmF5KHIsaSk7YShlLmxlbmd0aD49dGhpcy5taW5FbnRyb3B5LzgsXCJOb3QgZW5vdWdoIGVudHJvcHkuIE1pbmltdW0gaXM6IFwiK3RoaXMubWluRW50cm9weStcIiBiaXRzXCIpO3RoaXMuX3VwZGF0ZShlLmNvbmNhdChyfHxbXSkpO3RoaXMuX3Jlc2VlZD0xfTtIbWFjRFJCRy5wcm90b3R5cGUuZ2VuZXJhdGU9ZnVuY3Rpb24gZ2VuZXJhdGUoZSx0LHIsaSl7aWYodGhpcy5fcmVzZWVkPnRoaXMucmVzZWVkSW50ZXJ2YWwpdGhyb3cgbmV3IEVycm9yKFwiUmVzZWVkIGlzIHJlcXVpcmVkXCIpO2lmKHR5cGVvZiB0IT09XCJzdHJpbmdcIil7aT1yO3I9dDt0PW51bGx9aWYocil7cj1uLnRvQXJyYXkocixpfHxcImhleFwiKTt0aGlzLl91cGRhdGUocil9dmFyIGE9W107d2hpbGUoYS5sZW5ndGg8ZSl7dGhpcy5WPXRoaXMuX2htYWMoKS51cGRhdGUodGhpcy5WKS5kaWdlc3QoKTthPWEuY29uY2F0KHRoaXMuVil9dmFyIHM9YS5zbGljZSgwLGUpO3RoaXMuX3VwZGF0ZShyKTt0aGlzLl9yZXNlZWQrKztyZXR1cm4gbi5lbmNvZGUocyx0KX19LDM3ODI6ZnVuY3Rpb24oZSl7aWYodHlwZW9mIE9iamVjdC5jcmVhdGU9PT1cImZ1bmN0aW9uXCIpe2UuZXhwb3J0cz1mdW5jdGlvbiBpbmhlcml0cyhlLHQpe2lmKHQpe2Uuc3VwZXJfPXQ7ZS5wcm90b3R5cGU9T2JqZWN0LmNyZWF0ZSh0LnByb3RvdHlwZSx7Y29uc3RydWN0b3I6e3ZhbHVlOmUsZW51bWVyYWJsZTpmYWxzZSx3cml0YWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlfX0pfX19ZWxzZXtlLmV4cG9ydHM9ZnVuY3Rpb24gaW5oZXJpdHMoZSx0KXtpZih0KXtlLnN1cGVyXz10O3ZhciBUZW1wQ3Rvcj1mdW5jdGlvbigpe307VGVtcEN0b3IucHJvdG90eXBlPXQucHJvdG90eXBlO2UucHJvdG90eXBlPW5ldyBUZW1wQ3RvcjtlLnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj1lfX19fSwzNTMzOmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDM3ODIpO3ZhciBuPXIoOTAyOSk7dmFyIGE9cig2OTExKS5CdWZmZXI7dmFyIHM9bmV3IEFycmF5KDE2KTtmdW5jdGlvbiBNRDUoKXtuLmNhbGwodGhpcyw2NCk7dGhpcy5fYT0xNzMyNTg0MTkzO3RoaXMuX2I9NDAyMzIzMzQxNzt0aGlzLl9jPTI1NjIzODMxMDI7dGhpcy5fZD0yNzE3MzM4Nzh9aShNRDUsbik7TUQ1LnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKCl7dmFyIGU9cztmb3IodmFyIHQ9MDt0PDE2OysrdCllW3RdPXRoaXMuX2Jsb2NrLnJlYWRJbnQzMkxFKHQqNCk7dmFyIHI9dGhpcy5fYTt2YXIgaT10aGlzLl9iO3ZhciBuPXRoaXMuX2M7dmFyIGE9dGhpcy5fZDtyPWZuRihyLGksbixhLGVbMF0sMzYxNDA5MDM2MCw3KTthPWZuRihhLHIsaSxuLGVbMV0sMzkwNTQwMjcxMCwxMik7bj1mbkYobixhLHIsaSxlWzJdLDYwNjEwNTgxOSwxNyk7aT1mbkYoaSxuLGEscixlWzNdLDMyNTA0NDE5NjYsMjIpO3I9Zm5GKHIsaSxuLGEsZVs0XSw0MTE4NTQ4Mzk5LDcpO2E9Zm5GKGEscixpLG4sZVs1XSwxMjAwMDgwNDI2LDEyKTtuPWZuRihuLGEscixpLGVbNl0sMjgyMTczNTk1NSwxNyk7aT1mbkYoaSxuLGEscixlWzddLDQyNDkyNjEzMTMsMjIpO3I9Zm5GKHIsaSxuLGEsZVs4XSwxNzcwMDM1NDE2LDcpO2E9Zm5GKGEscixpLG4sZVs5XSwyMzM2NTUyODc5LDEyKTtuPWZuRihuLGEscixpLGVbMTBdLDQyOTQ5MjUyMzMsMTcpO2k9Zm5GKGksbixhLHIsZVsxMV0sMjMwNDU2MzEzNCwyMik7cj1mbkYocixpLG4sYSxlWzEyXSwxODA0NjAzNjgyLDcpO2E9Zm5GKGEscixpLG4sZVsxM10sNDI1NDYyNjE5NSwxMik7bj1mbkYobixhLHIsaSxlWzE0XSwyNzkyOTY1MDA2LDE3KTtpPWZuRihpLG4sYSxyLGVbMTVdLDEyMzY1MzUzMjksMjIpO3I9Zm5HKHIsaSxuLGEsZVsxXSw0MTI5MTcwNzg2LDUpO2E9Zm5HKGEscixpLG4sZVs2XSwzMjI1NDY1NjY0LDkpO249Zm5HKG4sYSxyLGksZVsxMV0sNjQzNzE3NzEzLDE0KTtpPWZuRyhpLG4sYSxyLGVbMF0sMzkyMTA2OTk5NCwyMCk7cj1mbkcocixpLG4sYSxlWzVdLDM1OTM0MDg2MDUsNSk7YT1mbkcoYSxyLGksbixlWzEwXSwzODAxNjA4Myw5KTtuPWZuRyhuLGEscixpLGVbMTVdLDM2MzQ0ODg5NjEsMTQpO2k9Zm5HKGksbixhLHIsZVs0XSwzODg5NDI5NDQ4LDIwKTtyPWZuRyhyLGksbixhLGVbOV0sNTY4NDQ2NDM4LDUpO2E9Zm5HKGEscixpLG4sZVsxNF0sMzI3NTE2MzYwNiw5KTtuPWZuRyhuLGEscixpLGVbM10sNDEwNzYwMzMzNSwxNCk7aT1mbkcoaSxuLGEscixlWzhdLDExNjM1MzE1MDEsMjApO3I9Zm5HKHIsaSxuLGEsZVsxM10sMjg1MDI4NTgyOSw1KTthPWZuRyhhLHIsaSxuLGVbMl0sNDI0MzU2MzUxMiw5KTtuPWZuRyhuLGEscixpLGVbN10sMTczNTMyODQ3MywxNCk7aT1mbkcoaSxuLGEscixlWzEyXSwyMzY4MzU5NTYyLDIwKTtyPWZuSChyLGksbixhLGVbNV0sNDI5NDU4ODczOCw0KTthPWZuSChhLHIsaSxuLGVbOF0sMjI3MjM5MjgzMywxMSk7bj1mbkgobixhLHIsaSxlWzExXSwxODM5MDMwNTYyLDE2KTtpPWZuSChpLG4sYSxyLGVbMTRdLDQyNTk2NTc3NDAsMjMpO3I9Zm5IKHIsaSxuLGEsZVsxXSwyNzYzOTc1MjM2LDQpO2E9Zm5IKGEscixpLG4sZVs0XSwxMjcyODkzMzUzLDExKTtuPWZuSChuLGEscixpLGVbN10sNDEzOTQ2OTY2NCwxNik7aT1mbkgoaSxuLGEscixlWzEwXSwzMjAwMjM2NjU2LDIzKTtyPWZuSChyLGksbixhLGVbMTNdLDY4MTI3OTE3NCw0KTthPWZuSChhLHIsaSxuLGVbMF0sMzkzNjQzMDA3NCwxMSk7bj1mbkgobixhLHIsaSxlWzNdLDM1NzI0NDUzMTcsMTYpO2k9Zm5IKGksbixhLHIsZVs2XSw3NjAyOTE4OSwyMyk7cj1mbkgocixpLG4sYSxlWzldLDM2NTQ2MDI4MDksNCk7YT1mbkgoYSxyLGksbixlWzEyXSwzODczMTUxNDYxLDExKTtuPWZuSChuLGEscixpLGVbMTVdLDUzMDc0MjUyMCwxNik7aT1mbkgoaSxuLGEscixlWzJdLDMyOTk2Mjg2NDUsMjMpO3I9Zm5JKHIsaSxuLGEsZVswXSw0MDk2MzM2NDUyLDYpO2E9Zm5JKGEscixpLG4sZVs3XSwxMTI2ODkxNDE1LDEwKTtuPWZuSShuLGEscixpLGVbMTRdLDI4Nzg2MTIzOTEsMTUpO2k9Zm5JKGksbixhLHIsZVs1XSw0MjM3NTMzMjQxLDIxKTtyPWZuSShyLGksbixhLGVbMTJdLDE3MDA0ODU1NzEsNik7YT1mbkkoYSxyLGksbixlWzNdLDIzOTk5ODA2OTAsMTApO249Zm5JKG4sYSxyLGksZVsxMF0sNDI5MzkxNTc3MywxNSk7aT1mbkkoaSxuLGEscixlWzFdLDIyNDAwNDQ0OTcsMjEpO3I9Zm5JKHIsaSxuLGEsZVs4XSwxODczMzEzMzU5LDYpO2E9Zm5JKGEscixpLG4sZVsxNV0sNDI2NDM1NTU1MiwxMCk7bj1mbkkobixhLHIsaSxlWzZdLDI3MzQ3Njg5MTYsMTUpO2k9Zm5JKGksbixhLHIsZVsxM10sMTMwOTE1MTY0OSwyMSk7cj1mbkkocixpLG4sYSxlWzRdLDQxNDk0NDQyMjYsNik7YT1mbkkoYSxyLGksbixlWzExXSwzMTc0NzU2OTE3LDEwKTtuPWZuSShuLGEscixpLGVbMl0sNzE4Nzg3MjU5LDE1KTtpPWZuSShpLG4sYSxyLGVbOV0sMzk1MTQ4MTc0NSwyMSk7dGhpcy5fYT10aGlzLl9hK3J8MDt0aGlzLl9iPXRoaXMuX2IraXwwO3RoaXMuX2M9dGhpcy5fYytufDA7dGhpcy5fZD10aGlzLl9kK2F8MH07TUQ1LnByb3RvdHlwZS5fZGlnZXN0PWZ1bmN0aW9uKCl7dGhpcy5fYmxvY2tbdGhpcy5fYmxvY2tPZmZzZXQrK109MTI4O2lmKHRoaXMuX2Jsb2NrT2Zmc2V0PjU2KXt0aGlzLl9ibG9jay5maWxsKDAsdGhpcy5fYmxvY2tPZmZzZXQsNjQpO3RoaXMuX3VwZGF0ZSgpO3RoaXMuX2Jsb2NrT2Zmc2V0PTB9dGhpcy5fYmxvY2suZmlsbCgwLHRoaXMuX2Jsb2NrT2Zmc2V0LDU2KTt0aGlzLl9ibG9jay53cml0ZVVJbnQzMkxFKHRoaXMuX2xlbmd0aFswXSw1Nik7dGhpcy5fYmxvY2sud3JpdGVVSW50MzJMRSh0aGlzLl9sZW5ndGhbMV0sNjApO3RoaXMuX3VwZGF0ZSgpO3ZhciBlPWEuYWxsb2NVbnNhZmUoMTYpO2Uud3JpdGVJbnQzMkxFKHRoaXMuX2EsMCk7ZS53cml0ZUludDMyTEUodGhpcy5fYiw0KTtlLndyaXRlSW50MzJMRSh0aGlzLl9jLDgpO2Uud3JpdGVJbnQzMkxFKHRoaXMuX2QsMTIpO3JldHVybiBlfTtmdW5jdGlvbiByb3RsKGUsdCl7cmV0dXJuIGU8PHR8ZT4+PjMyLXR9ZnVuY3Rpb24gZm5GKGUsdCxyLGksbixhLHMpe3JldHVybiByb3RsKGUrKHQmcnx+dCZpKStuK2F8MCxzKSt0fDB9ZnVuY3Rpb24gZm5HKGUsdCxyLGksbixhLHMpe3JldHVybiByb3RsKGUrKHQmaXxyJn5pKStuK2F8MCxzKSt0fDB9ZnVuY3Rpb24gZm5IKGUsdCxyLGksbixhLHMpe3JldHVybiByb3RsKGUrKHRecl5pKStuK2F8MCxzKSt0fDB9ZnVuY3Rpb24gZm5JKGUsdCxyLGksbixhLHMpe3JldHVybiByb3RsKGUrKHJeKHR8fmkpKStuK2F8MCxzKSt0fDB9ZS5leHBvcnRzPU1ENX0sMTM1NDpmdW5jdGlvbihlLHQscil7dmFyIGk9cig3MTEpO3ZhciBuPXIoMzUwMCk7ZnVuY3Rpb24gTWlsbGVyUmFiaW4oZSl7dGhpcy5yYW5kPWV8fG5ldyBuLlJhbmR9ZS5leHBvcnRzPU1pbGxlclJhYmluO01pbGxlclJhYmluLmNyZWF0ZT1mdW5jdGlvbiBjcmVhdGUoZSl7cmV0dXJuIG5ldyBNaWxsZXJSYWJpbihlKX07TWlsbGVyUmFiaW4ucHJvdG90eXBlLl9yYW5kYmVsb3c9ZnVuY3Rpb24gX3JhbmRiZWxvdyhlKXt2YXIgdD1lLmJpdExlbmd0aCgpO3ZhciByPU1hdGguY2VpbCh0LzgpO2Rve3ZhciBuPW5ldyBpKHRoaXMucmFuZC5nZW5lcmF0ZShyKSl9d2hpbGUobi5jbXAoZSk+PTApO3JldHVybiBufTtNaWxsZXJSYWJpbi5wcm90b3R5cGUuX3JhbmRyYW5nZT1mdW5jdGlvbiBfcmFuZHJhbmdlKGUsdCl7dmFyIHI9dC5zdWIoZSk7cmV0dXJuIGUuYWRkKHRoaXMuX3JhbmRiZWxvdyhyKSl9O01pbGxlclJhYmluLnByb3RvdHlwZS50ZXN0PWZ1bmN0aW9uIHRlc3QoZSx0LHIpe3ZhciBuPWUuYml0TGVuZ3RoKCk7dmFyIGE9aS5tb250KGUpO3ZhciBzPW5ldyBpKDEpLnRvUmVkKGEpO2lmKCF0KXQ9TWF0aC5tYXgoMSxuLzQ4fDApO3ZhciBvPWUuc3VibigxKTtmb3IodmFyIGg9MDshby50ZXN0bihoKTtoKyspe312YXIgdT1lLnNocm4oaCk7dmFyIGQ9by50b1JlZChhKTt2YXIgYz10cnVlO2Zvcig7dD4wO3QtLSl7dmFyIGw9dGhpcy5fcmFuZHJhbmdlKG5ldyBpKDIpLG8pO2lmKHIpcihsKTt2YXIgcD1sLnRvUmVkKGEpLnJlZFBvdyh1KTtpZihwLmNtcChzKT09PTB8fHAuY21wKGQpPT09MCljb250aW51ZTtmb3IodmFyIHY9MTt2PGg7disrKXtwPXAucmVkU3FyKCk7aWYocC5jbXAocyk9PT0wKXJldHVybiBmYWxzZTtpZihwLmNtcChkKT09PTApYnJlYWt9aWYodj09PWgpcmV0dXJuIGZhbHNlfXJldHVybiBjfTtNaWxsZXJSYWJpbi5wcm90b3R5cGUuZ2V0RGl2aXNvcj1mdW5jdGlvbiBnZXREaXZpc29yKGUsdCl7dmFyIHI9ZS5iaXRMZW5ndGgoKTt2YXIgbj1pLm1vbnQoZSk7dmFyIGE9bmV3IGkoMSkudG9SZWQobik7aWYoIXQpdD1NYXRoLm1heCgxLHIvNDh8MCk7dmFyIHM9ZS5zdWJuKDEpO2Zvcih2YXIgbz0wOyFzLnRlc3RuKG8pO28rKyl7fXZhciBoPWUuc2hybihvKTt2YXIgdT1zLnRvUmVkKG4pO2Zvcig7dD4wO3QtLSl7dmFyIGQ9dGhpcy5fcmFuZHJhbmdlKG5ldyBpKDIpLHMpO3ZhciBjPWUuZ2NkKGQpO2lmKGMuY21wbigxKSE9PTApcmV0dXJuIGM7dmFyIGw9ZC50b1JlZChuKS5yZWRQb3coaCk7aWYobC5jbXAoYSk9PT0wfHxsLmNtcCh1KT09PTApY29udGludWU7Zm9yKHZhciBwPTE7cDxvO3ArKyl7bD1sLnJlZFNxcigpO2lmKGwuY21wKGEpPT09MClyZXR1cm4gbC5mcm9tUmVkKCkuc3VibigxKS5nY2QoZSk7aWYobC5jbXAodSk9PT0wKWJyZWFrfWlmKHA9PT1vKXtsPWwucmVkU3FyKCk7cmV0dXJuIGwuZnJvbVJlZCgpLnN1Ym4oMSkuZ2NkKGUpfX1yZXR1cm4gZmFsc2V9fSwzNTIzOmZ1bmN0aW9uKGUpe2UuZXhwb3J0cz1hc3NlcnQ7ZnVuY3Rpb24gYXNzZXJ0KGUsdCl7aWYoIWUpdGhyb3cgbmV3IEVycm9yKHR8fFwiQXNzZXJ0aW9uIGZhaWxlZFwiKX1hc3NlcnQuZXF1YWw9ZnVuY3Rpb24gYXNzZXJ0RXF1YWwoZSx0LHIpe2lmKGUhPXQpdGhyb3cgbmV3IEVycm9yKHJ8fFwiQXNzZXJ0aW9uIGZhaWxlZDogXCIrZStcIiAhPSBcIit0KX19LDY1NDU6ZnVuY3Rpb24oZSx0KXtcInVzZSBzdHJpY3RcIjt2YXIgcj10O2Z1bmN0aW9uIHRvQXJyYXkoZSx0KXtpZihBcnJheS5pc0FycmF5KGUpKXJldHVybiBlLnNsaWNlKCk7aWYoIWUpcmV0dXJuW107dmFyIHI9W107aWYodHlwZW9mIGUhPT1cInN0cmluZ1wiKXtmb3IodmFyIGk9MDtpPGUubGVuZ3RoO2krKylyW2ldPWVbaV18MDtyZXR1cm4gcn1pZih0PT09XCJoZXhcIil7ZT1lLnJlcGxhY2UoL1teYS16MC05XSsvZ2ksXCJcIik7aWYoZS5sZW5ndGglMiE9PTApZT1cIjBcIitlO2Zvcih2YXIgaT0wO2k8ZS5sZW5ndGg7aSs9MilyLnB1c2gocGFyc2VJbnQoZVtpXStlW2krMV0sMTYpKX1lbHNle2Zvcih2YXIgaT0wO2k8ZS5sZW5ndGg7aSsrKXt2YXIgbj1lLmNoYXJDb2RlQXQoaSk7dmFyIGE9bj4+ODt2YXIgcz1uJjI1NTtpZihhKXIucHVzaChhLHMpO2Vsc2Ugci5wdXNoKHMpfX1yZXR1cm4gcn1yLnRvQXJyYXk9dG9BcnJheTtmdW5jdGlvbiB6ZXJvMihlKXtpZihlLmxlbmd0aD09PTEpcmV0dXJuXCIwXCIrZTtlbHNlIHJldHVybiBlfXIuemVybzI9emVybzI7ZnVuY3Rpb24gdG9IZXgoZSl7dmFyIHQ9XCJcIjtmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKyl0Kz16ZXJvMihlW3JdLnRvU3RyaW5nKDE2KSk7cmV0dXJuIHR9ci50b0hleD10b0hleDtyLmVuY29kZT1mdW5jdGlvbiBlbmNvZGUoZSx0KXtpZih0PT09XCJoZXhcIilyZXR1cm4gdG9IZXgoZSk7ZWxzZSByZXR1cm4gZX19LDg2ODc6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoNzE2MCk7dC5jZXJ0aWZpY2F0ZT1yKDg3ODIpO3ZhciBuPWkuZGVmaW5lKFwiUlNBUHJpdmF0ZUtleVwiLChmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwidmVyc2lvblwiKS5pbnQoKSx0aGlzLmtleShcIm1vZHVsdXNcIikuaW50KCksdGhpcy5rZXkoXCJwdWJsaWNFeHBvbmVudFwiKS5pbnQoKSx0aGlzLmtleShcInByaXZhdGVFeHBvbmVudFwiKS5pbnQoKSx0aGlzLmtleShcInByaW1lMVwiKS5pbnQoKSx0aGlzLmtleShcInByaW1lMlwiKS5pbnQoKSx0aGlzLmtleShcImV4cG9uZW50MVwiKS5pbnQoKSx0aGlzLmtleShcImV4cG9uZW50MlwiKS5pbnQoKSx0aGlzLmtleShcImNvZWZmaWNpZW50XCIpLmludCgpKX0pKTt0LlJTQVByaXZhdGVLZXk9bjt2YXIgYT1pLmRlZmluZShcIlJTQVB1YmxpY0tleVwiLChmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwibW9kdWx1c1wiKS5pbnQoKSx0aGlzLmtleShcInB1YmxpY0V4cG9uZW50XCIpLmludCgpKX0pKTt0LlJTQVB1YmxpY0tleT1hO3ZhciBzPWkuZGVmaW5lKFwiU3ViamVjdFB1YmxpY0tleUluZm9cIiwoZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcImFsZ29yaXRobVwiKS51c2UobyksdGhpcy5rZXkoXCJzdWJqZWN0UHVibGljS2V5XCIpLmJpdHN0cigpKX0pKTt0LlB1YmxpY0tleT1zO3ZhciBvPWkuZGVmaW5lKFwiQWxnb3JpdGhtSWRlbnRpZmllclwiLChmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwiYWxnb3JpdGhtXCIpLm9iamlkKCksdGhpcy5rZXkoXCJub25lXCIpLm51bGxfKCkub3B0aW9uYWwoKSx0aGlzLmtleShcImN1cnZlXCIpLm9iamlkKCkub3B0aW9uYWwoKSx0aGlzLmtleShcInBhcmFtc1wiKS5zZXEoKS5vYmoodGhpcy5rZXkoXCJwXCIpLmludCgpLHRoaXMua2V5KFwicVwiKS5pbnQoKSx0aGlzLmtleShcImdcIikuaW50KCkpLm9wdGlvbmFsKCkpfSkpO3ZhciBoPWkuZGVmaW5lKFwiUHJpdmF0ZUtleUluZm9cIiwoZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcInZlcnNpb25cIikuaW50KCksdGhpcy5rZXkoXCJhbGdvcml0aG1cIikudXNlKG8pLHRoaXMua2V5KFwic3ViamVjdFByaXZhdGVLZXlcIikub2N0c3RyKCkpfSkpO3QuUHJpdmF0ZUtleT1oO3ZhciB1PWkuZGVmaW5lKFwiRW5jcnlwdGVkUHJpdmF0ZUtleUluZm9cIiwoZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcImFsZ29yaXRobVwiKS5zZXEoKS5vYmoodGhpcy5rZXkoXCJpZFwiKS5vYmppZCgpLHRoaXMua2V5KFwiZGVjcnlwdFwiKS5zZXEoKS5vYmoodGhpcy5rZXkoXCJrZGVcIikuc2VxKCkub2JqKHRoaXMua2V5KFwiaWRcIikub2JqaWQoKSx0aGlzLmtleShcImtkZXBhcmFtc1wiKS5zZXEoKS5vYmoodGhpcy5rZXkoXCJzYWx0XCIpLm9jdHN0cigpLHRoaXMua2V5KFwiaXRlcnNcIikuaW50KCkpKSx0aGlzLmtleShcImNpcGhlclwiKS5zZXEoKS5vYmoodGhpcy5rZXkoXCJhbGdvXCIpLm9iamlkKCksdGhpcy5rZXkoXCJpdlwiKS5vY3RzdHIoKSkpKSx0aGlzLmtleShcInN1YmplY3RQcml2YXRlS2V5XCIpLm9jdHN0cigpKX0pKTt0LkVuY3J5cHRlZFByaXZhdGVLZXk9dTt2YXIgZD1pLmRlZmluZShcIkRTQVByaXZhdGVLZXlcIiwoZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcInZlcnNpb25cIikuaW50KCksdGhpcy5rZXkoXCJwXCIpLmludCgpLHRoaXMua2V5KFwicVwiKS5pbnQoKSx0aGlzLmtleShcImdcIikuaW50KCksdGhpcy5rZXkoXCJwdWJfa2V5XCIpLmludCgpLHRoaXMua2V5KFwicHJpdl9rZXlcIikuaW50KCkpfSkpO3QuRFNBUHJpdmF0ZUtleT1kO3QuRFNBcGFyYW09aS5kZWZpbmUoXCJEU0FwYXJhbVwiLChmdW5jdGlvbigpe3RoaXMuaW50KCl9KSk7dmFyIGM9aS5kZWZpbmUoXCJFQ1ByaXZhdGVLZXlcIiwoZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcInZlcnNpb25cIikuaW50KCksdGhpcy5rZXkoXCJwcml2YXRlS2V5XCIpLm9jdHN0cigpLHRoaXMua2V5KFwicGFyYW1ldGVyc1wiKS5vcHRpb25hbCgpLmV4cGxpY2l0KDApLnVzZShsKSx0aGlzLmtleShcInB1YmxpY0tleVwiKS5vcHRpb25hbCgpLmV4cGxpY2l0KDEpLmJpdHN0cigpKX0pKTt0LkVDUHJpdmF0ZUtleT1jO3ZhciBsPWkuZGVmaW5lKFwiRUNQYXJhbWV0ZXJzXCIsKGZ1bmN0aW9uKCl7dGhpcy5jaG9pY2Uoe25hbWVkQ3VydmU6dGhpcy5vYmppZCgpfSl9KSk7dC5zaWduYXR1cmU9aS5kZWZpbmUoXCJzaWduYXR1cmVcIiwoZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcInJcIikuaW50KCksdGhpcy5rZXkoXCJzXCIpLmludCgpKX0pKX0sODc4MjpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9cig3MTYwKTt2YXIgbj1pLmRlZmluZShcIlRpbWVcIiwoZnVuY3Rpb24oKXt0aGlzLmNob2ljZSh7dXRjVGltZTp0aGlzLnV0Y3RpbWUoKSxnZW5lcmFsVGltZTp0aGlzLmdlbnRpbWUoKX0pfSkpO3ZhciBhPWkuZGVmaW5lKFwiQXR0cmlidXRlVHlwZVZhbHVlXCIsKGZ1bmN0aW9uKCl7dGhpcy5zZXEoKS5vYmoodGhpcy5rZXkoXCJ0eXBlXCIpLm9iamlkKCksdGhpcy5rZXkoXCJ2YWx1ZVwiKS5hbnkoKSl9KSk7dmFyIHM9aS5kZWZpbmUoXCJBbGdvcml0aG1JZGVudGlmaWVyXCIsKGZ1bmN0aW9uKCl7dGhpcy5zZXEoKS5vYmoodGhpcy5rZXkoXCJhbGdvcml0aG1cIikub2JqaWQoKSx0aGlzLmtleShcInBhcmFtZXRlcnNcIikub3B0aW9uYWwoKSx0aGlzLmtleShcImN1cnZlXCIpLm9iamlkKCkub3B0aW9uYWwoKSl9KSk7dmFyIG89aS5kZWZpbmUoXCJTdWJqZWN0UHVibGljS2V5SW5mb1wiLChmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwiYWxnb3JpdGhtXCIpLnVzZShzKSx0aGlzLmtleShcInN1YmplY3RQdWJsaWNLZXlcIikuYml0c3RyKCkpfSkpO3ZhciBoPWkuZGVmaW5lKFwiUmVsYXRpdmVEaXN0aW5ndWlzaGVkTmFtZVwiLChmdW5jdGlvbigpe3RoaXMuc2V0b2YoYSl9KSk7dmFyIHU9aS5kZWZpbmUoXCJSRE5TZXF1ZW5jZVwiLChmdW5jdGlvbigpe3RoaXMuc2Vxb2YoaCl9KSk7dmFyIGQ9aS5kZWZpbmUoXCJOYW1lXCIsKGZ1bmN0aW9uKCl7dGhpcy5jaG9pY2Uoe3JkblNlcXVlbmNlOnRoaXMudXNlKHUpfSl9KSk7dmFyIGM9aS5kZWZpbmUoXCJWYWxpZGl0eVwiLChmdW5jdGlvbigpe3RoaXMuc2VxKCkub2JqKHRoaXMua2V5KFwibm90QmVmb3JlXCIpLnVzZShuKSx0aGlzLmtleShcIm5vdEFmdGVyXCIpLnVzZShuKSl9KSk7dmFyIGw9aS5kZWZpbmUoXCJFeHRlbnNpb25cIiwoZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcImV4dG5JRFwiKS5vYmppZCgpLHRoaXMua2V5KFwiY3JpdGljYWxcIikuYm9vbCgpLmRlZihmYWxzZSksdGhpcy5rZXkoXCJleHRuVmFsdWVcIikub2N0c3RyKCkpfSkpO3ZhciBwPWkuZGVmaW5lKFwiVEJTQ2VydGlmaWNhdGVcIiwoZnVuY3Rpb24oKXt0aGlzLnNlcSgpLm9iaih0aGlzLmtleShcInZlcnNpb25cIikuZXhwbGljaXQoMCkuaW50KCkub3B0aW9uYWwoKSx0aGlzLmtleShcInNlcmlhbE51bWJlclwiKS5pbnQoKSx0aGlzLmtleShcInNpZ25hdHVyZVwiKS51c2UocyksdGhpcy5rZXkoXCJpc3N1ZXJcIikudXNlKGQpLHRoaXMua2V5KFwidmFsaWRpdHlcIikudXNlKGMpLHRoaXMua2V5KFwic3ViamVjdFwiKS51c2UoZCksdGhpcy5rZXkoXCJzdWJqZWN0UHVibGljS2V5SW5mb1wiKS51c2UobyksdGhpcy5rZXkoXCJpc3N1ZXJVbmlxdWVJRFwiKS5pbXBsaWNpdCgxKS5iaXRzdHIoKS5vcHRpb25hbCgpLHRoaXMua2V5KFwic3ViamVjdFVuaXF1ZUlEXCIpLmltcGxpY2l0KDIpLmJpdHN0cigpLm9wdGlvbmFsKCksdGhpcy5rZXkoXCJleHRlbnNpb25zXCIpLmV4cGxpY2l0KDMpLnNlcW9mKGwpLm9wdGlvbmFsKCkpfSkpO3ZhciB2PWkuZGVmaW5lKFwiWDUwOUNlcnRpZmljYXRlXCIsKGZ1bmN0aW9uKCl7dGhpcy5zZXEoKS5vYmoodGhpcy5rZXkoXCJ0YnNDZXJ0aWZpY2F0ZVwiKS51c2UocCksdGhpcy5rZXkoXCJzaWduYXR1cmVBbGdvcml0aG1cIikudXNlKHMpLHRoaXMua2V5KFwic2lnbmF0dXJlVmFsdWVcIikuYml0c3RyKCkpfSkpO2UuZXhwb3J0cz12fSw2NTAxOmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT0vUHJvYy1UeXBlOiA0LEVOQ1JZUFRFRFtcXG5cXHJdK0RFSy1JbmZvOiBBRVMtKCg/OjEyOCl8KD86MTkyKXwoPzoyNTYpKS1DQkMsKFswLTlBLUhdKylbXFxuXFxyXSsoWzAtOUEtelxcblxcclxcK1xcL1xcPV0rKVtcXG5cXHJdKy9tO3ZhciBuPS9eLS0tLS1CRUdJTiAoKD86Lio/IEtFWSl8Q0VSVElGSUNBVEUpLS0tLS0vbTt2YXIgYT0vXi0tLS0tQkVHSU4gKCg/Oi4qPyBLRVkpfENFUlRJRklDQVRFKS0tLS0tKFswLTlBLXpcXG5cXHJcXCtcXC9cXD1dKyktLS0tLUVORCBcXDEtLS0tLSQvbTt2YXIgcz1yKDgzNjgpO3ZhciBvPXIoNjU5NCk7dmFyIGg9cig2OTExKS5CdWZmZXI7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9ZS50b1N0cmluZygpO3ZhciB1PXIubWF0Y2goaSk7dmFyIGQ7aWYoIXUpe3ZhciBjPXIubWF0Y2goYSk7ZD1uZXcgaChjWzJdLnJlcGxhY2UoL1tcXHJcXG5dL2csXCJcIiksXCJiYXNlNjRcIil9ZWxzZXt2YXIgbD1cImFlc1wiK3VbMV07dmFyIHA9aC5mcm9tKHVbMl0sXCJoZXhcIik7dmFyIHY9aC5mcm9tKHVbM10ucmVwbGFjZSgvW1xcclxcbl0vZyxcIlwiKSxcImJhc2U2NFwiKTt2YXIgYj1zKHQscC5zbGljZSgwLDgpLHBhcnNlSW50KHVbMV0sMTApKS5rZXk7dmFyIG09W107dmFyIHk9by5jcmVhdGVEZWNpcGhlcml2KGwsYixwKTttLnB1c2goeS51cGRhdGUodikpO20ucHVzaCh5LmZpbmFsKCkpO2Q9aC5jb25jYXQobSl9dmFyIGc9ci5tYXRjaChuKVsxXTtyZXR1cm57dGFnOmcsZGF0YTpkfX19LDk5MDI6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoODY4Nyk7dmFyIG49cigyNTEwKTt2YXIgYT1yKDY1MDEpO3ZhciBzPXIoNjU5NCk7dmFyIG89cig0OTc4KTt2YXIgaD1yKDY5MTEpLkJ1ZmZlcjtlLmV4cG9ydHM9cGFyc2VLZXlzO2Z1bmN0aW9uIHBhcnNlS2V5cyhlKXt2YXIgdDtpZih0eXBlb2YgZT09PVwib2JqZWN0XCImJiFoLmlzQnVmZmVyKGUpKXt0PWUucGFzc3BocmFzZTtlPWUua2V5fWlmKHR5cGVvZiBlPT09XCJzdHJpbmdcIil7ZT1oLmZyb20oZSl9dmFyIHI9YShlLHQpO3ZhciBuPXIudGFnO3ZhciBzPXIuZGF0YTt2YXIgbyx1O3N3aXRjaChuKXtjYXNlXCJDRVJUSUZJQ0FURVwiOnU9aS5jZXJ0aWZpY2F0ZS5kZWNvZGUocyxcImRlclwiKS50YnNDZXJ0aWZpY2F0ZS5zdWJqZWN0UHVibGljS2V5SW5mbztjYXNlXCJQVUJMSUMgS0VZXCI6aWYoIXUpe3U9aS5QdWJsaWNLZXkuZGVjb2RlKHMsXCJkZXJcIil9bz11LmFsZ29yaXRobS5hbGdvcml0aG0uam9pbihcIi5cIik7c3dpdGNoKG8pe2Nhc2VcIjEuMi44NDAuMTEzNTQ5LjEuMS4xXCI6cmV0dXJuIGkuUlNBUHVibGljS2V5LmRlY29kZSh1LnN1YmplY3RQdWJsaWNLZXkuZGF0YSxcImRlclwiKTtjYXNlXCIxLjIuODQwLjEwMDQ1LjIuMVwiOnUuc3ViamVjdFByaXZhdGVLZXk9dS5zdWJqZWN0UHVibGljS2V5O3JldHVybnt0eXBlOlwiZWNcIixkYXRhOnV9O2Nhc2VcIjEuMi44NDAuMTAwNDAuNC4xXCI6dS5hbGdvcml0aG0ucGFyYW1zLnB1Yl9rZXk9aS5EU0FwYXJhbS5kZWNvZGUodS5zdWJqZWN0UHVibGljS2V5LmRhdGEsXCJkZXJcIik7cmV0dXJue3R5cGU6XCJkc2FcIixkYXRhOnUuYWxnb3JpdGhtLnBhcmFtc307ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoXCJ1bmtub3duIGtleSBpZCBcIitvKX10aHJvdyBuZXcgRXJyb3IoXCJ1bmtub3duIGtleSB0eXBlIFwiK24pO2Nhc2VcIkVOQ1JZUFRFRCBQUklWQVRFIEtFWVwiOnM9aS5FbmNyeXB0ZWRQcml2YXRlS2V5LmRlY29kZShzLFwiZGVyXCIpO3M9ZGVjcnlwdChzLHQpO2Nhc2VcIlBSSVZBVEUgS0VZXCI6dT1pLlByaXZhdGVLZXkuZGVjb2RlKHMsXCJkZXJcIik7bz11LmFsZ29yaXRobS5hbGdvcml0aG0uam9pbihcIi5cIik7c3dpdGNoKG8pe2Nhc2VcIjEuMi44NDAuMTEzNTQ5LjEuMS4xXCI6cmV0dXJuIGkuUlNBUHJpdmF0ZUtleS5kZWNvZGUodS5zdWJqZWN0UHJpdmF0ZUtleSxcImRlclwiKTtjYXNlXCIxLjIuODQwLjEwMDQ1LjIuMVwiOnJldHVybntjdXJ2ZTp1LmFsZ29yaXRobS5jdXJ2ZSxwcml2YXRlS2V5OmkuRUNQcml2YXRlS2V5LmRlY29kZSh1LnN1YmplY3RQcml2YXRlS2V5LFwiZGVyXCIpLnByaXZhdGVLZXl9O2Nhc2VcIjEuMi44NDAuMTAwNDAuNC4xXCI6dS5hbGdvcml0aG0ucGFyYW1zLnByaXZfa2V5PWkuRFNBcGFyYW0uZGVjb2RlKHUuc3ViamVjdFByaXZhdGVLZXksXCJkZXJcIik7cmV0dXJue3R5cGU6XCJkc2FcIixwYXJhbXM6dS5hbGdvcml0aG0ucGFyYW1zfTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcInVua25vd24ga2V5IGlkIFwiK28pfXRocm93IG5ldyBFcnJvcihcInVua25vd24ga2V5IHR5cGUgXCIrbik7Y2FzZVwiUlNBIFBVQkxJQyBLRVlcIjpyZXR1cm4gaS5SU0FQdWJsaWNLZXkuZGVjb2RlKHMsXCJkZXJcIik7Y2FzZVwiUlNBIFBSSVZBVEUgS0VZXCI6cmV0dXJuIGkuUlNBUHJpdmF0ZUtleS5kZWNvZGUocyxcImRlclwiKTtjYXNlXCJEU0EgUFJJVkFURSBLRVlcIjpyZXR1cm57dHlwZTpcImRzYVwiLHBhcmFtczppLkRTQVByaXZhdGVLZXkuZGVjb2RlKHMsXCJkZXJcIil9O2Nhc2VcIkVDIFBSSVZBVEUgS0VZXCI6cz1pLkVDUHJpdmF0ZUtleS5kZWNvZGUocyxcImRlclwiKTtyZXR1cm57Y3VydmU6cy5wYXJhbWV0ZXJzLnZhbHVlLHByaXZhdGVLZXk6cy5wcml2YXRlS2V5fTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcInVua25vd24ga2V5IHR5cGUgXCIrbil9fXBhcnNlS2V5cy5zaWduYXR1cmU9aS5zaWduYXR1cmU7ZnVuY3Rpb24gZGVjcnlwdChlLHQpe3ZhciByPWUuYWxnb3JpdGhtLmRlY3J5cHQua2RlLmtkZXBhcmFtcy5zYWx0O3ZhciBpPXBhcnNlSW50KGUuYWxnb3JpdGhtLmRlY3J5cHQua2RlLmtkZXBhcmFtcy5pdGVycy50b1N0cmluZygpLDEwKTt2YXIgYT1uW2UuYWxnb3JpdGhtLmRlY3J5cHQuY2lwaGVyLmFsZ28uam9pbihcIi5cIildO3ZhciB1PWUuYWxnb3JpdGhtLmRlY3J5cHQuY2lwaGVyLml2O3ZhciBkPWUuc3ViamVjdFByaXZhdGVLZXk7dmFyIGM9cGFyc2VJbnQoYS5zcGxpdChcIi1cIilbMV0sMTApLzg7dmFyIGw9by5wYmtkZjJTeW5jKHQscixpLGMsXCJzaGExXCIpO3ZhciBwPXMuY3JlYXRlRGVjaXBoZXJpdihhLGwsdSk7dmFyIHY9W107di5wdXNoKHAudXBkYXRlKGQpKTt2LnB1c2gocC5maW5hbCgpKTtyZXR1cm4gaC5jb25jYXQodil9fSw0OTc4OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDYxMTMpO3ZhciBuPXIoNTM0OSk7dmFyIGE9cig3MDA3KTt2YXIgcz1yKDU0MDcpO2Z1bmN0aW9uIG5hdGl2ZVBCS0RGMihlLHQscixvLGgsdSl7bihyLG8pO2U9cyhlLGEsXCJQYXNzd29yZFwiKTt0PXModCxhLFwiU2FsdFwiKTtpZih0eXBlb2YgaD09PVwiZnVuY3Rpb25cIil7dT1oO2g9XCJzaGExXCJ9aWYodHlwZW9mIHUhPT1cImZ1bmN0aW9uXCIpdGhyb3cgbmV3IEVycm9yKFwiTm8gY2FsbGJhY2sgcHJvdmlkZWQgdG8gcGJrZGYyXCIpO3JldHVybiBpLnBia2RmMihlLHQscixvLGgsdSl9ZnVuY3Rpb24gbmF0aXZlUEJLREYyU3luYyhlLHQscixvLGgpe24ocixvKTtlPXMoZSxhLFwiUGFzc3dvcmRcIik7dD1zKHQsYSxcIlNhbHRcIik7aD1ofHxcInNoYTFcIjtyZXR1cm4gaS5wYmtkZjJTeW5jKGUsdCxyLG8saCl9aWYoIWkucGJrZGYyU3luY3x8aS5wYmtkZjJTeW5jLnRvU3RyaW5nKCkuaW5kZXhPZihcImtleWxlbiwgZGlnZXN0XCIpPT09LTEpe3QucGJrZGYyU3luYz1yKDIxMjcpO3QucGJrZGYyPXIoOTYwMSl9ZWxzZXt0LnBia2RmMlN5bmM9bmF0aXZlUEJLREYyU3luYzt0LnBia2RmMj1uYXRpdmVQQktERjJ9fSw5NjAxOmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDY5MTEpLkJ1ZmZlcjt2YXIgbj1yKDUzNDkpO3ZhciBhPXIoNzAwNyk7dmFyIHM9cigyMTI3KTt2YXIgbz1yKDU0MDcpO3ZhciBoO3ZhciB1PWdsb2JhbC5jcnlwdG8mJmdsb2JhbC5jcnlwdG8uc3VidGxlO3ZhciBkPXtzaGE6XCJTSEEtMVwiLFwic2hhLTFcIjpcIlNIQS0xXCIsc2hhMTpcIlNIQS0xXCIsc2hhMjU2OlwiU0hBLTI1NlwiLFwic2hhLTI1NlwiOlwiU0hBLTI1NlwiLHNoYTM4NDpcIlNIQS0zODRcIixcInNoYS0zODRcIjpcIlNIQS0zODRcIixcInNoYS01MTJcIjpcIlNIQS01MTJcIixzaGE1MTI6XCJTSEEtNTEyXCJ9O3ZhciBjPVtdO2Z1bmN0aW9uIGNoZWNrTmF0aXZlKGUpe2lmKGdsb2JhbC5wcm9jZXNzJiYhZ2xvYmFsLnByb2Nlc3MuYnJvd3Nlcil7cmV0dXJuIFByb21pc2UucmVzb2x2ZShmYWxzZSl9aWYoIXV8fCF1LmltcG9ydEtleXx8IXUuZGVyaXZlQml0cyl7cmV0dXJuIFByb21pc2UucmVzb2x2ZShmYWxzZSl9aWYoY1tlXSE9PXVuZGVmaW5lZCl7cmV0dXJuIGNbZV19aD1ofHxpLmFsbG9jKDgpO3ZhciB0PWJyb3dzZXJQYmtkZjIoaCxoLDEwLDEyOCxlKS50aGVuKChmdW5jdGlvbigpe3JldHVybiB0cnVlfSkpLmNhdGNoKChmdW5jdGlvbigpe3JldHVybiBmYWxzZX0pKTtjW2VdPXQ7cmV0dXJuIHR9ZnVuY3Rpb24gYnJvd3NlclBia2RmMihlLHQscixuLGEpe3JldHVybiB1LmltcG9ydEtleShcInJhd1wiLGUse25hbWU6XCJQQktERjJcIn0sZmFsc2UsW1wiZGVyaXZlQml0c1wiXSkudGhlbigoZnVuY3Rpb24oZSl7cmV0dXJuIHUuZGVyaXZlQml0cyh7bmFtZTpcIlBCS0RGMlwiLHNhbHQ6dCxpdGVyYXRpb25zOnIsaGFzaDp7bmFtZTphfX0sZSxuPDwzKX0pKS50aGVuKChmdW5jdGlvbihlKXtyZXR1cm4gaS5mcm9tKGUpfSkpfWZ1bmN0aW9uIHJlc29sdmVQcm9taXNlKGUsdCl7ZS50aGVuKChmdW5jdGlvbihlKXtwcm9jZXNzLm5leHRUaWNrKChmdW5jdGlvbigpe3QobnVsbCxlKX0pKX0pLChmdW5jdGlvbihlKXtwcm9jZXNzLm5leHRUaWNrKChmdW5jdGlvbigpe3QoZSl9KSl9KSl9ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxyLGksaCx1KXtpZih0eXBlb2YgaD09PVwiZnVuY3Rpb25cIil7dT1oO2g9dW5kZWZpbmVkfWg9aHx8XCJzaGExXCI7dmFyIGM9ZFtoLnRvTG93ZXJDYXNlKCldO2lmKCFjfHx0eXBlb2YgZ2xvYmFsLlByb21pc2UhPT1cImZ1bmN0aW9uXCIpe3JldHVybiBwcm9jZXNzLm5leHRUaWNrKChmdW5jdGlvbigpe3ZhciBuO3RyeXtuPXMoZSx0LHIsaSxoKX1jYXRjaChlKXtyZXR1cm4gdShlKX11KG51bGwsbil9KSl9bihyLGkpO2U9byhlLGEsXCJQYXNzd29yZFwiKTt0PW8odCxhLFwiU2FsdFwiKTtpZih0eXBlb2YgdSE9PVwiZnVuY3Rpb25cIil0aHJvdyBuZXcgRXJyb3IoXCJObyBjYWxsYmFjayBwcm92aWRlZCB0byBwYmtkZjJcIik7cmVzb2x2ZVByb21pc2UoY2hlY2tOYXRpdmUoYykudGhlbigoZnVuY3Rpb24obil7aWYobilyZXR1cm4gYnJvd3NlclBia2RmMihlLHQscixpLGMpO3JldHVybiBzKGUsdCxyLGksaCl9KSksdSl9fSw3MDA3OmZ1bmN0aW9uKGUpe3ZhciB0O2lmKHByb2Nlc3MuYnJvd3Nlcil7dD1cInV0Zi04XCJ9ZWxzZSBpZihwcm9jZXNzLnZlcnNpb24pe3ZhciByPXBhcnNlSW50KHByb2Nlc3MudmVyc2lvbi5zcGxpdChcIi5cIilbMF0uc2xpY2UoMSksMTApO3Q9cj49Nj9cInV0Zi04XCI6XCJiaW5hcnlcIn1lbHNle3Q9XCJ1dGYtOFwifWUuZXhwb3J0cz10fSw1MzQ5OmZ1bmN0aW9uKGUpe3ZhciB0PU1hdGgucG93KDIsMzApLTE7ZS5leHBvcnRzPWZ1bmN0aW9uKGUscil7aWYodHlwZW9mIGUhPT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiSXRlcmF0aW9ucyBub3QgYSBudW1iZXJcIil9aWYoZTwwKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQmFkIGl0ZXJhdGlvbnNcIil9aWYodHlwZW9mIHIhPT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiS2V5IGxlbmd0aCBub3QgYSBudW1iZXJcIil9aWYocjwwfHxyPnR8fHIhPT1yKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQmFkIGtleSBsZW5ndGhcIil9fX0sMjEyNzpmdW5jdGlvbihlLHQscil7dmFyIGk9e21kNToxNixzaGExOjIwLHNoYTIyNDoyOCxzaGEyNTY6MzIsc2hhMzg0OjQ4LHNoYTUxMjo2NCxybWQxNjA6MjAscmlwZW1kMTYwOjIwfTt2YXIgbj1yKDQ4NzMpO3ZhciBhPXIoNjkxMSkuQnVmZmVyO3ZhciBzPXIoNTM0OSk7dmFyIG89cig3MDA3KTt2YXIgaD1yKDU0MDcpO2Z1bmN0aW9uIHBia2RmMihlLHQscix1LGQpe3Mocix1KTtlPWgoZSxvLFwiUGFzc3dvcmRcIik7dD1oKHQsbyxcIlNhbHRcIik7ZD1kfHxcInNoYTFcIjt2YXIgYz1hLmFsbG9jVW5zYWZlKHUpO3ZhciBsPWEuYWxsb2NVbnNhZmUodC5sZW5ndGgrNCk7dC5jb3B5KGwsMCwwLHQubGVuZ3RoKTt2YXIgcD0wO3ZhciB2PWlbZF07dmFyIGI9TWF0aC5jZWlsKHUvdik7Zm9yKHZhciBtPTE7bTw9YjttKyspe2wud3JpdGVVSW50MzJCRShtLHQubGVuZ3RoKTt2YXIgeT1uKGQsZSkudXBkYXRlKGwpLmRpZ2VzdCgpO3ZhciBnPXk7Zm9yKHZhciBfPTE7XzxyO18rKyl7Zz1uKGQsZSkudXBkYXRlKGcpLmRpZ2VzdCgpO2Zvcih2YXIgdz0wO3c8djt3KyspeVt3XV49Z1t3XX15LmNvcHkoYyxwKTtwKz12fXJldHVybiBjfWUuZXhwb3J0cz1wYmtkZjJ9LDU0MDc6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoNjkxMSkuQnVmZmVyO2UuZXhwb3J0cz1mdW5jdGlvbihlLHQscil7aWYoaS5pc0J1ZmZlcihlKSl7cmV0dXJuIGV9ZWxzZSBpZih0eXBlb2YgZT09PVwic3RyaW5nXCIpe3JldHVybiBpLmZyb20oZSx0KX1lbHNlIGlmKEFycmF5QnVmZmVyLmlzVmlldyhlKSl7cmV0dXJuIGkuZnJvbShlLmJ1ZmZlcil9ZWxzZXt0aHJvdyBuZXcgVHlwZUVycm9yKHIrXCIgbXVzdCBiZSBhIHN0cmluZywgYSBCdWZmZXIsIGEgdHlwZWQgYXJyYXkgb3IgYSBEYXRhVmlld1wiKX19fSw5NzgzOmZ1bmN0aW9uKGUsdCxyKXt0LnB1YmxpY0VuY3J5cHQ9cigzOTk1KTt0LnByaXZhdGVEZWNyeXB0PXIoNDM2Nik7dC5wcml2YXRlRW5jcnlwdD1mdW5jdGlvbiBwcml2YXRlRW5jcnlwdChlLHIpe3JldHVybiB0LnB1YmxpY0VuY3J5cHQoZSxyLHRydWUpfTt0LnB1YmxpY0RlY3J5cHQ9ZnVuY3Rpb24gcHVibGljRGVjcnlwdChlLHIpe3JldHVybiB0LnByaXZhdGVEZWNyeXB0KGUscix0cnVlKX19LDU1MjA6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoOTczOSk7dmFyIG49cig2OTExKS5CdWZmZXI7ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCl7dmFyIHI9bi5hbGxvYygwKTt2YXIgYT0wO3ZhciBzO3doaWxlKHIubGVuZ3RoPHQpe3M9aTJvcHMoYSsrKTtyPW4uY29uY2F0KFtyLGkoXCJzaGExXCIpLnVwZGF0ZShlKS51cGRhdGUocykuZGlnZXN0KCldKX1yZXR1cm4gci5zbGljZSgwLHQpfTtmdW5jdGlvbiBpMm9wcyhlKXt2YXIgdD1uLmFsbG9jVW5zYWZlKDQpO3Qud3JpdGVVSW50MzJCRShlLDApO3JldHVybiB0fX0sNDM2NjpmdW5jdGlvbihlLHQscil7dmFyIGk9cig5OTAyKTt2YXIgbj1yKDU1MjApO3ZhciBhPXIoNjM4Nik7dmFyIHM9cig3MTEpO3ZhciBvPXIoNzE2Nik7dmFyIGg9cig5NzM5KTt2YXIgdT1yKDE2MDcpO3ZhciBkPXIoNjkxMSkuQnVmZmVyO2UuZXhwb3J0cz1mdW5jdGlvbiBwcml2YXRlRGVjcnlwdChlLHQscil7dmFyIG47aWYoZS5wYWRkaW5nKXtuPWUucGFkZGluZ31lbHNlIGlmKHIpe249MX1lbHNle249NH12YXIgYT1pKGUpO3ZhciBoPWEubW9kdWx1cy5ieXRlTGVuZ3RoKCk7aWYodC5sZW5ndGg+aHx8bmV3IHModCkuY21wKGEubW9kdWx1cyk+PTApe3Rocm93IG5ldyBFcnJvcihcImRlY3J5cHRpb24gZXJyb3JcIil9dmFyIGM7aWYocil7Yz11KG5ldyBzKHQpLGEpfWVsc2V7Yz1vKHQsYSl9dmFyIGw9ZC5hbGxvYyhoLWMubGVuZ3RoKTtjPWQuY29uY2F0KFtsLGNdLGgpO2lmKG49PT00KXtyZXR1cm4gb2FlcChhLGMpfWVsc2UgaWYobj09PTEpe3JldHVybiBwa2NzMShhLGMscil9ZWxzZSBpZihuPT09Myl7cmV0dXJuIGN9ZWxzZXt0aHJvdyBuZXcgRXJyb3IoXCJ1bmtub3duIHBhZGRpbmdcIil9fTtmdW5jdGlvbiBvYWVwKGUsdCl7dmFyIHI9ZS5tb2R1bHVzLmJ5dGVMZW5ndGgoKTt2YXIgaT1oKFwic2hhMVwiKS51cGRhdGUoZC5hbGxvYygwKSkuZGlnZXN0KCk7dmFyIHM9aS5sZW5ndGg7aWYodFswXSE9PTApe3Rocm93IG5ldyBFcnJvcihcImRlY3J5cHRpb24gZXJyb3JcIil9dmFyIG89dC5zbGljZSgxLHMrMSk7dmFyIHU9dC5zbGljZShzKzEpO3ZhciBjPWEobyxuKHUscykpO3ZhciBsPWEodSxuKGMsci1zLTEpKTtpZihjb21wYXJlKGksbC5zbGljZSgwLHMpKSl7dGhyb3cgbmV3IEVycm9yKFwiZGVjcnlwdGlvbiBlcnJvclwiKX12YXIgcD1zO3doaWxlKGxbcF09PT0wKXtwKyt9aWYobFtwKytdIT09MSl7dGhyb3cgbmV3IEVycm9yKFwiZGVjcnlwdGlvbiBlcnJvclwiKX1yZXR1cm4gbC5zbGljZShwKX1mdW5jdGlvbiBwa2NzMShlLHQscil7dmFyIGk9dC5zbGljZSgwLDIpO3ZhciBuPTI7dmFyIGE9MDt3aGlsZSh0W24rK10hPT0wKXtpZihuPj10Lmxlbmd0aCl7YSsrO2JyZWFrfX12YXIgcz10LnNsaWNlKDIsbi0xKTtpZihpLnRvU3RyaW5nKFwiaGV4XCIpIT09XCIwMDAyXCImJiFyfHxpLnRvU3RyaW5nKFwiaGV4XCIpIT09XCIwMDAxXCImJnIpe2ErK31pZihzLmxlbmd0aDw4KXthKyt9aWYoYSl7dGhyb3cgbmV3IEVycm9yKFwiZGVjcnlwdGlvbiBlcnJvclwiKX1yZXR1cm4gdC5zbGljZShuKX1mdW5jdGlvbiBjb21wYXJlKGUsdCl7ZT1kLmZyb20oZSk7dD1kLmZyb20odCk7dmFyIHI9MDt2YXIgaT1lLmxlbmd0aDtpZihlLmxlbmd0aCE9PXQubGVuZ3RoKXtyKys7aT1NYXRoLm1pbihlLmxlbmd0aCx0Lmxlbmd0aCl9dmFyIG49LTE7d2hpbGUoKytuPGkpe3IrPWVbbl1edFtuXX1yZXR1cm4gcn19LDM5OTU6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoOTkwMik7dmFyIG49cig3MjIzKTt2YXIgYT1yKDk3MzkpO3ZhciBzPXIoNTUyMCk7dmFyIG89cig2Mzg2KTt2YXIgaD1yKDcxMSk7dmFyIHU9cigxNjA3KTt2YXIgZD1yKDcxNjYpO3ZhciBjPXIoNjkxMSkuQnVmZmVyO2UuZXhwb3J0cz1mdW5jdGlvbiBwdWJsaWNFbmNyeXB0KGUsdCxyKXt2YXIgbjtpZihlLnBhZGRpbmcpe249ZS5wYWRkaW5nfWVsc2UgaWYocil7bj0xfWVsc2V7bj00fXZhciBhPWkoZSk7dmFyIHM7aWYobj09PTQpe3M9b2FlcChhLHQpfWVsc2UgaWYobj09PTEpe3M9cGtjczEoYSx0LHIpfWVsc2UgaWYobj09PTMpe3M9bmV3IGgodCk7aWYocy5jbXAoYS5tb2R1bHVzKT49MCl7dGhyb3cgbmV3IEVycm9yKFwiZGF0YSB0b28gbG9uZyBmb3IgbW9kdWx1c1wiKX19ZWxzZXt0aHJvdyBuZXcgRXJyb3IoXCJ1bmtub3duIHBhZGRpbmdcIil9aWYocil7cmV0dXJuIGQocyxhKX1lbHNle3JldHVybiB1KHMsYSl9fTtmdW5jdGlvbiBvYWVwKGUsdCl7dmFyIHI9ZS5tb2R1bHVzLmJ5dGVMZW5ndGgoKTt2YXIgaT10Lmxlbmd0aDt2YXIgdT1hKFwic2hhMVwiKS51cGRhdGUoYy5hbGxvYygwKSkuZGlnZXN0KCk7dmFyIGQ9dS5sZW5ndGg7dmFyIGw9MipkO2lmKGk+ci1sLTIpe3Rocm93IG5ldyBFcnJvcihcIm1lc3NhZ2UgdG9vIGxvbmdcIil9dmFyIHA9Yy5hbGxvYyhyLWktbC0yKTt2YXIgdj1yLWQtMTt2YXIgYj1uKGQpO3ZhciBtPW8oYy5jb25jYXQoW3UscCxjLmFsbG9jKDEsMSksdF0sdikscyhiLHYpKTt2YXIgeT1vKGIscyhtLGQpKTtyZXR1cm4gbmV3IGgoYy5jb25jYXQoW2MuYWxsb2MoMSkseSxtXSxyKSl9ZnVuY3Rpb24gcGtjczEoZSx0LHIpe3ZhciBpPXQubGVuZ3RoO3ZhciBuPWUubW9kdWx1cy5ieXRlTGVuZ3RoKCk7aWYoaT5uLTExKXt0aHJvdyBuZXcgRXJyb3IoXCJtZXNzYWdlIHRvbyBsb25nXCIpfXZhciBhO2lmKHIpe2E9Yy5hbGxvYyhuLWktMywyNTUpfWVsc2V7YT1ub25aZXJvKG4taS0zKX1yZXR1cm4gbmV3IGgoYy5jb25jYXQoW2MuZnJvbShbMCxyPzE6Ml0pLGEsYy5hbGxvYygxKSx0XSxuKSl9ZnVuY3Rpb24gbm9uWmVybyhlKXt2YXIgdD1jLmFsbG9jVW5zYWZlKGUpO3ZhciByPTA7dmFyIGk9bihlKjIpO3ZhciBhPTA7dmFyIHM7d2hpbGUocjxlKXtpZihhPT09aS5sZW5ndGgpe2k9bihlKjIpO2E9MH1zPWlbYSsrXTtpZihzKXt0W3IrK109c319cmV0dXJuIHR9fSwxNjA3OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDcxMSk7dmFyIG49cig2OTExKS5CdWZmZXI7ZnVuY3Rpb24gd2l0aFB1YmxpYyhlLHQpe3JldHVybiBuLmZyb20oZS50b1JlZChpLm1vbnQodC5tb2R1bHVzKSkucmVkUG93KG5ldyBpKHQucHVibGljRXhwb25lbnQpKS5mcm9tUmVkKCkudG9BcnJheSgpKX1lLmV4cG9ydHM9d2l0aFB1YmxpY30sNjM4NjpmdW5jdGlvbihlKXtlLmV4cG9ydHM9ZnVuY3Rpb24geG9yKGUsdCl7dmFyIHI9ZS5sZW5ndGg7dmFyIGk9LTE7d2hpbGUoKytpPHIpe2VbaV1ePXRbaV19cmV0dXJuIGV9fSw3MjIzOmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT02NTUzNjt2YXIgbj00Mjk0OTY3Mjk1O2Z1bmN0aW9uIG9sZEJyb3dzZXIoKXt0aHJvdyBuZXcgRXJyb3IoXCJTZWN1cmUgcmFuZG9tIG51bWJlciBnZW5lcmF0aW9uIGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBicm93c2VyLlxcblVzZSBDaHJvbWUsIEZpcmVmb3ggb3IgSW50ZXJuZXQgRXhwbG9yZXIgMTFcIil9dmFyIGE9cig2OTExKS5CdWZmZXI7dmFyIHM9Z2xvYmFsLmNyeXB0b3x8Z2xvYmFsLm1zQ3J5cHRvO2lmKHMmJnMuZ2V0UmFuZG9tVmFsdWVzKXtlLmV4cG9ydHM9cmFuZG9tQnl0ZXN9ZWxzZXtlLmV4cG9ydHM9b2xkQnJvd3Nlcn1mdW5jdGlvbiByYW5kb21CeXRlcyhlLHQpe2lmKGU+bil0aHJvdyBuZXcgUmFuZ2VFcnJvcihcInJlcXVlc3RlZCB0b28gbWFueSByYW5kb20gYnl0ZXNcIik7dmFyIHI9YS5hbGxvY1Vuc2FmZShlKTtpZihlPjApe2lmKGU+aSl7Zm9yKHZhciBvPTA7bzxlO28rPWkpe3MuZ2V0UmFuZG9tVmFsdWVzKHIuc2xpY2UobyxvK2kpKX19ZWxzZXtzLmdldFJhbmRvbVZhbHVlcyhyKX19aWYodHlwZW9mIHQ9PT1cImZ1bmN0aW9uXCIpe3JldHVybiBwcm9jZXNzLm5leHRUaWNrKChmdW5jdGlvbigpe3QobnVsbCxyKX0pKX1yZXR1cm4gcn19LDY0NDU6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIG9sZEJyb3dzZXIoKXt0aHJvdyBuZXcgRXJyb3IoXCJzZWN1cmUgcmFuZG9tIG51bWJlciBnZW5lcmF0aW9uIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBicm93c2VyXFxudXNlIGNocm9tZSwgRmlyZUZveCBvciBJbnRlcm5ldCBFeHBsb3JlciAxMVwiKX12YXIgaT1yKDY5MTEpO3ZhciBuPXIoNzIyMyk7dmFyIGE9aS5CdWZmZXI7dmFyIHM9aS5rTWF4TGVuZ3RoO3ZhciBvPWdsb2JhbC5jcnlwdG98fGdsb2JhbC5tc0NyeXB0bzt2YXIgaD1NYXRoLnBvdygyLDMyKS0xO2Z1bmN0aW9uIGFzc2VydE9mZnNldChlLHQpe2lmKHR5cGVvZiBlIT09XCJudW1iZXJcInx8ZSE9PWUpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJvZmZzZXQgbXVzdCBiZSBhIG51bWJlclwiKX1pZihlPmh8fGU8MCl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIm9mZnNldCBtdXN0IGJlIGEgdWludDMyXCIpfWlmKGU+c3x8ZT50KXt0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIm9mZnNldCBvdXQgb2YgcmFuZ2VcIil9fWZ1bmN0aW9uIGFzc2VydFNpemUoZSx0LHIpe2lmKHR5cGVvZiBlIT09XCJudW1iZXJcInx8ZSE9PWUpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJzaXplIG11c3QgYmUgYSBudW1iZXJcIil9aWYoZT5ofHxlPDApe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJzaXplIG11c3QgYmUgYSB1aW50MzJcIil9aWYoZSt0PnJ8fGU+cyl7dGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJidWZmZXIgdG9vIHNtYWxsXCIpfX1pZihvJiZvLmdldFJhbmRvbVZhbHVlc3x8IXByb2Nlc3MuYnJvd3Nlcil7dC5yYW5kb21GaWxsPXJhbmRvbUZpbGw7dC5yYW5kb21GaWxsU3luYz1yYW5kb21GaWxsU3luY31lbHNle3QucmFuZG9tRmlsbD1vbGRCcm93c2VyO3QucmFuZG9tRmlsbFN5bmM9b2xkQnJvd3Nlcn1mdW5jdGlvbiByYW5kb21GaWxsKGUsdCxyLGkpe2lmKCFhLmlzQnVmZmVyKGUpJiYhKGUgaW5zdGFuY2VvZiBnbG9iYWwuVWludDhBcnJheSkpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1wiYnVmXCIgYXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciBvciBVaW50OEFycmF5Jyl9aWYodHlwZW9mIHQ9PT1cImZ1bmN0aW9uXCIpe2k9dDt0PTA7cj1lLmxlbmd0aH1lbHNlIGlmKHR5cGVvZiByPT09XCJmdW5jdGlvblwiKXtpPXI7cj1lLmxlbmd0aC10fWVsc2UgaWYodHlwZW9mIGkhPT1cImZ1bmN0aW9uXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1wiY2JcIiBhcmd1bWVudCBtdXN0IGJlIGEgZnVuY3Rpb24nKX1hc3NlcnRPZmZzZXQodCxlLmxlbmd0aCk7YXNzZXJ0U2l6ZShyLHQsZS5sZW5ndGgpO3JldHVybiBhY3R1YWxGaWxsKGUsdCxyLGkpfWZ1bmN0aW9uIGFjdHVhbEZpbGwoZSx0LHIsaSl7aWYocHJvY2Vzcy5icm93c2VyKXt2YXIgYT1lLmJ1ZmZlcjt2YXIgcz1uZXcgVWludDhBcnJheShhLHQscik7by5nZXRSYW5kb21WYWx1ZXMocyk7aWYoaSl7cHJvY2Vzcy5uZXh0VGljaygoZnVuY3Rpb24oKXtpKG51bGwsZSl9KSk7cmV0dXJufXJldHVybiBlfWlmKGkpe24ociwoZnVuY3Rpb24ocixuKXtpZihyKXtyZXR1cm4gaShyKX1uLmNvcHkoZSx0KTtpKG51bGwsZSl9KSk7cmV0dXJufXZhciBoPW4ocik7aC5jb3B5KGUsdCk7cmV0dXJuIGV9ZnVuY3Rpb24gcmFuZG9tRmlsbFN5bmMoZSx0LHIpe2lmKHR5cGVvZiB0PT09XCJ1bmRlZmluZWRcIil7dD0wfWlmKCFhLmlzQnVmZmVyKGUpJiYhKGUgaW5zdGFuY2VvZiBnbG9iYWwuVWludDhBcnJheSkpe3Rocm93IG5ldyBUeXBlRXJyb3IoJ1wiYnVmXCIgYXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciBvciBVaW50OEFycmF5Jyl9YXNzZXJ0T2Zmc2V0KHQsZS5sZW5ndGgpO2lmKHI9PT11bmRlZmluZWQpcj1lLmxlbmd0aC10O2Fzc2VydFNpemUocix0LGUubGVuZ3RoKTtyZXR1cm4gYWN0dWFsRmlsbChlLHQscil9fSw0NjQ2OmZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2NvbnN0IHQ9e307ZnVuY3Rpb24gY3JlYXRlRXJyb3JUeXBlKGUscixpKXtpZighaSl7aT1FcnJvcn1mdW5jdGlvbiBnZXRNZXNzYWdlKGUsdCxpKXtpZih0eXBlb2Ygcj09PVwic3RyaW5nXCIpe3JldHVybiByfWVsc2V7cmV0dXJuIHIoZSx0LGkpfX1jbGFzcyBOb2RlRXJyb3IgZXh0ZW5kcyBpe2NvbnN0cnVjdG9yKGUsdCxyKXtzdXBlcihnZXRNZXNzYWdlKGUsdCxyKSl9fU5vZGVFcnJvci5wcm90b3R5cGUubmFtZT1pLm5hbWU7Tm9kZUVycm9yLnByb3RvdHlwZS5jb2RlPWU7dFtlXT1Ob2RlRXJyb3J9ZnVuY3Rpb24gb25lT2YoZSx0KXtpZihBcnJheS5pc0FycmF5KGUpKXtjb25zdCByPWUubGVuZ3RoO2U9ZS5tYXAoKGU9PlN0cmluZyhlKSkpO2lmKHI+Mil7cmV0dXJuYG9uZSBvZiAke3R9ICR7ZS5zbGljZSgwLHItMSkuam9pbihcIiwgXCIpfSwgb3IgYCtlW3ItMV19ZWxzZSBpZihyPT09Mil7cmV0dXJuYG9uZSBvZiAke3R9ICR7ZVswXX0gb3IgJHtlWzFdfWB9ZWxzZXtyZXR1cm5gb2YgJHt0fSAke2VbMF19YH19ZWxzZXtyZXR1cm5gb2YgJHt0fSAke1N0cmluZyhlKX1gfX1mdW5jdGlvbiBzdGFydHNXaXRoKGUsdCxyKXtyZXR1cm4gZS5zdWJzdHIoIXJ8fHI8MD8wOityLHQubGVuZ3RoKT09PXR9ZnVuY3Rpb24gZW5kc1dpdGgoZSx0LHIpe2lmKHI9PT11bmRlZmluZWR8fHI+ZS5sZW5ndGgpe3I9ZS5sZW5ndGh9cmV0dXJuIGUuc3Vic3RyaW5nKHItdC5sZW5ndGgscik9PT10fWZ1bmN0aW9uIGluY2x1ZGVzKGUsdCxyKXtpZih0eXBlb2YgciE9PVwibnVtYmVyXCIpe3I9MH1pZihyK3QubGVuZ3RoPmUubGVuZ3RoKXtyZXR1cm4gZmFsc2V9ZWxzZXtyZXR1cm4gZS5pbmRleE9mKHQscikhPT0tMX19Y3JlYXRlRXJyb3JUeXBlKFwiRVJSX0lOVkFMSURfT1BUX1ZBTFVFXCIsKGZ1bmN0aW9uKGUsdCl7cmV0dXJuJ1RoZSB2YWx1ZSBcIicrdCsnXCIgaXMgaW52YWxpZCBmb3Igb3B0aW9uIFwiJytlKydcIid9KSxUeXBlRXJyb3IpO2NyZWF0ZUVycm9yVHlwZShcIkVSUl9JTlZBTElEX0FSR19UWVBFXCIsKGZ1bmN0aW9uKGUsdCxyKXtsZXQgaTtpZih0eXBlb2YgdD09PVwic3RyaW5nXCImJnN0YXJ0c1dpdGgodCxcIm5vdCBcIikpe2k9XCJtdXN0IG5vdCBiZVwiO3Q9dC5yZXBsYWNlKC9ebm90IC8sXCJcIil9ZWxzZXtpPVwibXVzdCBiZVwifWxldCBuO2lmKGVuZHNXaXRoKGUsXCIgYXJndW1lbnRcIikpe249YFRoZSAke2V9ICR7aX0gJHtvbmVPZih0LFwidHlwZVwiKX1gfWVsc2V7Y29uc3Qgcj1pbmNsdWRlcyhlLFwiLlwiKT9cInByb3BlcnR5XCI6XCJhcmd1bWVudFwiO249YFRoZSBcIiR7ZX1cIiAke3J9ICR7aX0gJHtvbmVPZih0LFwidHlwZVwiKX1gfW4rPWAuIFJlY2VpdmVkIHR5cGUgJHt0eXBlb2Ygcn1gO3JldHVybiBufSksVHlwZUVycm9yKTtjcmVhdGVFcnJvclR5cGUoXCJFUlJfU1RSRUFNX1BVU0hfQUZURVJfRU9GXCIsXCJzdHJlYW0ucHVzaCgpIGFmdGVyIEVPRlwiKTtjcmVhdGVFcnJvclR5cGUoXCJFUlJfTUVUSE9EX05PVF9JTVBMRU1FTlRFRFwiLChmdW5jdGlvbihlKXtyZXR1cm5cIlRoZSBcIitlK1wiIG1ldGhvZCBpcyBub3QgaW1wbGVtZW50ZWRcIn0pKTtjcmVhdGVFcnJvclR5cGUoXCJFUlJfU1RSRUFNX1BSRU1BVFVSRV9DTE9TRVwiLFwiUHJlbWF0dXJlIGNsb3NlXCIpO2NyZWF0ZUVycm9yVHlwZShcIkVSUl9TVFJFQU1fREVTVFJPWUVEXCIsKGZ1bmN0aW9uKGUpe3JldHVyblwiQ2Fubm90IGNhbGwgXCIrZStcIiBhZnRlciBhIHN0cmVhbSB3YXMgZGVzdHJveWVkXCJ9KSk7Y3JlYXRlRXJyb3JUeXBlKFwiRVJSX01VTFRJUExFX0NBTExCQUNLXCIsXCJDYWxsYmFjayBjYWxsZWQgbXVsdGlwbGUgdGltZXNcIik7Y3JlYXRlRXJyb3JUeXBlKFwiRVJSX1NUUkVBTV9DQU5OT1RfUElQRVwiLFwiQ2Fubm90IHBpcGUsIG5vdCByZWFkYWJsZVwiKTtjcmVhdGVFcnJvclR5cGUoXCJFUlJfU1RSRUFNX1dSSVRFX0FGVEVSX0VORFwiLFwid3JpdGUgYWZ0ZXIgZW5kXCIpO2NyZWF0ZUVycm9yVHlwZShcIkVSUl9TVFJFQU1fTlVMTF9WQUxVRVNcIixcIk1heSBub3Qgd3JpdGUgbnVsbCB2YWx1ZXMgdG8gc3RyZWFtXCIsVHlwZUVycm9yKTtjcmVhdGVFcnJvclR5cGUoXCJFUlJfVU5LTk9XTl9FTkNPRElOR1wiLChmdW5jdGlvbihlKXtyZXR1cm5cIlVua25vd24gZW5jb2Rpbmc6IFwiK2V9KSxUeXBlRXJyb3IpO2NyZWF0ZUVycm9yVHlwZShcIkVSUl9TVFJFQU1fVU5TSElGVF9BRlRFUl9FTkRfRVZFTlRcIixcInN0cmVhbS51bnNoaWZ0KCkgYWZ0ZXIgZW5kIGV2ZW50XCIpO2UuZXhwb3J0cy5xPXR9LDI0MDM6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPU9iamVjdC5rZXlzfHxmdW5jdGlvbihlKXt2YXIgdD1bXTtmb3IodmFyIHIgaW4gZSl7dC5wdXNoKHIpfXJldHVybiB0fTtlLmV4cG9ydHM9RHVwbGV4O3ZhciBuPXIoMTcwOSk7dmFyIGE9cig3MzM3KTtyKDM3ODIpKER1cGxleCxuKTt7dmFyIHM9aShhLnByb3RvdHlwZSk7Zm9yKHZhciBvPTA7bzxzLmxlbmd0aDtvKyspe3ZhciBoPXNbb107aWYoIUR1cGxleC5wcm90b3R5cGVbaF0pRHVwbGV4LnByb3RvdHlwZVtoXT1hLnByb3RvdHlwZVtoXX19ZnVuY3Rpb24gRHVwbGV4KGUpe2lmKCEodGhpcyBpbnN0YW5jZW9mIER1cGxleCkpcmV0dXJuIG5ldyBEdXBsZXgoZSk7bi5jYWxsKHRoaXMsZSk7YS5jYWxsKHRoaXMsZSk7dGhpcy5hbGxvd0hhbGZPcGVuPXRydWU7aWYoZSl7aWYoZS5yZWFkYWJsZT09PWZhbHNlKXRoaXMucmVhZGFibGU9ZmFsc2U7aWYoZS53cml0YWJsZT09PWZhbHNlKXRoaXMud3JpdGFibGU9ZmFsc2U7aWYoZS5hbGxvd0hhbGZPcGVuPT09ZmFsc2Upe3RoaXMuYWxsb3dIYWxmT3Blbj1mYWxzZTt0aGlzLm9uY2UoXCJlbmRcIixvbmVuZCl9fX1PYmplY3QuZGVmaW5lUHJvcGVydHkoRHVwbGV4LnByb3RvdHlwZSxcIndyaXRhYmxlSGlnaFdhdGVyTWFya1wiLHtlbnVtZXJhYmxlOmZhbHNlLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLFwid3JpdGFibGVCdWZmZXJcIix7ZW51bWVyYWJsZTpmYWxzZSxnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZ2V0QnVmZmVyKCl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KER1cGxleC5wcm90b3R5cGUsXCJ3cml0YWJsZUxlbmd0aFwiLHtlbnVtZXJhYmxlOmZhbHNlLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5sZW5ndGh9fSk7ZnVuY3Rpb24gb25lbmQoKXtpZih0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkKXJldHVybjtwcm9jZXNzLm5leHRUaWNrKG9uRW5kTlQsdGhpcyl9ZnVuY3Rpb24gb25FbmROVChlKXtlLmVuZCgpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShEdXBsZXgucHJvdG90eXBlLFwiZGVzdHJveWVkXCIse2VudW1lcmFibGU6ZmFsc2UsZ2V0OmZ1bmN0aW9uIGdldCgpe2lmKHRoaXMuX3JlYWRhYmxlU3RhdGU9PT11bmRlZmluZWR8fHRoaXMuX3dyaXRhYmxlU3RhdGU9PT11bmRlZmluZWQpe3JldHVybiBmYWxzZX1yZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkfSxzZXQ6ZnVuY3Rpb24gc2V0KGUpe2lmKHRoaXMuX3JlYWRhYmxlU3RhdGU9PT11bmRlZmluZWR8fHRoaXMuX3dyaXRhYmxlU3RhdGU9PT11bmRlZmluZWQpe3JldHVybn10aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD1lO3RoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkPWV9fSl9LDc4ODk6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UuZXhwb3J0cz1QYXNzVGhyb3VnaDt2YXIgaT1yKDExNzApO3IoMzc4MikoUGFzc1Rocm91Z2gsaSk7ZnVuY3Rpb24gUGFzc1Rocm91Z2goZSl7aWYoISh0aGlzIGluc3RhbmNlb2YgUGFzc1Rocm91Z2gpKXJldHVybiBuZXcgUGFzc1Rocm91Z2goZSk7aS5jYWxsKHRoaXMsZSl9UGFzc1Rocm91Z2gucHJvdG90eXBlLl90cmFuc2Zvcm09ZnVuY3Rpb24oZSx0LHIpe3IobnVsbCxlKX19LDE3MDk6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO2UuZXhwb3J0cz1SZWFkYWJsZTt2YXIgaTtSZWFkYWJsZS5SZWFkYWJsZVN0YXRlPVJlYWRhYmxlU3RhdGU7dmFyIG49cigyMzYxKS5FdmVudEVtaXR0ZXI7dmFyIGE9ZnVuY3Rpb24gRUVsaXN0ZW5lckNvdW50KGUsdCl7cmV0dXJuIGUubGlzdGVuZXJzKHQpLmxlbmd0aH07dmFyIHM9cig0Njc4KTt2YXIgbz1yKDQzMDApLkJ1ZmZlcjt2YXIgaD1nbG9iYWwuVWludDhBcnJheXx8ZnVuY3Rpb24oKXt9O2Z1bmN0aW9uIF91aW50OEFycmF5VG9CdWZmZXIoZSl7cmV0dXJuIG8uZnJvbShlKX1mdW5jdGlvbiBfaXNVaW50OEFycmF5KGUpe3JldHVybiBvLmlzQnVmZmVyKGUpfHxlIGluc3RhbmNlb2YgaH12YXIgdT1yKDM4MzcpO3ZhciBkO2lmKHUmJnUuZGVidWdsb2cpe2Q9dS5kZWJ1Z2xvZyhcInN0cmVhbVwiKX1lbHNle2Q9ZnVuY3Rpb24gZGVidWcoKXt9fXZhciBjPXIoNDM3OSk7dmFyIGw9cig3MDI1KTt2YXIgcD1yKDY3NzYpLHY9cC5nZXRIaWdoV2F0ZXJNYXJrO3ZhciBiPXIoNDY0NikucSxtPWIuRVJSX0lOVkFMSURfQVJHX1RZUEUseT1iLkVSUl9TVFJFQU1fUFVTSF9BRlRFUl9FT0YsZz1iLkVSUl9NRVRIT0RfTk9UX0lNUExFTUVOVEVELF89Yi5FUlJfU1RSRUFNX1VOU0hJRlRfQUZURVJfRU5EX0VWRU5UO3ZhciB3O3ZhciBNO3ZhciBCO3IoMzc4MikoUmVhZGFibGUscyk7dmFyIEU9bC5lcnJvck9yRGVzdHJveTt2YXIgaz1bXCJlcnJvclwiLFwiY2xvc2VcIixcImRlc3Ryb3lcIixcInBhdXNlXCIsXCJyZXN1bWVcIl07ZnVuY3Rpb24gcHJlcGVuZExpc3RlbmVyKGUsdCxyKXtpZih0eXBlb2YgZS5wcmVwZW5kTGlzdGVuZXI9PT1cImZ1bmN0aW9uXCIpcmV0dXJuIGUucHJlcGVuZExpc3RlbmVyKHQscik7aWYoIWUuX2V2ZW50c3x8IWUuX2V2ZW50c1t0XSllLm9uKHQscik7ZWxzZSBpZihBcnJheS5pc0FycmF5KGUuX2V2ZW50c1t0XSkpZS5fZXZlbnRzW3RdLnVuc2hpZnQocik7ZWxzZSBlLl9ldmVudHNbdF09W3IsZS5fZXZlbnRzW3RdXX1mdW5jdGlvbiBSZWFkYWJsZVN0YXRlKGUsdCxuKXtpPWl8fHIoMjQwMyk7ZT1lfHx7fTtpZih0eXBlb2YgbiE9PVwiYm9vbGVhblwiKW49dCBpbnN0YW5jZW9mIGk7dGhpcy5vYmplY3RNb2RlPSEhZS5vYmplY3RNb2RlO2lmKG4pdGhpcy5vYmplY3RNb2RlPXRoaXMub2JqZWN0TW9kZXx8ISFlLnJlYWRhYmxlT2JqZWN0TW9kZTt0aGlzLmhpZ2hXYXRlck1hcms9dih0aGlzLGUsXCJyZWFkYWJsZUhpZ2hXYXRlck1hcmtcIixuKTt0aGlzLmJ1ZmZlcj1uZXcgYzt0aGlzLmxlbmd0aD0wO3RoaXMucGlwZXM9bnVsbDt0aGlzLnBpcGVzQ291bnQ9MDt0aGlzLmZsb3dpbmc9bnVsbDt0aGlzLmVuZGVkPWZhbHNlO3RoaXMuZW5kRW1pdHRlZD1mYWxzZTt0aGlzLnJlYWRpbmc9ZmFsc2U7dGhpcy5zeW5jPXRydWU7dGhpcy5uZWVkUmVhZGFibGU9ZmFsc2U7dGhpcy5lbWl0dGVkUmVhZGFibGU9ZmFsc2U7dGhpcy5yZWFkYWJsZUxpc3RlbmluZz1mYWxzZTt0aGlzLnJlc3VtZVNjaGVkdWxlZD1mYWxzZTt0aGlzLnBhdXNlZD10cnVlO3RoaXMuZW1pdENsb3NlPWUuZW1pdENsb3NlIT09ZmFsc2U7dGhpcy5hdXRvRGVzdHJveT0hIWUuYXV0b0Rlc3Ryb3k7dGhpcy5kZXN0cm95ZWQ9ZmFsc2U7dGhpcy5kZWZhdWx0RW5jb2Rpbmc9ZS5kZWZhdWx0RW5jb2Rpbmd8fFwidXRmOFwiO3RoaXMuYXdhaXREcmFpbj0wO3RoaXMucmVhZGluZ01vcmU9ZmFsc2U7dGhpcy5kZWNvZGVyPW51bGw7dGhpcy5lbmNvZGluZz1udWxsO2lmKGUuZW5jb2Rpbmcpe2lmKCF3KXc9cigzNzA0KS5zO3RoaXMuZGVjb2Rlcj1uZXcgdyhlLmVuY29kaW5nKTt0aGlzLmVuY29kaW5nPWUuZW5jb2Rpbmd9fWZ1bmN0aW9uIFJlYWRhYmxlKGUpe2k9aXx8cigyNDAzKTtpZighKHRoaXMgaW5zdGFuY2VvZiBSZWFkYWJsZSkpcmV0dXJuIG5ldyBSZWFkYWJsZShlKTt2YXIgdD10aGlzIGluc3RhbmNlb2YgaTt0aGlzLl9yZWFkYWJsZVN0YXRlPW5ldyBSZWFkYWJsZVN0YXRlKGUsdGhpcyx0KTt0aGlzLnJlYWRhYmxlPXRydWU7aWYoZSl7aWYodHlwZW9mIGUucmVhZD09PVwiZnVuY3Rpb25cIil0aGlzLl9yZWFkPWUucmVhZDtpZih0eXBlb2YgZS5kZXN0cm95PT09XCJmdW5jdGlvblwiKXRoaXMuX2Rlc3Ryb3k9ZS5kZXN0cm95fXMuY2FsbCh0aGlzKX1PYmplY3QuZGVmaW5lUHJvcGVydHkoUmVhZGFibGUucHJvdG90eXBlLFwiZGVzdHJveWVkXCIse2VudW1lcmFibGU6ZmFsc2UsZ2V0OmZ1bmN0aW9uIGdldCgpe2lmKHRoaXMuX3JlYWRhYmxlU3RhdGU9PT11bmRlZmluZWQpe3JldHVybiBmYWxzZX1yZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWR9LHNldDpmdW5jdGlvbiBzZXQoZSl7aWYoIXRoaXMuX3JlYWRhYmxlU3RhdGUpe3JldHVybn10aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD1lfX0pO1JlYWRhYmxlLnByb3RvdHlwZS5kZXN0cm95PWwuZGVzdHJveTtSZWFkYWJsZS5wcm90b3R5cGUuX3VuZGVzdHJveT1sLnVuZGVzdHJveTtSZWFkYWJsZS5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24oZSx0KXt0KGUpfTtSZWFkYWJsZS5wcm90b3R5cGUucHVzaD1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXMuX3JlYWRhYmxlU3RhdGU7dmFyIGk7aWYoIXIub2JqZWN0TW9kZSl7aWYodHlwZW9mIGU9PT1cInN0cmluZ1wiKXt0PXR8fHIuZGVmYXVsdEVuY29kaW5nO2lmKHQhPT1yLmVuY29kaW5nKXtlPW8uZnJvbShlLHQpO3Q9XCJcIn1pPXRydWV9fWVsc2V7aT10cnVlfXJldHVybiByZWFkYWJsZUFkZENodW5rKHRoaXMsZSx0LGZhbHNlLGkpfTtSZWFkYWJsZS5wcm90b3R5cGUudW5zaGlmdD1mdW5jdGlvbihlKXtyZXR1cm4gcmVhZGFibGVBZGRDaHVuayh0aGlzLGUsbnVsbCx0cnVlLGZhbHNlKX07ZnVuY3Rpb24gcmVhZGFibGVBZGRDaHVuayhlLHQscixpLG4pe2QoXCJyZWFkYWJsZUFkZENodW5rXCIsdCk7dmFyIGE9ZS5fcmVhZGFibGVTdGF0ZTtpZih0PT09bnVsbCl7YS5yZWFkaW5nPWZhbHNlO29uRW9mQ2h1bmsoZSxhKX1lbHNle3ZhciBzO2lmKCFuKXM9Y2h1bmtJbnZhbGlkKGEsdCk7aWYocyl7RShlLHMpfWVsc2UgaWYoYS5vYmplY3RNb2RlfHx0JiZ0Lmxlbmd0aD4wKXtpZih0eXBlb2YgdCE9PVwic3RyaW5nXCImJiFhLm9iamVjdE1vZGUmJk9iamVjdC5nZXRQcm90b3R5cGVPZih0KSE9PW8ucHJvdG90eXBlKXt0PV91aW50OEFycmF5VG9CdWZmZXIodCl9aWYoaSl7aWYoYS5lbmRFbWl0dGVkKUUoZSxuZXcgXyk7ZWxzZSBhZGRDaHVuayhlLGEsdCx0cnVlKX1lbHNlIGlmKGEuZW5kZWQpe0UoZSxuZXcgeSl9ZWxzZSBpZihhLmRlc3Ryb3llZCl7cmV0dXJuIGZhbHNlfWVsc2V7YS5yZWFkaW5nPWZhbHNlO2lmKGEuZGVjb2RlciYmIXIpe3Q9YS5kZWNvZGVyLndyaXRlKHQpO2lmKGEub2JqZWN0TW9kZXx8dC5sZW5ndGghPT0wKWFkZENodW5rKGUsYSx0LGZhbHNlKTtlbHNlIG1heWJlUmVhZE1vcmUoZSxhKX1lbHNle2FkZENodW5rKGUsYSx0LGZhbHNlKX19fWVsc2UgaWYoIWkpe2EucmVhZGluZz1mYWxzZTttYXliZVJlYWRNb3JlKGUsYSl9fXJldHVybiFhLmVuZGVkJiYoYS5sZW5ndGg8YS5oaWdoV2F0ZXJNYXJrfHxhLmxlbmd0aD09PTApfWZ1bmN0aW9uIGFkZENodW5rKGUsdCxyLGkpe2lmKHQuZmxvd2luZyYmdC5sZW5ndGg9PT0wJiYhdC5zeW5jKXt0LmF3YWl0RHJhaW49MDtlLmVtaXQoXCJkYXRhXCIscil9ZWxzZXt0Lmxlbmd0aCs9dC5vYmplY3RNb2RlPzE6ci5sZW5ndGg7aWYoaSl0LmJ1ZmZlci51bnNoaWZ0KHIpO2Vsc2UgdC5idWZmZXIucHVzaChyKTtpZih0Lm5lZWRSZWFkYWJsZSllbWl0UmVhZGFibGUoZSl9bWF5YmVSZWFkTW9yZShlLHQpfWZ1bmN0aW9uIGNodW5rSW52YWxpZChlLHQpe3ZhciByO2lmKCFfaXNVaW50OEFycmF5KHQpJiZ0eXBlb2YgdCE9PVwic3RyaW5nXCImJnQhPT11bmRlZmluZWQmJiFlLm9iamVjdE1vZGUpe3I9bmV3IG0oXCJjaHVua1wiLFtcInN0cmluZ1wiLFwiQnVmZmVyXCIsXCJVaW50OEFycmF5XCJdLHQpfXJldHVybiByfVJlYWRhYmxlLnByb3RvdHlwZS5pc1BhdXNlZD1mdW5jdGlvbigpe3JldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmc9PT1mYWxzZX07UmVhZGFibGUucHJvdG90eXBlLnNldEVuY29kaW5nPWZ1bmN0aW9uKGUpe2lmKCF3KXc9cigzNzA0KS5zO3ZhciB0PW5ldyB3KGUpO3RoaXMuX3JlYWRhYmxlU3RhdGUuZGVjb2Rlcj10O3RoaXMuX3JlYWRhYmxlU3RhdGUuZW5jb2Rpbmc9dGhpcy5fcmVhZGFibGVTdGF0ZS5kZWNvZGVyLmVuY29kaW5nO3ZhciBpPXRoaXMuX3JlYWRhYmxlU3RhdGUuYnVmZmVyLmhlYWQ7dmFyIG49XCJcIjt3aGlsZShpIT09bnVsbCl7bis9dC53cml0ZShpLmRhdGEpO2k9aS5uZXh0fXRoaXMuX3JlYWRhYmxlU3RhdGUuYnVmZmVyLmNsZWFyKCk7aWYobiE9PVwiXCIpdGhpcy5fcmVhZGFibGVTdGF0ZS5idWZmZXIucHVzaChuKTt0aGlzLl9yZWFkYWJsZVN0YXRlLmxlbmd0aD1uLmxlbmd0aDtyZXR1cm4gdGhpc307dmFyIEE9MTA3Mzc0MTgyNDtmdW5jdGlvbiBjb21wdXRlTmV3SGlnaFdhdGVyTWFyayhlKXtpZihlPj1BKXtlPUF9ZWxzZXtlLS07ZXw9ZT4+PjE7ZXw9ZT4+PjI7ZXw9ZT4+PjQ7ZXw9ZT4+Pjg7ZXw9ZT4+PjE2O2UrK31yZXR1cm4gZX1mdW5jdGlvbiBob3dNdWNoVG9SZWFkKGUsdCl7aWYoZTw9MHx8dC5sZW5ndGg9PT0wJiZ0LmVuZGVkKXJldHVybiAwO2lmKHQub2JqZWN0TW9kZSlyZXR1cm4gMTtpZihlIT09ZSl7aWYodC5mbG93aW5nJiZ0Lmxlbmd0aClyZXR1cm4gdC5idWZmZXIuaGVhZC5kYXRhLmxlbmd0aDtlbHNlIHJldHVybiB0Lmxlbmd0aH1pZihlPnQuaGlnaFdhdGVyTWFyayl0LmhpZ2hXYXRlck1hcms9Y29tcHV0ZU5ld0hpZ2hXYXRlck1hcmsoZSk7aWYoZTw9dC5sZW5ndGgpcmV0dXJuIGU7aWYoIXQuZW5kZWQpe3QubmVlZFJlYWRhYmxlPXRydWU7cmV0dXJuIDB9cmV0dXJuIHQubGVuZ3RofVJlYWRhYmxlLnByb3RvdHlwZS5yZWFkPWZ1bmN0aW9uKGUpe2QoXCJyZWFkXCIsZSk7ZT1wYXJzZUludChlLDEwKTt2YXIgdD10aGlzLl9yZWFkYWJsZVN0YXRlO3ZhciByPWU7aWYoZSE9PTApdC5lbWl0dGVkUmVhZGFibGU9ZmFsc2U7aWYoZT09PTAmJnQubmVlZFJlYWRhYmxlJiYoKHQuaGlnaFdhdGVyTWFyayE9PTA/dC5sZW5ndGg+PXQuaGlnaFdhdGVyTWFyazp0Lmxlbmd0aD4wKXx8dC5lbmRlZCkpe2QoXCJyZWFkOiBlbWl0UmVhZGFibGVcIix0Lmxlbmd0aCx0LmVuZGVkKTtpZih0Lmxlbmd0aD09PTAmJnQuZW5kZWQpZW5kUmVhZGFibGUodGhpcyk7ZWxzZSBlbWl0UmVhZGFibGUodGhpcyk7cmV0dXJuIG51bGx9ZT1ob3dNdWNoVG9SZWFkKGUsdCk7aWYoZT09PTAmJnQuZW5kZWQpe2lmKHQubGVuZ3RoPT09MCllbmRSZWFkYWJsZSh0aGlzKTtyZXR1cm4gbnVsbH12YXIgaT10Lm5lZWRSZWFkYWJsZTtkKFwibmVlZCByZWFkYWJsZVwiLGkpO2lmKHQubGVuZ3RoPT09MHx8dC5sZW5ndGgtZTx0LmhpZ2hXYXRlck1hcmspe2k9dHJ1ZTtkKFwibGVuZ3RoIGxlc3MgdGhhbiB3YXRlcm1hcmtcIixpKX1pZih0LmVuZGVkfHx0LnJlYWRpbmcpe2k9ZmFsc2U7ZChcInJlYWRpbmcgb3IgZW5kZWRcIixpKX1lbHNlIGlmKGkpe2QoXCJkbyByZWFkXCIpO3QucmVhZGluZz10cnVlO3Quc3luYz10cnVlO2lmKHQubGVuZ3RoPT09MCl0Lm5lZWRSZWFkYWJsZT10cnVlO3RoaXMuX3JlYWQodC5oaWdoV2F0ZXJNYXJrKTt0LnN5bmM9ZmFsc2U7aWYoIXQucmVhZGluZyllPWhvd011Y2hUb1JlYWQocix0KX12YXIgbjtpZihlPjApbj1mcm9tTGlzdChlLHQpO2Vsc2Ugbj1udWxsO2lmKG49PT1udWxsKXt0Lm5lZWRSZWFkYWJsZT10Lmxlbmd0aDw9dC5oaWdoV2F0ZXJNYXJrO2U9MH1lbHNle3QubGVuZ3RoLT1lO3QuYXdhaXREcmFpbj0wfWlmKHQubGVuZ3RoPT09MCl7aWYoIXQuZW5kZWQpdC5uZWVkUmVhZGFibGU9dHJ1ZTtpZihyIT09ZSYmdC5lbmRlZCllbmRSZWFkYWJsZSh0aGlzKX1pZihuIT09bnVsbCl0aGlzLmVtaXQoXCJkYXRhXCIsbik7cmV0dXJuIG59O2Z1bmN0aW9uIG9uRW9mQ2h1bmsoZSx0KXtkKFwib25Fb2ZDaHVua1wiKTtpZih0LmVuZGVkKXJldHVybjtpZih0LmRlY29kZXIpe3ZhciByPXQuZGVjb2Rlci5lbmQoKTtpZihyJiZyLmxlbmd0aCl7dC5idWZmZXIucHVzaChyKTt0Lmxlbmd0aCs9dC5vYmplY3RNb2RlPzE6ci5sZW5ndGh9fXQuZW5kZWQ9dHJ1ZTtpZih0LnN5bmMpe2VtaXRSZWFkYWJsZShlKX1lbHNle3QubmVlZFJlYWRhYmxlPWZhbHNlO2lmKCF0LmVtaXR0ZWRSZWFkYWJsZSl7dC5lbWl0dGVkUmVhZGFibGU9dHJ1ZTtlbWl0UmVhZGFibGVfKGUpfX19ZnVuY3Rpb24gZW1pdFJlYWRhYmxlKGUpe3ZhciB0PWUuX3JlYWRhYmxlU3RhdGU7ZChcImVtaXRSZWFkYWJsZVwiLHQubmVlZFJlYWRhYmxlLHQuZW1pdHRlZFJlYWRhYmxlKTt0Lm5lZWRSZWFkYWJsZT1mYWxzZTtpZighdC5lbWl0dGVkUmVhZGFibGUpe2QoXCJlbWl0UmVhZGFibGVcIix0LmZsb3dpbmcpO3QuZW1pdHRlZFJlYWRhYmxlPXRydWU7cHJvY2Vzcy5uZXh0VGljayhlbWl0UmVhZGFibGVfLGUpfX1mdW5jdGlvbiBlbWl0UmVhZGFibGVfKGUpe3ZhciB0PWUuX3JlYWRhYmxlU3RhdGU7ZChcImVtaXRSZWFkYWJsZV9cIix0LmRlc3Ryb3llZCx0Lmxlbmd0aCx0LmVuZGVkKTtpZighdC5kZXN0cm95ZWQmJih0Lmxlbmd0aHx8dC5lbmRlZCkpe2UuZW1pdChcInJlYWRhYmxlXCIpO3QuZW1pdHRlZFJlYWRhYmxlPWZhbHNlfXQubmVlZFJlYWRhYmxlPSF0LmZsb3dpbmcmJiF0LmVuZGVkJiZ0Lmxlbmd0aDw9dC5oaWdoV2F0ZXJNYXJrO2Zsb3coZSl9ZnVuY3Rpb24gbWF5YmVSZWFkTW9yZShlLHQpe2lmKCF0LnJlYWRpbmdNb3JlKXt0LnJlYWRpbmdNb3JlPXRydWU7cHJvY2Vzcy5uZXh0VGljayhtYXliZVJlYWRNb3JlXyxlLHQpfX1mdW5jdGlvbiBtYXliZVJlYWRNb3JlXyhlLHQpe3doaWxlKCF0LnJlYWRpbmcmJiF0LmVuZGVkJiYodC5sZW5ndGg8dC5oaWdoV2F0ZXJNYXJrfHx0LmZsb3dpbmcmJnQubGVuZ3RoPT09MCkpe3ZhciByPXQubGVuZ3RoO2QoXCJtYXliZVJlYWRNb3JlIHJlYWQgMFwiKTtlLnJlYWQoMCk7aWYocj09PXQubGVuZ3RoKWJyZWFrfXQucmVhZGluZ01vcmU9ZmFsc2V9UmVhZGFibGUucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKGUpe0UodGhpcyxuZXcgZyhcIl9yZWFkKClcIikpfTtSZWFkYWJsZS5wcm90b3R5cGUucGlwZT1mdW5jdGlvbihlLHQpe3ZhciByPXRoaXM7dmFyIGk9dGhpcy5fcmVhZGFibGVTdGF0ZTtzd2l0Y2goaS5waXBlc0NvdW50KXtjYXNlIDA6aS5waXBlcz1lO2JyZWFrO2Nhc2UgMTppLnBpcGVzPVtpLnBpcGVzLGVdO2JyZWFrO2RlZmF1bHQ6aS5waXBlcy5wdXNoKGUpO2JyZWFrfWkucGlwZXNDb3VudCs9MTtkKFwicGlwZSBjb3VudD0lZCBvcHRzPSVqXCIsaS5waXBlc0NvdW50LHQpO3ZhciBuPSghdHx8dC5lbmQhPT1mYWxzZSkmJmUhPT1wcm9jZXNzLnN0ZG91dCYmZSE9PXByb2Nlc3Muc3RkZXJyO3ZhciBzPW4/b25lbmQ6dW5waXBlO2lmKGkuZW5kRW1pdHRlZClwcm9jZXNzLm5leHRUaWNrKHMpO2Vsc2Ugci5vbmNlKFwiZW5kXCIscyk7ZS5vbihcInVucGlwZVwiLG9udW5waXBlKTtmdW5jdGlvbiBvbnVucGlwZShlLHQpe2QoXCJvbnVucGlwZVwiKTtpZihlPT09cil7aWYodCYmdC5oYXNVbnBpcGVkPT09ZmFsc2Upe3QuaGFzVW5waXBlZD10cnVlO2NsZWFudXAoKX19fWZ1bmN0aW9uIG9uZW5kKCl7ZChcIm9uZW5kXCIpO2UuZW5kKCl9dmFyIG89cGlwZU9uRHJhaW4ocik7ZS5vbihcImRyYWluXCIsbyk7dmFyIGg9ZmFsc2U7ZnVuY3Rpb24gY2xlYW51cCgpe2QoXCJjbGVhbnVwXCIpO2UucmVtb3ZlTGlzdGVuZXIoXCJjbG9zZVwiLG9uY2xvc2UpO2UucmVtb3ZlTGlzdGVuZXIoXCJmaW5pc2hcIixvbmZpbmlzaCk7ZS5yZW1vdmVMaXN0ZW5lcihcImRyYWluXCIsbyk7ZS5yZW1vdmVMaXN0ZW5lcihcImVycm9yXCIsb25lcnJvcik7ZS5yZW1vdmVMaXN0ZW5lcihcInVucGlwZVwiLG9udW5waXBlKTtyLnJlbW92ZUxpc3RlbmVyKFwiZW5kXCIsb25lbmQpO3IucmVtb3ZlTGlzdGVuZXIoXCJlbmRcIix1bnBpcGUpO3IucmVtb3ZlTGlzdGVuZXIoXCJkYXRhXCIsb25kYXRhKTtoPXRydWU7aWYoaS5hd2FpdERyYWluJiYoIWUuX3dyaXRhYmxlU3RhdGV8fGUuX3dyaXRhYmxlU3RhdGUubmVlZERyYWluKSlvKCl9ci5vbihcImRhdGFcIixvbmRhdGEpO2Z1bmN0aW9uIG9uZGF0YSh0KXtkKFwib25kYXRhXCIpO3ZhciBuPWUud3JpdGUodCk7ZChcImRlc3Qud3JpdGVcIixuKTtpZihuPT09ZmFsc2Upe2lmKChpLnBpcGVzQ291bnQ9PT0xJiZpLnBpcGVzPT09ZXx8aS5waXBlc0NvdW50PjEmJmluZGV4T2YoaS5waXBlcyxlKSE9PS0xKSYmIWgpe2QoXCJmYWxzZSB3cml0ZSByZXNwb25zZSwgcGF1c2VcIixpLmF3YWl0RHJhaW4pO2kuYXdhaXREcmFpbisrfXIucGF1c2UoKX19ZnVuY3Rpb24gb25lcnJvcih0KXtkKFwib25lcnJvclwiLHQpO3VucGlwZSgpO2UucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLG9uZXJyb3IpO2lmKGEoZSxcImVycm9yXCIpPT09MClFKGUsdCl9cHJlcGVuZExpc3RlbmVyKGUsXCJlcnJvclwiLG9uZXJyb3IpO2Z1bmN0aW9uIG9uY2xvc2UoKXtlLnJlbW92ZUxpc3RlbmVyKFwiZmluaXNoXCIsb25maW5pc2gpO3VucGlwZSgpfWUub25jZShcImNsb3NlXCIsb25jbG9zZSk7ZnVuY3Rpb24gb25maW5pc2goKXtkKFwib25maW5pc2hcIik7ZS5yZW1vdmVMaXN0ZW5lcihcImNsb3NlXCIsb25jbG9zZSk7dW5waXBlKCl9ZS5vbmNlKFwiZmluaXNoXCIsb25maW5pc2gpO2Z1bmN0aW9uIHVucGlwZSgpe2QoXCJ1bnBpcGVcIik7ci51bnBpcGUoZSl9ZS5lbWl0KFwicGlwZVwiLHIpO2lmKCFpLmZsb3dpbmcpe2QoXCJwaXBlIHJlc3VtZVwiKTtyLnJlc3VtZSgpfXJldHVybiBlfTtmdW5jdGlvbiBwaXBlT25EcmFpbihlKXtyZXR1cm4gZnVuY3Rpb24gcGlwZU9uRHJhaW5GdW5jdGlvblJlc3VsdCgpe3ZhciB0PWUuX3JlYWRhYmxlU3RhdGU7ZChcInBpcGVPbkRyYWluXCIsdC5hd2FpdERyYWluKTtpZih0LmF3YWl0RHJhaW4pdC5hd2FpdERyYWluLS07aWYodC5hd2FpdERyYWluPT09MCYmYShlLFwiZGF0YVwiKSl7dC5mbG93aW5nPXRydWU7ZmxvdyhlKX19fVJlYWRhYmxlLnByb3RvdHlwZS51bnBpcGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fcmVhZGFibGVTdGF0ZTt2YXIgcj17aGFzVW5waXBlZDpmYWxzZX07aWYodC5waXBlc0NvdW50PT09MClyZXR1cm4gdGhpcztpZih0LnBpcGVzQ291bnQ9PT0xKXtpZihlJiZlIT09dC5waXBlcylyZXR1cm4gdGhpcztpZighZSllPXQucGlwZXM7dC5waXBlcz1udWxsO3QucGlwZXNDb3VudD0wO3QuZmxvd2luZz1mYWxzZTtpZihlKWUuZW1pdChcInVucGlwZVwiLHRoaXMscik7cmV0dXJuIHRoaXN9aWYoIWUpe3ZhciBpPXQucGlwZXM7dmFyIG49dC5waXBlc0NvdW50O3QucGlwZXM9bnVsbDt0LnBpcGVzQ291bnQ9MDt0LmZsb3dpbmc9ZmFsc2U7Zm9yKHZhciBhPTA7YTxuO2ErKyl7aVthXS5lbWl0KFwidW5waXBlXCIsdGhpcyx7aGFzVW5waXBlZDpmYWxzZX0pfXJldHVybiB0aGlzfXZhciBzPWluZGV4T2YodC5waXBlcyxlKTtpZihzPT09LTEpcmV0dXJuIHRoaXM7dC5waXBlcy5zcGxpY2UocywxKTt0LnBpcGVzQ291bnQtPTE7aWYodC5waXBlc0NvdW50PT09MSl0LnBpcGVzPXQucGlwZXNbMF07ZS5lbWl0KFwidW5waXBlXCIsdGhpcyxyKTtyZXR1cm4gdGhpc307UmVhZGFibGUucHJvdG90eXBlLm9uPWZ1bmN0aW9uKGUsdCl7dmFyIHI9cy5wcm90b3R5cGUub24uY2FsbCh0aGlzLGUsdCk7dmFyIGk9dGhpcy5fcmVhZGFibGVTdGF0ZTtpZihlPT09XCJkYXRhXCIpe2kucmVhZGFibGVMaXN0ZW5pbmc9dGhpcy5saXN0ZW5lckNvdW50KFwicmVhZGFibGVcIik+MDtpZihpLmZsb3dpbmchPT1mYWxzZSl0aGlzLnJlc3VtZSgpfWVsc2UgaWYoZT09PVwicmVhZGFibGVcIil7aWYoIWkuZW5kRW1pdHRlZCYmIWkucmVhZGFibGVMaXN0ZW5pbmcpe2kucmVhZGFibGVMaXN0ZW5pbmc9aS5uZWVkUmVhZGFibGU9dHJ1ZTtpLmZsb3dpbmc9ZmFsc2U7aS5lbWl0dGVkUmVhZGFibGU9ZmFsc2U7ZChcIm9uIHJlYWRhYmxlXCIsaS5sZW5ndGgsaS5yZWFkaW5nKTtpZihpLmxlbmd0aCl7ZW1pdFJlYWRhYmxlKHRoaXMpfWVsc2UgaWYoIWkucmVhZGluZyl7cHJvY2Vzcy5uZXh0VGljayhuUmVhZGluZ05leHRUaWNrLHRoaXMpfX19cmV0dXJuIHJ9O1JlYWRhYmxlLnByb3RvdHlwZS5hZGRMaXN0ZW5lcj1SZWFkYWJsZS5wcm90b3R5cGUub247UmVhZGFibGUucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyPWZ1bmN0aW9uKGUsdCl7dmFyIHI9cy5wcm90b3R5cGUucmVtb3ZlTGlzdGVuZXIuY2FsbCh0aGlzLGUsdCk7aWYoZT09PVwicmVhZGFibGVcIil7cHJvY2Vzcy5uZXh0VGljayh1cGRhdGVSZWFkYWJsZUxpc3RlbmluZyx0aGlzKX1yZXR1cm4gcn07UmVhZGFibGUucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycz1mdW5jdGlvbihlKXt2YXIgdD1zLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnMuYXBwbHkodGhpcyxhcmd1bWVudHMpO2lmKGU9PT1cInJlYWRhYmxlXCJ8fGU9PT11bmRlZmluZWQpe3Byb2Nlc3MubmV4dFRpY2sodXBkYXRlUmVhZGFibGVMaXN0ZW5pbmcsdGhpcyl9cmV0dXJuIHR9O2Z1bmN0aW9uIHVwZGF0ZVJlYWRhYmxlTGlzdGVuaW5nKGUpe3ZhciB0PWUuX3JlYWRhYmxlU3RhdGU7dC5yZWFkYWJsZUxpc3RlbmluZz1lLmxpc3RlbmVyQ291bnQoXCJyZWFkYWJsZVwiKT4wO2lmKHQucmVzdW1lU2NoZWR1bGVkJiYhdC5wYXVzZWQpe3QuZmxvd2luZz10cnVlfWVsc2UgaWYoZS5saXN0ZW5lckNvdW50KFwiZGF0YVwiKT4wKXtlLnJlc3VtZSgpfX1mdW5jdGlvbiBuUmVhZGluZ05leHRUaWNrKGUpe2QoXCJyZWFkYWJsZSBuZXh0dGljayByZWFkIDBcIik7ZS5yZWFkKDApfVJlYWRhYmxlLnByb3RvdHlwZS5yZXN1bWU9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl9yZWFkYWJsZVN0YXRlO2lmKCFlLmZsb3dpbmcpe2QoXCJyZXN1bWVcIik7ZS5mbG93aW5nPSFlLnJlYWRhYmxlTGlzdGVuaW5nO3Jlc3VtZSh0aGlzLGUpfWUucGF1c2VkPWZhbHNlO3JldHVybiB0aGlzfTtmdW5jdGlvbiByZXN1bWUoZSx0KXtpZighdC5yZXN1bWVTY2hlZHVsZWQpe3QucmVzdW1lU2NoZWR1bGVkPXRydWU7cHJvY2Vzcy5uZXh0VGljayhyZXN1bWVfLGUsdCl9fWZ1bmN0aW9uIHJlc3VtZV8oZSx0KXtkKFwicmVzdW1lXCIsdC5yZWFkaW5nKTtpZighdC5yZWFkaW5nKXtlLnJlYWQoMCl9dC5yZXN1bWVTY2hlZHVsZWQ9ZmFsc2U7ZS5lbWl0KFwicmVzdW1lXCIpO2Zsb3coZSk7aWYodC5mbG93aW5nJiYhdC5yZWFkaW5nKWUucmVhZCgwKX1SZWFkYWJsZS5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oKXtkKFwiY2FsbCBwYXVzZSBmbG93aW5nPSVqXCIsdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nKTtpZih0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmchPT1mYWxzZSl7ZChcInBhdXNlXCIpO3RoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZz1mYWxzZTt0aGlzLmVtaXQoXCJwYXVzZVwiKX10aGlzLl9yZWFkYWJsZVN0YXRlLnBhdXNlZD10cnVlO3JldHVybiB0aGlzfTtmdW5jdGlvbiBmbG93KGUpe3ZhciB0PWUuX3JlYWRhYmxlU3RhdGU7ZChcImZsb3dcIix0LmZsb3dpbmcpO3doaWxlKHQuZmxvd2luZyYmZS5yZWFkKCkhPT1udWxsKXt9fVJlYWRhYmxlLnByb3RvdHlwZS53cmFwPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXM7dmFyIHI9dGhpcy5fcmVhZGFibGVTdGF0ZTt2YXIgaT1mYWxzZTtlLm9uKFwiZW5kXCIsKGZ1bmN0aW9uKCl7ZChcIndyYXBwZWQgZW5kXCIpO2lmKHIuZGVjb2RlciYmIXIuZW5kZWQpe3ZhciBlPXIuZGVjb2Rlci5lbmQoKTtpZihlJiZlLmxlbmd0aCl0LnB1c2goZSl9dC5wdXNoKG51bGwpfSkpO2Uub24oXCJkYXRhXCIsKGZ1bmN0aW9uKG4pe2QoXCJ3cmFwcGVkIGRhdGFcIik7aWYoci5kZWNvZGVyKW49ci5kZWNvZGVyLndyaXRlKG4pO2lmKHIub2JqZWN0TW9kZSYmKG49PT1udWxsfHxuPT09dW5kZWZpbmVkKSlyZXR1cm47ZWxzZSBpZighci5vYmplY3RNb2RlJiYoIW58fCFuLmxlbmd0aCkpcmV0dXJuO3ZhciBhPXQucHVzaChuKTtpZighYSl7aT10cnVlO2UucGF1c2UoKX19KSk7Zm9yKHZhciBuIGluIGUpe2lmKHRoaXNbbl09PT11bmRlZmluZWQmJnR5cGVvZiBlW25dPT09XCJmdW5jdGlvblwiKXt0aGlzW25dPWZ1bmN0aW9uIG1ldGhvZFdyYXAodCl7cmV0dXJuIGZ1bmN0aW9uIG1ldGhvZFdyYXBSZXR1cm5GdW5jdGlvbigpe3JldHVybiBlW3RdLmFwcGx5KGUsYXJndW1lbnRzKX19KG4pfX1mb3IodmFyIGE9MDthPGsubGVuZ3RoO2ErKyl7ZS5vbihrW2FdLHRoaXMuZW1pdC5iaW5kKHRoaXMsa1thXSkpfXRoaXMuX3JlYWQ9ZnVuY3Rpb24odCl7ZChcIndyYXBwZWQgX3JlYWRcIix0KTtpZihpKXtpPWZhbHNlO2UucmVzdW1lKCl9fTtyZXR1cm4gdGhpc307aWYodHlwZW9mIFN5bWJvbD09PVwiZnVuY3Rpb25cIil7UmVhZGFibGUucHJvdG90eXBlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXT1mdW5jdGlvbigpe2lmKE09PT11bmRlZmluZWQpe009cig2ODcxKX1yZXR1cm4gTSh0aGlzKX19T2JqZWN0LmRlZmluZVByb3BlcnR5KFJlYWRhYmxlLnByb3RvdHlwZSxcInJlYWRhYmxlSGlnaFdhdGVyTWFya1wiLHtlbnVtZXJhYmxlOmZhbHNlLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5oaWdoV2F0ZXJNYXJrfX0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShSZWFkYWJsZS5wcm90b3R5cGUsXCJyZWFkYWJsZUJ1ZmZlclwiLHtlbnVtZXJhYmxlOmZhbHNlLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZSYmdGhpcy5fcmVhZGFibGVTdGF0ZS5idWZmZXJ9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KFJlYWRhYmxlLnByb3RvdHlwZSxcInJlYWRhYmxlRmxvd2luZ1wiLHtlbnVtZXJhYmxlOmZhbHNlLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nfSxzZXQ6ZnVuY3Rpb24gc2V0KGUpe2lmKHRoaXMuX3JlYWRhYmxlU3RhdGUpe3RoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZz1lfX19KTtSZWFkYWJsZS5fZnJvbUxpc3Q9ZnJvbUxpc3Q7T2JqZWN0LmRlZmluZVByb3BlcnR5KFJlYWRhYmxlLnByb3RvdHlwZSxcInJlYWRhYmxlTGVuZ3RoXCIse2VudW1lcmFibGU6ZmFsc2UsZ2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLl9yZWFkYWJsZVN0YXRlLmxlbmd0aH19KTtmdW5jdGlvbiBmcm9tTGlzdChlLHQpe2lmKHQubGVuZ3RoPT09MClyZXR1cm4gbnVsbDt2YXIgcjtpZih0Lm9iamVjdE1vZGUpcj10LmJ1ZmZlci5zaGlmdCgpO2Vsc2UgaWYoIWV8fGU+PXQubGVuZ3RoKXtpZih0LmRlY29kZXIpcj10LmJ1ZmZlci5qb2luKFwiXCIpO2Vsc2UgaWYodC5idWZmZXIubGVuZ3RoPT09MSlyPXQuYnVmZmVyLmZpcnN0KCk7ZWxzZSByPXQuYnVmZmVyLmNvbmNhdCh0Lmxlbmd0aCk7dC5idWZmZXIuY2xlYXIoKX1lbHNle3I9dC5idWZmZXIuY29uc3VtZShlLHQuZGVjb2Rlcil9cmV0dXJuIHJ9ZnVuY3Rpb24gZW5kUmVhZGFibGUoZSl7dmFyIHQ9ZS5fcmVhZGFibGVTdGF0ZTtkKFwiZW5kUmVhZGFibGVcIix0LmVuZEVtaXR0ZWQpO2lmKCF0LmVuZEVtaXR0ZWQpe3QuZW5kZWQ9dHJ1ZTtwcm9jZXNzLm5leHRUaWNrKGVuZFJlYWRhYmxlTlQsdCxlKX19ZnVuY3Rpb24gZW5kUmVhZGFibGVOVChlLHQpe2QoXCJlbmRSZWFkYWJsZU5UXCIsZS5lbmRFbWl0dGVkLGUubGVuZ3RoKTtpZighZS5lbmRFbWl0dGVkJiZlLmxlbmd0aD09PTApe2UuZW5kRW1pdHRlZD10cnVlO3QucmVhZGFibGU9ZmFsc2U7dC5lbWl0KFwiZW5kXCIpO2lmKGUuYXV0b0Rlc3Ryb3kpe3ZhciByPXQuX3dyaXRhYmxlU3RhdGU7aWYoIXJ8fHIuYXV0b0Rlc3Ryb3kmJnIuZmluaXNoZWQpe3QuZGVzdHJveSgpfX19fWlmKHR5cGVvZiBTeW1ib2w9PT1cImZ1bmN0aW9uXCIpe1JlYWRhYmxlLmZyb209ZnVuY3Rpb24oZSx0KXtpZihCPT09dW5kZWZpbmVkKXtCPXIoOTcyNyl9cmV0dXJuIEIoUmVhZGFibGUsZSx0KX19ZnVuY3Rpb24gaW5kZXhPZihlLHQpe2Zvcih2YXIgcj0wLGk9ZS5sZW5ndGg7cjxpO3IrKyl7aWYoZVtyXT09PXQpcmV0dXJuIHJ9cmV0dXJuLTF9fSwxMTcwOmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9VHJhbnNmb3JtO3ZhciBpPXIoNDY0NikucSxuPWkuRVJSX01FVEhPRF9OT1RfSU1QTEVNRU5URUQsYT1pLkVSUl9NVUxUSVBMRV9DQUxMQkFDSyxzPWkuRVJSX1RSQU5TRk9STV9BTFJFQURZX1RSQU5TRk9STUlORyxvPWkuRVJSX1RSQU5TRk9STV9XSVRIX0xFTkdUSF8wO3ZhciBoPXIoMjQwMyk7cigzNzgyKShUcmFuc2Zvcm0saCk7ZnVuY3Rpb24gYWZ0ZXJUcmFuc2Zvcm0oZSx0KXt2YXIgcj10aGlzLl90cmFuc2Zvcm1TdGF0ZTtyLnRyYW5zZm9ybWluZz1mYWxzZTt2YXIgaT1yLndyaXRlY2I7aWYoaT09PW51bGwpe3JldHVybiB0aGlzLmVtaXQoXCJlcnJvclwiLG5ldyBhKX1yLndyaXRlY2h1bms9bnVsbDtyLndyaXRlY2I9bnVsbDtpZih0IT1udWxsKXRoaXMucHVzaCh0KTtpKGUpO3ZhciBuPXRoaXMuX3JlYWRhYmxlU3RhdGU7bi5yZWFkaW5nPWZhbHNlO2lmKG4ubmVlZFJlYWRhYmxlfHxuLmxlbmd0aDxuLmhpZ2hXYXRlck1hcmspe3RoaXMuX3JlYWQobi5oaWdoV2F0ZXJNYXJrKX19ZnVuY3Rpb24gVHJhbnNmb3JtKGUpe2lmKCEodGhpcyBpbnN0YW5jZW9mIFRyYW5zZm9ybSkpcmV0dXJuIG5ldyBUcmFuc2Zvcm0oZSk7aC5jYWxsKHRoaXMsZSk7dGhpcy5fdHJhbnNmb3JtU3RhdGU9e2FmdGVyVHJhbnNmb3JtOmFmdGVyVHJhbnNmb3JtLmJpbmQodGhpcyksbmVlZFRyYW5zZm9ybTpmYWxzZSx0cmFuc2Zvcm1pbmc6ZmFsc2Usd3JpdGVjYjpudWxsLHdyaXRlY2h1bms6bnVsbCx3cml0ZWVuY29kaW5nOm51bGx9O3RoaXMuX3JlYWRhYmxlU3RhdGUubmVlZFJlYWRhYmxlPXRydWU7dGhpcy5fcmVhZGFibGVTdGF0ZS5zeW5jPWZhbHNlO2lmKGUpe2lmKHR5cGVvZiBlLnRyYW5zZm9ybT09PVwiZnVuY3Rpb25cIil0aGlzLl90cmFuc2Zvcm09ZS50cmFuc2Zvcm07aWYodHlwZW9mIGUuZmx1c2g9PT1cImZ1bmN0aW9uXCIpdGhpcy5fZmx1c2g9ZS5mbHVzaH10aGlzLm9uKFwicHJlZmluaXNoXCIscHJlZmluaXNoKX1mdW5jdGlvbiBwcmVmaW5pc2goKXt2YXIgZT10aGlzO2lmKHR5cGVvZiB0aGlzLl9mbHVzaD09PVwiZnVuY3Rpb25cIiYmIXRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkKXt0aGlzLl9mbHVzaCgoZnVuY3Rpb24odCxyKXtkb25lKGUsdCxyKX0pKX1lbHNle2RvbmUodGhpcyxudWxsLG51bGwpfX1UcmFuc2Zvcm0ucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24oZSx0KXt0aGlzLl90cmFuc2Zvcm1TdGF0ZS5uZWVkVHJhbnNmb3JtPWZhbHNlO3JldHVybiBoLnByb3RvdHlwZS5wdXNoLmNhbGwodGhpcyxlLHQpfTtUcmFuc2Zvcm0ucHJvdG90eXBlLl90cmFuc2Zvcm09ZnVuY3Rpb24oZSx0LHIpe3IobmV3IG4oXCJfdHJhbnNmb3JtKClcIikpfTtUcmFuc2Zvcm0ucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbihlLHQscil7dmFyIGk9dGhpcy5fdHJhbnNmb3JtU3RhdGU7aS53cml0ZWNiPXI7aS53cml0ZWNodW5rPWU7aS53cml0ZWVuY29kaW5nPXQ7aWYoIWkudHJhbnNmb3JtaW5nKXt2YXIgbj10aGlzLl9yZWFkYWJsZVN0YXRlO2lmKGkubmVlZFRyYW5zZm9ybXx8bi5uZWVkUmVhZGFibGV8fG4ubGVuZ3RoPG4uaGlnaFdhdGVyTWFyayl0aGlzLl9yZWFkKG4uaGlnaFdhdGVyTWFyayl9fTtUcmFuc2Zvcm0ucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX3RyYW5zZm9ybVN0YXRlO2lmKHQud3JpdGVjaHVuayE9PW51bGwmJiF0LnRyYW5zZm9ybWluZyl7dC50cmFuc2Zvcm1pbmc9dHJ1ZTt0aGlzLl90cmFuc2Zvcm0odC53cml0ZWNodW5rLHQud3JpdGVlbmNvZGluZyx0LmFmdGVyVHJhbnNmb3JtKX1lbHNle3QubmVlZFRyYW5zZm9ybT10cnVlfX07VHJhbnNmb3JtLnByb3RvdHlwZS5fZGVzdHJveT1mdW5jdGlvbihlLHQpe2gucHJvdG90eXBlLl9kZXN0cm95LmNhbGwodGhpcyxlLChmdW5jdGlvbihlKXt0KGUpfSkpfTtmdW5jdGlvbiBkb25lKGUsdCxyKXtpZih0KXJldHVybiBlLmVtaXQoXCJlcnJvclwiLHQpO2lmKHIhPW51bGwpZS5wdXNoKHIpO2lmKGUuX3dyaXRhYmxlU3RhdGUubGVuZ3RoKXRocm93IG5ldyBvO2lmKGUuX3RyYW5zZm9ybVN0YXRlLnRyYW5zZm9ybWluZyl0aHJvdyBuZXcgcztyZXR1cm4gZS5wdXNoKG51bGwpfX0sNzMzNzpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPVdyaXRhYmxlO2Z1bmN0aW9uIFdyaXRlUmVxKGUsdCxyKXt0aGlzLmNodW5rPWU7dGhpcy5lbmNvZGluZz10O3RoaXMuY2FsbGJhY2s9cjt0aGlzLm5leHQ9bnVsbH1mdW5jdGlvbiBDb3JrZWRSZXF1ZXN0KGUpe3ZhciB0PXRoaXM7dGhpcy5uZXh0PW51bGw7dGhpcy5lbnRyeT1udWxsO3RoaXMuZmluaXNoPWZ1bmN0aW9uKCl7b25Db3JrZWRGaW5pc2godCxlKX19dmFyIGk7V3JpdGFibGUuV3JpdGFibGVTdGF0ZT1Xcml0YWJsZVN0YXRlO3ZhciBuPXtkZXByZWNhdGU6cig2NzY5KX07dmFyIGE9cig0Njc4KTt2YXIgcz1yKDQzMDApLkJ1ZmZlcjt2YXIgbz1nbG9iYWwuVWludDhBcnJheXx8ZnVuY3Rpb24oKXt9O2Z1bmN0aW9uIF91aW50OEFycmF5VG9CdWZmZXIoZSl7cmV0dXJuIHMuZnJvbShlKX1mdW5jdGlvbiBfaXNVaW50OEFycmF5KGUpe3JldHVybiBzLmlzQnVmZmVyKGUpfHxlIGluc3RhbmNlb2Ygb312YXIgaD1yKDcwMjUpO3ZhciB1PXIoNjc3NiksZD11LmdldEhpZ2hXYXRlck1hcms7dmFyIGM9cig0NjQ2KS5xLGw9Yy5FUlJfSU5WQUxJRF9BUkdfVFlQRSxwPWMuRVJSX01FVEhPRF9OT1RfSU1QTEVNRU5URUQsdj1jLkVSUl9NVUxUSVBMRV9DQUxMQkFDSyxiPWMuRVJSX1NUUkVBTV9DQU5OT1RfUElQRSxtPWMuRVJSX1NUUkVBTV9ERVNUUk9ZRUQseT1jLkVSUl9TVFJFQU1fTlVMTF9WQUxVRVMsZz1jLkVSUl9TVFJFQU1fV1JJVEVfQUZURVJfRU5ELF89Yy5FUlJfVU5LTk9XTl9FTkNPRElORzt2YXIgdz1oLmVycm9yT3JEZXN0cm95O3IoMzc4MikoV3JpdGFibGUsYSk7ZnVuY3Rpb24gbm9wKCl7fWZ1bmN0aW9uIFdyaXRhYmxlU3RhdGUoZSx0LG4pe2k9aXx8cigyNDAzKTtlPWV8fHt9O2lmKHR5cGVvZiBuIT09XCJib29sZWFuXCIpbj10IGluc3RhbmNlb2YgaTt0aGlzLm9iamVjdE1vZGU9ISFlLm9iamVjdE1vZGU7aWYobil0aGlzLm9iamVjdE1vZGU9dGhpcy5vYmplY3RNb2RlfHwhIWUud3JpdGFibGVPYmplY3RNb2RlO3RoaXMuaGlnaFdhdGVyTWFyaz1kKHRoaXMsZSxcIndyaXRhYmxlSGlnaFdhdGVyTWFya1wiLG4pO3RoaXMuZmluYWxDYWxsZWQ9ZmFsc2U7dGhpcy5uZWVkRHJhaW49ZmFsc2U7dGhpcy5lbmRpbmc9ZmFsc2U7dGhpcy5lbmRlZD1mYWxzZTt0aGlzLmZpbmlzaGVkPWZhbHNlO3RoaXMuZGVzdHJveWVkPWZhbHNlO3ZhciBhPWUuZGVjb2RlU3RyaW5ncz09PWZhbHNlO3RoaXMuZGVjb2RlU3RyaW5ncz0hYTt0aGlzLmRlZmF1bHRFbmNvZGluZz1lLmRlZmF1bHRFbmNvZGluZ3x8XCJ1dGY4XCI7dGhpcy5sZW5ndGg9MDt0aGlzLndyaXRpbmc9ZmFsc2U7dGhpcy5jb3JrZWQ9MDt0aGlzLnN5bmM9dHJ1ZTt0aGlzLmJ1ZmZlclByb2Nlc3Npbmc9ZmFsc2U7dGhpcy5vbndyaXRlPWZ1bmN0aW9uKGUpe29ud3JpdGUodCxlKX07dGhpcy53cml0ZWNiPW51bGw7dGhpcy53cml0ZWxlbj0wO3RoaXMuYnVmZmVyZWRSZXF1ZXN0PW51bGw7dGhpcy5sYXN0QnVmZmVyZWRSZXF1ZXN0PW51bGw7dGhpcy5wZW5kaW5nY2I9MDt0aGlzLnByZWZpbmlzaGVkPWZhbHNlO3RoaXMuZXJyb3JFbWl0dGVkPWZhbHNlO3RoaXMuZW1pdENsb3NlPWUuZW1pdENsb3NlIT09ZmFsc2U7dGhpcy5hdXRvRGVzdHJveT0hIWUuYXV0b0Rlc3Ryb3k7dGhpcy5idWZmZXJlZFJlcXVlc3RDb3VudD0wO3RoaXMuY29ya2VkUmVxdWVzdHNGcmVlPW5ldyBDb3JrZWRSZXF1ZXN0KHRoaXMpfVdyaXRhYmxlU3RhdGUucHJvdG90eXBlLmdldEJ1ZmZlcj1mdW5jdGlvbiBnZXRCdWZmZXIoKXt2YXIgZT10aGlzLmJ1ZmZlcmVkUmVxdWVzdDt2YXIgdD1bXTt3aGlsZShlKXt0LnB1c2goZSk7ZT1lLm5leHR9cmV0dXJuIHR9OyhmdW5jdGlvbigpe3RyeXtPYmplY3QuZGVmaW5lUHJvcGVydHkoV3JpdGFibGVTdGF0ZS5wcm90b3R5cGUsXCJidWZmZXJcIix7Z2V0Om4uZGVwcmVjYXRlKChmdW5jdGlvbiB3cml0YWJsZVN0YXRlQnVmZmVyR2V0dGVyKCl7cmV0dXJuIHRoaXMuZ2V0QnVmZmVyKCl9KSxcIl93cml0YWJsZVN0YXRlLmJ1ZmZlciBpcyBkZXByZWNhdGVkLiBVc2UgX3dyaXRhYmxlU3RhdGUuZ2V0QnVmZmVyIFwiK1wiaW5zdGVhZC5cIixcIkRFUDAwMDNcIil9KX1jYXRjaChlKXt9fSkoKTt2YXIgTTtpZih0eXBlb2YgU3ltYm9sPT09XCJmdW5jdGlvblwiJiZTeW1ib2wuaGFzSW5zdGFuY2UmJnR5cGVvZiBGdW5jdGlvbi5wcm90b3R5cGVbU3ltYm9sLmhhc0luc3RhbmNlXT09PVwiZnVuY3Rpb25cIil7TT1GdW5jdGlvbi5wcm90b3R5cGVbU3ltYm9sLmhhc0luc3RhbmNlXTtPYmplY3QuZGVmaW5lUHJvcGVydHkoV3JpdGFibGUsU3ltYm9sLmhhc0luc3RhbmNlLHt2YWx1ZTpmdW5jdGlvbiB2YWx1ZShlKXtpZihNLmNhbGwodGhpcyxlKSlyZXR1cm4gdHJ1ZTtpZih0aGlzIT09V3JpdGFibGUpcmV0dXJuIGZhbHNlO3JldHVybiBlJiZlLl93cml0YWJsZVN0YXRlIGluc3RhbmNlb2YgV3JpdGFibGVTdGF0ZX19KX1lbHNle009ZnVuY3Rpb24gcmVhbEhhc0luc3RhbmNlKGUpe3JldHVybiBlIGluc3RhbmNlb2YgdGhpc319ZnVuY3Rpb24gV3JpdGFibGUoZSl7aT1pfHxyKDI0MDMpO3ZhciB0PXRoaXMgaW5zdGFuY2VvZiBpO2lmKCF0JiYhTS5jYWxsKFdyaXRhYmxlLHRoaXMpKXJldHVybiBuZXcgV3JpdGFibGUoZSk7dGhpcy5fd3JpdGFibGVTdGF0ZT1uZXcgV3JpdGFibGVTdGF0ZShlLHRoaXMsdCk7dGhpcy53cml0YWJsZT10cnVlO2lmKGUpe2lmKHR5cGVvZiBlLndyaXRlPT09XCJmdW5jdGlvblwiKXRoaXMuX3dyaXRlPWUud3JpdGU7aWYodHlwZW9mIGUud3JpdGV2PT09XCJmdW5jdGlvblwiKXRoaXMuX3dyaXRldj1lLndyaXRldjtpZih0eXBlb2YgZS5kZXN0cm95PT09XCJmdW5jdGlvblwiKXRoaXMuX2Rlc3Ryb3k9ZS5kZXN0cm95O2lmKHR5cGVvZiBlLmZpbmFsPT09XCJmdW5jdGlvblwiKXRoaXMuX2ZpbmFsPWUuZmluYWx9YS5jYWxsKHRoaXMpfVdyaXRhYmxlLnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKCl7dyh0aGlzLG5ldyBiKX07ZnVuY3Rpb24gd3JpdGVBZnRlckVuZChlLHQpe3ZhciByPW5ldyBnO3coZSxyKTtwcm9jZXNzLm5leHRUaWNrKHQscil9ZnVuY3Rpb24gdmFsaWRDaHVuayhlLHQscixpKXt2YXIgbjtpZihyPT09bnVsbCl7bj1uZXcgeX1lbHNlIGlmKHR5cGVvZiByIT09XCJzdHJpbmdcIiYmIXQub2JqZWN0TW9kZSl7bj1uZXcgbChcImNodW5rXCIsW1wic3RyaW5nXCIsXCJCdWZmZXJcIl0scil9aWYobil7dyhlLG4pO3Byb2Nlc3MubmV4dFRpY2soaSxuKTtyZXR1cm4gZmFsc2V9cmV0dXJuIHRydWV9V3JpdGFibGUucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKGUsdCxyKXt2YXIgaT10aGlzLl93cml0YWJsZVN0YXRlO3ZhciBuPWZhbHNlO3ZhciBhPSFpLm9iamVjdE1vZGUmJl9pc1VpbnQ4QXJyYXkoZSk7aWYoYSYmIXMuaXNCdWZmZXIoZSkpe2U9X3VpbnQ4QXJyYXlUb0J1ZmZlcihlKX1pZih0eXBlb2YgdD09PVwiZnVuY3Rpb25cIil7cj10O3Q9bnVsbH1pZihhKXQ9XCJidWZmZXJcIjtlbHNlIGlmKCF0KXQ9aS5kZWZhdWx0RW5jb2Rpbmc7aWYodHlwZW9mIHIhPT1cImZ1bmN0aW9uXCIpcj1ub3A7aWYoaS5lbmRpbmcpd3JpdGVBZnRlckVuZCh0aGlzLHIpO2Vsc2UgaWYoYXx8dmFsaWRDaHVuayh0aGlzLGksZSxyKSl7aS5wZW5kaW5nY2IrKztuPXdyaXRlT3JCdWZmZXIodGhpcyxpLGEsZSx0LHIpfXJldHVybiBufTtXcml0YWJsZS5wcm90b3R5cGUuY29yaz1mdW5jdGlvbigpe3RoaXMuX3dyaXRhYmxlU3RhdGUuY29ya2VkKyt9O1dyaXRhYmxlLnByb3RvdHlwZS51bmNvcms9ZnVuY3Rpb24oKXt2YXIgZT10aGlzLl93cml0YWJsZVN0YXRlO2lmKGUuY29ya2VkKXtlLmNvcmtlZC0tO2lmKCFlLndyaXRpbmcmJiFlLmNvcmtlZCYmIWUuYnVmZmVyUHJvY2Vzc2luZyYmZS5idWZmZXJlZFJlcXVlc3QpY2xlYXJCdWZmZXIodGhpcyxlKX19O1dyaXRhYmxlLnByb3RvdHlwZS5zZXREZWZhdWx0RW5jb2Rpbmc9ZnVuY3Rpb24gc2V0RGVmYXVsdEVuY29kaW5nKGUpe2lmKHR5cGVvZiBlPT09XCJzdHJpbmdcIillPWUudG9Mb3dlckNhc2UoKTtpZighKFtcImhleFwiLFwidXRmOFwiLFwidXRmLThcIixcImFzY2lpXCIsXCJiaW5hcnlcIixcImJhc2U2NFwiLFwidWNzMlwiLFwidWNzLTJcIixcInV0ZjE2bGVcIixcInV0Zi0xNmxlXCIsXCJyYXdcIl0uaW5kZXhPZigoZStcIlwiKS50b0xvd2VyQ2FzZSgpKT4tMSkpdGhyb3cgbmV3IF8oZSk7dGhpcy5fd3JpdGFibGVTdGF0ZS5kZWZhdWx0RW5jb2Rpbmc9ZTtyZXR1cm4gdGhpc307T2JqZWN0LmRlZmluZVByb3BlcnR5KFdyaXRhYmxlLnByb3RvdHlwZSxcIndyaXRhYmxlQnVmZmVyXCIse2VudW1lcmFibGU6ZmFsc2UsZ2V0OmZ1bmN0aW9uIGdldCgpe3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlJiZ0aGlzLl93cml0YWJsZVN0YXRlLmdldEJ1ZmZlcigpfX0pO2Z1bmN0aW9uIGRlY29kZUNodW5rKGUsdCxyKXtpZighZS5vYmplY3RNb2RlJiZlLmRlY29kZVN0cmluZ3MhPT1mYWxzZSYmdHlwZW9mIHQ9PT1cInN0cmluZ1wiKXt0PXMuZnJvbSh0LHIpfXJldHVybiB0fU9iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZS5wcm90b3R5cGUsXCJ3cml0YWJsZUhpZ2hXYXRlck1hcmtcIix7ZW51bWVyYWJsZTpmYWxzZSxnZXQ6ZnVuY3Rpb24gZ2V0KCl7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuaGlnaFdhdGVyTWFya319KTtmdW5jdGlvbiB3cml0ZU9yQnVmZmVyKGUsdCxyLGksbixhKXtpZighcil7dmFyIHM9ZGVjb2RlQ2h1bmsodCxpLG4pO2lmKGkhPT1zKXtyPXRydWU7bj1cImJ1ZmZlclwiO2k9c319dmFyIG89dC5vYmplY3RNb2RlPzE6aS5sZW5ndGg7dC5sZW5ndGgrPW87dmFyIGg9dC5sZW5ndGg8dC5oaWdoV2F0ZXJNYXJrO2lmKCFoKXQubmVlZERyYWluPXRydWU7aWYodC53cml0aW5nfHx0LmNvcmtlZCl7dmFyIHU9dC5sYXN0QnVmZmVyZWRSZXF1ZXN0O3QubGFzdEJ1ZmZlcmVkUmVxdWVzdD17Y2h1bms6aSxlbmNvZGluZzpuLGlzQnVmOnIsY2FsbGJhY2s6YSxuZXh0Om51bGx9O2lmKHUpe3UubmV4dD10Lmxhc3RCdWZmZXJlZFJlcXVlc3R9ZWxzZXt0LmJ1ZmZlcmVkUmVxdWVzdD10Lmxhc3RCdWZmZXJlZFJlcXVlc3R9dC5idWZmZXJlZFJlcXVlc3RDb3VudCs9MX1lbHNle2RvV3JpdGUoZSx0LGZhbHNlLG8saSxuLGEpfXJldHVybiBofWZ1bmN0aW9uIGRvV3JpdGUoZSx0LHIsaSxuLGEscyl7dC53cml0ZWxlbj1pO3Qud3JpdGVjYj1zO3Qud3JpdGluZz10cnVlO3Quc3luYz10cnVlO2lmKHQuZGVzdHJveWVkKXQub253cml0ZShuZXcgbShcIndyaXRlXCIpKTtlbHNlIGlmKHIpZS5fd3JpdGV2KG4sdC5vbndyaXRlKTtlbHNlIGUuX3dyaXRlKG4sYSx0Lm9ud3JpdGUpO3Quc3luYz1mYWxzZX1mdW5jdGlvbiBvbndyaXRlRXJyb3IoZSx0LHIsaSxuKXstLXQucGVuZGluZ2NiO2lmKHIpe3Byb2Nlc3MubmV4dFRpY2sobixpKTtwcm9jZXNzLm5leHRUaWNrKGZpbmlzaE1heWJlLGUsdCk7ZS5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ9dHJ1ZTt3KGUsaSl9ZWxzZXtuKGkpO2UuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPXRydWU7dyhlLGkpO2ZpbmlzaE1heWJlKGUsdCl9fWZ1bmN0aW9uIG9ud3JpdGVTdGF0ZVVwZGF0ZShlKXtlLndyaXRpbmc9ZmFsc2U7ZS53cml0ZWNiPW51bGw7ZS5sZW5ndGgtPWUud3JpdGVsZW47ZS53cml0ZWxlbj0wfWZ1bmN0aW9uIG9ud3JpdGUoZSx0KXt2YXIgcj1lLl93cml0YWJsZVN0YXRlO3ZhciBpPXIuc3luYzt2YXIgbj1yLndyaXRlY2I7aWYodHlwZW9mIG4hPT1cImZ1bmN0aW9uXCIpdGhyb3cgbmV3IHY7b253cml0ZVN0YXRlVXBkYXRlKHIpO2lmKHQpb253cml0ZUVycm9yKGUscixpLHQsbik7ZWxzZXt2YXIgYT1uZWVkRmluaXNoKHIpfHxlLmRlc3Ryb3llZDtpZighYSYmIXIuY29ya2VkJiYhci5idWZmZXJQcm9jZXNzaW5nJiZyLmJ1ZmZlcmVkUmVxdWVzdCl7Y2xlYXJCdWZmZXIoZSxyKX1pZihpKXtwcm9jZXNzLm5leHRUaWNrKGFmdGVyV3JpdGUsZSxyLGEsbil9ZWxzZXthZnRlcldyaXRlKGUscixhLG4pfX19ZnVuY3Rpb24gYWZ0ZXJXcml0ZShlLHQscixpKXtpZighcilvbndyaXRlRHJhaW4oZSx0KTt0LnBlbmRpbmdjYi0tO2koKTtmaW5pc2hNYXliZShlLHQpfWZ1bmN0aW9uIG9ud3JpdGVEcmFpbihlLHQpe2lmKHQubGVuZ3RoPT09MCYmdC5uZWVkRHJhaW4pe3QubmVlZERyYWluPWZhbHNlO2UuZW1pdChcImRyYWluXCIpfX1mdW5jdGlvbiBjbGVhckJ1ZmZlcihlLHQpe3QuYnVmZmVyUHJvY2Vzc2luZz10cnVlO3ZhciByPXQuYnVmZmVyZWRSZXF1ZXN0O2lmKGUuX3dyaXRldiYmciYmci5uZXh0KXt2YXIgaT10LmJ1ZmZlcmVkUmVxdWVzdENvdW50O3ZhciBuPW5ldyBBcnJheShpKTt2YXIgYT10LmNvcmtlZFJlcXVlc3RzRnJlZTthLmVudHJ5PXI7dmFyIHM9MDt2YXIgbz10cnVlO3doaWxlKHIpe25bc109cjtpZighci5pc0J1ZilvPWZhbHNlO3I9ci5uZXh0O3MrPTF9bi5hbGxCdWZmZXJzPW87ZG9Xcml0ZShlLHQsdHJ1ZSx0Lmxlbmd0aCxuLFwiXCIsYS5maW5pc2gpO3QucGVuZGluZ2NiKys7dC5sYXN0QnVmZmVyZWRSZXF1ZXN0PW51bGw7aWYoYS5uZXh0KXt0LmNvcmtlZFJlcXVlc3RzRnJlZT1hLm5leHQ7YS5uZXh0PW51bGx9ZWxzZXt0LmNvcmtlZFJlcXVlc3RzRnJlZT1uZXcgQ29ya2VkUmVxdWVzdCh0KX10LmJ1ZmZlcmVkUmVxdWVzdENvdW50PTB9ZWxzZXt3aGlsZShyKXt2YXIgaD1yLmNodW5rO3ZhciB1PXIuZW5jb2Rpbmc7dmFyIGQ9ci5jYWxsYmFjazt2YXIgYz10Lm9iamVjdE1vZGU/MTpoLmxlbmd0aDtkb1dyaXRlKGUsdCxmYWxzZSxjLGgsdSxkKTtyPXIubmV4dDt0LmJ1ZmZlcmVkUmVxdWVzdENvdW50LS07aWYodC53cml0aW5nKXticmVha319aWYocj09PW51bGwpdC5sYXN0QnVmZmVyZWRSZXF1ZXN0PW51bGx9dC5idWZmZXJlZFJlcXVlc3Q9cjt0LmJ1ZmZlclByb2Nlc3Npbmc9ZmFsc2V9V3JpdGFibGUucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbihlLHQscil7cihuZXcgcChcIl93cml0ZSgpXCIpKX07V3JpdGFibGUucHJvdG90eXBlLl93cml0ZXY9bnVsbDtXcml0YWJsZS5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKGUsdCxyKXt2YXIgaT10aGlzLl93cml0YWJsZVN0YXRlO2lmKHR5cGVvZiBlPT09XCJmdW5jdGlvblwiKXtyPWU7ZT1udWxsO3Q9bnVsbH1lbHNlIGlmKHR5cGVvZiB0PT09XCJmdW5jdGlvblwiKXtyPXQ7dD1udWxsfWlmKGUhPT1udWxsJiZlIT09dW5kZWZpbmVkKXRoaXMud3JpdGUoZSx0KTtpZihpLmNvcmtlZCl7aS5jb3JrZWQ9MTt0aGlzLnVuY29yaygpfWlmKCFpLmVuZGluZyllbmRXcml0YWJsZSh0aGlzLGkscik7cmV0dXJuIHRoaXN9O09iamVjdC5kZWZpbmVQcm9wZXJ0eShXcml0YWJsZS5wcm90b3R5cGUsXCJ3cml0YWJsZUxlbmd0aFwiLHtlbnVtZXJhYmxlOmZhbHNlLGdldDpmdW5jdGlvbiBnZXQoKXtyZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5sZW5ndGh9fSk7ZnVuY3Rpb24gbmVlZEZpbmlzaChlKXtyZXR1cm4gZS5lbmRpbmcmJmUubGVuZ3RoPT09MCYmZS5idWZmZXJlZFJlcXVlc3Q9PT1udWxsJiYhZS5maW5pc2hlZCYmIWUud3JpdGluZ31mdW5jdGlvbiBjYWxsRmluYWwoZSx0KXtlLl9maW5hbCgoZnVuY3Rpb24ocil7dC5wZW5kaW5nY2ItLTtpZihyKXt3KGUscil9dC5wcmVmaW5pc2hlZD10cnVlO2UuZW1pdChcInByZWZpbmlzaFwiKTtmaW5pc2hNYXliZShlLHQpfSkpfWZ1bmN0aW9uIHByZWZpbmlzaChlLHQpe2lmKCF0LnByZWZpbmlzaGVkJiYhdC5maW5hbENhbGxlZCl7aWYodHlwZW9mIGUuX2ZpbmFsPT09XCJmdW5jdGlvblwiJiYhdC5kZXN0cm95ZWQpe3QucGVuZGluZ2NiKys7dC5maW5hbENhbGxlZD10cnVlO3Byb2Nlc3MubmV4dFRpY2soY2FsbEZpbmFsLGUsdCl9ZWxzZXt0LnByZWZpbmlzaGVkPXRydWU7ZS5lbWl0KFwicHJlZmluaXNoXCIpfX19ZnVuY3Rpb24gZmluaXNoTWF5YmUoZSx0KXt2YXIgcj1uZWVkRmluaXNoKHQpO2lmKHIpe3ByZWZpbmlzaChlLHQpO2lmKHQucGVuZGluZ2NiPT09MCl7dC5maW5pc2hlZD10cnVlO2UuZW1pdChcImZpbmlzaFwiKTtpZih0LmF1dG9EZXN0cm95KXt2YXIgaT1lLl9yZWFkYWJsZVN0YXRlO2lmKCFpfHxpLmF1dG9EZXN0cm95JiZpLmVuZEVtaXR0ZWQpe2UuZGVzdHJveSgpfX19fXJldHVybiByfWZ1bmN0aW9uIGVuZFdyaXRhYmxlKGUsdCxyKXt0LmVuZGluZz10cnVlO2ZpbmlzaE1heWJlKGUsdCk7aWYocil7aWYodC5maW5pc2hlZClwcm9jZXNzLm5leHRUaWNrKHIpO2Vsc2UgZS5vbmNlKFwiZmluaXNoXCIscil9dC5lbmRlZD10cnVlO2Uud3JpdGFibGU9ZmFsc2V9ZnVuY3Rpb24gb25Db3JrZWRGaW5pc2goZSx0LHIpe3ZhciBpPWUuZW50cnk7ZS5lbnRyeT1udWxsO3doaWxlKGkpe3ZhciBuPWkuY2FsbGJhY2s7dC5wZW5kaW5nY2ItLTtuKHIpO2k9aS5uZXh0fXQuY29ya2VkUmVxdWVzdHNGcmVlLm5leHQ9ZX1PYmplY3QuZGVmaW5lUHJvcGVydHkoV3JpdGFibGUucHJvdG90eXBlLFwiZGVzdHJveWVkXCIse2VudW1lcmFibGU6ZmFsc2UsZ2V0OmZ1bmN0aW9uIGdldCgpe2lmKHRoaXMuX3dyaXRhYmxlU3RhdGU9PT11bmRlZmluZWQpe3JldHVybiBmYWxzZX1yZXR1cm4gdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWR9LHNldDpmdW5jdGlvbiBzZXQoZSl7aWYoIXRoaXMuX3dyaXRhYmxlU3RhdGUpe3JldHVybn10aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD1lfX0pO1dyaXRhYmxlLnByb3RvdHlwZS5kZXN0cm95PWguZGVzdHJveTtXcml0YWJsZS5wcm90b3R5cGUuX3VuZGVzdHJveT1oLnVuZGVzdHJveTtXcml0YWJsZS5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24oZSx0KXt0KGUpfX0sNjg3MTpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk7ZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KGUsdCxyKXtpZih0IGluIGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOnIsZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHdyaXRhYmxlOnRydWV9KX1lbHNle2VbdF09cn1yZXR1cm4gZX12YXIgbj1yKDk2OTgpO3ZhciBhPVN5bWJvbChcImxhc3RSZXNvbHZlXCIpO3ZhciBzPVN5bWJvbChcImxhc3RSZWplY3RcIik7dmFyIG89U3ltYm9sKFwiZXJyb3JcIik7dmFyIGg9U3ltYm9sKFwiZW5kZWRcIik7dmFyIHU9U3ltYm9sKFwibGFzdFByb21pc2VcIik7dmFyIGQ9U3ltYm9sKFwiaGFuZGxlUHJvbWlzZVwiKTt2YXIgYz1TeW1ib2woXCJzdHJlYW1cIik7ZnVuY3Rpb24gY3JlYXRlSXRlclJlc3VsdChlLHQpe3JldHVybnt2YWx1ZTplLGRvbmU6dH19ZnVuY3Rpb24gcmVhZEFuZFJlc29sdmUoZSl7dmFyIHQ9ZVthXTtpZih0IT09bnVsbCl7dmFyIHI9ZVtjXS5yZWFkKCk7aWYociE9PW51bGwpe2VbdV09bnVsbDtlW2FdPW51bGw7ZVtzXT1udWxsO3QoY3JlYXRlSXRlclJlc3VsdChyLGZhbHNlKSl9fX1mdW5jdGlvbiBvblJlYWRhYmxlKGUpe3Byb2Nlc3MubmV4dFRpY2socmVhZEFuZFJlc29sdmUsZSl9ZnVuY3Rpb24gd3JhcEZvck5leHQoZSx0KXtyZXR1cm4gZnVuY3Rpb24ocixpKXtlLnRoZW4oKGZ1bmN0aW9uKCl7aWYodFtoXSl7cihjcmVhdGVJdGVyUmVzdWx0KHVuZGVmaW5lZCx0cnVlKSk7cmV0dXJufXRbZF0ocixpKX0pLGkpfX12YXIgbD1PYmplY3QuZ2V0UHJvdG90eXBlT2YoKGZ1bmN0aW9uKCl7fSkpO3ZhciBwPU9iamVjdC5zZXRQcm90b3R5cGVPZigoaT17Z2V0IHN0cmVhbSgpe3JldHVybiB0aGlzW2NdfSxuZXh0OmZ1bmN0aW9uIG5leHQoKXt2YXIgZT10aGlzO3ZhciB0PXRoaXNbb107aWYodCE9PW51bGwpe3JldHVybiBQcm9taXNlLnJlamVjdCh0KX1pZih0aGlzW2hdKXtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGNyZWF0ZUl0ZXJSZXN1bHQodW5kZWZpbmVkLHRydWUpKX1pZih0aGlzW2NdLmRlc3Ryb3llZCl7cmV0dXJuIG5ldyBQcm9taXNlKChmdW5jdGlvbih0LHIpe3Byb2Nlc3MubmV4dFRpY2soKGZ1bmN0aW9uKCl7aWYoZVtvXSl7cihlW29dKX1lbHNle3QoY3JlYXRlSXRlclJlc3VsdCh1bmRlZmluZWQsdHJ1ZSkpfX0pKX0pKX12YXIgcj10aGlzW3VdO3ZhciBpO2lmKHIpe2k9bmV3IFByb21pc2Uod3JhcEZvck5leHQocix0aGlzKSl9ZWxzZXt2YXIgbj10aGlzW2NdLnJlYWQoKTtpZihuIT09bnVsbCl7cmV0dXJuIFByb21pc2UucmVzb2x2ZShjcmVhdGVJdGVyUmVzdWx0KG4sZmFsc2UpKX1pPW5ldyBQcm9taXNlKHRoaXNbZF0pfXRoaXNbdV09aTtyZXR1cm4gaX19LF9kZWZpbmVQcm9wZXJ0eShpLFN5bWJvbC5hc3luY0l0ZXJhdG9yLChmdW5jdGlvbigpe3JldHVybiB0aGlzfSkpLF9kZWZpbmVQcm9wZXJ0eShpLFwicmV0dXJuXCIsKGZ1bmN0aW9uIF9yZXR1cm4oKXt2YXIgZT10aGlzO3JldHVybiBuZXcgUHJvbWlzZSgoZnVuY3Rpb24odCxyKXtlW2NdLmRlc3Ryb3kobnVsbCwoZnVuY3Rpb24oZSl7aWYoZSl7cihlKTtyZXR1cm59dChjcmVhdGVJdGVyUmVzdWx0KHVuZGVmaW5lZCx0cnVlKSl9KSl9KSl9KSksaSksbCk7dmFyIHY9ZnVuY3Rpb24gY3JlYXRlUmVhZGFibGVTdHJlYW1Bc3luY0l0ZXJhdG9yKGUpe3ZhciB0O3ZhciByPU9iamVjdC5jcmVhdGUocCwodD17fSxfZGVmaW5lUHJvcGVydHkodCxjLHt2YWx1ZTplLHdyaXRhYmxlOnRydWV9KSxfZGVmaW5lUHJvcGVydHkodCxhLHt2YWx1ZTpudWxsLHdyaXRhYmxlOnRydWV9KSxfZGVmaW5lUHJvcGVydHkodCxzLHt2YWx1ZTpudWxsLHdyaXRhYmxlOnRydWV9KSxfZGVmaW5lUHJvcGVydHkodCxvLHt2YWx1ZTpudWxsLHdyaXRhYmxlOnRydWV9KSxfZGVmaW5lUHJvcGVydHkodCxoLHt2YWx1ZTplLl9yZWFkYWJsZVN0YXRlLmVuZEVtaXR0ZWQsd3JpdGFibGU6dHJ1ZX0pLF9kZWZpbmVQcm9wZXJ0eSh0LGQse3ZhbHVlOmZ1bmN0aW9uIHZhbHVlKGUsdCl7dmFyIGk9cltjXS5yZWFkKCk7aWYoaSl7clt1XT1udWxsO3JbYV09bnVsbDtyW3NdPW51bGw7ZShjcmVhdGVJdGVyUmVzdWx0KGksZmFsc2UpKX1lbHNle3JbYV09ZTtyW3NdPXR9fSx3cml0YWJsZTp0cnVlfSksdCkpO3JbdV09bnVsbDtuKGUsKGZ1bmN0aW9uKGUpe2lmKGUmJmUuY29kZSE9PVwiRVJSX1NUUkVBTV9QUkVNQVRVUkVfQ0xPU0VcIil7dmFyIHQ9cltzXTtpZih0IT09bnVsbCl7clt1XT1udWxsO3JbYV09bnVsbDtyW3NdPW51bGw7dChlKX1yW29dPWU7cmV0dXJufXZhciBpPXJbYV07aWYoaSE9PW51bGwpe3JbdV09bnVsbDtyW2FdPW51bGw7cltzXT1udWxsO2koY3JlYXRlSXRlclJlc3VsdCh1bmRlZmluZWQsdHJ1ZSkpfXJbaF09dHJ1ZX0pKTtlLm9uKFwicmVhZGFibGVcIixvblJlYWRhYmxlLmJpbmQobnVsbCxyKSk7cmV0dXJuIHJ9O2UuZXhwb3J0cz12fSw0Mzc5OmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBvd25LZXlzKGUsdCl7dmFyIHI9T2JqZWN0LmtleXMoZSk7aWYoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyl7dmFyIGk9T2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTtpZih0KWk9aS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsdCkuZW51bWVyYWJsZX0pKTtyLnB1c2guYXBwbHkocixpKX1yZXR1cm4gcn1mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpe2Zvcih2YXIgdD0xO3Q8YXJndW1lbnRzLmxlbmd0aDt0Kyspe3ZhciByPWFyZ3VtZW50c1t0XSE9bnVsbD9hcmd1bWVudHNbdF06e307aWYodCUyKXtvd25LZXlzKE9iamVjdChyKSx0cnVlKS5mb3JFYWNoKChmdW5jdGlvbih0KXtfZGVmaW5lUHJvcGVydHkoZSx0LHJbdF0pfSkpfWVsc2UgaWYoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpe09iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKGUsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMocikpfWVsc2V7b3duS2V5cyhPYmplY3QocikpLmZvckVhY2goKGZ1bmN0aW9uKHQpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQsT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihyLHQpKX0pKX19cmV0dXJuIGV9ZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KGUsdCxyKXtpZih0IGluIGUpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOnIsZW51bWVyYWJsZTp0cnVlLGNvbmZpZ3VyYWJsZTp0cnVlLHdyaXRhYmxlOnRydWV9KX1lbHNle2VbdF09cn1yZXR1cm4gZX1mdW5jdGlvbiBfY2xhc3NDYWxsQ2hlY2soZSx0KXtpZighKGUgaW5zdGFuY2VvZiB0KSl7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKX19ZnVuY3Rpb24gX2RlZmluZVByb3BlcnRpZXMoZSx0KXtmb3IodmFyIHI9MDtyPHQubGVuZ3RoO3IrKyl7dmFyIGk9dFtyXTtpLmVudW1lcmFibGU9aS5lbnVtZXJhYmxlfHxmYWxzZTtpLmNvbmZpZ3VyYWJsZT10cnVlO2lmKFwidmFsdWVcImluIGkpaS53cml0YWJsZT10cnVlO09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLGkua2V5LGkpfX1mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoZSx0LHIpe2lmKHQpX2RlZmluZVByb3BlcnRpZXMoZS5wcm90b3R5cGUsdCk7aWYocilfZGVmaW5lUHJvcGVydGllcyhlLHIpO3JldHVybiBlfXZhciBpPXIoNDMwMCksbj1pLkJ1ZmZlcjt2YXIgYT1yKDM4MzcpLHM9YS5pbnNwZWN0O3ZhciBvPXMmJnMuY3VzdG9tfHxcImluc3BlY3RcIjtmdW5jdGlvbiBjb3B5QnVmZmVyKGUsdCxyKXtuLnByb3RvdHlwZS5jb3B5LmNhbGwoZSx0LHIpfWUuZXhwb3J0cz1mdW5jdGlvbigpe2Z1bmN0aW9uIEJ1ZmZlckxpc3QoKXtfY2xhc3NDYWxsQ2hlY2sodGhpcyxCdWZmZXJMaXN0KTt0aGlzLmhlYWQ9bnVsbDt0aGlzLnRhaWw9bnVsbDt0aGlzLmxlbmd0aD0wfV9jcmVhdGVDbGFzcyhCdWZmZXJMaXN0LFt7a2V5OlwicHVzaFwiLHZhbHVlOmZ1bmN0aW9uIHB1c2goZSl7dmFyIHQ9e2RhdGE6ZSxuZXh0Om51bGx9O2lmKHRoaXMubGVuZ3RoPjApdGhpcy50YWlsLm5leHQ9dDtlbHNlIHRoaXMuaGVhZD10O3RoaXMudGFpbD10OysrdGhpcy5sZW5ndGh9fSx7a2V5OlwidW5zaGlmdFwiLHZhbHVlOmZ1bmN0aW9uIHVuc2hpZnQoZSl7dmFyIHQ9e2RhdGE6ZSxuZXh0OnRoaXMuaGVhZH07aWYodGhpcy5sZW5ndGg9PT0wKXRoaXMudGFpbD10O3RoaXMuaGVhZD10OysrdGhpcy5sZW5ndGh9fSx7a2V5Olwic2hpZnRcIix2YWx1ZTpmdW5jdGlvbiBzaGlmdCgpe2lmKHRoaXMubGVuZ3RoPT09MClyZXR1cm47dmFyIGU9dGhpcy5oZWFkLmRhdGE7aWYodGhpcy5sZW5ndGg9PT0xKXRoaXMuaGVhZD10aGlzLnRhaWw9bnVsbDtlbHNlIHRoaXMuaGVhZD10aGlzLmhlYWQubmV4dDstLXRoaXMubGVuZ3RoO3JldHVybiBlfX0se2tleTpcImNsZWFyXCIsdmFsdWU6ZnVuY3Rpb24gY2xlYXIoKXt0aGlzLmhlYWQ9dGhpcy50YWlsPW51bGw7dGhpcy5sZW5ndGg9MH19LHtrZXk6XCJqb2luXCIsdmFsdWU6ZnVuY3Rpb24gam9pbihlKXtpZih0aGlzLmxlbmd0aD09PTApcmV0dXJuXCJcIjt2YXIgdD10aGlzLmhlYWQ7dmFyIHI9XCJcIit0LmRhdGE7d2hpbGUodD10Lm5leHQpe3IrPWUrdC5kYXRhfXJldHVybiByfX0se2tleTpcImNvbmNhdFwiLHZhbHVlOmZ1bmN0aW9uIGNvbmNhdChlKXtpZih0aGlzLmxlbmd0aD09PTApcmV0dXJuIG4uYWxsb2MoMCk7dmFyIHQ9bi5hbGxvY1Vuc2FmZShlPj4+MCk7dmFyIHI9dGhpcy5oZWFkO3ZhciBpPTA7d2hpbGUocil7Y29weUJ1ZmZlcihyLmRhdGEsdCxpKTtpKz1yLmRhdGEubGVuZ3RoO3I9ci5uZXh0fXJldHVybiB0fX0se2tleTpcImNvbnN1bWVcIix2YWx1ZTpmdW5jdGlvbiBjb25zdW1lKGUsdCl7dmFyIHI7aWYoZTx0aGlzLmhlYWQuZGF0YS5sZW5ndGgpe3I9dGhpcy5oZWFkLmRhdGEuc2xpY2UoMCxlKTt0aGlzLmhlYWQuZGF0YT10aGlzLmhlYWQuZGF0YS5zbGljZShlKX1lbHNlIGlmKGU9PT10aGlzLmhlYWQuZGF0YS5sZW5ndGgpe3I9dGhpcy5zaGlmdCgpfWVsc2V7cj10P3RoaXMuX2dldFN0cmluZyhlKTp0aGlzLl9nZXRCdWZmZXIoZSl9cmV0dXJuIHJ9fSx7a2V5OlwiZmlyc3RcIix2YWx1ZTpmdW5jdGlvbiBmaXJzdCgpe3JldHVybiB0aGlzLmhlYWQuZGF0YX19LHtrZXk6XCJfZ2V0U3RyaW5nXCIsdmFsdWU6ZnVuY3Rpb24gX2dldFN0cmluZyhlKXt2YXIgdD10aGlzLmhlYWQ7dmFyIHI9MTt2YXIgaT10LmRhdGE7ZS09aS5sZW5ndGg7d2hpbGUodD10Lm5leHQpe3ZhciBuPXQuZGF0YTt2YXIgYT1lPm4ubGVuZ3RoP24ubGVuZ3RoOmU7aWYoYT09PW4ubGVuZ3RoKWkrPW47ZWxzZSBpKz1uLnNsaWNlKDAsZSk7ZS09YTtpZihlPT09MCl7aWYoYT09PW4ubGVuZ3RoKXsrK3I7aWYodC5uZXh0KXRoaXMuaGVhZD10Lm5leHQ7ZWxzZSB0aGlzLmhlYWQ9dGhpcy50YWlsPW51bGx9ZWxzZXt0aGlzLmhlYWQ9dDt0LmRhdGE9bi5zbGljZShhKX1icmVha30rK3J9dGhpcy5sZW5ndGgtPXI7cmV0dXJuIGl9fSx7a2V5OlwiX2dldEJ1ZmZlclwiLHZhbHVlOmZ1bmN0aW9uIF9nZXRCdWZmZXIoZSl7dmFyIHQ9bi5hbGxvY1Vuc2FmZShlKTt2YXIgcj10aGlzLmhlYWQ7dmFyIGk9MTtyLmRhdGEuY29weSh0KTtlLT1yLmRhdGEubGVuZ3RoO3doaWxlKHI9ci5uZXh0KXt2YXIgYT1yLmRhdGE7dmFyIHM9ZT5hLmxlbmd0aD9hLmxlbmd0aDplO2EuY29weSh0LHQubGVuZ3RoLWUsMCxzKTtlLT1zO2lmKGU9PT0wKXtpZihzPT09YS5sZW5ndGgpeysraTtpZihyLm5leHQpdGhpcy5oZWFkPXIubmV4dDtlbHNlIHRoaXMuaGVhZD10aGlzLnRhaWw9bnVsbH1lbHNle3RoaXMuaGVhZD1yO3IuZGF0YT1hLnNsaWNlKHMpfWJyZWFrfSsraX10aGlzLmxlbmd0aC09aTtyZXR1cm4gdH19LHtrZXk6byx2YWx1ZTpmdW5jdGlvbiB2YWx1ZShlLHQpe3JldHVybiBzKHRoaXMsX29iamVjdFNwcmVhZCh7fSx0LHtkZXB0aDowLGN1c3RvbUluc3BlY3Q6ZmFsc2V9KSl9fV0pO3JldHVybiBCdWZmZXJMaXN0fSgpfSw3MDI1OmZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2Z1bmN0aW9uIGRlc3Ryb3koZSx0KXt2YXIgcj10aGlzO3ZhciBpPXRoaXMuX3JlYWRhYmxlU3RhdGUmJnRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkO3ZhciBuPXRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkO2lmKGl8fG4pe2lmKHQpe3QoZSl9ZWxzZSBpZihlKXtpZighdGhpcy5fd3JpdGFibGVTdGF0ZSl7cHJvY2Vzcy5uZXh0VGljayhlbWl0RXJyb3JOVCx0aGlzLGUpfWVsc2UgaWYoIXRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkKXt0aGlzLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD10cnVlO3Byb2Nlc3MubmV4dFRpY2soZW1pdEVycm9yTlQsdGhpcyxlKX19cmV0dXJuIHRoaXN9aWYodGhpcy5fcmVhZGFibGVTdGF0ZSl7dGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ9dHJ1ZX1pZih0aGlzLl93cml0YWJsZVN0YXRlKXt0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD10cnVlfXRoaXMuX2Rlc3Ryb3koZXx8bnVsbCwoZnVuY3Rpb24oZSl7aWYoIXQmJmUpe2lmKCFyLl93cml0YWJsZVN0YXRlKXtwcm9jZXNzLm5leHRUaWNrKGVtaXRFcnJvckFuZENsb3NlTlQscixlKX1lbHNlIGlmKCFyLl93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZCl7ci5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ9dHJ1ZTtwcm9jZXNzLm5leHRUaWNrKGVtaXRFcnJvckFuZENsb3NlTlQscixlKX1lbHNle3Byb2Nlc3MubmV4dFRpY2soZW1pdENsb3NlTlQscil9fWVsc2UgaWYodCl7cHJvY2Vzcy5uZXh0VGljayhlbWl0Q2xvc2VOVCxyKTt0KGUpfWVsc2V7cHJvY2Vzcy5uZXh0VGljayhlbWl0Q2xvc2VOVCxyKX19KSk7cmV0dXJuIHRoaXN9ZnVuY3Rpb24gZW1pdEVycm9yQW5kQ2xvc2VOVChlLHQpe2VtaXRFcnJvck5UKGUsdCk7ZW1pdENsb3NlTlQoZSl9ZnVuY3Rpb24gZW1pdENsb3NlTlQoZSl7aWYoZS5fd3JpdGFibGVTdGF0ZSYmIWUuX3dyaXRhYmxlU3RhdGUuZW1pdENsb3NlKXJldHVybjtpZihlLl9yZWFkYWJsZVN0YXRlJiYhZS5fcmVhZGFibGVTdGF0ZS5lbWl0Q2xvc2UpcmV0dXJuO2UuZW1pdChcImNsb3NlXCIpfWZ1bmN0aW9uIHVuZGVzdHJveSgpe2lmKHRoaXMuX3JlYWRhYmxlU3RhdGUpe3RoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkPWZhbHNlO3RoaXMuX3JlYWRhYmxlU3RhdGUucmVhZGluZz1mYWxzZTt0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZGVkPWZhbHNlO3RoaXMuX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZD1mYWxzZX1pZih0aGlzLl93cml0YWJsZVN0YXRlKXt0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD1mYWxzZTt0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkPWZhbHNlO3RoaXMuX3dyaXRhYmxlU3RhdGUuZW5kaW5nPWZhbHNlO3RoaXMuX3dyaXRhYmxlU3RhdGUuZmluYWxDYWxsZWQ9ZmFsc2U7dGhpcy5fd3JpdGFibGVTdGF0ZS5wcmVmaW5pc2hlZD1mYWxzZTt0aGlzLl93cml0YWJsZVN0YXRlLmZpbmlzaGVkPWZhbHNlO3RoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPWZhbHNlfX1mdW5jdGlvbiBlbWl0RXJyb3JOVChlLHQpe2UuZW1pdChcImVycm9yXCIsdCl9ZnVuY3Rpb24gZXJyb3JPckRlc3Ryb3koZSx0KXt2YXIgcj1lLl9yZWFkYWJsZVN0YXRlO3ZhciBpPWUuX3dyaXRhYmxlU3RhdGU7aWYociYmci5hdXRvRGVzdHJveXx8aSYmaS5hdXRvRGVzdHJveSllLmRlc3Ryb3kodCk7ZWxzZSBlLmVtaXQoXCJlcnJvclwiLHQpfWUuZXhwb3J0cz17ZGVzdHJveTpkZXN0cm95LHVuZGVzdHJveTp1bmRlc3Ryb3ksZXJyb3JPckRlc3Ryb3k6ZXJyb3JPckRlc3Ryb3l9fSw5Njk4OmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDQ2NDYpLnEuRVJSX1NUUkVBTV9QUkVNQVRVUkVfQ0xPU0U7ZnVuY3Rpb24gb25jZShlKXt2YXIgdD1mYWxzZTtyZXR1cm4gZnVuY3Rpb24oKXtpZih0KXJldHVybjt0PXRydWU7Zm9yKHZhciByPWFyZ3VtZW50cy5sZW5ndGgsaT1uZXcgQXJyYXkociksbj0wO248cjtuKyspe2lbbl09YXJndW1lbnRzW25dfWUuYXBwbHkodGhpcyxpKX19ZnVuY3Rpb24gbm9vcCgpe31mdW5jdGlvbiBpc1JlcXVlc3QoZSl7cmV0dXJuIGUuc2V0SGVhZGVyJiZ0eXBlb2YgZS5hYm9ydD09PVwiZnVuY3Rpb25cIn1mdW5jdGlvbiBlb3MoZSx0LHIpe2lmKHR5cGVvZiB0PT09XCJmdW5jdGlvblwiKXJldHVybiBlb3MoZSxudWxsLHQpO2lmKCF0KXQ9e307cj1vbmNlKHJ8fG5vb3ApO3ZhciBuPXQucmVhZGFibGV8fHQucmVhZGFibGUhPT1mYWxzZSYmZS5yZWFkYWJsZTt2YXIgYT10LndyaXRhYmxlfHx0LndyaXRhYmxlIT09ZmFsc2UmJmUud3JpdGFibGU7dmFyIHM9ZnVuY3Rpb24gb25sZWdhY3lmaW5pc2goKXtpZighZS53cml0YWJsZSloKCl9O3ZhciBvPWUuX3dyaXRhYmxlU3RhdGUmJmUuX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQ7dmFyIGg9ZnVuY3Rpb24gb25maW5pc2goKXthPWZhbHNlO289dHJ1ZTtpZighbilyLmNhbGwoZSl9O3ZhciB1PWUuX3JlYWRhYmxlU3RhdGUmJmUuX3JlYWRhYmxlU3RhdGUuZW5kRW1pdHRlZDt2YXIgZD1mdW5jdGlvbiBvbmVuZCgpe249ZmFsc2U7dT10cnVlO2lmKCFhKXIuY2FsbChlKX07dmFyIGM9ZnVuY3Rpb24gb25lcnJvcih0KXtyLmNhbGwoZSx0KX07dmFyIGw9ZnVuY3Rpb24gb25jbG9zZSgpe3ZhciB0O2lmKG4mJiF1KXtpZighZS5fcmVhZGFibGVTdGF0ZXx8IWUuX3JlYWRhYmxlU3RhdGUuZW5kZWQpdD1uZXcgaTtyZXR1cm4gci5jYWxsKGUsdCl9aWYoYSYmIW8pe2lmKCFlLl93cml0YWJsZVN0YXRlfHwhZS5fd3JpdGFibGVTdGF0ZS5lbmRlZCl0PW5ldyBpO3JldHVybiByLmNhbGwoZSx0KX19O3ZhciBwPWZ1bmN0aW9uIG9ucmVxdWVzdCgpe2UucmVxLm9uKFwiZmluaXNoXCIsaCl9O2lmKGlzUmVxdWVzdChlKSl7ZS5vbihcImNvbXBsZXRlXCIsaCk7ZS5vbihcImFib3J0XCIsbCk7aWYoZS5yZXEpcCgpO2Vsc2UgZS5vbihcInJlcXVlc3RcIixwKX1lbHNlIGlmKGEmJiFlLl93cml0YWJsZVN0YXRlKXtlLm9uKFwiZW5kXCIscyk7ZS5vbihcImNsb3NlXCIscyl9ZS5vbihcImVuZFwiLGQpO2Uub24oXCJmaW5pc2hcIixoKTtpZih0LmVycm9yIT09ZmFsc2UpZS5vbihcImVycm9yXCIsYyk7ZS5vbihcImNsb3NlXCIsbCk7cmV0dXJuIGZ1bmN0aW9uKCl7ZS5yZW1vdmVMaXN0ZW5lcihcImNvbXBsZXRlXCIsaCk7ZS5yZW1vdmVMaXN0ZW5lcihcImFib3J0XCIsbCk7ZS5yZW1vdmVMaXN0ZW5lcihcInJlcXVlc3RcIixwKTtpZihlLnJlcSllLnJlcS5yZW1vdmVMaXN0ZW5lcihcImZpbmlzaFwiLGgpO2UucmVtb3ZlTGlzdGVuZXIoXCJlbmRcIixzKTtlLnJlbW92ZUxpc3RlbmVyKFwiY2xvc2VcIixzKTtlLnJlbW92ZUxpc3RlbmVyKFwiZmluaXNoXCIsaCk7ZS5yZW1vdmVMaXN0ZW5lcihcImVuZFwiLGQpO2UucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLGMpO2UucmVtb3ZlTGlzdGVuZXIoXCJjbG9zZVwiLGwpfX1lLmV4cG9ydHM9ZW9zfSw5NzI3OmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjtmdW5jdGlvbiBhc3luY0dlbmVyYXRvclN0ZXAoZSx0LHIsaSxuLGEscyl7dHJ5e3ZhciBvPWVbYV0ocyk7dmFyIGg9by52YWx1ZX1jYXRjaChlKXtyKGUpO3JldHVybn1pZihvLmRvbmUpe3QoaCl9ZWxzZXtQcm9taXNlLnJlc29sdmUoaCkudGhlbihpLG4pfX1mdW5jdGlvbiBfYXN5bmNUb0dlbmVyYXRvcihlKXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgdD10aGlzLHI9YXJndW1lbnRzO3JldHVybiBuZXcgUHJvbWlzZSgoZnVuY3Rpb24oaSxuKXt2YXIgYT1lLmFwcGx5KHQscik7ZnVuY3Rpb24gX25leHQoZSl7YXN5bmNHZW5lcmF0b3JTdGVwKGEsaSxuLF9uZXh0LF90aHJvdyxcIm5leHRcIixlKX1mdW5jdGlvbiBfdGhyb3coZSl7YXN5bmNHZW5lcmF0b3JTdGVwKGEsaSxuLF9uZXh0LF90aHJvdyxcInRocm93XCIsZSl9X25leHQodW5kZWZpbmVkKX0pKX19ZnVuY3Rpb24gb3duS2V5cyhlLHQpe3ZhciByPU9iamVjdC5rZXlzKGUpO2lmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpe3ZhciBpPU9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSk7aWYodClpPWkuZmlsdGVyKChmdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLHQpLmVudW1lcmFibGV9KSk7ci5wdXNoLmFwcGx5KHIsaSl9cmV0dXJuIHJ9ZnVuY3Rpb24gX29iamVjdFNwcmVhZChlKXtmb3IodmFyIHQ9MTt0PGFyZ3VtZW50cy5sZW5ndGg7dCsrKXt2YXIgcj1hcmd1bWVudHNbdF0hPW51bGw/YXJndW1lbnRzW3RdOnt9O2lmKHQlMil7b3duS2V5cyhPYmplY3QociksdHJ1ZSkuZm9yRWFjaCgoZnVuY3Rpb24odCl7X2RlZmluZVByb3BlcnR5KGUsdCxyW3RdKX0pKX1lbHNlIGlmKE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKXtPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHIpKX1lbHNle293bktleXMoT2JqZWN0KHIpKS5mb3JFYWNoKChmdW5jdGlvbih0KXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iocix0KSl9KSl9fXJldHVybiBlfWZ1bmN0aW9uIF9kZWZpbmVQcm9wZXJ0eShlLHQscil7aWYodCBpbiBlKXtPYmplY3QuZGVmaW5lUHJvcGVydHkoZSx0LHt2YWx1ZTpyLGVudW1lcmFibGU6dHJ1ZSxjb25maWd1cmFibGU6dHJ1ZSx3cml0YWJsZTp0cnVlfSl9ZWxzZXtlW3RdPXJ9cmV0dXJuIGV9dmFyIGk9cig0NjQ2KS5xLkVSUl9JTlZBTElEX0FSR19UWVBFO2Z1bmN0aW9uIGZyb20oZSx0LHIpe3ZhciBuO2lmKHQmJnR5cGVvZiB0Lm5leHQ9PT1cImZ1bmN0aW9uXCIpe249dH1lbHNlIGlmKHQmJnRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKW49dFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtlbHNlIGlmKHQmJnRbU3ltYm9sLml0ZXJhdG9yXSluPXRbU3ltYm9sLml0ZXJhdG9yXSgpO2Vsc2UgdGhyb3cgbmV3IGkoXCJpdGVyYWJsZVwiLFtcIkl0ZXJhYmxlXCJdLHQpO3ZhciBhPW5ldyBlKF9vYmplY3RTcHJlYWQoe29iamVjdE1vZGU6dHJ1ZX0scikpO3ZhciBzPWZhbHNlO2EuX3JlYWQ9ZnVuY3Rpb24oKXtpZighcyl7cz10cnVlO25leHQoKX19O2Z1bmN0aW9uIG5leHQoKXtyZXR1cm4gX25leHQyLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBfbmV4dDIoKXtfbmV4dDI9X2FzeW5jVG9HZW5lcmF0b3IoKGZ1bmN0aW9uKigpe3RyeXt2YXIgZT15aWVsZCBuLm5leHQoKSx0PWUudmFsdWUscj1lLmRvbmU7aWYocil7YS5wdXNoKG51bGwpfWVsc2UgaWYoYS5wdXNoKHlpZWxkIHQpKXtuZXh0KCl9ZWxzZXtzPWZhbHNlfX1jYXRjaChlKXthLmRlc3Ryb3koZSl9fSkpO3JldHVybiBfbmV4dDIuYXBwbHkodGhpcyxhcmd1bWVudHMpfXJldHVybiBhfWUuZXhwb3J0cz1mcm9tfSw4NDQyOmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaTtmdW5jdGlvbiBvbmNlKGUpe3ZhciB0PWZhbHNlO3JldHVybiBmdW5jdGlvbigpe2lmKHQpcmV0dXJuO3Q9dHJ1ZTtlLmFwcGx5KHZvaWQgMCxhcmd1bWVudHMpfX12YXIgbj1yKDQ2NDYpLnEsYT1uLkVSUl9NSVNTSU5HX0FSR1Mscz1uLkVSUl9TVFJFQU1fREVTVFJPWUVEO2Z1bmN0aW9uIG5vb3AoZSl7aWYoZSl0aHJvdyBlfWZ1bmN0aW9uIGlzUmVxdWVzdChlKXtyZXR1cm4gZS5zZXRIZWFkZXImJnR5cGVvZiBlLmFib3J0PT09XCJmdW5jdGlvblwifWZ1bmN0aW9uIGRlc3Ryb3llcihlLHQsbixhKXthPW9uY2UoYSk7dmFyIG89ZmFsc2U7ZS5vbihcImNsb3NlXCIsKGZ1bmN0aW9uKCl7bz10cnVlfSkpO2lmKGk9PT11bmRlZmluZWQpaT1yKDk2OTgpO2koZSx7cmVhZGFibGU6dCx3cml0YWJsZTpufSwoZnVuY3Rpb24oZSl7aWYoZSlyZXR1cm4gYShlKTtvPXRydWU7YSgpfSkpO3ZhciBoPWZhbHNlO3JldHVybiBmdW5jdGlvbih0KXtpZihvKXJldHVybjtpZihoKXJldHVybjtoPXRydWU7aWYoaXNSZXF1ZXN0KGUpKXJldHVybiBlLmFib3J0KCk7aWYodHlwZW9mIGUuZGVzdHJveT09PVwiZnVuY3Rpb25cIilyZXR1cm4gZS5kZXN0cm95KCk7YSh0fHxuZXcgcyhcInBpcGVcIikpfX1mdW5jdGlvbiBjYWxsKGUpe2UoKX1mdW5jdGlvbiBwaXBlKGUsdCl7cmV0dXJuIGUucGlwZSh0KX1mdW5jdGlvbiBwb3BDYWxsYmFjayhlKXtpZighZS5sZW5ndGgpcmV0dXJuIG5vb3A7aWYodHlwZW9mIGVbZS5sZW5ndGgtMV0hPT1cImZ1bmN0aW9uXCIpcmV0dXJuIG5vb3A7cmV0dXJuIGUucG9wKCl9ZnVuY3Rpb24gcGlwZWxpbmUoKXtmb3IodmFyIGU9YXJndW1lbnRzLmxlbmd0aCx0PW5ldyBBcnJheShlKSxyPTA7cjxlO3IrKyl7dFtyXT1hcmd1bWVudHNbcl19dmFyIGk9cG9wQ2FsbGJhY2sodCk7aWYoQXJyYXkuaXNBcnJheSh0WzBdKSl0PXRbMF07aWYodC5sZW5ndGg8Mil7dGhyb3cgbmV3IGEoXCJzdHJlYW1zXCIpfXZhciBuO3ZhciBzPXQubWFwKChmdW5jdGlvbihlLHIpe3ZhciBhPXI8dC5sZW5ndGgtMTt2YXIgbz1yPjA7cmV0dXJuIGRlc3Ryb3llcihlLGEsbywoZnVuY3Rpb24oZSl7aWYoIW4pbj1lO2lmKGUpcy5mb3JFYWNoKGNhbGwpO2lmKGEpcmV0dXJuO3MuZm9yRWFjaChjYWxsKTtpKG4pfSkpfSkpO3JldHVybiB0LnJlZHVjZShwaXBlKX1lLmV4cG9ydHM9cGlwZWxpbmV9LDY3NzY6ZnVuY3Rpb24oZSx0LHIpe1widXNlIHN0cmljdFwiO3ZhciBpPXIoNDY0NikucS5FUlJfSU5WQUxJRF9PUFRfVkFMVUU7ZnVuY3Rpb24gaGlnaFdhdGVyTWFya0Zyb20oZSx0LHIpe3JldHVybiBlLmhpZ2hXYXRlck1hcmshPW51bGw/ZS5oaWdoV2F0ZXJNYXJrOnQ/ZVtyXTpudWxsfWZ1bmN0aW9uIGdldEhpZ2hXYXRlck1hcmsoZSx0LHIsbil7dmFyIGE9aGlnaFdhdGVyTWFya0Zyb20odCxuLHIpO2lmKGEhPW51bGwpe2lmKCEoaXNGaW5pdGUoYSkmJk1hdGguZmxvb3IoYSk9PT1hKXx8YTwwKXt2YXIgcz1uP3I6XCJoaWdoV2F0ZXJNYXJrXCI7dGhyb3cgbmV3IGkocyxhKX1yZXR1cm4gTWF0aC5mbG9vcihhKX1yZXR1cm4gZS5vYmplY3RNb2RlPzE2OjE2KjEwMjR9ZS5leHBvcnRzPXtnZXRIaWdoV2F0ZXJNYXJrOmdldEhpZ2hXYXRlck1hcmt9fSw0Njc4OmZ1bmN0aW9uKGUsdCxyKXtlLmV4cG9ydHM9cigyNzgxKX0sMzcyNjpmdW5jdGlvbihlLHQscil7dmFyIGk9cigyNzgxKTtpZihwcm9jZXNzLmVudi5SRUFEQUJMRV9TVFJFQU09PT1cImRpc2FibGVcIiYmaSl7ZS5leHBvcnRzPWkuUmVhZGFibGU7T2JqZWN0LmFzc2lnbihlLmV4cG9ydHMsaSk7ZS5leHBvcnRzLlN0cmVhbT1pfWVsc2V7dD1lLmV4cG9ydHM9cigxNzA5KTt0LlN0cmVhbT1pfHx0O3QuUmVhZGFibGU9dDt0LldyaXRhYmxlPXIoNzMzNyk7dC5EdXBsZXg9cigyNDAzKTt0LlRyYW5zZm9ybT1yKDExNzApO3QuUGFzc1Rocm91Z2g9cig3ODg5KTt0LmZpbmlzaGVkPXIoOTY5OCk7dC5waXBlbGluZT1yKDg0NDIpfX0sMzIyNTpmdW5jdGlvbihlLHQscil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9cig0MzAwKS5CdWZmZXI7dmFyIG49cigzNzgyKTt2YXIgYT1yKDkwMjkpO3ZhciBzPW5ldyBBcnJheSgxNik7dmFyIG89WzAsMSwyLDMsNCw1LDYsNyw4LDksMTAsMTEsMTIsMTMsMTQsMTUsNyw0LDEzLDEsMTAsNiwxNSwzLDEyLDAsOSw1LDIsMTQsMTEsOCwzLDEwLDE0LDQsOSwxNSw4LDEsMiw3LDAsNiwxMywxMSw1LDEyLDEsOSwxMSwxMCwwLDgsMTIsNCwxMywzLDcsMTUsMTQsNSw2LDIsNCwwLDUsOSw3LDEyLDIsMTAsMTQsMSwzLDgsMTEsNiwxNSwxM107dmFyIGg9WzUsMTQsNywwLDksMiwxMSw0LDEzLDYsMTUsOCwxLDEwLDMsMTIsNiwxMSwzLDcsMCwxMyw1LDEwLDE0LDE1LDgsMTIsNCw5LDEsMiwxNSw1LDEsMyw3LDE0LDYsOSwxMSw4LDEyLDIsMTAsMCw0LDEzLDgsNiw0LDEsMywxMSwxNSwwLDUsMTIsMiwxMyw5LDcsMTAsMTQsMTIsMTUsMTAsNCwxLDUsOCw3LDYsMiwxMywxNCwwLDMsOSwxMV07dmFyIHU9WzExLDE0LDE1LDEyLDUsOCw3LDksMTEsMTMsMTQsMTUsNiw3LDksOCw3LDYsOCwxMywxMSw5LDcsMTUsNywxMiwxNSw5LDExLDcsMTMsMTIsMTEsMTMsNiw3LDE0LDksMTMsMTUsMTQsOCwxMyw2LDUsMTIsNyw1LDExLDEyLDE0LDE1LDE0LDE1LDksOCw5LDE0LDUsNiw4LDYsNSwxMiw5LDE1LDUsMTEsNiw4LDEzLDEyLDUsMTIsMTMsMTQsMTEsOCw1LDZdO3ZhciBkPVs4LDksOSwxMSwxMywxNSwxNSw1LDcsNyw4LDExLDE0LDE0LDEyLDYsOSwxMywxNSw3LDEyLDgsOSwxMSw3LDcsMTIsNyw2LDE1LDEzLDExLDksNywxNSwxMSw4LDYsNiwxNCwxMiwxMyw1LDE0LDEzLDEzLDcsNSwxNSw1LDgsMTEsMTQsMTQsNiwxNCw2LDksMTIsOSwxMiw1LDE1LDgsOCw1LDEyLDksMTIsNSwxNCw2LDgsMTMsNiw1LDE1LDEzLDExLDExXTt2YXIgYz1bMCwxNTE4NTAwMjQ5LDE4NTk3NzUzOTMsMjQwMDk1OTcwOCwyODQwODUzODM4XTt2YXIgbD1bMTM1MjgyOTkyNiwxNTQ4NjAzNjg0LDE4MzYwNzI2OTEsMjA1Mzk5NDIxNywwXTtmdW5jdGlvbiBSSVBFTUQxNjAoKXthLmNhbGwodGhpcyw2NCk7dGhpcy5fYT0xNzMyNTg0MTkzO3RoaXMuX2I9NDAyMzIzMzQxNzt0aGlzLl9jPTI1NjIzODMxMDI7dGhpcy5fZD0yNzE3MzM4Nzg7dGhpcy5fZT0zMjg1Mzc3NTIwfW4oUklQRU1EMTYwLGEpO1JJUEVNRDE2MC5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbigpe3ZhciBlPXM7Zm9yKHZhciB0PTA7dDwxNjsrK3QpZVt0XT10aGlzLl9ibG9jay5yZWFkSW50MzJMRSh0KjQpO3ZhciByPXRoaXMuX2F8MDt2YXIgaT10aGlzLl9ifDA7dmFyIG49dGhpcy5fY3wwO3ZhciBhPXRoaXMuX2R8MDt2YXIgcD10aGlzLl9lfDA7dmFyIHY9dGhpcy5fYXwwO3ZhciBiPXRoaXMuX2J8MDt2YXIgbT10aGlzLl9jfDA7dmFyIHk9dGhpcy5fZHwwO3ZhciBnPXRoaXMuX2V8MDtmb3IodmFyIF89MDtfPDgwO18rPTEpe3ZhciB3O3ZhciBNO2lmKF88MTYpe3c9Zm4xKHIsaSxuLGEscCxlW29bX11dLGNbMF0sdVtfXSk7TT1mbjUodixiLG0seSxnLGVbaFtfXV0sbFswXSxkW19dKX1lbHNlIGlmKF88MzIpe3c9Zm4yKHIsaSxuLGEscCxlW29bX11dLGNbMV0sdVtfXSk7TT1mbjQodixiLG0seSxnLGVbaFtfXV0sbFsxXSxkW19dKX1lbHNlIGlmKF88NDgpe3c9Zm4zKHIsaSxuLGEscCxlW29bX11dLGNbMl0sdVtfXSk7TT1mbjModixiLG0seSxnLGVbaFtfXV0sbFsyXSxkW19dKX1lbHNlIGlmKF88NjQpe3c9Zm40KHIsaSxuLGEscCxlW29bX11dLGNbM10sdVtfXSk7TT1mbjIodixiLG0seSxnLGVbaFtfXV0sbFszXSxkW19dKX1lbHNle3c9Zm41KHIsaSxuLGEscCxlW29bX11dLGNbNF0sdVtfXSk7TT1mbjEodixiLG0seSxnLGVbaFtfXV0sbFs0XSxkW19dKX1yPXA7cD1hO2E9cm90bChuLDEwKTtuPWk7aT13O3Y9ZztnPXk7eT1yb3RsKG0sMTApO209YjtiPU19dmFyIEI9dGhpcy5fYituK3l8MDt0aGlzLl9iPXRoaXMuX2MrYStnfDA7dGhpcy5fYz10aGlzLl9kK3ArdnwwO3RoaXMuX2Q9dGhpcy5fZStyK2J8MDt0aGlzLl9lPXRoaXMuX2EraSttfDA7dGhpcy5fYT1CfTtSSVBFTUQxNjAucHJvdG90eXBlLl9kaWdlc3Q9ZnVuY3Rpb24oKXt0aGlzLl9ibG9ja1t0aGlzLl9ibG9ja09mZnNldCsrXT0xMjg7aWYodGhpcy5fYmxvY2tPZmZzZXQ+NTYpe3RoaXMuX2Jsb2NrLmZpbGwoMCx0aGlzLl9ibG9ja09mZnNldCw2NCk7dGhpcy5fdXBkYXRlKCk7dGhpcy5fYmxvY2tPZmZzZXQ9MH10aGlzLl9ibG9jay5maWxsKDAsdGhpcy5fYmxvY2tPZmZzZXQsNTYpO3RoaXMuX2Jsb2NrLndyaXRlVUludDMyTEUodGhpcy5fbGVuZ3RoWzBdLDU2KTt0aGlzLl9ibG9jay53cml0ZVVJbnQzMkxFKHRoaXMuX2xlbmd0aFsxXSw2MCk7dGhpcy5fdXBkYXRlKCk7dmFyIGU9aS5hbGxvYz9pLmFsbG9jKDIwKTpuZXcgaSgyMCk7ZS53cml0ZUludDMyTEUodGhpcy5fYSwwKTtlLndyaXRlSW50MzJMRSh0aGlzLl9iLDQpO2Uud3JpdGVJbnQzMkxFKHRoaXMuX2MsOCk7ZS53cml0ZUludDMyTEUodGhpcy5fZCwxMik7ZS53cml0ZUludDMyTEUodGhpcy5fZSwxNik7cmV0dXJuIGV9O2Z1bmN0aW9uIHJvdGwoZSx0KXtyZXR1cm4gZTw8dHxlPj4+MzItdH1mdW5jdGlvbiBmbjEoZSx0LHIsaSxuLGEscyxvKXtyZXR1cm4gcm90bChlKyh0XnJeaSkrYStzfDAsbykrbnwwfWZ1bmN0aW9uIGZuMihlLHQscixpLG4sYSxzLG8pe3JldHVybiByb3RsKGUrKHQmcnx+dCZpKSthK3N8MCxvKStufDB9ZnVuY3Rpb24gZm4zKGUsdCxyLGksbixhLHMsbyl7cmV0dXJuIHJvdGwoZSsoKHR8fnIpXmkpK2Erc3wwLG8pK258MH1mdW5jdGlvbiBmbjQoZSx0LHIsaSxuLGEscyxvKXtyZXR1cm4gcm90bChlKyh0Jml8ciZ+aSkrYStzfDAsbykrbnwwfWZ1bmN0aW9uIGZuNShlLHQscixpLG4sYSxzLG8pe3JldHVybiByb3RsKGUrKHReKHJ8fmkpKSthK3N8MCxvKStufDB9ZS5leHBvcnRzPVJJUEVNRDE2MH0sNTA1NTpmdW5jdGlvbihlLHQscil7dmFyIGk9cig0MzAwKTt2YXIgbj1pLkJ1ZmZlcjtmdW5jdGlvbiBjb3B5UHJvcHMoZSx0KXtmb3IodmFyIHIgaW4gZSl7dFtyXT1lW3JdfX1pZihuLmZyb20mJm4uYWxsb2MmJm4uYWxsb2NVbnNhZmUmJm4uYWxsb2NVbnNhZmVTbG93KXtlLmV4cG9ydHM9aX1lbHNle2NvcHlQcm9wcyhpLHQpO3QuQnVmZmVyPVNhZmVCdWZmZXJ9ZnVuY3Rpb24gU2FmZUJ1ZmZlcihlLHQscil7cmV0dXJuIG4oZSx0LHIpfVNhZmVCdWZmZXIucHJvdG90eXBlPU9iamVjdC5jcmVhdGUobi5wcm90b3R5cGUpO2NvcHlQcm9wcyhuLFNhZmVCdWZmZXIpO1NhZmVCdWZmZXIuZnJvbT1mdW5jdGlvbihlLHQscil7aWYodHlwZW9mIGU9PT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXJcIil9cmV0dXJuIG4oZSx0LHIpfTtTYWZlQnVmZmVyLmFsbG9jPWZ1bmN0aW9uKGUsdCxyKXtpZih0eXBlb2YgZSE9PVwibnVtYmVyXCIpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyXCIpfXZhciBpPW4oZSk7aWYodCE9PXVuZGVmaW5lZCl7aWYodHlwZW9mIHI9PT1cInN0cmluZ1wiKXtpLmZpbGwodCxyKX1lbHNle2kuZmlsbCh0KX19ZWxzZXtpLmZpbGwoMCl9cmV0dXJuIGl9O1NhZmVCdWZmZXIuYWxsb2NVbnNhZmU9ZnVuY3Rpb24oZSl7aWYodHlwZW9mIGUhPT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlclwiKX1yZXR1cm4gbihlKX07U2FmZUJ1ZmZlci5hbGxvY1Vuc2FmZVNsb3c9ZnVuY3Rpb24oZSl7aWYodHlwZW9mIGUhPT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlclwiKX1yZXR1cm4gaS5TbG93QnVmZmVyKGUpfX0sNjkxMTpmdW5jdGlvbihlLHQscil7XG4vKiEgc2FmZS1idWZmZXIuIE1JVCBMaWNlbnNlLiBGZXJvc3MgQWJvdWtoYWRpamVoIDxodHRwczovL2Zlcm9zcy5vcmcvb3BlbnNvdXJjZT4gKi9cbnZhciBpPXIoNDMwMCk7dmFyIG49aS5CdWZmZXI7ZnVuY3Rpb24gY29weVByb3BzKGUsdCl7Zm9yKHZhciByIGluIGUpe3Rbcl09ZVtyXX19aWYobi5mcm9tJiZuLmFsbG9jJiZuLmFsbG9jVW5zYWZlJiZuLmFsbG9jVW5zYWZlU2xvdyl7ZS5leHBvcnRzPWl9ZWxzZXtjb3B5UHJvcHMoaSx0KTt0LkJ1ZmZlcj1TYWZlQnVmZmVyfWZ1bmN0aW9uIFNhZmVCdWZmZXIoZSx0LHIpe3JldHVybiBuKGUsdCxyKX1TYWZlQnVmZmVyLnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG4ucHJvdG90eXBlKTtjb3B5UHJvcHMobixTYWZlQnVmZmVyKTtTYWZlQnVmZmVyLmZyb209ZnVuY3Rpb24oZSx0LHIpe2lmKHR5cGVvZiBlPT09XCJudW1iZXJcIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50IG11c3Qgbm90IGJlIGEgbnVtYmVyXCIpfXJldHVybiBuKGUsdCxyKX07U2FmZUJ1ZmZlci5hbGxvYz1mdW5jdGlvbihlLHQscil7aWYodHlwZW9mIGUhPT1cIm51bWJlclwiKXt0aHJvdyBuZXcgVHlwZUVycm9yKFwiQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlclwiKX12YXIgaT1uKGUpO2lmKHQhPT11bmRlZmluZWQpe2lmKHR5cGVvZiByPT09XCJzdHJpbmdcIil7aS5maWxsKHQscil9ZWxzZXtpLmZpbGwodCl9fWVsc2V7aS5maWxsKDApfXJldHVybiBpfTtTYWZlQnVmZmVyLmFsbG9jVW5zYWZlPWZ1bmN0aW9uKGUpe2lmKHR5cGVvZiBlIT09XCJudW1iZXJcIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIil9cmV0dXJuIG4oZSl9O1NhZmVCdWZmZXIuYWxsb2NVbnNhZmVTbG93PWZ1bmN0aW9uKGUpe2lmKHR5cGVvZiBlIT09XCJudW1iZXJcIil7dGhyb3cgbmV3IFR5cGVFcnJvcihcIkFyZ3VtZW50IG11c3QgYmUgYSBudW1iZXJcIil9cmV0dXJuIGkuU2xvd0J1ZmZlcihlKX19LDI4NTg6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoNjkxMSkuQnVmZmVyO2Z1bmN0aW9uIEhhc2goZSx0KXt0aGlzLl9ibG9jaz1pLmFsbG9jKGUpO3RoaXMuX2ZpbmFsU2l6ZT10O3RoaXMuX2Jsb2NrU2l6ZT1lO3RoaXMuX2xlbj0wfUhhc2gucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbihlLHQpe2lmKHR5cGVvZiBlPT09XCJzdHJpbmdcIil7dD10fHxcInV0ZjhcIjtlPWkuZnJvbShlLHQpfXZhciByPXRoaXMuX2Jsb2NrO3ZhciBuPXRoaXMuX2Jsb2NrU2l6ZTt2YXIgYT1lLmxlbmd0aDt2YXIgcz10aGlzLl9sZW47Zm9yKHZhciBvPTA7bzxhOyl7dmFyIGg9cyVuO3ZhciB1PU1hdGgubWluKGEtbyxuLWgpO2Zvcih2YXIgZD0wO2Q8dTtkKyspe3JbaCtkXT1lW28rZF19cys9dTtvKz11O2lmKHMlbj09PTApe3RoaXMuX3VwZGF0ZShyKX19dGhpcy5fbGVuKz1hO3JldHVybiB0aGlzfTtIYXNoLnByb3RvdHlwZS5kaWdlc3Q9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fbGVuJXRoaXMuX2Jsb2NrU2l6ZTt0aGlzLl9ibG9ja1t0XT0xMjg7dGhpcy5fYmxvY2suZmlsbCgwLHQrMSk7aWYodD49dGhpcy5fZmluYWxTaXplKXt0aGlzLl91cGRhdGUodGhpcy5fYmxvY2spO3RoaXMuX2Jsb2NrLmZpbGwoMCl9dmFyIHI9dGhpcy5fbGVuKjg7aWYocjw9NDI5NDk2NzI5NSl7dGhpcy5fYmxvY2sud3JpdGVVSW50MzJCRShyLHRoaXMuX2Jsb2NrU2l6ZS00KX1lbHNle3ZhciBpPShyJjQyOTQ5NjcyOTUpPj4+MDt2YXIgbj0oci1pKS80Mjk0OTY3Mjk2O3RoaXMuX2Jsb2NrLndyaXRlVUludDMyQkUobix0aGlzLl9ibG9ja1NpemUtOCk7dGhpcy5fYmxvY2sud3JpdGVVSW50MzJCRShpLHRoaXMuX2Jsb2NrU2l6ZS00KX10aGlzLl91cGRhdGUodGhpcy5fYmxvY2spO3ZhciBhPXRoaXMuX2hhc2goKTtyZXR1cm4gZT9hLnRvU3RyaW5nKGUpOmF9O0hhc2gucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IoXCJfdXBkYXRlIG11c3QgYmUgaW1wbGVtZW50ZWQgYnkgc3ViY2xhc3NcIil9O2UuZXhwb3J0cz1IYXNofSw0MzcxOmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1lLmV4cG9ydHM9ZnVuY3Rpb24gU0hBKGUpe2U9ZS50b0xvd2VyQ2FzZSgpO3ZhciB0PWlbZV07aWYoIXQpdGhyb3cgbmV3IEVycm9yKGUrXCIgaXMgbm90IHN1cHBvcnRlZCAod2UgYWNjZXB0IHB1bGwgcmVxdWVzdHMpXCIpO3JldHVybiBuZXcgdH07aS5zaGE9cig0MDE4KTtpLnNoYTE9cig0MTc5KTtpLnNoYTIyND1yKDUzMik7aS5zaGEyNTY9cigxODQzKTtpLnNoYTM4ND1yKDc0NTUpO2kuc2hhNTEyPXIoOTkzNCl9LDQwMTg6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoMzc4Mik7dmFyIG49cigyODU4KTt2YXIgYT1yKDY5MTEpLkJ1ZmZlcjt2YXIgcz1bMTUxODUwMDI0OSwxODU5Nzc1MzkzLDI0MDA5NTk3MDh8MCwzMzk1NDY5NzgyfDBdO3ZhciBvPW5ldyBBcnJheSg4MCk7ZnVuY3Rpb24gU2hhKCl7dGhpcy5pbml0KCk7dGhpcy5fdz1vO24uY2FsbCh0aGlzLDY0LDU2KX1pKFNoYSxuKTtTaGEucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLl9hPTE3MzI1ODQxOTM7dGhpcy5fYj00MDIzMjMzNDE3O3RoaXMuX2M9MjU2MjM4MzEwMjt0aGlzLl9kPTI3MTczMzg3ODt0aGlzLl9lPTMyODUzNzc1MjA7cmV0dXJuIHRoaXN9O2Z1bmN0aW9uIHJvdGw1KGUpe3JldHVybiBlPDw1fGU+Pj4yN31mdW5jdGlvbiByb3RsMzAoZSl7cmV0dXJuIGU8PDMwfGU+Pj4yfWZ1bmN0aW9uIGZ0KGUsdCxyLGkpe2lmKGU9PT0wKXJldHVybiB0JnJ8fnQmaTtpZihlPT09MilyZXR1cm4gdCZyfHQmaXxyJmk7cmV0dXJuIHRecl5pfVNoYS5wcm90b3R5cGUuX3VwZGF0ZT1mdW5jdGlvbihlKXt2YXIgdD10aGlzLl93O3ZhciByPXRoaXMuX2F8MDt2YXIgaT10aGlzLl9ifDA7dmFyIG49dGhpcy5fY3wwO3ZhciBhPXRoaXMuX2R8MDt2YXIgbz10aGlzLl9lfDA7Zm9yKHZhciBoPTA7aDwxNjsrK2gpdFtoXT1lLnJlYWRJbnQzMkJFKGgqNCk7Zm9yKDtoPDgwOysraCl0W2hdPXRbaC0zXV50W2gtOF1edFtoLTE0XV50W2gtMTZdO2Zvcih2YXIgdT0wO3U8ODA7Kyt1KXt2YXIgZD1+fih1LzIwKTt2YXIgYz1yb3RsNShyKStmdChkLGksbixhKStvK3RbdV0rc1tkXXwwO289YTthPW47bj1yb3RsMzAoaSk7aT1yO3I9Y310aGlzLl9hPXIrdGhpcy5fYXwwO3RoaXMuX2I9aSt0aGlzLl9ifDA7dGhpcy5fYz1uK3RoaXMuX2N8MDt0aGlzLl9kPWErdGhpcy5fZHwwO3RoaXMuX2U9byt0aGlzLl9lfDB9O1NoYS5wcm90b3R5cGUuX2hhc2g9ZnVuY3Rpb24oKXt2YXIgZT1hLmFsbG9jVW5zYWZlKDIwKTtlLndyaXRlSW50MzJCRSh0aGlzLl9hfDAsMCk7ZS53cml0ZUludDMyQkUodGhpcy5fYnwwLDQpO2Uud3JpdGVJbnQzMkJFKHRoaXMuX2N8MCw4KTtlLndyaXRlSW50MzJCRSh0aGlzLl9kfDAsMTIpO2Uud3JpdGVJbnQzMkJFKHRoaXMuX2V8MCwxNik7cmV0dXJuIGV9O2UuZXhwb3J0cz1TaGF9LDQxNzk6ZnVuY3Rpb24oZSx0LHIpe3ZhciBpPXIoMzc4Mik7dmFyIG49cigyODU4KTt2YXIgYT1yKDY5MTEpLkJ1ZmZlcjt2YXIgcz1bMTUxODUwMDI0OSwxODU5Nzc1MzkzLDI0MDA5NTk3MDh8MCwzMzk1NDY5NzgyfDBdO3ZhciBvPW5ldyBBcnJheSg4MCk7ZnVuY3Rpb24gU2hhMSgpe3RoaXMuaW5pdCgpO3RoaXMuX3c9bztuLmNhbGwodGhpcyw2NCw1Nil9aShTaGExLG4pO1NoYTEucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLl9hPTE3MzI1ODQxOTM7dGhpcy5fYj00MDIzMjMzNDE3O3RoaXMuX2M9MjU2MjM4MzEwMjt0aGlzLl9kPTI3MTczMzg3ODt0aGlzLl9lPTMyODUzNzc1MjA7cmV0dXJuIHRoaXN9O2Z1bmN0aW9uIHJvdGwxKGUpe3JldHVybiBlPDwxfGU+Pj4zMX1mdW5jdGlvbiByb3RsNShlKXtyZXR1cm4gZTw8NXxlPj4+Mjd9ZnVuY3Rpb24gcm90bDMwKGUpe3JldHVybiBlPDwzMHxlPj4+Mn1mdW5jdGlvbiBmdChlLHQscixpKXtpZihlPT09MClyZXR1cm4gdCZyfH50Jmk7aWYoZT09PTIpcmV0dXJuIHQmcnx0Jml8ciZpO3JldHVybiB0XnJeaX1TaGExLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX3c7dmFyIHI9dGhpcy5fYXwwO3ZhciBpPXRoaXMuX2J8MDt2YXIgbj10aGlzLl9jfDA7dmFyIGE9dGhpcy5fZHwwO3ZhciBvPXRoaXMuX2V8MDtmb3IodmFyIGg9MDtoPDE2OysraCl0W2hdPWUucmVhZEludDMyQkUoaCo0KTtmb3IoO2g8ODA7KytoKXRbaF09cm90bDEodFtoLTNdXnRbaC04XV50W2gtMTRdXnRbaC0xNl0pO2Zvcih2YXIgdT0wO3U8ODA7Kyt1KXt2YXIgZD1+fih1LzIwKTt2YXIgYz1yb3RsNShyKStmdChkLGksbixhKStvK3RbdV0rc1tkXXwwO289YTthPW47bj1yb3RsMzAoaSk7aT1yO3I9Y310aGlzLl9hPXIrdGhpcy5fYXwwO3RoaXMuX2I9aSt0aGlzLl9ifDA7dGhpcy5fYz1uK3RoaXMuX2N8MDt0aGlzLl9kPWErdGhpcy5fZHwwO3RoaXMuX2U9byt0aGlzLl9lfDB9O1NoYTEucHJvdG90eXBlLl9oYXNoPWZ1bmN0aW9uKCl7dmFyIGU9YS5hbGxvY1Vuc2FmZSgyMCk7ZS53cml0ZUludDMyQkUodGhpcy5fYXwwLDApO2Uud3JpdGVJbnQzMkJFKHRoaXMuX2J8MCw0KTtlLndyaXRlSW50MzJCRSh0aGlzLl9jfDAsOCk7ZS53cml0ZUludDMyQkUodGhpcy5fZHwwLDEyKTtlLndyaXRlSW50MzJCRSh0aGlzLl9lfDAsMTYpO3JldHVybiBlfTtlLmV4cG9ydHM9U2hhMX0sNTMyOmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDM3ODIpO3ZhciBuPXIoMTg0Myk7dmFyIGE9cigyODU4KTt2YXIgcz1yKDY5MTEpLkJ1ZmZlcjt2YXIgbz1uZXcgQXJyYXkoNjQpO2Z1bmN0aW9uIFNoYTIyNCgpe3RoaXMuaW5pdCgpO3RoaXMuX3c9bzthLmNhbGwodGhpcyw2NCw1Nil9aShTaGEyMjQsbik7U2hhMjI0LnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5fYT0zMjM4MzcxMDMyO3RoaXMuX2I9OTE0MTUwNjYzO3RoaXMuX2M9ODEyNzAyOTk5O3RoaXMuX2Q9NDE0NDkxMjY5Nzt0aGlzLl9lPTQyOTA3NzU4NTc7dGhpcy5fZj0xNzUwNjAzMDI1O3RoaXMuX2c9MTY5NDA3NjgzOTt0aGlzLl9oPTMyMDQwNzU0Mjg7cmV0dXJuIHRoaXN9O1NoYTIyNC5wcm90b3R5cGUuX2hhc2g9ZnVuY3Rpb24oKXt2YXIgZT1zLmFsbG9jVW5zYWZlKDI4KTtlLndyaXRlSW50MzJCRSh0aGlzLl9hLDApO2Uud3JpdGVJbnQzMkJFKHRoaXMuX2IsNCk7ZS53cml0ZUludDMyQkUodGhpcy5fYyw4KTtlLndyaXRlSW50MzJCRSh0aGlzLl9kLDEyKTtlLndyaXRlSW50MzJCRSh0aGlzLl9lLDE2KTtlLndyaXRlSW50MzJCRSh0aGlzLl9mLDIwKTtlLndyaXRlSW50MzJCRSh0aGlzLl9nLDI0KTtyZXR1cm4gZX07ZS5leHBvcnRzPVNoYTIyNH0sMTg0MzpmdW5jdGlvbihlLHQscil7dmFyIGk9cigzNzgyKTt2YXIgbj1yKDI4NTgpO3ZhciBhPXIoNjkxMSkuQnVmZmVyO3ZhciBzPVsxMTE2MzUyNDA4LDE4OTk0NDc0NDEsMzA0OTMyMzQ3MSwzOTIxMDA5NTczLDk2MTk4NzE2MywxNTA4OTcwOTkzLDI0NTM2MzU3NDgsMjg3MDc2MzIyMSwzNjI0MzgxMDgwLDMxMDU5ODQwMSw2MDcyMjUyNzgsMTQyNjg4MTk4NywxOTI1MDc4Mzg4LDIxNjIwNzgyMDYsMjYxNDg4ODEwMywzMjQ4MjIyNTgwLDM4MzUzOTA0MDEsNDAyMjIyNDc3NCwyNjQzNDcwNzgsNjA0ODA3NjI4LDc3MDI1NTk4MywxMjQ5MTUwMTIyLDE1NTUwODE2OTIsMTk5NjA2NDk4NiwyNTU0MjIwODgyLDI4MjE4MzQzNDksMjk1Mjk5NjgwOCwzMjEwMzEzNjcxLDMzMzY1NzE4OTEsMzU4NDUyODcxMSwxMTM5MjY5OTMsMzM4MjQxODk1LDY2NjMwNzIwNSw3NzM1Mjk5MTIsMTI5NDc1NzM3MiwxMzk2MTgyMjkxLDE2OTUxODM3MDAsMTk4NjY2MTA1MSwyMTc3MDI2MzUwLDI0NTY5NTYwMzcsMjczMDQ4NTkyMSwyODIwMzAyNDExLDMyNTk3MzA4MDAsMzM0NTc2NDc3MSwzNTE2MDY1ODE3LDM2MDAzNTI4MDQsNDA5NDU3MTkwOSwyNzU0MjMzNDQsNDMwMjI3NzM0LDUwNjk0ODYxNiw2NTkwNjA1NTYsODgzOTk3ODc3LDk1ODEzOTU3MSwxMzIyODIyMjE4LDE1MzcwMDIwNjMsMTc0Nzg3Mzc3OSwxOTU1NTYyMjIyLDIwMjQxMDQ4MTUsMjIyNzczMDQ1MiwyMzYxODUyNDI0LDI0Mjg0MzY0NzQsMjc1NjczNDE4NywzMjA0MDMxNDc5LDMzMjkzMjUyOThdO3ZhciBvPW5ldyBBcnJheSg2NCk7ZnVuY3Rpb24gU2hhMjU2KCl7dGhpcy5pbml0KCk7dGhpcy5fdz1vO24uY2FsbCh0aGlzLDY0LDU2KX1pKFNoYTI1NixuKTtTaGEyNTYucHJvdG90eXBlLmluaXQ9ZnVuY3Rpb24oKXt0aGlzLl9hPTE3NzkwMzM3MDM7dGhpcy5fYj0zMTQ0MTM0Mjc3O3RoaXMuX2M9MTAxMzkwNDI0Mjt0aGlzLl9kPTI3NzM0ODA3NjI7dGhpcy5fZT0xMzU5ODkzMTE5O3RoaXMuX2Y9MjYwMDgyMjkyNDt0aGlzLl9nPTUyODczNDYzNTt0aGlzLl9oPTE1NDE0NTkyMjU7cmV0dXJuIHRoaXN9O2Z1bmN0aW9uIGNoKGUsdCxyKXtyZXR1cm4gcl5lJih0XnIpfWZ1bmN0aW9uIG1haihlLHQscil7cmV0dXJuIGUmdHxyJihlfHQpfWZ1bmN0aW9uIHNpZ21hMChlKXtyZXR1cm4oZT4+PjJ8ZTw8MzApXihlPj4+MTN8ZTw8MTkpXihlPj4+MjJ8ZTw8MTApfWZ1bmN0aW9uIHNpZ21hMShlKXtyZXR1cm4oZT4+PjZ8ZTw8MjYpXihlPj4+MTF8ZTw8MjEpXihlPj4+MjV8ZTw8Nyl9ZnVuY3Rpb24gZ2FtbWEwKGUpe3JldHVybihlPj4+N3xlPDwyNSleKGU+Pj4xOHxlPDwxNCleZT4+PjN9ZnVuY3Rpb24gZ2FtbWExKGUpe3JldHVybihlPj4+MTd8ZTw8MTUpXihlPj4+MTl8ZTw8MTMpXmU+Pj4xMH1TaGEyNTYucHJvdG90eXBlLl91cGRhdGU9ZnVuY3Rpb24oZSl7dmFyIHQ9dGhpcy5fdzt2YXIgcj10aGlzLl9hfDA7dmFyIGk9dGhpcy5fYnwwO3ZhciBuPXRoaXMuX2N8MDt2YXIgYT10aGlzLl9kfDA7dmFyIG89dGhpcy5fZXwwO3ZhciBoPXRoaXMuX2Z8MDt2YXIgdT10aGlzLl9nfDA7dmFyIGQ9dGhpcy5faHwwO2Zvcih2YXIgYz0wO2M8MTY7KytjKXRbY109ZS5yZWFkSW50MzJCRShjKjQpO2Zvcig7Yzw2NDsrK2MpdFtjXT1nYW1tYTEodFtjLTJdKSt0W2MtN10rZ2FtbWEwKHRbYy0xNV0pK3RbYy0xNl18MDtmb3IodmFyIGw9MDtsPDY0OysrbCl7dmFyIHA9ZCtzaWdtYTEobykrY2gobyxoLHUpK3NbbF0rdFtsXXwwO3ZhciB2PXNpZ21hMChyKSttYWoocixpLG4pfDA7ZD11O3U9aDtoPW87bz1hK3B8MDthPW47bj1pO2k9cjtyPXArdnwwfXRoaXMuX2E9cit0aGlzLl9hfDA7dGhpcy5fYj1pK3RoaXMuX2J8MDt0aGlzLl9jPW4rdGhpcy5fY3wwO3RoaXMuX2Q9YSt0aGlzLl9kfDA7dGhpcy5fZT1vK3RoaXMuX2V8MDt0aGlzLl9mPWgrdGhpcy5fZnwwO3RoaXMuX2c9dSt0aGlzLl9nfDA7dGhpcy5faD1kK3RoaXMuX2h8MH07U2hhMjU2LnByb3RvdHlwZS5faGFzaD1mdW5jdGlvbigpe3ZhciBlPWEuYWxsb2NVbnNhZmUoMzIpO2Uud3JpdGVJbnQzMkJFKHRoaXMuX2EsMCk7ZS53cml0ZUludDMyQkUodGhpcy5fYiw0KTtlLndyaXRlSW50MzJCRSh0aGlzLl9jLDgpO2Uud3JpdGVJbnQzMkJFKHRoaXMuX2QsMTIpO2Uud3JpdGVJbnQzMkJFKHRoaXMuX2UsMTYpO2Uud3JpdGVJbnQzMkJFKHRoaXMuX2YsMjApO2Uud3JpdGVJbnQzMkJFKHRoaXMuX2csMjQpO2Uud3JpdGVJbnQzMkJFKHRoaXMuX2gsMjgpO3JldHVybiBlfTtlLmV4cG9ydHM9U2hhMjU2fSw3NDU1OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDM3ODIpO3ZhciBuPXIoOTkzNCk7dmFyIGE9cigyODU4KTt2YXIgcz1yKDY5MTEpLkJ1ZmZlcjt2YXIgbz1uZXcgQXJyYXkoMTYwKTtmdW5jdGlvbiBTaGEzODQoKXt0aGlzLmluaXQoKTt0aGlzLl93PW87YS5jYWxsKHRoaXMsMTI4LDExMil9aShTaGEzODQsbik7U2hhMzg0LnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5fYWg9MzQxODA3MDM2NTt0aGlzLl9iaD0xNjU0MjcwMjUwO3RoaXMuX2NoPTI0Mzg1MjkzNzA7dGhpcy5fZGg9MzU1NDYyMzYwO3RoaXMuX2VoPTE3MzE0MDU0MTU7dGhpcy5fZmg9MjM5NDE4MDIzMTt0aGlzLl9naD0zNjc1MDA4NTI1O3RoaXMuX2hoPTEyMDMwNjI4MTM7dGhpcy5fYWw9MzIzODM3MTAzMjt0aGlzLl9ibD05MTQxNTA2NjM7dGhpcy5fY2w9ODEyNzAyOTk5O3RoaXMuX2RsPTQxNDQ5MTI2OTc7dGhpcy5fZWw9NDI5MDc3NTg1Nzt0aGlzLl9mbD0xNzUwNjAzMDI1O3RoaXMuX2dsPTE2OTQwNzY4Mzk7dGhpcy5faGw9MzIwNDA3NTQyODtyZXR1cm4gdGhpc307U2hhMzg0LnByb3RvdHlwZS5faGFzaD1mdW5jdGlvbigpe3ZhciBlPXMuYWxsb2NVbnNhZmUoNDgpO2Z1bmN0aW9uIHdyaXRlSW50NjRCRSh0LHIsaSl7ZS53cml0ZUludDMyQkUodCxpKTtlLndyaXRlSW50MzJCRShyLGkrNCl9d3JpdGVJbnQ2NEJFKHRoaXMuX2FoLHRoaXMuX2FsLDApO3dyaXRlSW50NjRCRSh0aGlzLl9iaCx0aGlzLl9ibCw4KTt3cml0ZUludDY0QkUodGhpcy5fY2gsdGhpcy5fY2wsMTYpO3dyaXRlSW50NjRCRSh0aGlzLl9kaCx0aGlzLl9kbCwyNCk7d3JpdGVJbnQ2NEJFKHRoaXMuX2VoLHRoaXMuX2VsLDMyKTt3cml0ZUludDY0QkUodGhpcy5fZmgsdGhpcy5fZmwsNDApO3JldHVybiBlfTtlLmV4cG9ydHM9U2hhMzg0fSw5OTM0OmZ1bmN0aW9uKGUsdCxyKXt2YXIgaT1yKDM3ODIpO3ZhciBuPXIoMjg1OCk7dmFyIGE9cig2OTExKS5CdWZmZXI7dmFyIHM9WzExMTYzNTI0MDgsMzYwOTc2NzQ1OCwxODk5NDQ3NDQxLDYwMjg5MTcyNSwzMDQ5MzIzNDcxLDM5NjQ0ODQzOTksMzkyMTAwOTU3MywyMTczMjk1NTQ4LDk2MTk4NzE2Myw0MDgxNjI4NDcyLDE1MDg5NzA5OTMsMzA1MzgzNDI2NSwyNDUzNjM1NzQ4LDI5Mzc2NzE1NzksMjg3MDc2MzIyMSwzNjY0NjA5NTYwLDM2MjQzODEwODAsMjczNDg4MzM5NCwzMTA1OTg0MDEsMTE2NDk5NjU0Miw2MDcyMjUyNzgsMTMyMzYxMDc2NCwxNDI2ODgxOTg3LDM1OTAzMDQ5OTQsMTkyNTA3ODM4OCw0MDY4MTgyMzgzLDIxNjIwNzgyMDYsOTkxMzM2MTEzLDI2MTQ4ODgxMDMsNjMzODAzMzE3LDMyNDgyMjI1ODAsMzQ3OTc3NDg2OCwzODM1MzkwNDAxLDI2NjY2MTM0NTgsNDAyMjIyNDc3NCw5NDQ3MTExMzksMjY0MzQ3MDc4LDIzNDEyNjI3NzMsNjA0ODA3NjI4LDIwMDc4MDA5MzMsNzcwMjU1OTgzLDE0OTU5OTA5MDEsMTI0OTE1MDEyMiwxODU2NDMxMjM1LDE1NTUwODE2OTIsMzE3NTIxODEzMiwxOTk2MDY0OTg2LDIxOTg5NTA4MzcsMjU1NDIyMDg4MiwzOTk5NzE5MzM5LDI4MjE4MzQzNDksNzY2Nzg0MDE2LDI5NTI5OTY4MDgsMjU2NjU5NDg3OSwzMjEwMzEzNjcxLDMyMDMzMzc5NTYsMzMzNjU3MTg5MSwxMDM0NDU3MDI2LDM1ODQ1Mjg3MTEsMjQ2Njk0ODkwMSwxMTM5MjY5OTMsMzc1ODMyNjM4MywzMzgyNDE4OTUsMTY4NzE3OTM2LDY2NjMwNzIwNSwxMTg4MTc5OTY0LDc3MzUyOTkxMiwxNTQ2MDQ1NzM0LDEyOTQ3NTczNzIsMTUyMjgwNTQ4NSwxMzk2MTgyMjkxLDI2NDM4MzM4MjMsMTY5NTE4MzcwMCwyMzQzNTI3MzkwLDE5ODY2NjEwNTEsMTAxNDQ3NzQ4MCwyMTc3MDI2MzUwLDEyMDY3NTkxNDIsMjQ1Njk1NjAzNywzNDQwNzc2MjcsMjczMDQ4NTkyMSwxMjkwODYzNDYwLDI4MjAzMDI0MTEsMzE1ODQ1NDI3MywzMjU5NzMwODAwLDM1MDU5NTI2NTcsMzM0NTc2NDc3MSwxMDYyMTcwMDgsMzUxNjA2NTgxNywzNjA2MDA4MzQ0LDM2MDAzNTI4MDQsMTQzMjcyNTc3Niw0MDk0NTcxOTA5LDE0NjcwMzE1OTQsMjc1NDIzMzQ0LDg1MTE2OTcyMCw0MzAyMjc3MzQsMzEwMDgyMzc1Miw1MDY5NDg2MTYsMTM2MzI1ODE5NSw2NTkwNjA1NTYsMzc1MDY4NTU5Myw4ODM5OTc4NzcsMzc4NTA1MDI4MCw5NTgxMzk1NzEsMzMxODMwNzQyNywxMzIyODIyMjE4LDM4MTI3MjM0MDMsMTUzNzAwMjA2MywyMDAzMDM0OTk1LDE3NDc4NzM3NzksMzYwMjAzNjg5OSwxOTU1NTYyMjIyLDE1NzU5OTAwMTIsMjAyNDEwNDgxNSwxMTI1NTkyOTI4LDIyMjc3MzA0NTIsMjcxNjkwNDMwNiwyMzYxODUyNDI0LDQ0Mjc3NjA0NCwyNDI4NDM2NDc0LDU5MzY5ODM0NCwyNzU2NzM0MTg3LDM3MzMxMTAyNDksMzIwNDAzMTQ3OSwyOTk5MzUxNTczLDMzMjkzMjUyOTgsMzgxNTkyMDQyNywzMzkxNTY5NjE0LDM5MjgzODM5MDAsMzUxNTI2NzI3MSw1NjYyODA3MTEsMzk0MDE4NzYwNiwzNDU0MDY5NTM0LDQxMTg2MzAyNzEsNDAwMDIzOTk5MiwxMTY0MTg0NzQsMTkxNDEzODU1NCwxNzQyOTI0MjEsMjczMTA1NTI3MCwyODkzODAzNTYsMzIwMzk5MzAwNiw0NjAzOTMyNjksMzIwNjIwMzE1LDY4NTQ3MTczMyw1ODc0OTY4MzYsODUyMTQyOTcxLDEwODY3OTI4NTEsMTAxNzAzNjI5OCwzNjU1NDMxMDAsMTEyNjAwMDU4MCwyNjE4Mjk3Njc2LDEyODgwMzM0NzAsMzQwOTg1NTE1OCwxNTAxNTA1OTQ4LDQyMzQ1MDk4NjYsMTYwNzE2NzkxNSw5ODcxNjc0NjgsMTgxNjQwMjMxNiwxMjQ2MTg5NTkxXTt2YXIgbz1uZXcgQXJyYXkoMTYwKTtmdW5jdGlvbiBTaGE1MTIoKXt0aGlzLmluaXQoKTt0aGlzLl93PW87bi5jYWxsKHRoaXMsMTI4LDExMil9aShTaGE1MTIsbik7U2hhNTEyLnByb3RvdHlwZS5pbml0PWZ1bmN0aW9uKCl7dGhpcy5fYWg9MTc3OTAzMzcwMzt0aGlzLl9iaD0zMTQ0MTM0Mjc3O3RoaXMuX2NoPTEwMTM5MDQyNDI7dGhpcy5fZGg9Mjc3MzQ4MDc2Mjt0aGlzLl9laD0xMzU5ODkzMTE5O3RoaXMuX2ZoPTI2MDA4MjI5MjQ7dGhpcy5fZ2g9NTI4NzM0NjM1O3RoaXMuX2hoPTE1NDE0NTkyMjU7dGhpcy5fYWw9NDA4OTIzNTcyMDt0aGlzLl9ibD0yMjI3ODczNTk1O3RoaXMuX2NsPTQyNzExNzU3MjM7dGhpcy5fZGw9MTU5NTc1MDEyOTt0aGlzLl9lbD0yOTE3NTY1MTM3O3RoaXMuX2ZsPTcyNTUxMTE5OTt0aGlzLl9nbD00MjE1Mzg5NTQ3O3RoaXMuX2hsPTMyNzAzMzIwOTtyZXR1cm4gdGhpc307ZnVuY3Rpb24gQ2goZSx0LHIpe3JldHVybiByXmUmKHRecil9ZnVuY3Rpb24gbWFqKGUsdCxyKXtyZXR1cm4gZSZ0fHImKGV8dCl9ZnVuY3Rpb24gc2lnbWEwKGUsdCl7cmV0dXJuKGU+Pj4yOHx0PDw0KV4odD4+PjJ8ZTw8MzApXih0Pj4+N3xlPDwyNSl9ZnVuY3Rpb24gc2lnbWExKGUsdCl7cmV0dXJuKGU+Pj4xNHx0PDwxOCleKGU+Pj4xOHx0PDwxNCleKHQ+Pj45fGU8PDIzKX1mdW5jdGlvbiBHYW1tYTAoZSx0KXtyZXR1cm4oZT4+PjF8dDw8MzEpXihlPj4+OHx0PDwyNCleZT4+Pjd9ZnVuY3Rpb24gR2FtbWEwbChlLHQpe3JldHVybihlPj4+MXx0PDwzMSleKGU+Pj44fHQ8PDI0KV4oZT4+Pjd8dDw8MjUpfWZ1bmN0aW9uIEdhbW1hMShlLHQpe3JldHVybihlPj4+MTl8dDw8MTMpXih0Pj4+Mjl8ZTw8MyleZT4+PjZ9ZnVuY3Rpb24gR2FtbWExbChlLHQpe3JldHVybihlPj4+MTl8dDw8MTMpXih0Pj4+Mjl8ZTw8MyleKGU+Pj42fHQ8PDI2KX1mdW5jdGlvbiBnZXRDYXJyeShlLHQpe3JldHVybiBlPj4+MDx0Pj4+MD8xOjB9U2hhNTEyLnByb3RvdHlwZS5fdXBkYXRlPWZ1bmN0aW9uKGUpe3ZhciB0PXRoaXMuX3c7dmFyIHI9dGhpcy5fYWh8MDt2YXIgaT10aGlzLl9iaHwwO3ZhciBuPXRoaXMuX2NofDA7dmFyIGE9dGhpcy5fZGh8MDt2YXIgbz10aGlzLl9laHwwO3ZhciBoPXRoaXMuX2ZofDA7dmFyIHU9dGhpcy5fZ2h8MDt2YXIgZD10aGlzLl9oaHwwO3ZhciBjPXRoaXMuX2FsfDA7dmFyIGw9dGhpcy5fYmx8MDt2YXIgcD10aGlzLl9jbHwwO3ZhciB2PXRoaXMuX2RsfDA7dmFyIGI9dGhpcy5fZWx8MDt2YXIgbT10aGlzLl9mbHwwO3ZhciB5PXRoaXMuX2dsfDA7dmFyIGc9dGhpcy5faGx8MDtmb3IodmFyIF89MDtfPDMyO18rPTIpe3RbX109ZS5yZWFkSW50MzJCRShfKjQpO3RbXysxXT1lLnJlYWRJbnQzMkJFKF8qNCs0KX1mb3IoO188MTYwO18rPTIpe3ZhciB3PXRbXy0xNSoyXTt2YXIgTT10W18tMTUqMisxXTt2YXIgQj1HYW1tYTAodyxNKTt2YXIgRT1HYW1tYTBsKE0sdyk7dz10W18tMioyXTtNPXRbXy0yKjIrMV07dmFyIGs9R2FtbWExKHcsTSk7dmFyIEE9R2FtbWExbChNLHcpO3ZhciBOPXRbXy03KjJdO3ZhciBQPXRbXy03KjIrMV07dmFyIHg9dFtfLTE2KjJdO3ZhciBJPXRbXy0xNioyKzFdO3ZhciBDPUUrUHwwO3ZhciBEPUIrTitnZXRDYXJyeShDLEUpfDA7Qz1DK0F8MDtEPUQraytnZXRDYXJyeShDLEEpfDA7Qz1DK0l8MDtEPUQreCtnZXRDYXJyeShDLEkpfDA7dFtfXT1EO3RbXysxXT1DfWZvcih2YXIgVD0wO1Q8MTYwO1QrPTIpe0Q9dFtUXTtDPXRbVCsxXTt2YXIgaj1tYWoocixpLG4pO3ZhciBxPW1haihjLGwscCk7dmFyIE89c2lnbWEwKHIsYyk7dmFyIEg9c2lnbWEwKGMscik7dmFyIEw9c2lnbWExKG8sYik7dmFyIHo9c2lnbWExKGIsbyk7dmFyIEY9c1tUXTt2YXIgVT1zW1QrMV07dmFyIFc9Q2gobyxoLHUpO3ZhciBWPUNoKGIsbSx5KTt2YXIgRz1nK3p8MDt2YXIgSj1kK0wrZ2V0Q2FycnkoRyxnKXwwO0c9RytWfDA7Sj1KK1crZ2V0Q2FycnkoRyxWKXwwO0c9RytVfDA7Sj1KK0YrZ2V0Q2FycnkoRyxVKXwwO0c9RytDfDA7Sj1KK0QrZ2V0Q2FycnkoRyxDKXwwO3ZhciBaPUgrcXwwO3ZhciBYPU8raitnZXRDYXJyeShaLEgpfDA7ZD11O2c9eTt1PWg7eT1tO2g9bzttPWI7Yj12K0d8MDtvPWErSitnZXRDYXJyeShiLHYpfDA7YT1uO3Y9cDtuPWk7cD1sO2k9cjtsPWM7Yz1HK1p8MDtyPUorWCtnZXRDYXJyeShjLEcpfDB9dGhpcy5fYWw9dGhpcy5fYWwrY3wwO3RoaXMuX2JsPXRoaXMuX2JsK2x8MDt0aGlzLl9jbD10aGlzLl9jbCtwfDA7dGhpcy5fZGw9dGhpcy5fZGwrdnwwO3RoaXMuX2VsPXRoaXMuX2VsK2J8MDt0aGlzLl9mbD10aGlzLl9mbCttfDA7dGhpcy5fZ2w9dGhpcy5fZ2wreXwwO3RoaXMuX2hsPXRoaXMuX2hsK2d8MDt0aGlzLl9haD10aGlzLl9haCtyK2dldENhcnJ5KHRoaXMuX2FsLGMpfDA7dGhpcy5fYmg9dGhpcy5fYmgraStnZXRDYXJyeSh0aGlzLl9ibCxsKXwwO3RoaXMuX2NoPXRoaXMuX2NoK24rZ2V0Q2FycnkodGhpcy5fY2wscCl8MDt0aGlzLl9kaD10aGlzLl9kaCthK2dldENhcnJ5KHRoaXMuX2RsLHYpfDA7dGhpcy5fZWg9dGhpcy5fZWgrbytnZXRDYXJyeSh0aGlzLl9lbCxiKXwwO3RoaXMuX2ZoPXRoaXMuX2ZoK2grZ2V0Q2FycnkodGhpcy5fZmwsbSl8MDt0aGlzLl9naD10aGlzLl9naCt1K2dldENhcnJ5KHRoaXMuX2dsLHkpfDA7dGhpcy5faGg9dGhpcy5faGgrZCtnZXRDYXJyeSh0aGlzLl9obCxnKXwwfTtTaGE1MTIucHJvdG90eXBlLl9oYXNoPWZ1bmN0aW9uKCl7dmFyIGU9YS5hbGxvY1Vuc2FmZSg2NCk7ZnVuY3Rpb24gd3JpdGVJbnQ2NEJFKHQscixpKXtlLndyaXRlSW50MzJCRSh0LGkpO2Uud3JpdGVJbnQzMkJFKHIsaSs0KX13cml0ZUludDY0QkUodGhpcy5fYWgsdGhpcy5fYWwsMCk7d3JpdGVJbnQ2NEJFKHRoaXMuX2JoLHRoaXMuX2JsLDgpO3dyaXRlSW50NjRCRSh0aGlzLl9jaCx0aGlzLl9jbCwxNik7d3JpdGVJbnQ2NEJFKHRoaXMuX2RoLHRoaXMuX2RsLDI0KTt3cml0ZUludDY0QkUodGhpcy5fZWgsdGhpcy5fZWwsMzIpO3dyaXRlSW50NjRCRSh0aGlzLl9maCx0aGlzLl9mbCw0MCk7d3JpdGVJbnQ2NEJFKHRoaXMuX2doLHRoaXMuX2dsLDQ4KTt3cml0ZUludDY0QkUodGhpcy5faGgsdGhpcy5faGwsNTYpO3JldHVybiBlfTtlLmV4cG9ydHM9U2hhNTEyfSwzNzA0OmZ1bmN0aW9uKGUsdCxyKXtcInVzZSBzdHJpY3RcIjt2YXIgaT1yKDUwNTUpLkJ1ZmZlcjt2YXIgbj1pLmlzRW5jb2Rpbmd8fGZ1bmN0aW9uKGUpe2U9XCJcIitlO3N3aXRjaChlJiZlLnRvTG93ZXJDYXNlKCkpe2Nhc2VcImhleFwiOmNhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOmNhc2VcImFzY2lpXCI6Y2FzZVwiYmluYXJ5XCI6Y2FzZVwiYmFzZTY0XCI6Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6Y2FzZVwicmF3XCI6cmV0dXJuIHRydWU7ZGVmYXVsdDpyZXR1cm4gZmFsc2V9fTtmdW5jdGlvbiBfbm9ybWFsaXplRW5jb2RpbmcoZSl7aWYoIWUpcmV0dXJuXCJ1dGY4XCI7dmFyIHQ7d2hpbGUodHJ1ZSl7c3dpdGNoKGUpe2Nhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOnJldHVyblwidXRmOFwiO2Nhc2VcInVjczJcIjpjYXNlXCJ1Y3MtMlwiOmNhc2VcInV0ZjE2bGVcIjpjYXNlXCJ1dGYtMTZsZVwiOnJldHVyblwidXRmMTZsZVwiO2Nhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOnJldHVyblwibGF0aW4xXCI7Y2FzZVwiYmFzZTY0XCI6Y2FzZVwiYXNjaWlcIjpjYXNlXCJoZXhcIjpyZXR1cm4gZTtkZWZhdWx0OmlmKHQpcmV0dXJuO2U9KFwiXCIrZSkudG9Mb3dlckNhc2UoKTt0PXRydWV9fX1mdW5jdGlvbiBub3JtYWxpemVFbmNvZGluZyhlKXt2YXIgdD1fbm9ybWFsaXplRW5jb2RpbmcoZSk7aWYodHlwZW9mIHQhPT1cInN0cmluZ1wiJiYoaS5pc0VuY29kaW5nPT09bnx8IW4oZSkpKXRocm93IG5ldyBFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2UpO3JldHVybiB0fHxlfXQucz1TdHJpbmdEZWNvZGVyO2Z1bmN0aW9uIFN0cmluZ0RlY29kZXIoZSl7dGhpcy5lbmNvZGluZz1ub3JtYWxpemVFbmNvZGluZyhlKTt2YXIgdDtzd2l0Y2godGhpcy5lbmNvZGluZyl7Y2FzZVwidXRmMTZsZVwiOnRoaXMudGV4dD11dGYxNlRleHQ7dGhpcy5lbmQ9dXRmMTZFbmQ7dD00O2JyZWFrO2Nhc2VcInV0ZjhcIjp0aGlzLmZpbGxMYXN0PXV0ZjhGaWxsTGFzdDt0PTQ7YnJlYWs7Y2FzZVwiYmFzZTY0XCI6dGhpcy50ZXh0PWJhc2U2NFRleHQ7dGhpcy5lbmQ9YmFzZTY0RW5kO3Q9MzticmVhaztkZWZhdWx0OnRoaXMud3JpdGU9c2ltcGxlV3JpdGU7dGhpcy5lbmQ9c2ltcGxlRW5kO3JldHVybn10aGlzLmxhc3ROZWVkPTA7dGhpcy5sYXN0VG90YWw9MDt0aGlzLmxhc3RDaGFyPWkuYWxsb2NVbnNhZmUodCl9U3RyaW5nRGVjb2Rlci5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24oZSl7aWYoZS5sZW5ndGg9PT0wKXJldHVyblwiXCI7dmFyIHQ7dmFyIHI7aWYodGhpcy5sYXN0TmVlZCl7dD10aGlzLmZpbGxMYXN0KGUpO2lmKHQ9PT11bmRlZmluZWQpcmV0dXJuXCJcIjtyPXRoaXMubGFzdE5lZWQ7dGhpcy5sYXN0TmVlZD0wfWVsc2V7cj0wfWlmKHI8ZS5sZW5ndGgpcmV0dXJuIHQ/dCt0aGlzLnRleHQoZSxyKTp0aGlzLnRleHQoZSxyKTtyZXR1cm4gdHx8XCJcIn07U3RyaW5nRGVjb2Rlci5wcm90b3R5cGUuZW5kPXV0ZjhFbmQ7U3RyaW5nRGVjb2Rlci5wcm90b3R5cGUudGV4dD11dGY4VGV4dDtTdHJpbmdEZWNvZGVyLnByb3RvdHlwZS5maWxsTGFzdD1mdW5jdGlvbihlKXtpZih0aGlzLmxhc3ROZWVkPD1lLmxlbmd0aCl7ZS5jb3B5KHRoaXMubGFzdENoYXIsdGhpcy5sYXN0VG90YWwtdGhpcy5sYXN0TmVlZCwwLHRoaXMubGFzdE5lZWQpO3JldHVybiB0aGlzLmxhc3RDaGFyLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcsMCx0aGlzLmxhc3RUb3RhbCl9ZS5jb3B5KHRoaXMubGFzdENoYXIsdGhpcy5sYXN0VG90YWwtdGhpcy5sYXN0TmVlZCwwLGUubGVuZ3RoKTt0aGlzLmxhc3ROZWVkLT1lLmxlbmd0aH07ZnVuY3Rpb24gdXRmOENoZWNrQnl0ZShlKXtpZihlPD0xMjcpcmV0dXJuIDA7ZWxzZSBpZihlPj41PT09NilyZXR1cm4gMjtlbHNlIGlmKGU+PjQ9PT0xNClyZXR1cm4gMztlbHNlIGlmKGU+PjM9PT0zMClyZXR1cm4gNDtyZXR1cm4gZT4+Nj09PTI/LTE6LTJ9ZnVuY3Rpb24gdXRmOENoZWNrSW5jb21wbGV0ZShlLHQscil7dmFyIGk9dC5sZW5ndGgtMTtpZihpPHIpcmV0dXJuIDA7dmFyIG49dXRmOENoZWNrQnl0ZSh0W2ldKTtpZihuPj0wKXtpZihuPjApZS5sYXN0TmVlZD1uLTE7cmV0dXJuIG59aWYoLS1pPHJ8fG49PT0tMilyZXR1cm4gMDtuPXV0ZjhDaGVja0J5dGUodFtpXSk7aWYobj49MCl7aWYobj4wKWUubGFzdE5lZWQ9bi0yO3JldHVybiBufWlmKC0taTxyfHxuPT09LTIpcmV0dXJuIDA7bj11dGY4Q2hlY2tCeXRlKHRbaV0pO2lmKG4+PTApe2lmKG4+MCl7aWYobj09PTIpbj0wO2Vsc2UgZS5sYXN0TmVlZD1uLTN9cmV0dXJuIG59cmV0dXJuIDB9ZnVuY3Rpb24gdXRmOENoZWNrRXh0cmFCeXRlcyhlLHQscil7aWYoKHRbMF0mMTkyKSE9PTEyOCl7ZS5sYXN0TmVlZD0wO3JldHVyblwi77+9XCJ9aWYoZS5sYXN0TmVlZD4xJiZ0Lmxlbmd0aD4xKXtpZigodFsxXSYxOTIpIT09MTI4KXtlLmxhc3ROZWVkPTE7cmV0dXJuXCLvv71cIn1pZihlLmxhc3ROZWVkPjImJnQubGVuZ3RoPjIpe2lmKCh0WzJdJjE5MikhPT0xMjgpe2UubGFzdE5lZWQ9MjtyZXR1cm5cIu+/vVwifX19fWZ1bmN0aW9uIHV0ZjhGaWxsTGFzdChlKXt2YXIgdD10aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkO3ZhciByPXV0ZjhDaGVja0V4dHJhQnl0ZXModGhpcyxlLHQpO2lmKHIhPT11bmRlZmluZWQpcmV0dXJuIHI7aWYodGhpcy5sYXN0TmVlZDw9ZS5sZW5ndGgpe2UuY29weSh0aGlzLmxhc3RDaGFyLHQsMCx0aGlzLmxhc3ROZWVkKTtyZXR1cm4gdGhpcy5sYXN0Q2hhci50b1N0cmluZyh0aGlzLmVuY29kaW5nLDAsdGhpcy5sYXN0VG90YWwpfWUuY29weSh0aGlzLmxhc3RDaGFyLHQsMCxlLmxlbmd0aCk7dGhpcy5sYXN0TmVlZC09ZS5sZW5ndGh9ZnVuY3Rpb24gdXRmOFRleHQoZSx0KXt2YXIgcj11dGY4Q2hlY2tJbmNvbXBsZXRlKHRoaXMsZSx0KTtpZighdGhpcy5sYXN0TmVlZClyZXR1cm4gZS50b1N0cmluZyhcInV0ZjhcIix0KTt0aGlzLmxhc3RUb3RhbD1yO3ZhciBpPWUubGVuZ3RoLShyLXRoaXMubGFzdE5lZWQpO2UuY29weSh0aGlzLmxhc3RDaGFyLDAsaSk7cmV0dXJuIGUudG9TdHJpbmcoXCJ1dGY4XCIsdCxpKX1mdW5jdGlvbiB1dGY4RW5kKGUpe3ZhciB0PWUmJmUubGVuZ3RoP3RoaXMud3JpdGUoZSk6XCJcIjtpZih0aGlzLmxhc3ROZWVkKXJldHVybiB0K1wi77+9XCI7cmV0dXJuIHR9ZnVuY3Rpb24gdXRmMTZUZXh0KGUsdCl7aWYoKGUubGVuZ3RoLXQpJTI9PT0wKXt2YXIgcj1lLnRvU3RyaW5nKFwidXRmMTZsZVwiLHQpO2lmKHIpe3ZhciBpPXIuY2hhckNvZGVBdChyLmxlbmd0aC0xKTtpZihpPj01NTI5NiYmaTw9NTYzMTkpe3RoaXMubGFzdE5lZWQ9Mjt0aGlzLmxhc3RUb3RhbD00O3RoaXMubGFzdENoYXJbMF09ZVtlLmxlbmd0aC0yXTt0aGlzLmxhc3RDaGFyWzFdPWVbZS5sZW5ndGgtMV07cmV0dXJuIHIuc2xpY2UoMCwtMSl9fXJldHVybiByfXRoaXMubGFzdE5lZWQ9MTt0aGlzLmxhc3RUb3RhbD0yO3RoaXMubGFzdENoYXJbMF09ZVtlLmxlbmd0aC0xXTtyZXR1cm4gZS50b1N0cmluZyhcInV0ZjE2bGVcIix0LGUubGVuZ3RoLTEpfWZ1bmN0aW9uIHV0ZjE2RW5kKGUpe3ZhciB0PWUmJmUubGVuZ3RoP3RoaXMud3JpdGUoZSk6XCJcIjtpZih0aGlzLmxhc3ROZWVkKXt2YXIgcj10aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkO3JldHVybiB0K3RoaXMubGFzdENoYXIudG9TdHJpbmcoXCJ1dGYxNmxlXCIsMCxyKX1yZXR1cm4gdH1mdW5jdGlvbiBiYXNlNjRUZXh0KGUsdCl7dmFyIHI9KGUubGVuZ3RoLXQpJTM7aWYocj09PTApcmV0dXJuIGUudG9TdHJpbmcoXCJiYXNlNjRcIix0KTt0aGlzLmxhc3ROZWVkPTMtcjt0aGlzLmxhc3RUb3RhbD0zO2lmKHI9PT0xKXt0aGlzLmxhc3RDaGFyWzBdPWVbZS5sZW5ndGgtMV19ZWxzZXt0aGlzLmxhc3RDaGFyWzBdPWVbZS5sZW5ndGgtMl07dGhpcy5sYXN0Q2hhclsxXT1lW2UubGVuZ3RoLTFdfXJldHVybiBlLnRvU3RyaW5nKFwiYmFzZTY0XCIsdCxlLmxlbmd0aC1yKX1mdW5jdGlvbiBiYXNlNjRFbmQoZSl7dmFyIHQ9ZSYmZS5sZW5ndGg/dGhpcy53cml0ZShlKTpcIlwiO2lmKHRoaXMubGFzdE5lZWQpcmV0dXJuIHQrdGhpcy5sYXN0Q2hhci50b1N0cmluZyhcImJhc2U2NFwiLDAsMy10aGlzLmxhc3ROZWVkKTtyZXR1cm4gdH1mdW5jdGlvbiBzaW1wbGVXcml0ZShlKXtyZXR1cm4gZS50b1N0cmluZyh0aGlzLmVuY29kaW5nKX1mdW5jdGlvbiBzaW1wbGVFbmQoZSl7cmV0dXJuIGUmJmUubGVuZ3RoP3RoaXMud3JpdGUoZSk6XCJcIn19LDY3Njk6ZnVuY3Rpb24oZSl7ZS5leHBvcnRzPWRlcHJlY2F0ZTtmdW5jdGlvbiBkZXByZWNhdGUoZSx0KXtpZihjb25maWcoXCJub0RlcHJlY2F0aW9uXCIpKXtyZXR1cm4gZX12YXIgcj1mYWxzZTtmdW5jdGlvbiBkZXByZWNhdGVkKCl7aWYoIXIpe2lmKGNvbmZpZyhcInRocm93RGVwcmVjYXRpb25cIikpe3Rocm93IG5ldyBFcnJvcih0KX1lbHNlIGlmKGNvbmZpZyhcInRyYWNlRGVwcmVjYXRpb25cIikpe2NvbnNvbGUudHJhY2UodCl9ZWxzZXtjb25zb2xlLndhcm4odCl9cj10cnVlfXJldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1yZXR1cm4gZGVwcmVjYXRlZH1mdW5jdGlvbiBjb25maWcoZSl7dHJ5e2lmKCFnbG9iYWwubG9jYWxTdG9yYWdlKXJldHVybiBmYWxzZX1jYXRjaChlKXtyZXR1cm4gZmFsc2V9dmFyIHQ9Z2xvYmFsLmxvY2FsU3RvcmFnZVtlXTtpZihudWxsPT10KXJldHVybiBmYWxzZTtyZXR1cm4gU3RyaW5nKHQpLnRvTG93ZXJDYXNlKCk9PT1cInRydWVcIn19LDQzMDA6ZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPXJlcXVpcmUoXCJidWZmZXJcIil9LDYxMTM6ZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPXJlcXVpcmUoXCJjcnlwdG9cIil9LDIzNjE6ZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPXJlcXVpcmUoXCJldmVudHNcIil9LDI3ODE6ZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPXJlcXVpcmUoXCJzdHJlYW1cIil9LDE1NzY6ZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPXJlcXVpcmUoXCJzdHJpbmdfZGVjb2RlclwiKX0sMzgzNzpmdW5jdGlvbihlKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9cmVxdWlyZShcInV0aWxcIil9LDYxNDQ6ZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPXJlcXVpcmUoXCJ2bVwiKX0sNTg2NjpmdW5jdGlvbihlKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9SlNPTi5wYXJzZSgne1wiYWVzLTEyOC1lY2JcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MTI4LFwiaXZcIjowLFwibW9kZVwiOlwiRUNCXCIsXCJ0eXBlXCI6XCJibG9ja1wifSxcImFlcy0xOTItZWNiXCI6e1wiY2lwaGVyXCI6XCJBRVNcIixcImtleVwiOjE5MixcIml2XCI6MCxcIm1vZGVcIjpcIkVDQlwiLFwidHlwZVwiOlwiYmxvY2tcIn0sXCJhZXMtMjU2LWVjYlwiOntcImNpcGhlclwiOlwiQUVTXCIsXCJrZXlcIjoyNTYsXCJpdlwiOjAsXCJtb2RlXCI6XCJFQ0JcIixcInR5cGVcIjpcImJsb2NrXCJ9LFwiYWVzLTEyOC1jYmNcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MTI4LFwiaXZcIjoxNixcIm1vZGVcIjpcIkNCQ1wiLFwidHlwZVwiOlwiYmxvY2tcIn0sXCJhZXMtMTkyLWNiY1wiOntcImNpcGhlclwiOlwiQUVTXCIsXCJrZXlcIjoxOTIsXCJpdlwiOjE2LFwibW9kZVwiOlwiQ0JDXCIsXCJ0eXBlXCI6XCJibG9ja1wifSxcImFlcy0yNTYtY2JjXCI6e1wiY2lwaGVyXCI6XCJBRVNcIixcImtleVwiOjI1NixcIml2XCI6MTYsXCJtb2RlXCI6XCJDQkNcIixcInR5cGVcIjpcImJsb2NrXCJ9LFwiYWVzMTI4XCI6e1wiY2lwaGVyXCI6XCJBRVNcIixcImtleVwiOjEyOCxcIml2XCI6MTYsXCJtb2RlXCI6XCJDQkNcIixcInR5cGVcIjpcImJsb2NrXCJ9LFwiYWVzMTkyXCI6e1wiY2lwaGVyXCI6XCJBRVNcIixcImtleVwiOjE5MixcIml2XCI6MTYsXCJtb2RlXCI6XCJDQkNcIixcInR5cGVcIjpcImJsb2NrXCJ9LFwiYWVzMjU2XCI6e1wiY2lwaGVyXCI6XCJBRVNcIixcImtleVwiOjI1NixcIml2XCI6MTYsXCJtb2RlXCI6XCJDQkNcIixcInR5cGVcIjpcImJsb2NrXCJ9LFwiYWVzLTEyOC1jZmJcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MTI4LFwiaXZcIjoxNixcIm1vZGVcIjpcIkNGQlwiLFwidHlwZVwiOlwic3RyZWFtXCJ9LFwiYWVzLTE5Mi1jZmJcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MTkyLFwiaXZcIjoxNixcIm1vZGVcIjpcIkNGQlwiLFwidHlwZVwiOlwic3RyZWFtXCJ9LFwiYWVzLTI1Ni1jZmJcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MjU2LFwiaXZcIjoxNixcIm1vZGVcIjpcIkNGQlwiLFwidHlwZVwiOlwic3RyZWFtXCJ9LFwiYWVzLTEyOC1jZmI4XCI6e1wiY2lwaGVyXCI6XCJBRVNcIixcImtleVwiOjEyOCxcIml2XCI6MTYsXCJtb2RlXCI6XCJDRkI4XCIsXCJ0eXBlXCI6XCJzdHJlYW1cIn0sXCJhZXMtMTkyLWNmYjhcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MTkyLFwiaXZcIjoxNixcIm1vZGVcIjpcIkNGQjhcIixcInR5cGVcIjpcInN0cmVhbVwifSxcImFlcy0yNTYtY2ZiOFwiOntcImNpcGhlclwiOlwiQUVTXCIsXCJrZXlcIjoyNTYsXCJpdlwiOjE2LFwibW9kZVwiOlwiQ0ZCOFwiLFwidHlwZVwiOlwic3RyZWFtXCJ9LFwiYWVzLTEyOC1jZmIxXCI6e1wiY2lwaGVyXCI6XCJBRVNcIixcImtleVwiOjEyOCxcIml2XCI6MTYsXCJtb2RlXCI6XCJDRkIxXCIsXCJ0eXBlXCI6XCJzdHJlYW1cIn0sXCJhZXMtMTkyLWNmYjFcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MTkyLFwiaXZcIjoxNixcIm1vZGVcIjpcIkNGQjFcIixcInR5cGVcIjpcInN0cmVhbVwifSxcImFlcy0yNTYtY2ZiMVwiOntcImNpcGhlclwiOlwiQUVTXCIsXCJrZXlcIjoyNTYsXCJpdlwiOjE2LFwibW9kZVwiOlwiQ0ZCMVwiLFwidHlwZVwiOlwic3RyZWFtXCJ9LFwiYWVzLTEyOC1vZmJcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MTI4LFwiaXZcIjoxNixcIm1vZGVcIjpcIk9GQlwiLFwidHlwZVwiOlwic3RyZWFtXCJ9LFwiYWVzLTE5Mi1vZmJcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MTkyLFwiaXZcIjoxNixcIm1vZGVcIjpcIk9GQlwiLFwidHlwZVwiOlwic3RyZWFtXCJ9LFwiYWVzLTI1Ni1vZmJcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MjU2LFwiaXZcIjoxNixcIm1vZGVcIjpcIk9GQlwiLFwidHlwZVwiOlwic3RyZWFtXCJ9LFwiYWVzLTEyOC1jdHJcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MTI4LFwiaXZcIjoxNixcIm1vZGVcIjpcIkNUUlwiLFwidHlwZVwiOlwic3RyZWFtXCJ9LFwiYWVzLTE5Mi1jdHJcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MTkyLFwiaXZcIjoxNixcIm1vZGVcIjpcIkNUUlwiLFwidHlwZVwiOlwic3RyZWFtXCJ9LFwiYWVzLTI1Ni1jdHJcIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MjU2LFwiaXZcIjoxNixcIm1vZGVcIjpcIkNUUlwiLFwidHlwZVwiOlwic3RyZWFtXCJ9LFwiYWVzLTEyOC1nY21cIjp7XCJjaXBoZXJcIjpcIkFFU1wiLFwia2V5XCI6MTI4LFwiaXZcIjoxMixcIm1vZGVcIjpcIkdDTVwiLFwidHlwZVwiOlwiYXV0aFwifSxcImFlcy0xOTItZ2NtXCI6e1wiY2lwaGVyXCI6XCJBRVNcIixcImtleVwiOjE5MixcIml2XCI6MTIsXCJtb2RlXCI6XCJHQ01cIixcInR5cGVcIjpcImF1dGhcIn0sXCJhZXMtMjU2LWdjbVwiOntcImNpcGhlclwiOlwiQUVTXCIsXCJrZXlcIjoyNTYsXCJpdlwiOjEyLFwibW9kZVwiOlwiR0NNXCIsXCJ0eXBlXCI6XCJhdXRoXCJ9fScpfSwyOTA4OmZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2UuZXhwb3J0cz1KU09OLnBhcnNlKCd7XCJzaGEyMjRXaXRoUlNBRW5jcnlwdGlvblwiOntcInNpZ25cIjpcInJzYVwiLFwiaGFzaFwiOlwic2hhMjI0XCIsXCJpZFwiOlwiMzAyZDMwMGQwNjA5NjA4NjQ4MDE2NTAzMDQwMjA0MDUwMDA0MWNcIn0sXCJSU0EtU0hBMjI0XCI6e1wic2lnblwiOlwiZWNkc2EvcnNhXCIsXCJoYXNoXCI6XCJzaGEyMjRcIixcImlkXCI6XCIzMDJkMzAwZDA2MDk2MDg2NDgwMTY1MDMwNDAyMDQwNTAwMDQxY1wifSxcInNoYTI1NldpdGhSU0FFbmNyeXB0aW9uXCI6e1wic2lnblwiOlwicnNhXCIsXCJoYXNoXCI6XCJzaGEyNTZcIixcImlkXCI6XCIzMDMxMzAwZDA2MDk2MDg2NDgwMTY1MDMwNDAyMDEwNTAwMDQyMFwifSxcIlJTQS1TSEEyNTZcIjp7XCJzaWduXCI6XCJlY2RzYS9yc2FcIixcImhhc2hcIjpcInNoYTI1NlwiLFwiaWRcIjpcIjMwMzEzMDBkMDYwOTYwODY0ODAxNjUwMzA0MDIwMTA1MDAwNDIwXCJ9LFwic2hhMzg0V2l0aFJTQUVuY3J5cHRpb25cIjp7XCJzaWduXCI6XCJyc2FcIixcImhhc2hcIjpcInNoYTM4NFwiLFwiaWRcIjpcIjMwNDEzMDBkMDYwOTYwODY0ODAxNjUwMzA0MDIwMjA1MDAwNDMwXCJ9LFwiUlNBLVNIQTM4NFwiOntcInNpZ25cIjpcImVjZHNhL3JzYVwiLFwiaGFzaFwiOlwic2hhMzg0XCIsXCJpZFwiOlwiMzA0MTMwMGQwNjA5NjA4NjQ4MDE2NTAzMDQwMjAyMDUwMDA0MzBcIn0sXCJzaGE1MTJXaXRoUlNBRW5jcnlwdGlvblwiOntcInNpZ25cIjpcInJzYVwiLFwiaGFzaFwiOlwic2hhNTEyXCIsXCJpZFwiOlwiMzA1MTMwMGQwNjA5NjA4NjQ4MDE2NTAzMDQwMjAzMDUwMDA0NDBcIn0sXCJSU0EtU0hBNTEyXCI6e1wic2lnblwiOlwiZWNkc2EvcnNhXCIsXCJoYXNoXCI6XCJzaGE1MTJcIixcImlkXCI6XCIzMDUxMzAwZDA2MDk2MDg2NDgwMTY1MDMwNDAyMDMwNTAwMDQ0MFwifSxcIlJTQS1TSEExXCI6e1wic2lnblwiOlwicnNhXCIsXCJoYXNoXCI6XCJzaGExXCIsXCJpZFwiOlwiMzAyMTMwMDkwNjA1MmIwZTAzMDIxYTA1MDAwNDE0XCJ9LFwiZWNkc2Etd2l0aC1TSEExXCI6e1wic2lnblwiOlwiZWNkc2FcIixcImhhc2hcIjpcInNoYTFcIixcImlkXCI6XCJcIn0sXCJzaGEyNTZcIjp7XCJzaWduXCI6XCJlY2RzYVwiLFwiaGFzaFwiOlwic2hhMjU2XCIsXCJpZFwiOlwiXCJ9LFwic2hhMjI0XCI6e1wic2lnblwiOlwiZWNkc2FcIixcImhhc2hcIjpcInNoYTIyNFwiLFwiaWRcIjpcIlwifSxcInNoYTM4NFwiOntcInNpZ25cIjpcImVjZHNhXCIsXCJoYXNoXCI6XCJzaGEzODRcIixcImlkXCI6XCJcIn0sXCJzaGE1MTJcIjp7XCJzaWduXCI6XCJlY2RzYVwiLFwiaGFzaFwiOlwic2hhNTEyXCIsXCJpZFwiOlwiXCJ9LFwiRFNBLVNIQVwiOntcInNpZ25cIjpcImRzYVwiLFwiaGFzaFwiOlwic2hhMVwiLFwiaWRcIjpcIlwifSxcIkRTQS1TSEExXCI6e1wic2lnblwiOlwiZHNhXCIsXCJoYXNoXCI6XCJzaGExXCIsXCJpZFwiOlwiXCJ9LFwiRFNBXCI6e1wic2lnblwiOlwiZHNhXCIsXCJoYXNoXCI6XCJzaGExXCIsXCJpZFwiOlwiXCJ9LFwiRFNBLVdJVEgtU0hBMjI0XCI6e1wic2lnblwiOlwiZHNhXCIsXCJoYXNoXCI6XCJzaGEyMjRcIixcImlkXCI6XCJcIn0sXCJEU0EtU0hBMjI0XCI6e1wic2lnblwiOlwiZHNhXCIsXCJoYXNoXCI6XCJzaGEyMjRcIixcImlkXCI6XCJcIn0sXCJEU0EtV0lUSC1TSEEyNTZcIjp7XCJzaWduXCI6XCJkc2FcIixcImhhc2hcIjpcInNoYTI1NlwiLFwiaWRcIjpcIlwifSxcIkRTQS1TSEEyNTZcIjp7XCJzaWduXCI6XCJkc2FcIixcImhhc2hcIjpcInNoYTI1NlwiLFwiaWRcIjpcIlwifSxcIkRTQS1XSVRILVNIQTM4NFwiOntcInNpZ25cIjpcImRzYVwiLFwiaGFzaFwiOlwic2hhMzg0XCIsXCJpZFwiOlwiXCJ9LFwiRFNBLVNIQTM4NFwiOntcInNpZ25cIjpcImRzYVwiLFwiaGFzaFwiOlwic2hhMzg0XCIsXCJpZFwiOlwiXCJ9LFwiRFNBLVdJVEgtU0hBNTEyXCI6e1wic2lnblwiOlwiZHNhXCIsXCJoYXNoXCI6XCJzaGE1MTJcIixcImlkXCI6XCJcIn0sXCJEU0EtU0hBNTEyXCI6e1wic2lnblwiOlwiZHNhXCIsXCJoYXNoXCI6XCJzaGE1MTJcIixcImlkXCI6XCJcIn0sXCJEU0EtUklQRU1EMTYwXCI6e1wic2lnblwiOlwiZHNhXCIsXCJoYXNoXCI6XCJybWQxNjBcIixcImlkXCI6XCJcIn0sXCJyaXBlbWQxNjBXaXRoUlNBXCI6e1wic2lnblwiOlwicnNhXCIsXCJoYXNoXCI6XCJybWQxNjBcIixcImlkXCI6XCIzMDIxMzAwOTA2MDUyYjI0MDMwMjAxMDUwMDA0MTRcIn0sXCJSU0EtUklQRU1EMTYwXCI6e1wic2lnblwiOlwicnNhXCIsXCJoYXNoXCI6XCJybWQxNjBcIixcImlkXCI6XCIzMDIxMzAwOTA2MDUyYjI0MDMwMjAxMDUwMDA0MTRcIn0sXCJtZDVXaXRoUlNBRW5jcnlwdGlvblwiOntcInNpZ25cIjpcInJzYVwiLFwiaGFzaFwiOlwibWQ1XCIsXCJpZFwiOlwiMzAyMDMwMGMwNjA4MmE4NjQ4ODZmNzBkMDIwNTA1MDAwNDEwXCJ9LFwiUlNBLU1ENVwiOntcInNpZ25cIjpcInJzYVwiLFwiaGFzaFwiOlwibWQ1XCIsXCJpZFwiOlwiMzAyMDMwMGMwNjA4MmE4NjQ4ODZmNzBkMDIwNTA1MDAwNDEwXCJ9fScpfSw5MjY3OmZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2UuZXhwb3J0cz1KU09OLnBhcnNlKCd7XCIxLjMuMTMyLjAuMTBcIjpcInNlY3AyNTZrMVwiLFwiMS4zLjEzMi4wLjMzXCI6XCJwMjI0XCIsXCIxLjIuODQwLjEwMDQ1LjMuMS4xXCI6XCJwMTkyXCIsXCIxLjIuODQwLjEwMDQ1LjMuMS43XCI6XCJwMjU2XCIsXCIxLjMuMTMyLjAuMzRcIjpcInAzODRcIixcIjEuMy4xMzIuMC4zNVwiOlwicDUyMVwifScpfSw3OTkyOmZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2UuZXhwb3J0cz1KU09OLnBhcnNlKCd7XCJtb2RwMVwiOntcImdlblwiOlwiMDJcIixcInByaW1lXCI6XCJmZmZmZmZmZmZmZmZmZmZmYzkwZmRhYTIyMTY4YzIzNGM0YzY2MjhiODBkYzFjZDEyOTAyNGUwODhhNjdjYzc0MDIwYmJlYTYzYjEzOWIyMjUxNGEwODc5OGUzNDA0ZGRlZjk1MTliM2NkM2E0MzFiMzAyYjBhNmRmMjVmMTQzNzRmZTEzNTZkNmQ1MWMyNDVlNDg1YjU3NjYyNWU3ZWM2ZjQ0YzQyZTlhNjNhMzYyMGZmZmZmZmZmZmZmZmZmZmZcIn0sXCJtb2RwMlwiOntcImdlblwiOlwiMDJcIixcInByaW1lXCI6XCJmZmZmZmZmZmZmZmZmZmZmYzkwZmRhYTIyMTY4YzIzNGM0YzY2MjhiODBkYzFjZDEyOTAyNGUwODhhNjdjYzc0MDIwYmJlYTYzYjEzOWIyMjUxNGEwODc5OGUzNDA0ZGRlZjk1MTliM2NkM2E0MzFiMzAyYjBhNmRmMjVmMTQzNzRmZTEzNTZkNmQ1MWMyNDVlNDg1YjU3NjYyNWU3ZWM2ZjQ0YzQyZTlhNjM3ZWQ2YjBiZmY1Y2I2ZjQwNmI3ZWRlZTM4NmJmYjVhODk5ZmE1YWU5ZjI0MTE3YzRiMWZlNjQ5Mjg2NjUxZWNlNjUzODFmZmZmZmZmZmZmZmZmZmZmXCJ9LFwibW9kcDVcIjp7XCJnZW5cIjpcIjAyXCIsXCJwcmltZVwiOlwiZmZmZmZmZmZmZmZmZmZmZmM5MGZkYWEyMjE2OGMyMzRjNGM2NjI4YjgwZGMxY2QxMjkwMjRlMDg4YTY3Y2M3NDAyMGJiZWE2M2IxMzliMjI1MTRhMDg3OThlMzQwNGRkZWY5NTE5YjNjZDNhNDMxYjMwMmIwYTZkZjI1ZjE0Mzc0ZmUxMzU2ZDZkNTFjMjQ1ZTQ4NWI1NzY2MjVlN2VjNmY0NGM0MmU5YTYzN2VkNmIwYmZmNWNiNmY0MDZiN2VkZWUzODZiZmI1YTg5OWZhNWFlOWYyNDExN2M0YjFmZTY0OTI4NjY1MWVjZTQ1YjNkYzIwMDdjYjhhMTYzYmYwNTk4ZGE0ODM2MWM1NWQzOWE2OTE2M2ZhOGZkMjRjZjVmODM2NTVkMjNkY2EzYWQ5NjFjNjJmMzU2MjA4NTUyYmI5ZWQ1MjkwNzcwOTY5NjZkNjcwYzM1NGU0YWJjOTgwNGYxNzQ2YzA4Y2EyMzczMjdmZmZmZmZmZmZmZmZmZmZmXCJ9LFwibW9kcDE0XCI6e1wiZ2VuXCI6XCIwMlwiLFwicHJpbWVcIjpcImZmZmZmZmZmZmZmZmZmZmZjOTBmZGFhMjIxNjhjMjM0YzRjNjYyOGI4MGRjMWNkMTI5MDI0ZTA4OGE2N2NjNzQwMjBiYmVhNjNiMTM5YjIyNTE0YTA4Nzk4ZTM0MDRkZGVmOTUxOWIzY2QzYTQzMWIzMDJiMGE2ZGYyNWYxNDM3NGZlMTM1NmQ2ZDUxYzI0NWU0ODViNTc2NjI1ZTdlYzZmNDRjNDJlOWE2MzdlZDZiMGJmZjVjYjZmNDA2YjdlZGVlMzg2YmZiNWE4OTlmYTVhZTlmMjQxMTdjNGIxZmU2NDkyODY2NTFlY2U0NWIzZGMyMDA3Y2I4YTE2M2JmMDU5OGRhNDgzNjFjNTVkMzlhNjkxNjNmYThmZDI0Y2Y1ZjgzNjU1ZDIzZGNhM2FkOTYxYzYyZjM1NjIwODU1MmJiOWVkNTI5MDc3MDk2OTY2ZDY3MGMzNTRlNGFiYzk4MDRmMTc0NmMwOGNhMTgyMTdjMzI5MDVlNDYyZTM2Y2UzYmUzOWU3NzJjMTgwZTg2MDM5YjI3ODNhMmVjMDdhMjhmYjVjNTVkZjA2ZjRjNTJjOWRlMmJjYmY2OTU1ODE3MTgzOTk1NDk3Y2VhOTU2YWU1MTVkMjI2MTg5OGZhMDUxMDE1NzI4ZTVhOGFhY2FhNjhmZmZmZmZmZmZmZmZmZmZmXCJ9LFwibW9kcDE1XCI6e1wiZ2VuXCI6XCIwMlwiLFwicHJpbWVcIjpcImZmZmZmZmZmZmZmZmZmZmZjOTBmZGFhMjIxNjhjMjM0YzRjNjYyOGI4MGRjMWNkMTI5MDI0ZTA4OGE2N2NjNzQwMjBiYmVhNjNiMTM5YjIyNTE0YTA4Nzk4ZTM0MDRkZGVmOTUxOWIzY2QzYTQzMWIzMDJiMGE2ZGYyNWYxNDM3NGZlMTM1NmQ2ZDUxYzI0NWU0ODViNTc2NjI1ZTdlYzZmNDRjNDJlOWE2MzdlZDZiMGJmZjVjYjZmNDA2YjdlZGVlMzg2YmZiNWE4OTlmYTVhZTlmMjQxMTdjNGIxZmU2NDkyODY2NTFlY2U0NWIzZGMyMDA3Y2I4YTE2M2JmMDU5OGRhNDgzNjFjNTVkMzlhNjkxNjNmYThmZDI0Y2Y1ZjgzNjU1ZDIzZGNhM2FkOTYxYzYyZjM1NjIwODU1MmJiOWVkNTI5MDc3MDk2OTY2ZDY3MGMzNTRlNGFiYzk4MDRmMTc0NmMwOGNhMTgyMTdjMzI5MDVlNDYyZTM2Y2UzYmUzOWU3NzJjMTgwZTg2MDM5YjI3ODNhMmVjMDdhMjhmYjVjNTVkZjA2ZjRjNTJjOWRlMmJjYmY2OTU1ODE3MTgzOTk1NDk3Y2VhOTU2YWU1MTVkMjI2MTg5OGZhMDUxMDE1NzI4ZTVhOGFhYWM0MmRhZDMzMTcwZDA0NTA3YTMzYTg1NTIxYWJkZjFjYmE2NGVjZmI4NTA0NThkYmVmMGE4YWVhNzE1NzVkMDYwYzdkYjM5NzBmODVhNmUxZTRjN2FiZjVhZThjZGIwOTMzZDcxZThjOTRlMDRhMjU2MTlkY2VlM2QyMjYxYWQyZWU2YmYxMmZmYTA2ZDk4YTA4NjRkODc2MDI3MzNlYzg2YTY0NTIxZjJiMTgxNzdiMjAwY2JiZTExNzU3N2E2MTVkNmM3NzA5ODhjMGJhZDk0NmUyMDhlMjRmYTA3NGU1YWIzMTQzZGI1YmZjZTBmZDEwOGU0YjgyZDEyMGE5M2FkMmNhZmZmZmZmZmZmZmZmZmZmZlwifSxcIm1vZHAxNlwiOntcImdlblwiOlwiMDJcIixcInByaW1lXCI6XCJmZmZmZmZmZmZmZmZmZmZmYzkwZmRhYTIyMTY4YzIzNGM0YzY2MjhiODBkYzFjZDEyOTAyNGUwODhhNjdjYzc0MDIwYmJlYTYzYjEzOWIyMjUxNGEwODc5OGUzNDA0ZGRlZjk1MTliM2NkM2E0MzFiMzAyYjBhNmRmMjVmMTQzNzRmZTEzNTZkNmQ1MWMyNDVlNDg1YjU3NjYyNWU3ZWM2ZjQ0YzQyZTlhNjM3ZWQ2YjBiZmY1Y2I2ZjQwNmI3ZWRlZTM4NmJmYjVhODk5ZmE1YWU5ZjI0MTE3YzRiMWZlNjQ5Mjg2NjUxZWNlNDViM2RjMjAwN2NiOGExNjNiZjA1OThkYTQ4MzYxYzU1ZDM5YTY5MTYzZmE4ZmQyNGNmNWY4MzY1NWQyM2RjYTNhZDk2MWM2MmYzNTYyMDg1NTJiYjllZDUyOTA3NzA5Njk2NmQ2NzBjMzU0ZTRhYmM5ODA0ZjE3NDZjMDhjYTE4MjE3YzMyOTA1ZTQ2MmUzNmNlM2JlMzllNzcyYzE4MGU4NjAzOWIyNzgzYTJlYzA3YTI4ZmI1YzU1ZGYwNmY0YzUyYzlkZTJiY2JmNjk1NTgxNzE4Mzk5NTQ5N2NlYTk1NmFlNTE1ZDIyNjE4OThmYTA1MTAxNTcyOGU1YThhYWFjNDJkYWQzMzE3MGQwNDUwN2EzM2E4NTUyMWFiZGYxY2JhNjRlY2ZiODUwNDU4ZGJlZjBhOGFlYTcxNTc1ZDA2MGM3ZGIzOTcwZjg1YTZlMWU0YzdhYmY1YWU4Y2RiMDkzM2Q3MWU4Yzk0ZTA0YTI1NjE5ZGNlZTNkMjI2MWFkMmVlNmJmMTJmZmEwNmQ5OGEwODY0ZDg3NjAyNzMzZWM4NmE2NDUyMWYyYjE4MTc3YjIwMGNiYmUxMTc1NzdhNjE1ZDZjNzcwOTg4YzBiYWQ5NDZlMjA4ZTI0ZmEwNzRlNWFiMzE0M2RiNWJmY2UwZmQxMDhlNGI4MmQxMjBhOTIxMDgwMTFhNzIzYzEyYTc4N2U2ZDc4ODcxOWExMGJkYmE1YjI2OTljMzI3MTg2YWY0ZTIzYzFhOTQ2ODM0YjYxNTBiZGEyNTgzZTljYTJhZDQ0Y2U4ZGJiYmMyZGIwNGRlOGVmOTJlOGVmYzE0MWZiZWNhYTYyODdjNTk0NzRlNmJjMDVkOTliMjk2NGZhMDkwYzNhMjIzM2JhMTg2NTE1YmU3ZWQxZjYxMjk3MGNlZTJkN2FmYjgxYmRkNzYyMTcwNDgxY2QwMDY5MTI3ZDViMDVhYTk5M2I0ZWE5ODhkOGZkZGMxODZmZmI3ZGM5MGE2YzA4ZjRkZjQzNWM5MzQwNjMxOTlmZmZmZmZmZmZmZmZmZmZmXCJ9LFwibW9kcDE3XCI6e1wiZ2VuXCI6XCIwMlwiLFwicHJpbWVcIjpcImZmZmZmZmZmZmZmZmZmZmZjOTBmZGFhMjIxNjhjMjM0YzRjNjYyOGI4MGRjMWNkMTI5MDI0ZTA4OGE2N2NjNzQwMjBiYmVhNjNiMTM5YjIyNTE0YTA4Nzk4ZTM0MDRkZGVmOTUxOWIzY2QzYTQzMWIzMDJiMGE2ZGYyNWYxNDM3NGZlMTM1NmQ2ZDUxYzI0NWU0ODViNTc2NjI1ZTdlYzZmNDRjNDJlOWE2MzdlZDZiMGJmZjVjYjZmNDA2YjdlZGVlMzg2YmZiNWE4OTlmYTVhZTlmMjQxMTdjNGIxZmU2NDkyODY2NTFlY2U0NWIzZGMyMDA3Y2I4YTE2M2JmMDU5OGRhNDgzNjFjNTVkMzlhNjkxNjNmYThmZDI0Y2Y1ZjgzNjU1ZDIzZGNhM2FkOTYxYzYyZjM1NjIwODU1MmJiOWVkNTI5MDc3MDk2OTY2ZDY3MGMzNTRlNGFiYzk4MDRmMTc0NmMwOGNhMTgyMTdjMzI5MDVlNDYyZTM2Y2UzYmUzOWU3NzJjMTgwZTg2MDM5YjI3ODNhMmVjMDdhMjhmYjVjNTVkZjA2ZjRjNTJjOWRlMmJjYmY2OTU1ODE3MTgzOTk1NDk3Y2VhOTU2YWU1MTVkMjI2MTg5OGZhMDUxMDE1NzI4ZTVhOGFhYWM0MmRhZDMzMTcwZDA0NTA3YTMzYTg1NTIxYWJkZjFjYmE2NGVjZmI4NTA0NThkYmVmMGE4YWVhNzE1NzVkMDYwYzdkYjM5NzBmODVhNmUxZTRjN2FiZjVhZThjZGIwOTMzZDcxZThjOTRlMDRhMjU2MTlkY2VlM2QyMjYxYWQyZWU2YmYxMmZmYTA2ZDk4YTA4NjRkODc2MDI3MzNlYzg2YTY0NTIxZjJiMTgxNzdiMjAwY2JiZTExNzU3N2E2MTVkNmM3NzA5ODhjMGJhZDk0NmUyMDhlMjRmYTA3NGU1YWIzMTQzZGI1YmZjZTBmZDEwOGU0YjgyZDEyMGE5MjEwODAxMWE3MjNjMTJhNzg3ZTZkNzg4NzE5YTEwYmRiYTViMjY5OWMzMjcxODZhZjRlMjNjMWE5NDY4MzRiNjE1MGJkYTI1ODNlOWNhMmFkNDRjZThkYmJiYzJkYjA0ZGU4ZWY5MmU4ZWZjMTQxZmJlY2FhNjI4N2M1OTQ3NGU2YmMwNWQ5OWIyOTY0ZmEwOTBjM2EyMjMzYmExODY1MTViZTdlZDFmNjEyOTcwY2VlMmQ3YWZiODFiZGQ3NjIxNzA0ODFjZDAwNjkxMjdkNWIwNWFhOTkzYjRlYTk4OGQ4ZmRkYzE4NmZmYjdkYzkwYTZjMDhmNGRmNDM1YzkzNDAyODQ5MjM2YzNmYWI0ZDI3YzcwMjZjMWQ0ZGNiMjYwMjY0NmRlYzk3NTFlNzYzZGJhMzdiZGY4ZmY5NDA2YWQ5ZTUzMGVlNWRiMzgyZjQxMzAwMWFlYjA2YTUzZWQ5MDI3ZDgzMTE3OTcyN2IwODY1YTg5MThkYTNlZGJlYmNmOWIxNGVkNDRjZTZjYmFjZWQ0YmIxYmRiN2YxNDQ3ZTZjYzI1NGIzMzIwNTE1MTJiZDdhZjQyNmZiOGY0MDEzNzhjZDJiZjU5ODNjYTAxYzY0YjkyZWNmMDMyZWExNWQxNzIxZDAzZjQ4MmQ3Y2U2ZTc0ZmVmNmQ1NWU3MDJmNDY5ODBjODJiNWE4NDAzMTkwMGIxYzllNTllN2M5N2ZiZWM3ZThmMzIzYTk3YTdlMzZjYzg4YmUwZjFkNDViN2ZmNTg1YWM1NGJkNDA3YjIyYjQxNTRhYWNjOGY2ZDdlYmY0OGUxZDgxNGNjNWVkMjBmODAzN2UwYTc5NzE1ZWVmMjliZTMyODA2YTFkNThiYjdjNWRhNzZmNTUwYWEzZDhhMWZiZmYwZWIxOWNjYjFhMzEzZDU1Y2RhNTZjOWVjMmVmMjk2MzIzODdmZThkNzZlM2MwNDY4MDQzZThmNjYzZjQ4NjBlZTEyYmYyZDViMGI3NDc0ZDZlNjk0ZjkxZTZkY2M0MDI0ZmZmZmZmZmZmZmZmZmZmZlwifSxcIm1vZHAxOFwiOntcImdlblwiOlwiMDJcIixcInByaW1lXCI6XCJmZmZmZmZmZmZmZmZmZmZmYzkwZmRhYTIyMTY4YzIzNGM0YzY2MjhiODBkYzFjZDEyOTAyNGUwODhhNjdjYzc0MDIwYmJlYTYzYjEzOWIyMjUxNGEwODc5OGUzNDA0ZGRlZjk1MTliM2NkM2E0MzFiMzAyYjBhNmRmMjVmMTQzNzRmZTEzNTZkNmQ1MWMyNDVlNDg1YjU3NjYyNWU3ZWM2ZjQ0YzQyZTlhNjM3ZWQ2YjBiZmY1Y2I2ZjQwNmI3ZWRlZTM4NmJmYjVhODk5ZmE1YWU5ZjI0MTE3YzRiMWZlNjQ5Mjg2NjUxZWNlNDViM2RjMjAwN2NiOGExNjNiZjA1OThkYTQ4MzYxYzU1ZDM5YTY5MTYzZmE4ZmQyNGNmNWY4MzY1NWQyM2RjYTNhZDk2MWM2MmYzNTYyMDg1NTJiYjllZDUyOTA3NzA5Njk2NmQ2NzBjMzU0ZTRhYmM5ODA0ZjE3NDZjMDhjYTE4MjE3YzMyOTA1ZTQ2MmUzNmNlM2JlMzllNzcyYzE4MGU4NjAzOWIyNzgzYTJlYzA3YTI4ZmI1YzU1ZGYwNmY0YzUyYzlkZTJiY2JmNjk1NTgxNzE4Mzk5NTQ5N2NlYTk1NmFlNTE1ZDIyNjE4OThmYTA1MTAxNTcyOGU1YThhYWFjNDJkYWQzMzE3MGQwNDUwN2EzM2E4NTUyMWFiZGYxY2JhNjRlY2ZiODUwNDU4ZGJlZjBhOGFlYTcxNTc1ZDA2MGM3ZGIzOTcwZjg1YTZlMWU0YzdhYmY1YWU4Y2RiMDkzM2Q3MWU4Yzk0ZTA0YTI1NjE5ZGNlZTNkMjI2MWFkMmVlNmJmMTJmZmEwNmQ5OGEwODY0ZDg3NjAyNzMzZWM4NmE2NDUyMWYyYjE4MTc3YjIwMGNiYmUxMTc1NzdhNjE1ZDZjNzcwOTg4YzBiYWQ5NDZlMjA4ZTI0ZmEwNzRlNWFiMzE0M2RiNWJmY2UwZmQxMDhlNGI4MmQxMjBhOTIxMDgwMTFhNzIzYzEyYTc4N2U2ZDc4ODcxOWExMGJkYmE1YjI2OTljMzI3MTg2YWY0ZTIzYzFhOTQ2ODM0YjYxNTBiZGEyNTgzZTljYTJhZDQ0Y2U4ZGJiYmMyZGIwNGRlOGVmOTJlOGVmYzE0MWZiZWNhYTYyODdjNTk0NzRlNmJjMDVkOTliMjk2NGZhMDkwYzNhMjIzM2JhMTg2NTE1YmU3ZWQxZjYxMjk3MGNlZTJkN2FmYjgxYmRkNzYyMTcwNDgxY2QwMDY5MTI3ZDViMDVhYTk5M2I0ZWE5ODhkOGZkZGMxODZmZmI3ZGM5MGE2YzA4ZjRkZjQzNWM5MzQwMjg0OTIzNmMzZmFiNGQyN2M3MDI2YzFkNGRjYjI2MDI2NDZkZWM5NzUxZTc2M2RiYTM3YmRmOGZmOTQwNmFkOWU1MzBlZTVkYjM4MmY0MTMwMDFhZWIwNmE1M2VkOTAyN2Q4MzExNzk3MjdiMDg2NWE4OTE4ZGEzZWRiZWJjZjliMTRlZDQ0Y2U2Y2JhY2VkNGJiMWJkYjdmMTQ0N2U2Y2MyNTRiMzMyMDUxNTEyYmQ3YWY0MjZmYjhmNDAxMzc4Y2QyYmY1OTgzY2EwMWM2NGI5MmVjZjAzMmVhMTVkMTcyMWQwM2Y0ODJkN2NlNmU3NGZlZjZkNTVlNzAyZjQ2OTgwYzgyYjVhODQwMzE5MDBiMWM5ZTU5ZTdjOTdmYmVjN2U4ZjMyM2E5N2E3ZTM2Y2M4OGJlMGYxZDQ1YjdmZjU4NWFjNTRiZDQwN2IyMmI0MTU0YWFjYzhmNmQ3ZWJmNDhlMWQ4MTRjYzVlZDIwZjgwMzdlMGE3OTcxNWVlZjI5YmUzMjgwNmExZDU4YmI3YzVkYTc2ZjU1MGFhM2Q4YTFmYmZmMGViMTljY2IxYTMxM2Q1NWNkYTU2YzllYzJlZjI5NjMyMzg3ZmU4ZDc2ZTNjMDQ2ODA0M2U4ZjY2M2Y0ODYwZWUxMmJmMmQ1YjBiNzQ3NGQ2ZTY5NGY5MWU2ZGJlMTE1OTc0YTM5MjZmMTJmZWU1ZTQzODc3N2NiNmE5MzJkZjhjZDhiZWM0ZDA3M2I5MzFiYTNiYzgzMmI2OGQ5ZGQzMDA3NDFmYTdiZjhhZmM0N2VkMjU3NmY2OTM2YmE0MjQ2NjNhYWI2MzljNWFlNGY1NjgzNDIzYjQ3NDJiZjFjOTc4MjM4ZjE2Y2JlMzlkNjUyZGUzZmRiOGJlZmM4NDhhZDkyMjIyMmUwNGE0MDM3YzA3MTNlYjU3YTgxYTIzZjBjNzM0NzNmYzY0NmNlYTMwNmI0YmNiYzg4NjJmODM4NWRkZmE5ZDRiN2ZhMmMwODdlODc5NjgzMzAzZWQ1YmRkM2EwNjJiM2NmNWIzYTI3OGE2NmQyYTEzZjgzZjQ0ZjgyZGRmMzEwZWUwNzRhYjZhMzY0NTk3ZTg5OWEwMjU1ZGMxNjRmMzFjYzUwODQ2ODUxZGY5YWI0ODE5NWRlZDdlYTFiMWQ1MTBiZDdlZTc0ZDczZmFmMzZiYzMxZWNmYTI2ODM1OTA0NmY0ZWI4NzlmOTI0MDA5NDM4YjQ4MWM2Y2Q3ODg5YTAwMmVkNWVlMzgyYmM5MTkwZGE2ZmMwMjZlNDc5NTU4ZTQ0NzU2NzdlOWFhOWUzMDUwZTI3NjU2OTRkZmM4MWY1NmU4ODBiOTZlNzE2MGM5ODBkZDk4ZWRkM2RmZmZmZmZmZmZmZmZmZmZmZlwifX0nKX0sMjUzMTpmdW5jdGlvbihlKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9e2k4OlwiNi41LjNcIn19LDI1MTA6ZnVuY3Rpb24oZSl7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPUpTT04ucGFyc2UoJ3tcIjIuMTYuODQwLjEuMTAxLjMuNC4xLjFcIjpcImFlcy0xMjgtZWNiXCIsXCIyLjE2Ljg0MC4xLjEwMS4zLjQuMS4yXCI6XCJhZXMtMTI4LWNiY1wiLFwiMi4xNi44NDAuMS4xMDEuMy40LjEuM1wiOlwiYWVzLTEyOC1vZmJcIixcIjIuMTYuODQwLjEuMTAxLjMuNC4xLjRcIjpcImFlcy0xMjgtY2ZiXCIsXCIyLjE2Ljg0MC4xLjEwMS4zLjQuMS4yMVwiOlwiYWVzLTE5Mi1lY2JcIixcIjIuMTYuODQwLjEuMTAxLjMuNC4xLjIyXCI6XCJhZXMtMTkyLWNiY1wiLFwiMi4xNi44NDAuMS4xMDEuMy40LjEuMjNcIjpcImFlcy0xOTItb2ZiXCIsXCIyLjE2Ljg0MC4xLjEwMS4zLjQuMS4yNFwiOlwiYWVzLTE5Mi1jZmJcIixcIjIuMTYuODQwLjEuMTAxLjMuNC4xLjQxXCI6XCJhZXMtMjU2LWVjYlwiLFwiMi4xNi44NDAuMS4xMDEuMy40LjEuNDJcIjpcImFlcy0yNTYtY2JjXCIsXCIyLjE2Ljg0MC4xLjEwMS4zLjQuMS40M1wiOlwiYWVzLTI1Ni1vZmJcIixcIjIuMTYuODQwLjEuMTAxLjMuNC4xLjQ0XCI6XCJhZXMtMjU2LWNmYlwifScpfX07dmFyIHQ9e307ZnVuY3Rpb24gX19uY2N3cGNrX3JlcXVpcmVfXyhyKXt2YXIgaT10W3JdO2lmKGkhPT11bmRlZmluZWQpe3JldHVybiBpLmV4cG9ydHN9dmFyIG49dFtyXT17aWQ6cixsb2FkZWQ6ZmFsc2UsZXhwb3J0czp7fX07dmFyIGE9dHJ1ZTt0cnl7ZVtyXS5jYWxsKG4uZXhwb3J0cyxuLG4uZXhwb3J0cyxfX25jY3dwY2tfcmVxdWlyZV9fKTthPWZhbHNlfWZpbmFsbHl7aWYoYSlkZWxldGUgdFtyXX1uLmxvYWRlZD10cnVlO3JldHVybiBuLmV4cG9ydHN9IWZ1bmN0aW9uKCl7X19uY2N3cGNrX3JlcXVpcmVfXy5ubWQ9ZnVuY3Rpb24oZSl7ZS5wYXRocz1bXTtpZighZS5jaGlsZHJlbillLmNoaWxkcmVuPVtdO3JldHVybiBlfX0oKTtpZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIHI9e307IWZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7dmFyIGU9cjtlLnJhbmRvbUJ5dGVzPWUucm5nPWUucHNldWRvUmFuZG9tQnl0ZXM9ZS5wcm5nPV9fbmNjd3Bja19yZXF1aXJlX18oNzIyMyk7ZS5jcmVhdGVIYXNoPWUuSGFzaD1fX25jY3dwY2tfcmVxdWlyZV9fKDk3MzkpO2UuY3JlYXRlSG1hYz1lLkhtYWM9X19uY2N3cGNrX3JlcXVpcmVfXyg0ODczKTt2YXIgdD1fX25jY3dwY2tfcmVxdWlyZV9fKDkyNzYpO3ZhciBpPU9iamVjdC5rZXlzKHQpO3ZhciBuPVtcInNoYTFcIixcInNoYTIyNFwiLFwic2hhMjU2XCIsXCJzaGEzODRcIixcInNoYTUxMlwiLFwibWQ1XCIsXCJybWQxNjBcIl0uY29uY2F0KGkpO2UuZ2V0SGFzaGVzPWZ1bmN0aW9uKCl7cmV0dXJuIG59O3ZhciBhPV9fbmNjd3Bja19yZXF1aXJlX18oNDk3OCk7ZS5wYmtkZjI9YS5wYmtkZjI7ZS5wYmtkZjJTeW5jPWEucGJrZGYyU3luYzt2YXIgcz1fX25jY3dwY2tfcmVxdWlyZV9fKDg5OTYpO2UuQ2lwaGVyPXMuQ2lwaGVyO2UuY3JlYXRlQ2lwaGVyPXMuY3JlYXRlQ2lwaGVyO2UuQ2lwaGVyaXY9cy5DaXBoZXJpdjtlLmNyZWF0ZUNpcGhlcml2PXMuY3JlYXRlQ2lwaGVyaXY7ZS5EZWNpcGhlcj1zLkRlY2lwaGVyO2UuY3JlYXRlRGVjaXBoZXI9cy5jcmVhdGVEZWNpcGhlcjtlLkRlY2lwaGVyaXY9cy5EZWNpcGhlcml2O2UuY3JlYXRlRGVjaXBoZXJpdj1zLmNyZWF0ZURlY2lwaGVyaXY7ZS5nZXRDaXBoZXJzPXMuZ2V0Q2lwaGVycztlLmxpc3RDaXBoZXJzPXMubGlzdENpcGhlcnM7dmFyIG89X19uY2N3cGNrX3JlcXVpcmVfXyg2NTg3KTtlLkRpZmZpZUhlbGxtYW5Hcm91cD1vLkRpZmZpZUhlbGxtYW5Hcm91cDtlLmNyZWF0ZURpZmZpZUhlbGxtYW5Hcm91cD1vLmNyZWF0ZURpZmZpZUhlbGxtYW5Hcm91cDtlLmdldERpZmZpZUhlbGxtYW49by5nZXREaWZmaWVIZWxsbWFuO2UuY3JlYXRlRGlmZmllSGVsbG1hbj1vLmNyZWF0ZURpZmZpZUhlbGxtYW47ZS5EaWZmaWVIZWxsbWFuPW8uRGlmZmllSGVsbG1hbjt2YXIgaD1fX25jY3dwY2tfcmVxdWlyZV9fKDQwNzgpO2UuY3JlYXRlU2lnbj1oLmNyZWF0ZVNpZ247ZS5TaWduPWguU2lnbjtlLmNyZWF0ZVZlcmlmeT1oLmNyZWF0ZVZlcmlmeTtlLlZlcmlmeT1oLlZlcmlmeTtlLmNyZWF0ZUVDREg9X19uY2N3cGNrX3JlcXVpcmVfXyg5OTQyKTt2YXIgdT1fX25jY3dwY2tfcmVxdWlyZV9fKDk3ODMpO2UucHVibGljRW5jcnlwdD11LnB1YmxpY0VuY3J5cHQ7ZS5wcml2YXRlRW5jcnlwdD11LnByaXZhdGVFbmNyeXB0O2UucHVibGljRGVjcnlwdD11LnB1YmxpY0RlY3J5cHQ7ZS5wcml2YXRlRGVjcnlwdD11LnByaXZhdGVEZWNyeXB0O3ZhciBkPV9fbmNjd3Bja19yZXF1aXJlX18oNjQ0NSk7ZS5yYW5kb21GaWxsPWQucmFuZG9tRmlsbDtlLnJhbmRvbUZpbGxTeW5jPWQucmFuZG9tRmlsbFN5bmM7ZS5jcmVhdGVDcmVkZW50aWFscz1mdW5jdGlvbigpe3Rocm93IG5ldyBFcnJvcihbXCJzb3JyeSwgY3JlYXRlQ3JlZGVudGlhbHMgaXMgbm90IGltcGxlbWVudGVkIHlldFwiLFwid2UgYWNjZXB0IHB1bGwgcmVxdWVzdHNcIixcImh0dHBzOi8vZ2l0aHViLmNvbS9jcnlwdG8tYnJvd3NlcmlmeS9jcnlwdG8tYnJvd3NlcmlmeVwiXS5qb2luKFwiXFxuXCIpKX07ZS5jb25zdGFudHM9e0RIX0NIRUNLX1BfTk9UX1NBRkVfUFJJTUU6MixESF9DSEVDS19QX05PVF9QUklNRToxLERIX1VOQUJMRV9UT19DSEVDS19HRU5FUkFUT1I6NCxESF9OT1RfU1VJVEFCTEVfR0VORVJBVE9SOjgsTlBOX0VOQUJMRUQ6MSxBTFBOX0VOQUJMRUQ6MSxSU0FfUEtDUzFfUEFERElORzoxLFJTQV9TU0xWMjNfUEFERElORzoyLFJTQV9OT19QQURESU5HOjMsUlNBX1BLQ1MxX09BRVBfUEFERElORzo0LFJTQV9YOTMxX1BBRERJTkc6NSxSU0FfUEtDUzFfUFNTX1BBRERJTkc6NixQT0lOVF9DT05WRVJTSU9OX0NPTVBSRVNTRUQ6MixQT0lOVF9DT05WRVJTSU9OX1VOQ09NUFJFU1NFRDo0LFBPSU5UX0NPTlZFUlNJT05fSFlCUklEOjZ9fSgpO21vZHVsZS5leHBvcnRzPXJ9KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/crypto-browserify/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/events/events.js":
/*!**********************************************************!*\
  !*** ./node_modules/next/dist/compiled/events/events.js ***!
  \**********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){\"use strict\";var e={864:function(e){var t=typeof Reflect===\"object\"?Reflect:null;var n=t&&typeof t.apply===\"function\"?t.apply:function ReflectApply(e,t,n){return Function.prototype.apply.call(e,t,n)};var r;if(t&&typeof t.ownKeys===\"function\"){r=t.ownKeys}else if(Object.getOwnPropertySymbols){r=function ReflectOwnKeys(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}}else{r=function ReflectOwnKeys(e){return Object.getOwnPropertyNames(e)}}function ProcessEmitWarning(e){if(console&&console.warn)console.warn(e)}var i=Number.isNaN||function NumberIsNaN(e){return e!==e};function EventEmitter(){EventEmitter.init.call(this)}e.exports=EventEmitter;e.exports.once=once;EventEmitter.EventEmitter=EventEmitter;EventEmitter.prototype._events=undefined;EventEmitter.prototype._eventsCount=0;EventEmitter.prototype._maxListeners=undefined;var s=10;function checkListener(e){if(typeof e!==\"function\"){throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof e)}}Object.defineProperty(EventEmitter,\"defaultMaxListeners\",{enumerable:true,get:function(){return s},set:function(e){if(typeof e!==\"number\"||e<0||i(e)){throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received '+e+\".\")}s=e}});EventEmitter.init=function(){if(this._events===undefined||this._events===Object.getPrototypeOf(this)._events){this._events=Object.create(null);this._eventsCount=0}this._maxListeners=this._maxListeners||undefined};EventEmitter.prototype.setMaxListeners=function setMaxListeners(e){if(typeof e!==\"number\"||e<0||i(e)){throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received '+e+\".\")}this._maxListeners=e;return this};function _getMaxListeners(e){if(e._maxListeners===undefined)return EventEmitter.defaultMaxListeners;return e._maxListeners}EventEmitter.prototype.getMaxListeners=function getMaxListeners(){return _getMaxListeners(this)};EventEmitter.prototype.emit=function emit(e){var t=[];for(var r=1;r<arguments.length;r++)t.push(arguments[r]);var i=e===\"error\";var s=this._events;if(s!==undefined)i=i&&s.error===undefined;else if(!i)return false;if(i){var o;if(t.length>0)o=t[0];if(o instanceof Error){throw o}var f=new Error(\"Unhandled error.\"+(o?\" (\"+o.message+\")\":\"\"));f.context=o;throw f}var u=s[e];if(u===undefined)return false;if(typeof u===\"function\"){n(u,this,t)}else{var a=u.length;var c=arrayClone(u,a);for(var r=0;r<a;++r)n(c[r],this,t)}return true};function _addListener(e,t,n,r){var i;var s;var o;checkListener(n);s=e._events;if(s===undefined){s=e._events=Object.create(null);e._eventsCount=0}else{if(s.newListener!==undefined){e.emit(\"newListener\",t,n.listener?n.listener:n);s=e._events}o=s[t]}if(o===undefined){o=s[t]=n;++e._eventsCount}else{if(typeof o===\"function\"){o=s[t]=r?[n,o]:[o,n]}else if(r){o.unshift(n)}else{o.push(n)}i=_getMaxListeners(e);if(i>0&&o.length>i&&!o.warned){o.warned=true;var f=new Error(\"Possible EventEmitter memory leak detected. \"+o.length+\" \"+String(t)+\" listeners \"+\"added. Use emitter.setMaxListeners() to \"+\"increase limit\");f.name=\"MaxListenersExceededWarning\";f.emitter=e;f.type=t;f.count=o.length;ProcessEmitWarning(f)}}return e}EventEmitter.prototype.addListener=function addListener(e,t){return _addListener(this,e,t,false)};EventEmitter.prototype.on=EventEmitter.prototype.addListener;EventEmitter.prototype.prependListener=function prependListener(e,t){return _addListener(this,e,t,true)};function onceWrapper(){if(!this.fired){this.target.removeListener(this.type,this.wrapFn);this.fired=true;if(arguments.length===0)return this.listener.call(this.target);return this.listener.apply(this.target,arguments)}}function _onceWrap(e,t,n){var r={fired:false,wrapFn:undefined,target:e,type:t,listener:n};var i=onceWrapper.bind(r);i.listener=n;r.wrapFn=i;return i}EventEmitter.prototype.once=function once(e,t){checkListener(t);this.on(e,_onceWrap(this,e,t));return this};EventEmitter.prototype.prependOnceListener=function prependOnceListener(e,t){checkListener(t);this.prependListener(e,_onceWrap(this,e,t));return this};EventEmitter.prototype.removeListener=function removeListener(e,t){var n,r,i,s,o;checkListener(t);r=this._events;if(r===undefined)return this;n=r[e];if(n===undefined)return this;if(n===t||n.listener===t){if(--this._eventsCount===0)this._events=Object.create(null);else{delete r[e];if(r.removeListener)this.emit(\"removeListener\",e,n.listener||t)}}else if(typeof n!==\"function\"){i=-1;for(s=n.length-1;s>=0;s--){if(n[s]===t||n[s].listener===t){o=n[s].listener;i=s;break}}if(i<0)return this;if(i===0)n.shift();else{spliceOne(n,i)}if(n.length===1)r[e]=n[0];if(r.removeListener!==undefined)this.emit(\"removeListener\",e,o||t)}return this};EventEmitter.prototype.off=EventEmitter.prototype.removeListener;EventEmitter.prototype.removeAllListeners=function removeAllListeners(e){var t,n,r;n=this._events;if(n===undefined)return this;if(n.removeListener===undefined){if(arguments.length===0){this._events=Object.create(null);this._eventsCount=0}else if(n[e]!==undefined){if(--this._eventsCount===0)this._events=Object.create(null);else delete n[e]}return this}if(arguments.length===0){var i=Object.keys(n);var s;for(r=0;r<i.length;++r){s=i[r];if(s===\"removeListener\")continue;this.removeAllListeners(s)}this.removeAllListeners(\"removeListener\");this._events=Object.create(null);this._eventsCount=0;return this}t=n[e];if(typeof t===\"function\"){this.removeListener(e,t)}else if(t!==undefined){for(r=t.length-1;r>=0;r--){this.removeListener(e,t[r])}}return this};function _listeners(e,t,n){var r=e._events;if(r===undefined)return[];var i=r[t];if(i===undefined)return[];if(typeof i===\"function\")return n?[i.listener||i]:[i];return n?unwrapListeners(i):arrayClone(i,i.length)}EventEmitter.prototype.listeners=function listeners(e){return _listeners(this,e,true)};EventEmitter.prototype.rawListeners=function rawListeners(e){return _listeners(this,e,false)};EventEmitter.listenerCount=function(e,t){if(typeof e.listenerCount===\"function\"){return e.listenerCount(t)}else{return listenerCount.call(e,t)}};EventEmitter.prototype.listenerCount=listenerCount;function listenerCount(e){var t=this._events;if(t!==undefined){var n=t[e];if(typeof n===\"function\"){return 1}else if(n!==undefined){return n.length}}return 0}EventEmitter.prototype.eventNames=function eventNames(){return this._eventsCount>0?r(this._events):[]};function arrayClone(e,t){var n=new Array(t);for(var r=0;r<t;++r)n[r]=e[r];return n}function spliceOne(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}function unwrapListeners(e){var t=new Array(e.length);for(var n=0;n<t.length;++n){t[n]=e[n].listener||e[n]}return t}function once(e,t){return new Promise((function(n,r){function errorListener(n){e.removeListener(t,resolver);r(n)}function resolver(){if(typeof e.removeListener===\"function\"){e.removeListener(\"error\",errorListener)}n([].slice.call(arguments))}eventTargetAgnosticAddListener(e,t,resolver,{once:true});if(t!==\"error\"){addErrorHandlerIfEventEmitter(e,errorListener,{once:true})}}))}function addErrorHandlerIfEventEmitter(e,t,n){if(typeof e.on===\"function\"){eventTargetAgnosticAddListener(e,\"error\",t,n)}}function eventTargetAgnosticAddListener(e,t,n,r){if(typeof e.on===\"function\"){if(r.once){e.once(t,n)}else{e.on(t,n)}}else if(typeof e.addEventListener===\"function\"){e.addEventListener(t,(function wrapListener(i){if(r.once){e.removeEventListener(t,wrapListener)}n(i)}))}else{throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type '+typeof e)}}}};var t={};function __nccwpck_require__(n){var r=t[n];if(r!==undefined){return r.exports}var i=t[n]={exports:{}};var s=true;try{e[n](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete t[n]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n=__nccwpck_require__(864);module.exports=n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/events/events.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/native-url/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/next/dist/compiled/native-url/index.js ***!
  \*************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var e={452:function(e){\"use strict\";e.exports=__webpack_require__(/*! next/dist/compiled/querystring-es3 */ \"(app-pages-browser)/./node_modules/next/dist/compiled/querystring-es3/index.js\")}};var t={};function __nccwpck_require__(o){var a=t[o];if(a!==undefined){return a.exports}var s=t[o]={exports:{}};var n=true;try{e[o](s,s.exports,__nccwpck_require__);n=false}finally{if(n)delete t[o]}return s.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var o={};!function(){var e=o;var t,a=(t=__nccwpck_require__(452))&&\"object\"==typeof t&&\"default\"in t?t.default:t,s=/https?|ftp|gopher|file/;function r(e){\"string\"==typeof e&&(e=d(e));var t=function(e,t,o){var a=e.auth,s=e.hostname,n=e.protocol||\"\",p=e.pathname||\"\",c=e.hash||\"\",i=e.query||\"\",u=!1;a=a?encodeURIComponent(a).replace(/%3A/i,\":\")+\"@\":\"\",e.host?u=a+e.host:s&&(u=a+(~s.indexOf(\":\")?\"[\"+s+\"]\":s),e.port&&(u+=\":\"+e.port)),i&&\"object\"==typeof i&&(i=t.encode(i));var f=e.search||i&&\"?\"+i||\"\";return n&&\":\"!==n.substr(-1)&&(n+=\":\"),e.slashes||(!n||o.test(n))&&!1!==u?(u=\"//\"+(u||\"\"),p&&\"/\"!==p[0]&&(p=\"/\"+p)):u||(u=\"\"),c&&\"#\"!==c[0]&&(c=\"#\"+c),f&&\"?\"!==f[0]&&(f=\"?\"+f),{protocol:n,host:u,pathname:p=p.replace(/[?#]/g,encodeURIComponent),search:f=f.replace(\"#\",\"%23\"),hash:c}}(e,a,s);return\"\"+t.protocol+t.host+t.pathname+t.search+t.hash}var n=\"http://\",p=\"w.w\",c=n+p,i=/^([a-z0-9.+-]*:\\/\\/\\/)([a-z0-9.+-]:\\/*)?/i,u=/https?|ftp|gopher|file/;function h(e,t){var o=\"string\"==typeof e?d(e):e;e=\"object\"==typeof e?r(e):e;var a=d(t),s=\"\";o.protocol&&!o.slashes&&(s=o.protocol,e=e.replace(o.protocol,\"\"),s+=\"/\"===t[0]||\"/\"===e[0]?\"/\":\"\"),s&&a.protocol&&(s=\"\",a.slashes||(s=a.protocol,t=t.replace(a.protocol,\"\")));var p=e.match(i);p&&!a.protocol&&(e=e.substr((s=p[1]+(p[2]||\"\")).length),/^\\/\\/[^/]/.test(t)&&(s=s.slice(0,-1)));var f=new URL(e,c+\"/\"),m=new URL(t,f).toString().replace(c,\"\"),v=a.protocol||o.protocol;return v+=o.slashes||a.slashes?\"//\":\"\",!s&&v?m=m.replace(n,v):s&&(m=m.replace(n,\"\")),u.test(m)||~t.indexOf(\".\")||\"/\"===e.slice(-1)||\"/\"===t.slice(-1)||\"/\"!==m.slice(-1)||(m=m.slice(0,-1)),s&&(m=s+(\"/\"===m[0]?m.substr(1):m)),m}function l(){}l.prototype.parse=d,l.prototype.format=r,l.prototype.resolve=h,l.prototype.resolveObject=h;var f=/^https?|ftp|gopher|file/,m=/^(.*?)([#?].*)/,v=/^([a-z0-9.+-]*:)(\\/{0,3})(.*)/i,_=/^([a-z0-9.+-]*:)?\\/\\/\\/*/i,b=/^([a-z0-9.+-]*:)(\\/{0,2})\\[(.*)\\]$/i;function d(e,t,o){if(void 0===t&&(t=!1),void 0===o&&(o=!1),e&&\"object\"==typeof e&&e instanceof l)return e;var s=(e=e.trim()).match(m);e=s?s[1].replace(/\\\\/g,\"/\")+s[2]:e.replace(/\\\\/g,\"/\"),b.test(e)&&\"/\"!==e.slice(-1)&&(e+=\"/\");var n=!/(^javascript)/.test(e)&&e.match(v),i=_.test(e),u=\"\";n&&(f.test(n[1])||(u=n[1].toLowerCase(),e=\"\"+n[2]+n[3]),n[2]||(i=!1,f.test(n[1])?(u=n[1],e=\"\"+n[3]):e=\"//\"+n[3]),3!==n[2].length&&1!==n[2].length||(u=n[1],e=\"/\"+n[3]));var g,y=(s?s[1]:e).match(/^https?:\\/\\/[^/]+(:[0-9]+)(?=\\/|$)/),w=y&&y[1],x=new l,C=\"\",U=\"\";try{g=new URL(e)}catch(t){C=t,u||o||!/^\\/\\//.test(e)||/^\\/\\/.+[@.]/.test(e)||(U=\"/\",e=e.substr(1));try{g=new URL(e,c)}catch(e){return x.protocol=u,x.href=u,x}}x.slashes=i&&!U,x.host=g.host===p?\"\":g.host,x.hostname=g.hostname===p?\"\":g.hostname.replace(/(\\[|\\])/g,\"\"),x.protocol=C?u||null:g.protocol,x.search=g.search.replace(/\\\\/g,\"%5C\"),x.hash=g.hash.replace(/\\\\/g,\"%5C\");var j=e.split(\"#\");!x.search&&~j[0].indexOf(\"?\")&&(x.search=\"?\"),x.hash||\"\"!==j[1]||(x.hash=\"#\"),x.query=t?a.decode(g.search.substr(1)):x.search.substr(1),x.pathname=U+(n?function(e){return e.replace(/['^|`]/g,(function(e){return\"%\"+e.charCodeAt().toString(16).toUpperCase()})).replace(/((?:%[0-9A-F]{2})+)/g,(function(e,t){try{return decodeURIComponent(t).split(\"\").map((function(e){var t=e.charCodeAt();return t>256||/^[a-z0-9]$/i.test(e)?e:\"%\"+t.toString(16).toUpperCase()})).join(\"\")}catch(e){return t}}))}(g.pathname):g.pathname),\"about:\"===x.protocol&&\"blank\"===x.pathname&&(x.protocol=\"\",x.pathname=\"\"),C&&\"/\"!==e[0]&&(x.pathname=x.pathname.substr(1)),u&&!f.test(u)&&\"/\"!==e.slice(-1)&&\"/\"===x.pathname&&(x.pathname=\"\"),x.path=x.pathname+x.search,x.auth=[g.username,g.password].map(decodeURIComponent).filter(Boolean).join(\":\"),x.port=g.port,w&&!x.host.endsWith(w)&&(x.host+=w,x.port=w.slice(1)),x.href=U?\"\"+x.pathname+x.search+x.hash:r(x);var q=/^(file)/.test(x.href)?[\"host\",\"hostname\"]:[];return Object.keys(x).forEach((function(e){~q.indexOf(e)||(x[e]=x[e]||null)})),x}e.parse=d,e.format=r,e.resolve=h,e.resolveObject=function(e,t){return d(h(e,t))},e.Url=l}();module.exports=o})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvbmF0aXZlLXVybC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSxPQUFPLGdCQUFnQixhQUFhLFVBQVUsbUJBQU8sQ0FBQywwSEFBb0MsSUFBSSxTQUFTLGdDQUFnQyxXQUFXLGtCQUFrQixpQkFBaUIsWUFBWSxZQUFZLFdBQVcsSUFBSSxzQ0FBc0MsUUFBUSxRQUFRLGlCQUFpQixpQkFBaUIsbUVBQW1FLFNBQVMsS0FBSyxTQUFTLFlBQVksUUFBUSwrR0FBK0csY0FBYyw2QkFBNkIsc0JBQXNCLDRGQUE0Riw2S0FBNkssNkJBQTZCLGlMQUFpTCx5R0FBeUcsUUFBUSxzREFBc0QsdUdBQXVHLGdCQUFnQixnQ0FBZ0MsNEJBQTRCLGdCQUFnQiw4S0FBOEssaUJBQWlCLGdHQUFnRyx3RkFBd0Ysa09BQWtPLGNBQWMsMkZBQTJGLDBFQUEwRSxJQUFJLDZEQUE2RCxJQUFJLGFBQWEsa0JBQWtCLHdGQUF3Riw0QkFBNEIsNkZBQTZGLDREQUE0RCx3S0FBd0ssMkZBQTJGLElBQUksYUFBYSxTQUFTLHlFQUF5RSxJQUFJLGVBQWUsU0FBUyxnQ0FBZ0MscU5BQXFOLG1CQUFtQixvS0FBb0ssd0NBQXdDLG9EQUFvRCwwQkFBMEIsRUFBRSxxQkFBcUIsSUFBSSx3REFBd0QscUJBQXFCLHVFQUF1RSxZQUFZLFNBQVMsVUFBVSxHQUFHLHFiQUFxYixvREFBb0QsMkNBQTJDLGlDQUFpQyxLQUFLLCtEQUErRCxpQkFBaUIsU0FBUyxHQUFHLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL25hdGl2ZS11cmwvaW5kZXguanM/NjdhNyJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgZT17NDUyOmZ1bmN0aW9uKGUpe1widXNlIHN0cmljdFwiO2UuZXhwb3J0cz1yZXF1aXJlKFwibmV4dC9kaXN0L2NvbXBpbGVkL3F1ZXJ5c3RyaW5nLWVzM1wiKX19O3ZhciB0PXt9O2Z1bmN0aW9uIF9fbmNjd3Bja19yZXF1aXJlX18obyl7dmFyIGE9dFtvXTtpZihhIT09dW5kZWZpbmVkKXtyZXR1cm4gYS5leHBvcnRzfXZhciBzPXRbb109e2V4cG9ydHM6e319O3ZhciBuPXRydWU7dHJ5e2Vbb10ocyxzLmV4cG9ydHMsX19uY2N3cGNrX3JlcXVpcmVfXyk7bj1mYWxzZX1maW5hbGx5e2lmKG4pZGVsZXRlIHRbb119cmV0dXJuIHMuZXhwb3J0c31pZih0eXBlb2YgX19uY2N3cGNrX3JlcXVpcmVfXyE9PVwidW5kZWZpbmVkXCIpX19uY2N3cGNrX3JlcXVpcmVfXy5hYj1fX2Rpcm5hbWUrXCIvXCI7dmFyIG89e307IWZ1bmN0aW9uKCl7dmFyIGU9bzt2YXIgdCxhPSh0PV9fbmNjd3Bja19yZXF1aXJlX18oNDUyKSkmJlwib2JqZWN0XCI9PXR5cGVvZiB0JiZcImRlZmF1bHRcImluIHQ/dC5kZWZhdWx0OnQscz0vaHR0cHM/fGZ0cHxnb3BoZXJ8ZmlsZS87ZnVuY3Rpb24gcihlKXtcInN0cmluZ1wiPT10eXBlb2YgZSYmKGU9ZChlKSk7dmFyIHQ9ZnVuY3Rpb24oZSx0LG8pe3ZhciBhPWUuYXV0aCxzPWUuaG9zdG5hbWUsbj1lLnByb3RvY29sfHxcIlwiLHA9ZS5wYXRobmFtZXx8XCJcIixjPWUuaGFzaHx8XCJcIixpPWUucXVlcnl8fFwiXCIsdT0hMTthPWE/ZW5jb2RlVVJJQ29tcG9uZW50KGEpLnJlcGxhY2UoLyUzQS9pLFwiOlwiKStcIkBcIjpcIlwiLGUuaG9zdD91PWErZS5ob3N0OnMmJih1PWErKH5zLmluZGV4T2YoXCI6XCIpP1wiW1wiK3MrXCJdXCI6cyksZS5wb3J0JiYodSs9XCI6XCIrZS5wb3J0KSksaSYmXCJvYmplY3RcIj09dHlwZW9mIGkmJihpPXQuZW5jb2RlKGkpKTt2YXIgZj1lLnNlYXJjaHx8aSYmXCI/XCIraXx8XCJcIjtyZXR1cm4gbiYmXCI6XCIhPT1uLnN1YnN0cigtMSkmJihuKz1cIjpcIiksZS5zbGFzaGVzfHwoIW58fG8udGVzdChuKSkmJiExIT09dT8odT1cIi8vXCIrKHV8fFwiXCIpLHAmJlwiL1wiIT09cFswXSYmKHA9XCIvXCIrcCkpOnV8fCh1PVwiXCIpLGMmJlwiI1wiIT09Y1swXSYmKGM9XCIjXCIrYyksZiYmXCI/XCIhPT1mWzBdJiYoZj1cIj9cIitmKSx7cHJvdG9jb2w6bixob3N0OnUscGF0aG5hbWU6cD1wLnJlcGxhY2UoL1s/I10vZyxlbmNvZGVVUklDb21wb25lbnQpLHNlYXJjaDpmPWYucmVwbGFjZShcIiNcIixcIiUyM1wiKSxoYXNoOmN9fShlLGEscyk7cmV0dXJuXCJcIit0LnByb3RvY29sK3QuaG9zdCt0LnBhdGhuYW1lK3Quc2VhcmNoK3QuaGFzaH12YXIgbj1cImh0dHA6Ly9cIixwPVwidy53XCIsYz1uK3AsaT0vXihbYS16MC05ListXSo6XFwvXFwvXFwvKShbYS16MC05ListXTpcXC8qKT8vaSx1PS9odHRwcz98ZnRwfGdvcGhlcnxmaWxlLztmdW5jdGlvbiBoKGUsdCl7dmFyIG89XCJzdHJpbmdcIj09dHlwZW9mIGU/ZChlKTplO2U9XCJvYmplY3RcIj09dHlwZW9mIGU/cihlKTplO3ZhciBhPWQodCkscz1cIlwiO28ucHJvdG9jb2wmJiFvLnNsYXNoZXMmJihzPW8ucHJvdG9jb2wsZT1lLnJlcGxhY2Uoby5wcm90b2NvbCxcIlwiKSxzKz1cIi9cIj09PXRbMF18fFwiL1wiPT09ZVswXT9cIi9cIjpcIlwiKSxzJiZhLnByb3RvY29sJiYocz1cIlwiLGEuc2xhc2hlc3x8KHM9YS5wcm90b2NvbCx0PXQucmVwbGFjZShhLnByb3RvY29sLFwiXCIpKSk7dmFyIHA9ZS5tYXRjaChpKTtwJiYhYS5wcm90b2NvbCYmKGU9ZS5zdWJzdHIoKHM9cFsxXSsocFsyXXx8XCJcIikpLmxlbmd0aCksL15cXC9cXC9bXi9dLy50ZXN0KHQpJiYocz1zLnNsaWNlKDAsLTEpKSk7dmFyIGY9bmV3IFVSTChlLGMrXCIvXCIpLG09bmV3IFVSTCh0LGYpLnRvU3RyaW5nKCkucmVwbGFjZShjLFwiXCIpLHY9YS5wcm90b2NvbHx8by5wcm90b2NvbDtyZXR1cm4gdis9by5zbGFzaGVzfHxhLnNsYXNoZXM/XCIvL1wiOlwiXCIsIXMmJnY/bT1tLnJlcGxhY2Uobix2KTpzJiYobT1tLnJlcGxhY2UobixcIlwiKSksdS50ZXN0KG0pfHx+dC5pbmRleE9mKFwiLlwiKXx8XCIvXCI9PT1lLnNsaWNlKC0xKXx8XCIvXCI9PT10LnNsaWNlKC0xKXx8XCIvXCIhPT1tLnNsaWNlKC0xKXx8KG09bS5zbGljZSgwLC0xKSkscyYmKG09cysoXCIvXCI9PT1tWzBdP20uc3Vic3RyKDEpOm0pKSxtfWZ1bmN0aW9uIGwoKXt9bC5wcm90b3R5cGUucGFyc2U9ZCxsLnByb3RvdHlwZS5mb3JtYXQ9cixsLnByb3RvdHlwZS5yZXNvbHZlPWgsbC5wcm90b3R5cGUucmVzb2x2ZU9iamVjdD1oO3ZhciBmPS9eaHR0cHM/fGZ0cHxnb3BoZXJ8ZmlsZS8sbT0vXiguKj8pKFsjP10uKikvLHY9L14oW2EtejAtOS4rLV0qOikoXFwvezAsM30pKC4qKS9pLF89L14oW2EtejAtOS4rLV0qOik/XFwvXFwvXFwvKi9pLGI9L14oW2EtejAtOS4rLV0qOikoXFwvezAsMn0pXFxbKC4qKVxcXSQvaTtmdW5jdGlvbiBkKGUsdCxvKXtpZih2b2lkIDA9PT10JiYodD0hMSksdm9pZCAwPT09byYmKG89ITEpLGUmJlwib2JqZWN0XCI9PXR5cGVvZiBlJiZlIGluc3RhbmNlb2YgbClyZXR1cm4gZTt2YXIgcz0oZT1lLnRyaW0oKSkubWF0Y2gobSk7ZT1zP3NbMV0ucmVwbGFjZSgvXFxcXC9nLFwiL1wiKStzWzJdOmUucmVwbGFjZSgvXFxcXC9nLFwiL1wiKSxiLnRlc3QoZSkmJlwiL1wiIT09ZS5zbGljZSgtMSkmJihlKz1cIi9cIik7dmFyIG49IS8oXmphdmFzY3JpcHQpLy50ZXN0KGUpJiZlLm1hdGNoKHYpLGk9Xy50ZXN0KGUpLHU9XCJcIjtuJiYoZi50ZXN0KG5bMV0pfHwodT1uWzFdLnRvTG93ZXJDYXNlKCksZT1cIlwiK25bMl0rblszXSksblsyXXx8KGk9ITEsZi50ZXN0KG5bMV0pPyh1PW5bMV0sZT1cIlwiK25bM10pOmU9XCIvL1wiK25bM10pLDMhPT1uWzJdLmxlbmd0aCYmMSE9PW5bMl0ubGVuZ3RofHwodT1uWzFdLGU9XCIvXCIrblszXSkpO3ZhciBnLHk9KHM/c1sxXTplKS5tYXRjaCgvXmh0dHBzPzpcXC9cXC9bXi9dKyg6WzAtOV0rKSg/PVxcL3wkKS8pLHc9eSYmeVsxXSx4PW5ldyBsLEM9XCJcIixVPVwiXCI7dHJ5e2c9bmV3IFVSTChlKX1jYXRjaCh0KXtDPXQsdXx8b3x8IS9eXFwvXFwvLy50ZXN0KGUpfHwvXlxcL1xcLy4rW0AuXS8udGVzdChlKXx8KFU9XCIvXCIsZT1lLnN1YnN0cigxKSk7dHJ5e2c9bmV3IFVSTChlLGMpfWNhdGNoKGUpe3JldHVybiB4LnByb3RvY29sPXUseC5ocmVmPXUseH19eC5zbGFzaGVzPWkmJiFVLHguaG9zdD1nLmhvc3Q9PT1wP1wiXCI6Zy5ob3N0LHguaG9zdG5hbWU9Zy5ob3N0bmFtZT09PXA/XCJcIjpnLmhvc3RuYW1lLnJlcGxhY2UoLyhcXFt8XFxdKS9nLFwiXCIpLHgucHJvdG9jb2w9Qz91fHxudWxsOmcucHJvdG9jb2wseC5zZWFyY2g9Zy5zZWFyY2gucmVwbGFjZSgvXFxcXC9nLFwiJTVDXCIpLHguaGFzaD1nLmhhc2gucmVwbGFjZSgvXFxcXC9nLFwiJTVDXCIpO3ZhciBqPWUuc3BsaXQoXCIjXCIpOyF4LnNlYXJjaCYmfmpbMF0uaW5kZXhPZihcIj9cIikmJih4LnNlYXJjaD1cIj9cIikseC5oYXNofHxcIlwiIT09alsxXXx8KHguaGFzaD1cIiNcIikseC5xdWVyeT10P2EuZGVjb2RlKGcuc2VhcmNoLnN1YnN0cigxKSk6eC5zZWFyY2guc3Vic3RyKDEpLHgucGF0aG5hbWU9VSsobj9mdW5jdGlvbihlKXtyZXR1cm4gZS5yZXBsYWNlKC9bJ158YF0vZywoZnVuY3Rpb24oZSl7cmV0dXJuXCIlXCIrZS5jaGFyQ29kZUF0KCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCl9KSkucmVwbGFjZSgvKCg/OiVbMC05QS1GXXsyfSkrKS9nLChmdW5jdGlvbihlLHQpe3RyeXtyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KHQpLnNwbGl0KFwiXCIpLm1hcCgoZnVuY3Rpb24oZSl7dmFyIHQ9ZS5jaGFyQ29kZUF0KCk7cmV0dXJuIHQ+MjU2fHwvXlthLXowLTldJC9pLnRlc3QoZSk/ZTpcIiVcIit0LnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpfSkpLmpvaW4oXCJcIil9Y2F0Y2goZSl7cmV0dXJuIHR9fSkpfShnLnBhdGhuYW1lKTpnLnBhdGhuYW1lKSxcImFib3V0OlwiPT09eC5wcm90b2NvbCYmXCJibGFua1wiPT09eC5wYXRobmFtZSYmKHgucHJvdG9jb2w9XCJcIix4LnBhdGhuYW1lPVwiXCIpLEMmJlwiL1wiIT09ZVswXSYmKHgucGF0aG5hbWU9eC5wYXRobmFtZS5zdWJzdHIoMSkpLHUmJiFmLnRlc3QodSkmJlwiL1wiIT09ZS5zbGljZSgtMSkmJlwiL1wiPT09eC5wYXRobmFtZSYmKHgucGF0aG5hbWU9XCJcIikseC5wYXRoPXgucGF0aG5hbWUreC5zZWFyY2gseC5hdXRoPVtnLnVzZXJuYW1lLGcucGFzc3dvcmRdLm1hcChkZWNvZGVVUklDb21wb25lbnQpLmZpbHRlcihCb29sZWFuKS5qb2luKFwiOlwiKSx4LnBvcnQ9Zy5wb3J0LHcmJiF4Lmhvc3QuZW5kc1dpdGgodykmJih4Lmhvc3QrPXcseC5wb3J0PXcuc2xpY2UoMSkpLHguaHJlZj1VP1wiXCIreC5wYXRobmFtZSt4LnNlYXJjaCt4Lmhhc2g6cih4KTt2YXIgcT0vXihmaWxlKS8udGVzdCh4LmhyZWYpP1tcImhvc3RcIixcImhvc3RuYW1lXCJdOltdO3JldHVybiBPYmplY3Qua2V5cyh4KS5mb3JFYWNoKChmdW5jdGlvbihlKXt+cS5pbmRleE9mKGUpfHwoeFtlXT14W2VdfHxudWxsKX0pKSx4fWUucGFyc2U9ZCxlLmZvcm1hdD1yLGUucmVzb2x2ZT1oLGUucmVzb2x2ZU9iamVjdD1mdW5jdGlvbihlLHQpe3JldHVybiBkKGgoZSx0KSl9LGUuVXJsPWx9KCk7bW9kdWxlLmV4cG9ydHM9b30pKCk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/native-url/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/querystring-es3/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/querystring-es3/index.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){\"use strict\";var e={815:function(e){function hasOwnProperty(e,r){return Object.prototype.hasOwnProperty.call(e,r)}e.exports=function(e,n,t,o){n=n||\"&\";t=t||\"=\";var a={};if(typeof e!==\"string\"||e.length===0){return a}var i=/\\+/g;e=e.split(n);var u=1e3;if(o&&typeof o.maxKeys===\"number\"){u=o.maxKeys}var c=e.length;if(u>0&&c>u){c=u}for(var p=0;p<c;++p){var f=e[p].replace(i,\"%20\"),s=f.indexOf(t),_,l,y,d;if(s>=0){_=f.substr(0,s);l=f.substr(s+1)}else{_=f;l=\"\"}y=decodeURIComponent(_);d=decodeURIComponent(l);if(!hasOwnProperty(a,y)){a[y]=d}else if(r(a[y])){a[y].push(d)}else{a[y]=[a[y],d]}}return a};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"}},577:function(e){var stringifyPrimitive=function(e){switch(typeof e){case\"string\":return e;case\"boolean\":return e?\"true\":\"false\";case\"number\":return isFinite(e)?e:\"\";default:return\"\"}};e.exports=function(e,t,o,a){t=t||\"&\";o=o||\"=\";if(e===null){e=undefined}if(typeof e===\"object\"){return map(n(e),(function(n){var a=encodeURIComponent(stringifyPrimitive(n))+o;if(r(e[n])){return map(e[n],(function(e){return a+encodeURIComponent(stringifyPrimitive(e))})).join(t)}else{return a+encodeURIComponent(stringifyPrimitive(e[n]))}})).join(t)}if(!a)return\"\";return encodeURIComponent(stringifyPrimitive(a))+o+encodeURIComponent(stringifyPrimitive(e))};var r=Array.isArray||function(e){return Object.prototype.toString.call(e)===\"[object Array]\"};function map(e,r){if(e.map)return e.map(r);var n=[];for(var t=0;t<e.length;t++){n.push(r(e[t],t))}return n}var n=Object.keys||function(e){var r=[];for(var n in e){if(Object.prototype.hasOwnProperty.call(e,n))r.push(n)}return r}}};var r={};function __nccwpck_require__(n){var t=r[n];if(t!==undefined){return t.exports}var o=r[n]={exports:{}};var a=true;try{e[n](o,o.exports,__nccwpck_require__);a=false}finally{if(a)delete r[n]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var n={};!function(){var e=n;e.decode=e.parse=__nccwpck_require__(815);e.encode=e.stringify=__nccwpck_require__(577)}();module.exports=n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcXVlcnlzdHJpbmctZXMzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7QUFBQSxZQUFZLGFBQWEsT0FBTyxnQkFBZ0IsNkJBQTZCLGlEQUFpRCw0QkFBNEIsU0FBUyxTQUFTLFNBQVMsc0NBQXNDLFNBQVMsWUFBWSxhQUFhLFVBQVUsbUNBQW1DLFlBQVksZUFBZSxhQUFhLElBQUksWUFBWSxJQUFJLEtBQUssbURBQW1ELFNBQVMsZ0JBQWdCLGdCQUFnQixLQUFLLElBQUksS0FBSyx3QkFBd0Isd0JBQXdCLHlCQUF5QixPQUFPLGlCQUFpQixhQUFhLEtBQUssZUFBZSxVQUFVLGlDQUFpQyw2REFBNkQsaUJBQWlCLG1DQUFtQyxpQkFBaUIsc0JBQXNCLHNDQUFzQyxxQ0FBcUMsbUJBQW1CLDRCQUE0QixTQUFTLFNBQVMsYUFBYSxZQUFZLHdCQUF3Qiw2QkFBNkIsa0RBQWtELFlBQVksNkJBQTZCLG1EQUFtRCxXQUFXLEtBQUssdURBQXVELFdBQVcsZUFBZSw4RkFBOEYsaUNBQWlDLDZEQUE2RCxrQkFBa0IseUJBQXlCLFNBQVMsWUFBWSxXQUFXLEtBQUssa0JBQWtCLFNBQVMsK0JBQStCLFNBQVMsZ0JBQWdCLHVEQUF1RCxZQUFZLFNBQVMsZ0NBQWdDLFdBQVcsa0JBQWtCLGlCQUFpQixZQUFZLFlBQVksV0FBVyxJQUFJLHNDQUFzQyxRQUFRLFFBQVEsaUJBQWlCLGlCQUFpQixtRUFBbUUsU0FBUyxLQUFLLFNBQVMsWUFBWSxRQUFRLDBDQUEwQyw4Q0FBOEMsR0FBRyxpQkFBaUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9xdWVyeXN0cmluZy1lczMvaW5kZXguanM/M2RiOSJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjt2YXIgZT17ODE1OmZ1bmN0aW9uKGUpe2Z1bmN0aW9uIGhhc093blByb3BlcnR5KGUscil7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLHIpfWUuZXhwb3J0cz1mdW5jdGlvbihlLG4sdCxvKXtuPW58fFwiJlwiO3Q9dHx8XCI9XCI7dmFyIGE9e307aWYodHlwZW9mIGUhPT1cInN0cmluZ1wifHxlLmxlbmd0aD09PTApe3JldHVybiBhfXZhciBpPS9cXCsvZztlPWUuc3BsaXQobik7dmFyIHU9MWUzO2lmKG8mJnR5cGVvZiBvLm1heEtleXM9PT1cIm51bWJlclwiKXt1PW8ubWF4S2V5c312YXIgYz1lLmxlbmd0aDtpZih1PjAmJmM+dSl7Yz11fWZvcih2YXIgcD0wO3A8YzsrK3Ape3ZhciBmPWVbcF0ucmVwbGFjZShpLFwiJTIwXCIpLHM9Zi5pbmRleE9mKHQpLF8sbCx5LGQ7aWYocz49MCl7Xz1mLnN1YnN0cigwLHMpO2w9Zi5zdWJzdHIocysxKX1lbHNle189ZjtsPVwiXCJ9eT1kZWNvZGVVUklDb21wb25lbnQoXyk7ZD1kZWNvZGVVUklDb21wb25lbnQobCk7aWYoIWhhc093blByb3BlcnR5KGEseSkpe2FbeV09ZH1lbHNlIGlmKHIoYVt5XSkpe2FbeV0ucHVzaChkKX1lbHNle2FbeV09W2FbeV0sZF19fXJldHVybiBhfTt2YXIgcj1BcnJheS5pc0FycmF5fHxmdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpPT09XCJbb2JqZWN0IEFycmF5XVwifX0sNTc3OmZ1bmN0aW9uKGUpe3ZhciBzdHJpbmdpZnlQcmltaXRpdmU9ZnVuY3Rpb24oZSl7c3dpdGNoKHR5cGVvZiBlKXtjYXNlXCJzdHJpbmdcIjpyZXR1cm4gZTtjYXNlXCJib29sZWFuXCI6cmV0dXJuIGU/XCJ0cnVlXCI6XCJmYWxzZVwiO2Nhc2VcIm51bWJlclwiOnJldHVybiBpc0Zpbml0ZShlKT9lOlwiXCI7ZGVmYXVsdDpyZXR1cm5cIlwifX07ZS5leHBvcnRzPWZ1bmN0aW9uKGUsdCxvLGEpe3Q9dHx8XCImXCI7bz1vfHxcIj1cIjtpZihlPT09bnVsbCl7ZT11bmRlZmluZWR9aWYodHlwZW9mIGU9PT1cIm9iamVjdFwiKXtyZXR1cm4gbWFwKG4oZSksKGZ1bmN0aW9uKG4pe3ZhciBhPWVuY29kZVVSSUNvbXBvbmVudChzdHJpbmdpZnlQcmltaXRpdmUobikpK287aWYocihlW25dKSl7cmV0dXJuIG1hcChlW25dLChmdW5jdGlvbihlKXtyZXR1cm4gYStlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKGUpKX0pKS5qb2luKHQpfWVsc2V7cmV0dXJuIGErZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShlW25dKSl9fSkpLmpvaW4odCl9aWYoIWEpcmV0dXJuXCJcIjtyZXR1cm4gZW5jb2RlVVJJQ29tcG9uZW50KHN0cmluZ2lmeVByaW1pdGl2ZShhKSkrbytlbmNvZGVVUklDb21wb25lbnQoc3RyaW5naWZ5UHJpbWl0aXZlKGUpKX07dmFyIHI9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKT09PVwiW29iamVjdCBBcnJheV1cIn07ZnVuY3Rpb24gbWFwKGUscil7aWYoZS5tYXApcmV0dXJuIGUubWFwKHIpO3ZhciBuPVtdO2Zvcih2YXIgdD0wO3Q8ZS5sZW5ndGg7dCsrKXtuLnB1c2gocihlW3RdLHQpKX1yZXR1cm4gbn12YXIgbj1PYmplY3Qua2V5c3x8ZnVuY3Rpb24oZSl7dmFyIHI9W107Zm9yKHZhciBuIGluIGUpe2lmKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLG4pKXIucHVzaChuKX1yZXR1cm4gcn19fTt2YXIgcj17fTtmdW5jdGlvbiBfX25jY3dwY2tfcmVxdWlyZV9fKG4pe3ZhciB0PXJbbl07aWYodCE9PXVuZGVmaW5lZCl7cmV0dXJuIHQuZXhwb3J0c312YXIgbz1yW25dPXtleHBvcnRzOnt9fTt2YXIgYT10cnVlO3RyeXtlW25dKG8sby5leHBvcnRzLF9fbmNjd3Bja19yZXF1aXJlX18pO2E9ZmFsc2V9ZmluYWxseXtpZihhKWRlbGV0ZSByW25dfXJldHVybiBvLmV4cG9ydHN9aWYodHlwZW9mIF9fbmNjd3Bja19yZXF1aXJlX18hPT1cInVuZGVmaW5lZFwiKV9fbmNjd3Bja19yZXF1aXJlX18uYWI9X19kaXJuYW1lK1wiL1wiO3ZhciBuPXt9OyFmdW5jdGlvbigpe3ZhciBlPW47ZS5kZWNvZGU9ZS5wYXJzZT1fX25jY3dwY2tfcmVxdWlyZV9fKDgxNSk7ZS5lbmNvZGU9ZS5zdHJpbmdpZnk9X19uY2N3cGNrX3JlcXVpcmVfXyg1NzcpfSgpO21vZHVsZS5leHBvcnRzPW59KSgpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/querystring-es3/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/stream-browserify/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/next/dist/compiled/stream-browserify/index.js ***!
  \********************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n(function(){var e={782:function(e){if(typeof Object.create===\"function\"){e.exports=function inherits(e,t){if(t){e.super_=t;e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:false,writable:true,configurable:true}})}}}else{e.exports=function inherits(e,t){if(t){e.super_=t;var TempCtor=function(){};TempCtor.prototype=t.prototype;e.prototype=new TempCtor;e.prototype.constructor=e}}}},646:function(e){\"use strict\";const t={};function createErrorType(e,r,n){if(!n){n=Error}function getMessage(e,t,n){if(typeof r===\"string\"){return r}else{return r(e,t,n)}}class NodeError extends n{constructor(e,t,r){super(getMessage(e,t,r))}}NodeError.prototype.name=n.name;NodeError.prototype.code=e;t[e]=NodeError}function oneOf(e,t){if(Array.isArray(e)){const r=e.length;e=e.map((e=>String(e)));if(r>2){return`one of ${t} ${e.slice(0,r-1).join(\", \")}, or `+e[r-1]}else if(r===2){return`one of ${t} ${e[0]} or ${e[1]}`}else{return`of ${t} ${e[0]}`}}else{return`of ${t} ${String(e)}`}}function startsWith(e,t,r){return e.substr(!r||r<0?0:+r,t.length)===t}function endsWith(e,t,r){if(r===undefined||r>e.length){r=e.length}return e.substring(r-t.length,r)===t}function includes(e,t,r){if(typeof r!==\"number\"){r=0}if(r+t.length>e.length){return false}else{return e.indexOf(t,r)!==-1}}createErrorType(\"ERR_INVALID_OPT_VALUE\",(function(e,t){return'The value \"'+t+'\" is invalid for option \"'+e+'\"'}),TypeError);createErrorType(\"ERR_INVALID_ARG_TYPE\",(function(e,t,r){let n;if(typeof t===\"string\"&&startsWith(t,\"not \")){n=\"must not be\";t=t.replace(/^not /,\"\")}else{n=\"must be\"}let i;if(endsWith(e,\" argument\")){i=`The ${e} ${n} ${oneOf(t,\"type\")}`}else{const r=includes(e,\".\")?\"property\":\"argument\";i=`The \"${e}\" ${r} ${n} ${oneOf(t,\"type\")}`}i+=`. Received type ${typeof r}`;return i}),TypeError);createErrorType(\"ERR_STREAM_PUSH_AFTER_EOF\",\"stream.push() after EOF\");createErrorType(\"ERR_METHOD_NOT_IMPLEMENTED\",(function(e){return\"The \"+e+\" method is not implemented\"}));createErrorType(\"ERR_STREAM_PREMATURE_CLOSE\",\"Premature close\");createErrorType(\"ERR_STREAM_DESTROYED\",(function(e){return\"Cannot call \"+e+\" after a stream was destroyed\"}));createErrorType(\"ERR_MULTIPLE_CALLBACK\",\"Callback called multiple times\");createErrorType(\"ERR_STREAM_CANNOT_PIPE\",\"Cannot pipe, not readable\");createErrorType(\"ERR_STREAM_WRITE_AFTER_END\",\"write after end\");createErrorType(\"ERR_STREAM_NULL_VALUES\",\"May not write null values to stream\",TypeError);createErrorType(\"ERR_UNKNOWN_ENCODING\",(function(e){return\"Unknown encoding: \"+e}),TypeError);createErrorType(\"ERR_STREAM_UNSHIFT_AFTER_END_EVENT\",\"stream.unshift() after end event\");e.exports.q=t},403:function(e,t,r){\"use strict\";var n=Object.keys||function(e){var t=[];for(var r in e){t.push(r)}return t};e.exports=Duplex;var i=r(709);var a=r(337);r(782)(Duplex,i);{var o=n(a.prototype);for(var s=0;s<o.length;s++){var f=o[s];if(!Duplex.prototype[f])Duplex.prototype[f]=a.prototype[f]}}function Duplex(e){if(!(this instanceof Duplex))return new Duplex(e);i.call(this,e);a.call(this,e);this.allowHalfOpen=true;if(e){if(e.readable===false)this.readable=false;if(e.writable===false)this.writable=false;if(e.allowHalfOpen===false){this.allowHalfOpen=false;this.once(\"end\",onend)}}}Object.defineProperty(Duplex.prototype,\"writableHighWaterMark\",{enumerable:false,get:function get(){return this._writableState.highWaterMark}});Object.defineProperty(Duplex.prototype,\"writableBuffer\",{enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer()}});Object.defineProperty(Duplex.prototype,\"writableLength\",{enumerable:false,get:function get(){return this._writableState.length}});function onend(){if(this._writableState.ended)return;process.nextTick(onEndNT,this)}function onEndNT(e){e.end()}Object.defineProperty(Duplex.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._readableState===undefined||this._writableState===undefined){return false}return this._readableState.destroyed&&this._writableState.destroyed},set:function set(e){if(this._readableState===undefined||this._writableState===undefined){return}this._readableState.destroyed=e;this._writableState.destroyed=e}})},889:function(e,t,r){\"use strict\";e.exports=PassThrough;var n=r(170);r(782)(PassThrough,n);function PassThrough(e){if(!(this instanceof PassThrough))return new PassThrough(e);n.call(this,e)}PassThrough.prototype._transform=function(e,t,r){r(null,e)}},709:function(e,t,r){\"use strict\";e.exports=Readable;var n;Readable.ReadableState=ReadableState;var i=r(361).EventEmitter;var a=function EElistenerCount(e,t){return e.listeners(t).length};var o=r(678);var s=r(300).Buffer;var f=__webpack_require__.g.Uint8Array||function(){};function _uint8ArrayToBuffer(e){return s.from(e)}function _isUint8Array(e){return s.isBuffer(e)||e instanceof f}var l=r(837);var u;if(l&&l.debuglog){u=l.debuglog(\"stream\")}else{u=function debug(){}}var d=r(379);var c=r(25);var h=r(776),p=h.getHighWaterMark;var b=r(646).q,g=b.ERR_INVALID_ARG_TYPE,y=b.ERR_STREAM_PUSH_AFTER_EOF,_=b.ERR_METHOD_NOT_IMPLEMENTED,v=b.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;var w;var m;var S;r(782)(Readable,o);var R=c.errorOrDestroy;var E=[\"error\",\"close\",\"destroy\",\"pause\",\"resume\"];function prependListener(e,t,r){if(typeof e.prependListener===\"function\")return e.prependListener(t,r);if(!e._events||!e._events[t])e.on(t,r);else if(Array.isArray(e._events[t]))e._events[t].unshift(r);else e._events[t]=[r,e._events[t]]}function ReadableState(e,t,i){n=n||r(403);e=e||{};if(typeof i!==\"boolean\")i=t instanceof n;this.objectMode=!!e.objectMode;if(i)this.objectMode=this.objectMode||!!e.readableObjectMode;this.highWaterMark=p(this,e,\"readableHighWaterMark\",i);this.buffer=new d;this.length=0;this.pipes=null;this.pipesCount=0;this.flowing=null;this.ended=false;this.endEmitted=false;this.reading=false;this.sync=true;this.needReadable=false;this.emittedReadable=false;this.readableListening=false;this.resumeScheduled=false;this.paused=true;this.emitClose=e.emitClose!==false;this.autoDestroy=!!e.autoDestroy;this.destroyed=false;this.defaultEncoding=e.defaultEncoding||\"utf8\";this.awaitDrain=0;this.readingMore=false;this.decoder=null;this.encoding=null;if(e.encoding){if(!w)w=r(704).s;this.decoder=new w(e.encoding);this.encoding=e.encoding}}function Readable(e){n=n||r(403);if(!(this instanceof Readable))return new Readable(e);var t=this instanceof n;this._readableState=new ReadableState(e,this,t);this.readable=true;if(e){if(typeof e.read===\"function\")this._read=e.read;if(typeof e.destroy===\"function\")this._destroy=e.destroy}o.call(this)}Object.defineProperty(Readable.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._readableState===undefined){return false}return this._readableState.destroyed},set:function set(e){if(!this._readableState){return}this._readableState.destroyed=e}});Readable.prototype.destroy=c.destroy;Readable.prototype._undestroy=c.undestroy;Readable.prototype._destroy=function(e,t){t(e)};Readable.prototype.push=function(e,t){var r=this._readableState;var n;if(!r.objectMode){if(typeof e===\"string\"){t=t||r.defaultEncoding;if(t!==r.encoding){e=s.from(e,t);t=\"\"}n=true}}else{n=true}return readableAddChunk(this,e,t,false,n)};Readable.prototype.unshift=function(e){return readableAddChunk(this,e,null,true,false)};function readableAddChunk(e,t,r,n,i){u(\"readableAddChunk\",t);var a=e._readableState;if(t===null){a.reading=false;onEofChunk(e,a)}else{var o;if(!i)o=chunkInvalid(a,t);if(o){R(e,o)}else if(a.objectMode||t&&t.length>0){if(typeof t!==\"string\"&&!a.objectMode&&Object.getPrototypeOf(t)!==s.prototype){t=_uint8ArrayToBuffer(t)}if(n){if(a.endEmitted)R(e,new v);else addChunk(e,a,t,true)}else if(a.ended){R(e,new y)}else if(a.destroyed){return false}else{a.reading=false;if(a.decoder&&!r){t=a.decoder.write(t);if(a.objectMode||t.length!==0)addChunk(e,a,t,false);else maybeReadMore(e,a)}else{addChunk(e,a,t,false)}}}else if(!n){a.reading=false;maybeReadMore(e,a)}}return!a.ended&&(a.length<a.highWaterMark||a.length===0)}function addChunk(e,t,r,n){if(t.flowing&&t.length===0&&!t.sync){t.awaitDrain=0;e.emit(\"data\",r)}else{t.length+=t.objectMode?1:r.length;if(n)t.buffer.unshift(r);else t.buffer.push(r);if(t.needReadable)emitReadable(e)}maybeReadMore(e,t)}function chunkInvalid(e,t){var r;if(!_isUint8Array(t)&&typeof t!==\"string\"&&t!==undefined&&!e.objectMode){r=new g(\"chunk\",[\"string\",\"Buffer\",\"Uint8Array\"],t)}return r}Readable.prototype.isPaused=function(){return this._readableState.flowing===false};Readable.prototype.setEncoding=function(e){if(!w)w=r(704).s;var t=new w(e);this._readableState.decoder=t;this._readableState.encoding=this._readableState.decoder.encoding;var n=this._readableState.buffer.head;var i=\"\";while(n!==null){i+=t.write(n.data);n=n.next}this._readableState.buffer.clear();if(i!==\"\")this._readableState.buffer.push(i);this._readableState.length=i.length;return this};var T=1073741824;function computeNewHighWaterMark(e){if(e>=T){e=T}else{e--;e|=e>>>1;e|=e>>>2;e|=e>>>4;e|=e>>>8;e|=e>>>16;e++}return e}function howMuchToRead(e,t){if(e<=0||t.length===0&&t.ended)return 0;if(t.objectMode)return 1;if(e!==e){if(t.flowing&&t.length)return t.buffer.head.data.length;else return t.length}if(e>t.highWaterMark)t.highWaterMark=computeNewHighWaterMark(e);if(e<=t.length)return e;if(!t.ended){t.needReadable=true;return 0}return t.length}Readable.prototype.read=function(e){u(\"read\",e);e=parseInt(e,10);var t=this._readableState;var r=e;if(e!==0)t.emittedReadable=false;if(e===0&&t.needReadable&&((t.highWaterMark!==0?t.length>=t.highWaterMark:t.length>0)||t.ended)){u(\"read: emitReadable\",t.length,t.ended);if(t.length===0&&t.ended)endReadable(this);else emitReadable(this);return null}e=howMuchToRead(e,t);if(e===0&&t.ended){if(t.length===0)endReadable(this);return null}var n=t.needReadable;u(\"need readable\",n);if(t.length===0||t.length-e<t.highWaterMark){n=true;u(\"length less than watermark\",n)}if(t.ended||t.reading){n=false;u(\"reading or ended\",n)}else if(n){u(\"do read\");t.reading=true;t.sync=true;if(t.length===0)t.needReadable=true;this._read(t.highWaterMark);t.sync=false;if(!t.reading)e=howMuchToRead(r,t)}var i;if(e>0)i=fromList(e,t);else i=null;if(i===null){t.needReadable=t.length<=t.highWaterMark;e=0}else{t.length-=e;t.awaitDrain=0}if(t.length===0){if(!t.ended)t.needReadable=true;if(r!==e&&t.ended)endReadable(this)}if(i!==null)this.emit(\"data\",i);return i};function onEofChunk(e,t){u(\"onEofChunk\");if(t.ended)return;if(t.decoder){var r=t.decoder.end();if(r&&r.length){t.buffer.push(r);t.length+=t.objectMode?1:r.length}}t.ended=true;if(t.sync){emitReadable(e)}else{t.needReadable=false;if(!t.emittedReadable){t.emittedReadable=true;emitReadable_(e)}}}function emitReadable(e){var t=e._readableState;u(\"emitReadable\",t.needReadable,t.emittedReadable);t.needReadable=false;if(!t.emittedReadable){u(\"emitReadable\",t.flowing);t.emittedReadable=true;process.nextTick(emitReadable_,e)}}function emitReadable_(e){var t=e._readableState;u(\"emitReadable_\",t.destroyed,t.length,t.ended);if(!t.destroyed&&(t.length||t.ended)){e.emit(\"readable\");t.emittedReadable=false}t.needReadable=!t.flowing&&!t.ended&&t.length<=t.highWaterMark;flow(e)}function maybeReadMore(e,t){if(!t.readingMore){t.readingMore=true;process.nextTick(maybeReadMore_,e,t)}}function maybeReadMore_(e,t){while(!t.reading&&!t.ended&&(t.length<t.highWaterMark||t.flowing&&t.length===0)){var r=t.length;u(\"maybeReadMore read 0\");e.read(0);if(r===t.length)break}t.readingMore=false}Readable.prototype._read=function(e){R(this,new _(\"_read()\"))};Readable.prototype.pipe=function(e,t){var r=this;var n=this._readableState;switch(n.pipesCount){case 0:n.pipes=e;break;case 1:n.pipes=[n.pipes,e];break;default:n.pipes.push(e);break}n.pipesCount+=1;u(\"pipe count=%d opts=%j\",n.pipesCount,t);var i=(!t||t.end!==false)&&e!==process.stdout&&e!==process.stderr;var o=i?onend:unpipe;if(n.endEmitted)process.nextTick(o);else r.once(\"end\",o);e.on(\"unpipe\",onunpipe);function onunpipe(e,t){u(\"onunpipe\");if(e===r){if(t&&t.hasUnpiped===false){t.hasUnpiped=true;cleanup()}}}function onend(){u(\"onend\");e.end()}var s=pipeOnDrain(r);e.on(\"drain\",s);var f=false;function cleanup(){u(\"cleanup\");e.removeListener(\"close\",onclose);e.removeListener(\"finish\",onfinish);e.removeListener(\"drain\",s);e.removeListener(\"error\",onerror);e.removeListener(\"unpipe\",onunpipe);r.removeListener(\"end\",onend);r.removeListener(\"end\",unpipe);r.removeListener(\"data\",ondata);f=true;if(n.awaitDrain&&(!e._writableState||e._writableState.needDrain))s()}r.on(\"data\",ondata);function ondata(t){u(\"ondata\");var i=e.write(t);u(\"dest.write\",i);if(i===false){if((n.pipesCount===1&&n.pipes===e||n.pipesCount>1&&indexOf(n.pipes,e)!==-1)&&!f){u(\"false write response, pause\",n.awaitDrain);n.awaitDrain++}r.pause()}}function onerror(t){u(\"onerror\",t);unpipe();e.removeListener(\"error\",onerror);if(a(e,\"error\")===0)R(e,t)}prependListener(e,\"error\",onerror);function onclose(){e.removeListener(\"finish\",onfinish);unpipe()}e.once(\"close\",onclose);function onfinish(){u(\"onfinish\");e.removeListener(\"close\",onclose);unpipe()}e.once(\"finish\",onfinish);function unpipe(){u(\"unpipe\");r.unpipe(e)}e.emit(\"pipe\",r);if(!n.flowing){u(\"pipe resume\");r.resume()}return e};function pipeOnDrain(e){return function pipeOnDrainFunctionResult(){var t=e._readableState;u(\"pipeOnDrain\",t.awaitDrain);if(t.awaitDrain)t.awaitDrain--;if(t.awaitDrain===0&&a(e,\"data\")){t.flowing=true;flow(e)}}}Readable.prototype.unpipe=function(e){var t=this._readableState;var r={hasUnpiped:false};if(t.pipesCount===0)return this;if(t.pipesCount===1){if(e&&e!==t.pipes)return this;if(!e)e=t.pipes;t.pipes=null;t.pipesCount=0;t.flowing=false;if(e)e.emit(\"unpipe\",this,r);return this}if(!e){var n=t.pipes;var i=t.pipesCount;t.pipes=null;t.pipesCount=0;t.flowing=false;for(var a=0;a<i;a++){n[a].emit(\"unpipe\",this,{hasUnpiped:false})}return this}var o=indexOf(t.pipes,e);if(o===-1)return this;t.pipes.splice(o,1);t.pipesCount-=1;if(t.pipesCount===1)t.pipes=t.pipes[0];e.emit(\"unpipe\",this,r);return this};Readable.prototype.on=function(e,t){var r=o.prototype.on.call(this,e,t);var n=this._readableState;if(e===\"data\"){n.readableListening=this.listenerCount(\"readable\")>0;if(n.flowing!==false)this.resume()}else if(e===\"readable\"){if(!n.endEmitted&&!n.readableListening){n.readableListening=n.needReadable=true;n.flowing=false;n.emittedReadable=false;u(\"on readable\",n.length,n.reading);if(n.length){emitReadable(this)}else if(!n.reading){process.nextTick(nReadingNextTick,this)}}}return r};Readable.prototype.addListener=Readable.prototype.on;Readable.prototype.removeListener=function(e,t){var r=o.prototype.removeListener.call(this,e,t);if(e===\"readable\"){process.nextTick(updateReadableListening,this)}return r};Readable.prototype.removeAllListeners=function(e){var t=o.prototype.removeAllListeners.apply(this,arguments);if(e===\"readable\"||e===undefined){process.nextTick(updateReadableListening,this)}return t};function updateReadableListening(e){var t=e._readableState;t.readableListening=e.listenerCount(\"readable\")>0;if(t.resumeScheduled&&!t.paused){t.flowing=true}else if(e.listenerCount(\"data\")>0){e.resume()}}function nReadingNextTick(e){u(\"readable nexttick read 0\");e.read(0)}Readable.prototype.resume=function(){var e=this._readableState;if(!e.flowing){u(\"resume\");e.flowing=!e.readableListening;resume(this,e)}e.paused=false;return this};function resume(e,t){if(!t.resumeScheduled){t.resumeScheduled=true;process.nextTick(resume_,e,t)}}function resume_(e,t){u(\"resume\",t.reading);if(!t.reading){e.read(0)}t.resumeScheduled=false;e.emit(\"resume\");flow(e);if(t.flowing&&!t.reading)e.read(0)}Readable.prototype.pause=function(){u(\"call pause flowing=%j\",this._readableState.flowing);if(this._readableState.flowing!==false){u(\"pause\");this._readableState.flowing=false;this.emit(\"pause\")}this._readableState.paused=true;return this};function flow(e){var t=e._readableState;u(\"flow\",t.flowing);while(t.flowing&&e.read()!==null){}}Readable.prototype.wrap=function(e){var t=this;var r=this._readableState;var n=false;e.on(\"end\",(function(){u(\"wrapped end\");if(r.decoder&&!r.ended){var e=r.decoder.end();if(e&&e.length)t.push(e)}t.push(null)}));e.on(\"data\",(function(i){u(\"wrapped data\");if(r.decoder)i=r.decoder.write(i);if(r.objectMode&&(i===null||i===undefined))return;else if(!r.objectMode&&(!i||!i.length))return;var a=t.push(i);if(!a){n=true;e.pause()}}));for(var i in e){if(this[i]===undefined&&typeof e[i]===\"function\"){this[i]=function methodWrap(t){return function methodWrapReturnFunction(){return e[t].apply(e,arguments)}}(i)}}for(var a=0;a<E.length;a++){e.on(E[a],this.emit.bind(this,E[a]))}this._read=function(t){u(\"wrapped _read\",t);if(n){n=false;e.resume()}};return this};if(typeof Symbol===\"function\"){Readable.prototype[Symbol.asyncIterator]=function(){if(m===undefined){m=r(871)}return m(this)}}Object.defineProperty(Readable.prototype,\"readableHighWaterMark\",{enumerable:false,get:function get(){return this._readableState.highWaterMark}});Object.defineProperty(Readable.prototype,\"readableBuffer\",{enumerable:false,get:function get(){return this._readableState&&this._readableState.buffer}});Object.defineProperty(Readable.prototype,\"readableFlowing\",{enumerable:false,get:function get(){return this._readableState.flowing},set:function set(e){if(this._readableState){this._readableState.flowing=e}}});Readable._fromList=fromList;Object.defineProperty(Readable.prototype,\"readableLength\",{enumerable:false,get:function get(){return this._readableState.length}});function fromList(e,t){if(t.length===0)return null;var r;if(t.objectMode)r=t.buffer.shift();else if(!e||e>=t.length){if(t.decoder)r=t.buffer.join(\"\");else if(t.buffer.length===1)r=t.buffer.first();else r=t.buffer.concat(t.length);t.buffer.clear()}else{r=t.buffer.consume(e,t.decoder)}return r}function endReadable(e){var t=e._readableState;u(\"endReadable\",t.endEmitted);if(!t.endEmitted){t.ended=true;process.nextTick(endReadableNT,t,e)}}function endReadableNT(e,t){u(\"endReadableNT\",e.endEmitted,e.length);if(!e.endEmitted&&e.length===0){e.endEmitted=true;t.readable=false;t.emit(\"end\");if(e.autoDestroy){var r=t._writableState;if(!r||r.autoDestroy&&r.finished){t.destroy()}}}}if(typeof Symbol===\"function\"){Readable.from=function(e,t){if(S===undefined){S=r(727)}return S(Readable,e,t)}}function indexOf(e,t){for(var r=0,n=e.length;r<n;r++){if(e[r]===t)return r}return-1}},170:function(e,t,r){\"use strict\";e.exports=Transform;var n=r(646).q,i=n.ERR_METHOD_NOT_IMPLEMENTED,a=n.ERR_MULTIPLE_CALLBACK,o=n.ERR_TRANSFORM_ALREADY_TRANSFORMING,s=n.ERR_TRANSFORM_WITH_LENGTH_0;var f=r(403);r(782)(Transform,f);function afterTransform(e,t){var r=this._transformState;r.transforming=false;var n=r.writecb;if(n===null){return this.emit(\"error\",new a)}r.writechunk=null;r.writecb=null;if(t!=null)this.push(t);n(e);var i=this._readableState;i.reading=false;if(i.needReadable||i.length<i.highWaterMark){this._read(i.highWaterMark)}}function Transform(e){if(!(this instanceof Transform))return new Transform(e);f.call(this,e);this._transformState={afterTransform:afterTransform.bind(this),needTransform:false,transforming:false,writecb:null,writechunk:null,writeencoding:null};this._readableState.needReadable=true;this._readableState.sync=false;if(e){if(typeof e.transform===\"function\")this._transform=e.transform;if(typeof e.flush===\"function\")this._flush=e.flush}this.on(\"prefinish\",prefinish)}function prefinish(){var e=this;if(typeof this._flush===\"function\"&&!this._readableState.destroyed){this._flush((function(t,r){done(e,t,r)}))}else{done(this,null,null)}}Transform.prototype.push=function(e,t){this._transformState.needTransform=false;return f.prototype.push.call(this,e,t)};Transform.prototype._transform=function(e,t,r){r(new i(\"_transform()\"))};Transform.prototype._write=function(e,t,r){var n=this._transformState;n.writecb=r;n.writechunk=e;n.writeencoding=t;if(!n.transforming){var i=this._readableState;if(n.needTransform||i.needReadable||i.length<i.highWaterMark)this._read(i.highWaterMark)}};Transform.prototype._read=function(e){var t=this._transformState;if(t.writechunk!==null&&!t.transforming){t.transforming=true;this._transform(t.writechunk,t.writeencoding,t.afterTransform)}else{t.needTransform=true}};Transform.prototype._destroy=function(e,t){f.prototype._destroy.call(this,e,(function(e){t(e)}))};function done(e,t,r){if(t)return e.emit(\"error\",t);if(r!=null)e.push(r);if(e._writableState.length)throw new s;if(e._transformState.transforming)throw new o;return e.push(null)}},337:function(e,t,r){\"use strict\";e.exports=Writable;function WriteReq(e,t,r){this.chunk=e;this.encoding=t;this.callback=r;this.next=null}function CorkedRequest(e){var t=this;this.next=null;this.entry=null;this.finish=function(){onCorkedFinish(t,e)}}var n;Writable.WritableState=WritableState;var i={deprecate:r(769)};var a=r(678);var o=r(300).Buffer;var s=__webpack_require__.g.Uint8Array||function(){};function _uint8ArrayToBuffer(e){return o.from(e)}function _isUint8Array(e){return o.isBuffer(e)||e instanceof s}var f=r(25);var l=r(776),u=l.getHighWaterMark;var d=r(646).q,c=d.ERR_INVALID_ARG_TYPE,h=d.ERR_METHOD_NOT_IMPLEMENTED,p=d.ERR_MULTIPLE_CALLBACK,b=d.ERR_STREAM_CANNOT_PIPE,g=d.ERR_STREAM_DESTROYED,y=d.ERR_STREAM_NULL_VALUES,_=d.ERR_STREAM_WRITE_AFTER_END,v=d.ERR_UNKNOWN_ENCODING;var w=f.errorOrDestroy;r(782)(Writable,a);function nop(){}function WritableState(e,t,i){n=n||r(403);e=e||{};if(typeof i!==\"boolean\")i=t instanceof n;this.objectMode=!!e.objectMode;if(i)this.objectMode=this.objectMode||!!e.writableObjectMode;this.highWaterMark=u(this,e,\"writableHighWaterMark\",i);this.finalCalled=false;this.needDrain=false;this.ending=false;this.ended=false;this.finished=false;this.destroyed=false;var a=e.decodeStrings===false;this.decodeStrings=!a;this.defaultEncoding=e.defaultEncoding||\"utf8\";this.length=0;this.writing=false;this.corked=0;this.sync=true;this.bufferProcessing=false;this.onwrite=function(e){onwrite(t,e)};this.writecb=null;this.writelen=0;this.bufferedRequest=null;this.lastBufferedRequest=null;this.pendingcb=0;this.prefinished=false;this.errorEmitted=false;this.emitClose=e.emitClose!==false;this.autoDestroy=!!e.autoDestroy;this.bufferedRequestCount=0;this.corkedRequestsFree=new CorkedRequest(this)}WritableState.prototype.getBuffer=function getBuffer(){var e=this.bufferedRequest;var t=[];while(e){t.push(e);e=e.next}return t};(function(){try{Object.defineProperty(WritableState.prototype,\"buffer\",{get:i.deprecate((function writableStateBufferGetter(){return this.getBuffer()}),\"_writableState.buffer is deprecated. Use _writableState.getBuffer \"+\"instead.\",\"DEP0003\")})}catch(e){}})();var m;if(typeof Symbol===\"function\"&&Symbol.hasInstance&&typeof Function.prototype[Symbol.hasInstance]===\"function\"){m=Function.prototype[Symbol.hasInstance];Object.defineProperty(Writable,Symbol.hasInstance,{value:function value(e){if(m.call(this,e))return true;if(this!==Writable)return false;return e&&e._writableState instanceof WritableState}})}else{m=function realHasInstance(e){return e instanceof this}}function Writable(e){n=n||r(403);var t=this instanceof n;if(!t&&!m.call(Writable,this))return new Writable(e);this._writableState=new WritableState(e,this,t);this.writable=true;if(e){if(typeof e.write===\"function\")this._write=e.write;if(typeof e.writev===\"function\")this._writev=e.writev;if(typeof e.destroy===\"function\")this._destroy=e.destroy;if(typeof e.final===\"function\")this._final=e.final}a.call(this)}Writable.prototype.pipe=function(){w(this,new b)};function writeAfterEnd(e,t){var r=new _;w(e,r);process.nextTick(t,r)}function validChunk(e,t,r,n){var i;if(r===null){i=new y}else if(typeof r!==\"string\"&&!t.objectMode){i=new c(\"chunk\",[\"string\",\"Buffer\"],r)}if(i){w(e,i);process.nextTick(n,i);return false}return true}Writable.prototype.write=function(e,t,r){var n=this._writableState;var i=false;var a=!n.objectMode&&_isUint8Array(e);if(a&&!o.isBuffer(e)){e=_uint8ArrayToBuffer(e)}if(typeof t===\"function\"){r=t;t=null}if(a)t=\"buffer\";else if(!t)t=n.defaultEncoding;if(typeof r!==\"function\")r=nop;if(n.ending)writeAfterEnd(this,r);else if(a||validChunk(this,n,e,r)){n.pendingcb++;i=writeOrBuffer(this,n,a,e,t,r)}return i};Writable.prototype.cork=function(){this._writableState.corked++};Writable.prototype.uncork=function(){var e=this._writableState;if(e.corked){e.corked--;if(!e.writing&&!e.corked&&!e.bufferProcessing&&e.bufferedRequest)clearBuffer(this,e)}};Writable.prototype.setDefaultEncoding=function setDefaultEncoding(e){if(typeof e===\"string\")e=e.toLowerCase();if(!([\"hex\",\"utf8\",\"utf-8\",\"ascii\",\"binary\",\"base64\",\"ucs2\",\"ucs-2\",\"utf16le\",\"utf-16le\",\"raw\"].indexOf((e+\"\").toLowerCase())>-1))throw new v(e);this._writableState.defaultEncoding=e;return this};Object.defineProperty(Writable.prototype,\"writableBuffer\",{enumerable:false,get:function get(){return this._writableState&&this._writableState.getBuffer()}});function decodeChunk(e,t,r){if(!e.objectMode&&e.decodeStrings!==false&&typeof t===\"string\"){t=o.from(t,r)}return t}Object.defineProperty(Writable.prototype,\"writableHighWaterMark\",{enumerable:false,get:function get(){return this._writableState.highWaterMark}});function writeOrBuffer(e,t,r,n,i,a){if(!r){var o=decodeChunk(t,n,i);if(n!==o){r=true;i=\"buffer\";n=o}}var s=t.objectMode?1:n.length;t.length+=s;var f=t.length<t.highWaterMark;if(!f)t.needDrain=true;if(t.writing||t.corked){var l=t.lastBufferedRequest;t.lastBufferedRequest={chunk:n,encoding:i,isBuf:r,callback:a,next:null};if(l){l.next=t.lastBufferedRequest}else{t.bufferedRequest=t.lastBufferedRequest}t.bufferedRequestCount+=1}else{doWrite(e,t,false,s,n,i,a)}return f}function doWrite(e,t,r,n,i,a,o){t.writelen=n;t.writecb=o;t.writing=true;t.sync=true;if(t.destroyed)t.onwrite(new g(\"write\"));else if(r)e._writev(i,t.onwrite);else e._write(i,a,t.onwrite);t.sync=false}function onwriteError(e,t,r,n,i){--t.pendingcb;if(r){process.nextTick(i,n);process.nextTick(finishMaybe,e,t);e._writableState.errorEmitted=true;w(e,n)}else{i(n);e._writableState.errorEmitted=true;w(e,n);finishMaybe(e,t)}}function onwriteStateUpdate(e){e.writing=false;e.writecb=null;e.length-=e.writelen;e.writelen=0}function onwrite(e,t){var r=e._writableState;var n=r.sync;var i=r.writecb;if(typeof i!==\"function\")throw new p;onwriteStateUpdate(r);if(t)onwriteError(e,r,n,t,i);else{var a=needFinish(r)||e.destroyed;if(!a&&!r.corked&&!r.bufferProcessing&&r.bufferedRequest){clearBuffer(e,r)}if(n){process.nextTick(afterWrite,e,r,a,i)}else{afterWrite(e,r,a,i)}}}function afterWrite(e,t,r,n){if(!r)onwriteDrain(e,t);t.pendingcb--;n();finishMaybe(e,t)}function onwriteDrain(e,t){if(t.length===0&&t.needDrain){t.needDrain=false;e.emit(\"drain\")}}function clearBuffer(e,t){t.bufferProcessing=true;var r=t.bufferedRequest;if(e._writev&&r&&r.next){var n=t.bufferedRequestCount;var i=new Array(n);var a=t.corkedRequestsFree;a.entry=r;var o=0;var s=true;while(r){i[o]=r;if(!r.isBuf)s=false;r=r.next;o+=1}i.allBuffers=s;doWrite(e,t,true,t.length,i,\"\",a.finish);t.pendingcb++;t.lastBufferedRequest=null;if(a.next){t.corkedRequestsFree=a.next;a.next=null}else{t.corkedRequestsFree=new CorkedRequest(t)}t.bufferedRequestCount=0}else{while(r){var f=r.chunk;var l=r.encoding;var u=r.callback;var d=t.objectMode?1:f.length;doWrite(e,t,false,d,f,l,u);r=r.next;t.bufferedRequestCount--;if(t.writing){break}}if(r===null)t.lastBufferedRequest=null}t.bufferedRequest=r;t.bufferProcessing=false}Writable.prototype._write=function(e,t,r){r(new h(\"_write()\"))};Writable.prototype._writev=null;Writable.prototype.end=function(e,t,r){var n=this._writableState;if(typeof e===\"function\"){r=e;e=null;t=null}else if(typeof t===\"function\"){r=t;t=null}if(e!==null&&e!==undefined)this.write(e,t);if(n.corked){n.corked=1;this.uncork()}if(!n.ending)endWritable(this,n,r);return this};Object.defineProperty(Writable.prototype,\"writableLength\",{enumerable:false,get:function get(){return this._writableState.length}});function needFinish(e){return e.ending&&e.length===0&&e.bufferedRequest===null&&!e.finished&&!e.writing}function callFinal(e,t){e._final((function(r){t.pendingcb--;if(r){w(e,r)}t.prefinished=true;e.emit(\"prefinish\");finishMaybe(e,t)}))}function prefinish(e,t){if(!t.prefinished&&!t.finalCalled){if(typeof e._final===\"function\"&&!t.destroyed){t.pendingcb++;t.finalCalled=true;process.nextTick(callFinal,e,t)}else{t.prefinished=true;e.emit(\"prefinish\")}}}function finishMaybe(e,t){var r=needFinish(t);if(r){prefinish(e,t);if(t.pendingcb===0){t.finished=true;e.emit(\"finish\");if(t.autoDestroy){var n=e._readableState;if(!n||n.autoDestroy&&n.endEmitted){e.destroy()}}}}return r}function endWritable(e,t,r){t.ending=true;finishMaybe(e,t);if(r){if(t.finished)process.nextTick(r);else e.once(\"finish\",r)}t.ended=true;e.writable=false}function onCorkedFinish(e,t,r){var n=e.entry;e.entry=null;while(n){var i=n.callback;t.pendingcb--;i(r);n=n.next}t.corkedRequestsFree.next=e}Object.defineProperty(Writable.prototype,\"destroyed\",{enumerable:false,get:function get(){if(this._writableState===undefined){return false}return this._writableState.destroyed},set:function set(e){if(!this._writableState){return}this._writableState.destroyed=e}});Writable.prototype.destroy=f.destroy;Writable.prototype._undestroy=f.undestroy;Writable.prototype._destroy=function(e,t){t(e)}},871:function(e,t,r){\"use strict\";var n;function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}var i=r(698);var a=Symbol(\"lastResolve\");var o=Symbol(\"lastReject\");var s=Symbol(\"error\");var f=Symbol(\"ended\");var l=Symbol(\"lastPromise\");var u=Symbol(\"handlePromise\");var d=Symbol(\"stream\");function createIterResult(e,t){return{value:e,done:t}}function readAndResolve(e){var t=e[a];if(t!==null){var r=e[d].read();if(r!==null){e[l]=null;e[a]=null;e[o]=null;t(createIterResult(r,false))}}}function onReadable(e){process.nextTick(readAndResolve,e)}function wrapForNext(e,t){return function(r,n){e.then((function(){if(t[f]){r(createIterResult(undefined,true));return}t[u](r,n)}),n)}}var c=Object.getPrototypeOf((function(){}));var h=Object.setPrototypeOf((n={get stream(){return this[d]},next:function next(){var e=this;var t=this[s];if(t!==null){return Promise.reject(t)}if(this[f]){return Promise.resolve(createIterResult(undefined,true))}if(this[d].destroyed){return new Promise((function(t,r){process.nextTick((function(){if(e[s]){r(e[s])}else{t(createIterResult(undefined,true))}}))}))}var r=this[l];var n;if(r){n=new Promise(wrapForNext(r,this))}else{var i=this[d].read();if(i!==null){return Promise.resolve(createIterResult(i,false))}n=new Promise(this[u])}this[l]=n;return n}},_defineProperty(n,Symbol.asyncIterator,(function(){return this})),_defineProperty(n,\"return\",(function _return(){var e=this;return new Promise((function(t,r){e[d].destroy(null,(function(e){if(e){r(e);return}t(createIterResult(undefined,true))}))}))})),n),c);var p=function createReadableStreamAsyncIterator(e){var t;var r=Object.create(h,(t={},_defineProperty(t,d,{value:e,writable:true}),_defineProperty(t,a,{value:null,writable:true}),_defineProperty(t,o,{value:null,writable:true}),_defineProperty(t,s,{value:null,writable:true}),_defineProperty(t,f,{value:e._readableState.endEmitted,writable:true}),_defineProperty(t,u,{value:function value(e,t){var n=r[d].read();if(n){r[l]=null;r[a]=null;r[o]=null;e(createIterResult(n,false))}else{r[a]=e;r[o]=t}},writable:true}),t));r[l]=null;i(e,(function(e){if(e&&e.code!==\"ERR_STREAM_PREMATURE_CLOSE\"){var t=r[o];if(t!==null){r[l]=null;r[a]=null;r[o]=null;t(e)}r[s]=e;return}var n=r[a];if(n!==null){r[l]=null;r[a]=null;r[o]=null;n(createIterResult(undefined,true))}r[f]=true}));e.on(\"readable\",onReadable.bind(null,r));return r};e.exports=p},379:function(e,t,r){\"use strict\";function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);if(t)n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}));r.push.apply(r,n)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}function _classCallCheck(e,t){if(!(e instanceof t)){throw new TypeError(\"Cannot call a class as a function\")}}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||false;n.configurable=true;if(\"value\"in n)n.writable=true;Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){if(t)_defineProperties(e.prototype,t);if(r)_defineProperties(e,r);return e}var n=r(300),i=n.Buffer;var a=r(837),o=a.inspect;var s=o&&o.custom||\"inspect\";function copyBuffer(e,t,r){i.prototype.copy.call(e,t,r)}e.exports=function(){function BufferList(){_classCallCheck(this,BufferList);this.head=null;this.tail=null;this.length=0}_createClass(BufferList,[{key:\"push\",value:function push(e){var t={data:e,next:null};if(this.length>0)this.tail.next=t;else this.head=t;this.tail=t;++this.length}},{key:\"unshift\",value:function unshift(e){var t={data:e,next:this.head};if(this.length===0)this.tail=t;this.head=t;++this.length}},{key:\"shift\",value:function shift(){if(this.length===0)return;var e=this.head.data;if(this.length===1)this.head=this.tail=null;else this.head=this.head.next;--this.length;return e}},{key:\"clear\",value:function clear(){this.head=this.tail=null;this.length=0}},{key:\"join\",value:function join(e){if(this.length===0)return\"\";var t=this.head;var r=\"\"+t.data;while(t=t.next){r+=e+t.data}return r}},{key:\"concat\",value:function concat(e){if(this.length===0)return i.alloc(0);var t=i.allocUnsafe(e>>>0);var r=this.head;var n=0;while(r){copyBuffer(r.data,t,n);n+=r.data.length;r=r.next}return t}},{key:\"consume\",value:function consume(e,t){var r;if(e<this.head.data.length){r=this.head.data.slice(0,e);this.head.data=this.head.data.slice(e)}else if(e===this.head.data.length){r=this.shift()}else{r=t?this._getString(e):this._getBuffer(e)}return r}},{key:\"first\",value:function first(){return this.head.data}},{key:\"_getString\",value:function _getString(e){var t=this.head;var r=1;var n=t.data;e-=n.length;while(t=t.next){var i=t.data;var a=e>i.length?i.length:e;if(a===i.length)n+=i;else n+=i.slice(0,e);e-=a;if(e===0){if(a===i.length){++r;if(t.next)this.head=t.next;else this.head=this.tail=null}else{this.head=t;t.data=i.slice(a)}break}++r}this.length-=r;return n}},{key:\"_getBuffer\",value:function _getBuffer(e){var t=i.allocUnsafe(e);var r=this.head;var n=1;r.data.copy(t);e-=r.data.length;while(r=r.next){var a=r.data;var o=e>a.length?a.length:e;a.copy(t,t.length-e,0,o);e-=o;if(e===0){if(o===a.length){++n;if(r.next)this.head=r.next;else this.head=this.tail=null}else{this.head=r;r.data=a.slice(o)}break}++n}this.length-=n;return t}},{key:s,value:function value(e,t){return o(this,_objectSpread({},t,{depth:0,customInspect:false}))}}]);return BufferList}()},25:function(e){\"use strict\";function destroy(e,t){var r=this;var n=this._readableState&&this._readableState.destroyed;var i=this._writableState&&this._writableState.destroyed;if(n||i){if(t){t(e)}else if(e){if(!this._writableState){process.nextTick(emitErrorNT,this,e)}else if(!this._writableState.errorEmitted){this._writableState.errorEmitted=true;process.nextTick(emitErrorNT,this,e)}}return this}if(this._readableState){this._readableState.destroyed=true}if(this._writableState){this._writableState.destroyed=true}this._destroy(e||null,(function(e){if(!t&&e){if(!r._writableState){process.nextTick(emitErrorAndCloseNT,r,e)}else if(!r._writableState.errorEmitted){r._writableState.errorEmitted=true;process.nextTick(emitErrorAndCloseNT,r,e)}else{process.nextTick(emitCloseNT,r)}}else if(t){process.nextTick(emitCloseNT,r);t(e)}else{process.nextTick(emitCloseNT,r)}}));return this}function emitErrorAndCloseNT(e,t){emitErrorNT(e,t);emitCloseNT(e)}function emitCloseNT(e){if(e._writableState&&!e._writableState.emitClose)return;if(e._readableState&&!e._readableState.emitClose)return;e.emit(\"close\")}function undestroy(){if(this._readableState){this._readableState.destroyed=false;this._readableState.reading=false;this._readableState.ended=false;this._readableState.endEmitted=false}if(this._writableState){this._writableState.destroyed=false;this._writableState.ended=false;this._writableState.ending=false;this._writableState.finalCalled=false;this._writableState.prefinished=false;this._writableState.finished=false;this._writableState.errorEmitted=false}}function emitErrorNT(e,t){e.emit(\"error\",t)}function errorOrDestroy(e,t){var r=e._readableState;var n=e._writableState;if(r&&r.autoDestroy||n&&n.autoDestroy)e.destroy(t);else e.emit(\"error\",t)}e.exports={destroy:destroy,undestroy:undestroy,errorOrDestroy:errorOrDestroy}},698:function(e,t,r){\"use strict\";var n=r(646).q.ERR_STREAM_PREMATURE_CLOSE;function once(e){var t=false;return function(){if(t)return;t=true;for(var r=arguments.length,n=new Array(r),i=0;i<r;i++){n[i]=arguments[i]}e.apply(this,n)}}function noop(){}function isRequest(e){return e.setHeader&&typeof e.abort===\"function\"}function eos(e,t,r){if(typeof t===\"function\")return eos(e,null,t);if(!t)t={};r=once(r||noop);var i=t.readable||t.readable!==false&&e.readable;var a=t.writable||t.writable!==false&&e.writable;var o=function onlegacyfinish(){if(!e.writable)f()};var s=e._writableState&&e._writableState.finished;var f=function onfinish(){a=false;s=true;if(!i)r.call(e)};var l=e._readableState&&e._readableState.endEmitted;var u=function onend(){i=false;l=true;if(!a)r.call(e)};var d=function onerror(t){r.call(e,t)};var c=function onclose(){var t;if(i&&!l){if(!e._readableState||!e._readableState.ended)t=new n;return r.call(e,t)}if(a&&!s){if(!e._writableState||!e._writableState.ended)t=new n;return r.call(e,t)}};var h=function onrequest(){e.req.on(\"finish\",f)};if(isRequest(e)){e.on(\"complete\",f);e.on(\"abort\",c);if(e.req)h();else e.on(\"request\",h)}else if(a&&!e._writableState){e.on(\"end\",o);e.on(\"close\",o)}e.on(\"end\",u);e.on(\"finish\",f);if(t.error!==false)e.on(\"error\",d);e.on(\"close\",c);return function(){e.removeListener(\"complete\",f);e.removeListener(\"abort\",c);e.removeListener(\"request\",h);if(e.req)e.req.removeListener(\"finish\",f);e.removeListener(\"end\",o);e.removeListener(\"close\",o);e.removeListener(\"finish\",f);e.removeListener(\"end\",u);e.removeListener(\"error\",d);e.removeListener(\"close\",c)}}e.exports=eos},727:function(e,t,r){\"use strict\";function asyncGeneratorStep(e,t,r,n,i,a,o){try{var s=e[a](o);var f=s.value}catch(e){r(e);return}if(s.done){t(f)}else{Promise.resolve(f).then(n,i)}}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise((function(n,i){var a=e.apply(t,r);function _next(e){asyncGeneratorStep(a,n,i,_next,_throw,\"next\",e)}function _throw(e){asyncGeneratorStep(a,n,i,_next,_throw,\"throw\",e)}_next(undefined)}))}}function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);if(t)n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}));r.push.apply(r,n)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=arguments[t]!=null?arguments[t]:{};if(t%2){ownKeys(Object(r),true).forEach((function(t){_defineProperty(e,t,r[t])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(e,Object.getOwnPropertyDescriptors(r))}else{ownKeys(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}}return e}function _defineProperty(e,t,r){if(t in e){Object.defineProperty(e,t,{value:r,enumerable:true,configurable:true,writable:true})}else{e[t]=r}return e}var n=r(646).q.ERR_INVALID_ARG_TYPE;function from(e,t,r){var i;if(t&&typeof t.next===\"function\"){i=t}else if(t&&t[Symbol.asyncIterator])i=t[Symbol.asyncIterator]();else if(t&&t[Symbol.iterator])i=t[Symbol.iterator]();else throw new n(\"iterable\",[\"Iterable\"],t);var a=new e(_objectSpread({objectMode:true},r));var o=false;a._read=function(){if(!o){o=true;next()}};function next(){return _next2.apply(this,arguments)}function _next2(){_next2=_asyncToGenerator((function*(){try{var e=yield i.next(),t=e.value,r=e.done;if(r){a.push(null)}else if(a.push(yield t)){next()}else{o=false}}catch(e){a.destroy(e)}}));return _next2.apply(this,arguments)}return a}e.exports=from},442:function(e,t,r){\"use strict\";var n;function once(e){var t=false;return function(){if(t)return;t=true;e.apply(void 0,arguments)}}var i=r(646).q,a=i.ERR_MISSING_ARGS,o=i.ERR_STREAM_DESTROYED;function noop(e){if(e)throw e}function isRequest(e){return e.setHeader&&typeof e.abort===\"function\"}function destroyer(e,t,i,a){a=once(a);var s=false;e.on(\"close\",(function(){s=true}));if(n===undefined)n=r(698);n(e,{readable:t,writable:i},(function(e){if(e)return a(e);s=true;a()}));var f=false;return function(t){if(s)return;if(f)return;f=true;if(isRequest(e))return e.abort();if(typeof e.destroy===\"function\")return e.destroy();a(t||new o(\"pipe\"))}}function call(e){e()}function pipe(e,t){return e.pipe(t)}function popCallback(e){if(!e.length)return noop;if(typeof e[e.length-1]!==\"function\")return noop;return e.pop()}function pipeline(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++){t[r]=arguments[r]}var n=popCallback(t);if(Array.isArray(t[0]))t=t[0];if(t.length<2){throw new a(\"streams\")}var i;var o=t.map((function(e,r){var a=r<t.length-1;var s=r>0;return destroyer(e,a,s,(function(e){if(!i)i=e;if(e)o.forEach(call);if(a)return;o.forEach(call);n(i)}))}));return t.reduce(pipe)}e.exports=pipeline},776:function(e,t,r){\"use strict\";var n=r(646).q.ERR_INVALID_OPT_VALUE;function highWaterMarkFrom(e,t,r){return e.highWaterMark!=null?e.highWaterMark:t?e[r]:null}function getHighWaterMark(e,t,r,i){var a=highWaterMarkFrom(t,i,r);if(a!=null){if(!(isFinite(a)&&Math.floor(a)===a)||a<0){var o=i?r:\"highWaterMark\";throw new n(o,a)}return Math.floor(a)}return e.objectMode?16:16*1024}e.exports={getHighWaterMark:getHighWaterMark}},678:function(e,t,r){e.exports=r(781)},55:function(e,t,r){var n=r(300);var i=n.Buffer;function copyProps(e,t){for(var r in e){t[r]=e[r]}}if(i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow){e.exports=n}else{copyProps(n,t);t.Buffer=SafeBuffer}function SafeBuffer(e,t,r){return i(e,t,r)}SafeBuffer.prototype=Object.create(i.prototype);copyProps(i,SafeBuffer);SafeBuffer.from=function(e,t,r){if(typeof e===\"number\"){throw new TypeError(\"Argument must not be a number\")}return i(e,t,r)};SafeBuffer.alloc=function(e,t,r){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}var n=i(e);if(t!==undefined){if(typeof r===\"string\"){n.fill(t,r)}else{n.fill(t)}}else{n.fill(0)}return n};SafeBuffer.allocUnsafe=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return i(e)};SafeBuffer.allocUnsafeSlow=function(e){if(typeof e!==\"number\"){throw new TypeError(\"Argument must be a number\")}return n.SlowBuffer(e)}},173:function(e,t,r){e.exports=Stream;var n=r(361).EventEmitter;var i=r(782);i(Stream,n);Stream.Readable=r(709);Stream.Writable=r(337);Stream.Duplex=r(403);Stream.Transform=r(170);Stream.PassThrough=r(889);Stream.finished=r(698);Stream.pipeline=r(442);Stream.Stream=Stream;function Stream(){n.call(this)}Stream.prototype.pipe=function(e,t){var r=this;function ondata(t){if(e.writable){if(false===e.write(t)&&r.pause){r.pause()}}}r.on(\"data\",ondata);function ondrain(){if(r.readable&&r.resume){r.resume()}}e.on(\"drain\",ondrain);if(!e._isStdio&&(!t||t.end!==false)){r.on(\"end\",onend);r.on(\"close\",onclose)}var i=false;function onend(){if(i)return;i=true;e.end()}function onclose(){if(i)return;i=true;if(typeof e.destroy===\"function\")e.destroy()}function onerror(e){cleanup();if(n.listenerCount(this,\"error\")===0){throw e}}r.on(\"error\",onerror);e.on(\"error\",onerror);function cleanup(){r.removeListener(\"data\",ondata);e.removeListener(\"drain\",ondrain);r.removeListener(\"end\",onend);r.removeListener(\"close\",onclose);r.removeListener(\"error\",onerror);e.removeListener(\"error\",onerror);r.removeListener(\"end\",cleanup);r.removeListener(\"close\",cleanup);e.removeListener(\"close\",cleanup)}r.on(\"end\",cleanup);r.on(\"close\",cleanup);e.on(\"close\",cleanup);e.emit(\"pipe\",r);return e}},704:function(e,t,r){\"use strict\";var n=r(55).Buffer;var i=n.isEncoding||function(e){e=\"\"+e;switch(e&&e.toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":case\"raw\":return true;default:return false}};function _normalizeEncoding(e){if(!e)return\"utf8\";var t;while(true){switch(e){case\"utf8\":case\"utf-8\":return\"utf8\";case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return\"utf16le\";case\"latin1\":case\"binary\":return\"latin1\";case\"base64\":case\"ascii\":case\"hex\":return e;default:if(t)return;e=(\"\"+e).toLowerCase();t=true}}}function normalizeEncoding(e){var t=_normalizeEncoding(e);if(typeof t!==\"string\"&&(n.isEncoding===i||!i(e)))throw new Error(\"Unknown encoding: \"+e);return t||e}t.s=StringDecoder;function StringDecoder(e){this.encoding=normalizeEncoding(e);var t;switch(this.encoding){case\"utf16le\":this.text=utf16Text;this.end=utf16End;t=4;break;case\"utf8\":this.fillLast=utf8FillLast;t=4;break;case\"base64\":this.text=base64Text;this.end=base64End;t=3;break;default:this.write=simpleWrite;this.end=simpleEnd;return}this.lastNeed=0;this.lastTotal=0;this.lastChar=n.allocUnsafe(t)}StringDecoder.prototype.write=function(e){if(e.length===0)return\"\";var t;var r;if(this.lastNeed){t=this.fillLast(e);if(t===undefined)return\"\";r=this.lastNeed;this.lastNeed=0}else{r=0}if(r<e.length)return t?t+this.text(e,r):this.text(e,r);return t||\"\"};StringDecoder.prototype.end=utf8End;StringDecoder.prototype.text=utf8Text;StringDecoder.prototype.fillLast=function(e){if(this.lastNeed<=e.length){e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length);this.lastNeed-=e.length};function utf8CheckByte(e){if(e<=127)return 0;else if(e>>5===6)return 2;else if(e>>4===14)return 3;else if(e>>3===30)return 4;return e>>6===2?-1:-2}function utf8CheckIncomplete(e,t,r){var n=t.length-1;if(n<r)return 0;var i=utf8CheckByte(t[n]);if(i>=0){if(i>0)e.lastNeed=i-1;return i}if(--n<r||i===-2)return 0;i=utf8CheckByte(t[n]);if(i>=0){if(i>0)e.lastNeed=i-2;return i}if(--n<r||i===-2)return 0;i=utf8CheckByte(t[n]);if(i>=0){if(i>0){if(i===2)i=0;else e.lastNeed=i-3}return i}return 0}function utf8CheckExtraBytes(e,t,r){if((t[0]&192)!==128){e.lastNeed=0;return\"�\"}if(e.lastNeed>1&&t.length>1){if((t[1]&192)!==128){e.lastNeed=1;return\"�\"}if(e.lastNeed>2&&t.length>2){if((t[2]&192)!==128){e.lastNeed=2;return\"�\"}}}}function utf8FillLast(e){var t=this.lastTotal-this.lastNeed;var r=utf8CheckExtraBytes(this,e,t);if(r!==undefined)return r;if(this.lastNeed<=e.length){e.copy(this.lastChar,t,0,this.lastNeed);return this.lastChar.toString(this.encoding,0,this.lastTotal)}e.copy(this.lastChar,t,0,e.length);this.lastNeed-=e.length}function utf8Text(e,t){var r=utf8CheckIncomplete(this,e,t);if(!this.lastNeed)return e.toString(\"utf8\",t);this.lastTotal=r;var n=e.length-(r-this.lastNeed);e.copy(this.lastChar,0,n);return e.toString(\"utf8\",t,n)}function utf8End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed)return t+\"�\";return t}function utf16Text(e,t){if((e.length-t)%2===0){var r=e.toString(\"utf16le\",t);if(r){var n=r.charCodeAt(r.length-1);if(n>=55296&&n<=56319){this.lastNeed=2;this.lastTotal=4;this.lastChar[0]=e[e.length-2];this.lastChar[1]=e[e.length-1];return r.slice(0,-1)}}return r}this.lastNeed=1;this.lastTotal=2;this.lastChar[0]=e[e.length-1];return e.toString(\"utf16le\",t,e.length-1)}function utf16End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed){var r=this.lastTotal-this.lastNeed;return t+this.lastChar.toString(\"utf16le\",0,r)}return t}function base64Text(e,t){var r=(e.length-t)%3;if(r===0)return e.toString(\"base64\",t);this.lastNeed=3-r;this.lastTotal=3;if(r===1){this.lastChar[0]=e[e.length-1]}else{this.lastChar[0]=e[e.length-2];this.lastChar[1]=e[e.length-1]}return e.toString(\"base64\",t,e.length-r)}function base64End(e){var t=e&&e.length?this.write(e):\"\";if(this.lastNeed)return t+this.lastChar.toString(\"base64\",0,3-this.lastNeed);return t}function simpleWrite(e){return e.toString(this.encoding)}function simpleEnd(e){return e&&e.length?this.write(e):\"\"}},769:function(e){e.exports=deprecate;function deprecate(e,t){if(config(\"noDeprecation\")){return e}var r=false;function deprecated(){if(!r){if(config(\"throwDeprecation\")){throw new Error(t)}else if(config(\"traceDeprecation\")){console.trace(t)}else{console.warn(t)}r=true}return e.apply(this,arguments)}return deprecated}function config(e){try{if(!__webpack_require__.g.localStorage)return false}catch(e){return false}var t=__webpack_require__.g.localStorage[e];if(null==t)return false;return String(t).toLowerCase()===\"true\"}},300:function(e){\"use strict\";e.exports=__webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")},361:function(e){\"use strict\";e.exports=__webpack_require__(/*! events */ \"(app-pages-browser)/./node_modules/next/dist/compiled/events/events.js\")},781:function(e){\"use strict\";e.exports=(__webpack_require__(/*! events */ \"(app-pages-browser)/./node_modules/next/dist/compiled/events/events.js\").EventEmitter)},837:function(e){\"use strict\";e.exports=__webpack_require__(/*! util */ \"(app-pages-browser)/./node_modules/next/dist/compiled/util/util.js\")}};var t={};function __nccwpck_require__(r){var n=t[r];if(n!==undefined){return n.exports}var i=t[r]={exports:{}};var a=true;try{e[r](i,i.exports,__nccwpck_require__);a=false}finally{if(a)delete t[r]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var r=__nccwpck_require__(173);module.exports=r})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/stream-browserify/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/util/util.js":
/*!******************************************************!*\
  !*** ./node_modules/next/dist/compiled/util/util.js ***!
  \******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n(function(){var r={992:function(r){r.exports=function(r,t,o){if(r.filter)return r.filter(t,o);if(void 0===r||null===r)throw new TypeError;if(\"function\"!=typeof t)throw new TypeError;var n=[];for(var i=0;i<r.length;i++){if(!e.call(r,i))continue;var a=r[i];if(t.call(o,a,i,r))n.push(a)}return n};var e=Object.prototype.hasOwnProperty},256:function(r,e,t){\"use strict\";var o=t(925);var n=t(139);var i=n(o(\"String.prototype.indexOf\"));r.exports=function callBoundIntrinsic(r,e){var t=o(r,!!e);if(typeof t===\"function\"&&i(r,\".prototype.\")>-1){return n(t)}return t}},139:function(r,e,t){\"use strict\";var o=t(174);var n=t(925);var i=n(\"%Function.prototype.apply%\");var a=n(\"%Function.prototype.call%\");var y=n(\"%Reflect.apply%\",true)||o.call(a,i);var f=n(\"%Object.getOwnPropertyDescriptor%\",true);var p=n(\"%Object.defineProperty%\",true);var u=n(\"%Math.max%\");if(p){try{p({},\"a\",{value:1})}catch(r){p=null}}r.exports=function callBind(r){var e=y(o,a,arguments);if(f&&p){var t=f(e,\"length\");if(t.configurable){p(e,\"length\",{value:1+u(0,r.length-(arguments.length-1))})}}return e};var s=function applyBind(){return y(o,i,arguments)};if(p){p(r.exports,\"apply\",{value:s})}else{r.exports.apply=s}},144:function(r){var e=Object.prototype.hasOwnProperty;var t=Object.prototype.toString;r.exports=function forEach(r,o,n){if(t.call(o)!==\"[object Function]\"){throw new TypeError(\"iterator must be a function\")}var i=r.length;if(i===+i){for(var a=0;a<i;a++){o.call(n,r[a],a,r)}}else{for(var y in r){if(e.call(r,y)){o.call(n,r[y],y,r)}}}}},426:function(r){\"use strict\";var e=\"Function.prototype.bind called on incompatible \";var t=Array.prototype.slice;var o=Object.prototype.toString;var n=\"[object Function]\";r.exports=function bind(r){var i=this;if(typeof i!==\"function\"||o.call(i)!==n){throw new TypeError(e+i)}var a=t.call(arguments,1);var y;var binder=function(){if(this instanceof y){var e=i.apply(this,a.concat(t.call(arguments)));if(Object(e)===e){return e}return this}else{return i.apply(r,a.concat(t.call(arguments)))}};var f=Math.max(0,i.length-a.length);var p=[];for(var u=0;u<f;u++){p.push(\"$\"+u)}y=Function(\"binder\",\"return function (\"+p.join(\",\")+\"){ return binder.apply(this,arguments); }\")(binder);if(i.prototype){var s=function Empty(){};s.prototype=i.prototype;y.prototype=new s;s.prototype=null}return y}},174:function(r,e,t){\"use strict\";var o=t(426);r.exports=Function.prototype.bind||o},500:function(r,e,t){\"use strict\";var o;var n=SyntaxError;var i=Function;var a=TypeError;var getEvalledConstructor=function(r){try{return i('\"use strict\"; return ('+r+\").constructor;\")()}catch(r){}};var y=Object.getOwnPropertyDescriptor;if(y){try{y({},\"\")}catch(r){y=null}}var throwTypeError=function(){throw new a};var f=y?function(){try{arguments.callee;return throwTypeError}catch(r){try{return y(arguments,\"callee\").get}catch(r){return throwTypeError}}}():throwTypeError;var p=t(115)();var u=Object.getPrototypeOf||function(r){return r.__proto__};var s={};var c=typeof Uint8Array===\"undefined\"?o:u(Uint8Array);var l={\"%AggregateError%\":typeof AggregateError===\"undefined\"?o:AggregateError,\"%Array%\":Array,\"%ArrayBuffer%\":typeof ArrayBuffer===\"undefined\"?o:ArrayBuffer,\"%ArrayIteratorPrototype%\":p?u([][Symbol.iterator]()):o,\"%AsyncFromSyncIteratorPrototype%\":o,\"%AsyncFunction%\":s,\"%AsyncGenerator%\":s,\"%AsyncGeneratorFunction%\":s,\"%AsyncIteratorPrototype%\":s,\"%Atomics%\":typeof Atomics===\"undefined\"?o:Atomics,\"%BigInt%\":typeof BigInt===\"undefined\"?o:BigInt,\"%Boolean%\":Boolean,\"%DataView%\":typeof DataView===\"undefined\"?o:DataView,\"%Date%\":Date,\"%decodeURI%\":decodeURI,\"%decodeURIComponent%\":decodeURIComponent,\"%encodeURI%\":encodeURI,\"%encodeURIComponent%\":encodeURIComponent,\"%Error%\":Error,\"%eval%\":eval,\"%EvalError%\":EvalError,\"%Float32Array%\":typeof Float32Array===\"undefined\"?o:Float32Array,\"%Float64Array%\":typeof Float64Array===\"undefined\"?o:Float64Array,\"%FinalizationRegistry%\":typeof FinalizationRegistry===\"undefined\"?o:FinalizationRegistry,\"%Function%\":i,\"%GeneratorFunction%\":s,\"%Int8Array%\":typeof Int8Array===\"undefined\"?o:Int8Array,\"%Int16Array%\":typeof Int16Array===\"undefined\"?o:Int16Array,\"%Int32Array%\":typeof Int32Array===\"undefined\"?o:Int32Array,\"%isFinite%\":isFinite,\"%isNaN%\":isNaN,\"%IteratorPrototype%\":p?u(u([][Symbol.iterator]())):o,\"%JSON%\":typeof JSON===\"object\"?JSON:o,\"%Map%\":typeof Map===\"undefined\"?o:Map,\"%MapIteratorPrototype%\":typeof Map===\"undefined\"||!p?o:u((new Map)[Symbol.iterator]()),\"%Math%\":Math,\"%Number%\":Number,\"%Object%\":Object,\"%parseFloat%\":parseFloat,\"%parseInt%\":parseInt,\"%Promise%\":typeof Promise===\"undefined\"?o:Promise,\"%Proxy%\":typeof Proxy===\"undefined\"?o:Proxy,\"%RangeError%\":RangeError,\"%ReferenceError%\":ReferenceError,\"%Reflect%\":typeof Reflect===\"undefined\"?o:Reflect,\"%RegExp%\":RegExp,\"%Set%\":typeof Set===\"undefined\"?o:Set,\"%SetIteratorPrototype%\":typeof Set===\"undefined\"||!p?o:u((new Set)[Symbol.iterator]()),\"%SharedArrayBuffer%\":typeof SharedArrayBuffer===\"undefined\"?o:SharedArrayBuffer,\"%String%\":String,\"%StringIteratorPrototype%\":p?u(\"\"[Symbol.iterator]()):o,\"%Symbol%\":p?Symbol:o,\"%SyntaxError%\":n,\"%ThrowTypeError%\":f,\"%TypedArray%\":c,\"%TypeError%\":a,\"%Uint8Array%\":typeof Uint8Array===\"undefined\"?o:Uint8Array,\"%Uint8ClampedArray%\":typeof Uint8ClampedArray===\"undefined\"?o:Uint8ClampedArray,\"%Uint16Array%\":typeof Uint16Array===\"undefined\"?o:Uint16Array,\"%Uint32Array%\":typeof Uint32Array===\"undefined\"?o:Uint32Array,\"%URIError%\":URIError,\"%WeakMap%\":typeof WeakMap===\"undefined\"?o:WeakMap,\"%WeakRef%\":typeof WeakRef===\"undefined\"?o:WeakRef,\"%WeakSet%\":typeof WeakSet===\"undefined\"?o:WeakSet};var d=function doEval(r){var e;if(r===\"%AsyncFunction%\"){e=getEvalledConstructor(\"async function () {}\")}else if(r===\"%GeneratorFunction%\"){e=getEvalledConstructor(\"function* () {}\")}else if(r===\"%AsyncGeneratorFunction%\"){e=getEvalledConstructor(\"async function* () {}\")}else if(r===\"%AsyncGenerator%\"){var t=doEval(\"%AsyncGeneratorFunction%\");if(t){e=t.prototype}}else if(r===\"%AsyncIteratorPrototype%\"){var o=doEval(\"%AsyncGenerator%\");if(o){e=u(o.prototype)}}l[r]=e;return e};var g={\"%ArrayBufferPrototype%\":[\"ArrayBuffer\",\"prototype\"],\"%ArrayPrototype%\":[\"Array\",\"prototype\"],\"%ArrayProto_entries%\":[\"Array\",\"prototype\",\"entries\"],\"%ArrayProto_forEach%\":[\"Array\",\"prototype\",\"forEach\"],\"%ArrayProto_keys%\":[\"Array\",\"prototype\",\"keys\"],\"%ArrayProto_values%\":[\"Array\",\"prototype\",\"values\"],\"%AsyncFunctionPrototype%\":[\"AsyncFunction\",\"prototype\"],\"%AsyncGenerator%\":[\"AsyncGeneratorFunction\",\"prototype\"],\"%AsyncGeneratorPrototype%\":[\"AsyncGeneratorFunction\",\"prototype\",\"prototype\"],\"%BooleanPrototype%\":[\"Boolean\",\"prototype\"],\"%DataViewPrototype%\":[\"DataView\",\"prototype\"],\"%DatePrototype%\":[\"Date\",\"prototype\"],\"%ErrorPrototype%\":[\"Error\",\"prototype\"],\"%EvalErrorPrototype%\":[\"EvalError\",\"prototype\"],\"%Float32ArrayPrototype%\":[\"Float32Array\",\"prototype\"],\"%Float64ArrayPrototype%\":[\"Float64Array\",\"prototype\"],\"%FunctionPrototype%\":[\"Function\",\"prototype\"],\"%Generator%\":[\"GeneratorFunction\",\"prototype\"],\"%GeneratorPrototype%\":[\"GeneratorFunction\",\"prototype\",\"prototype\"],\"%Int8ArrayPrototype%\":[\"Int8Array\",\"prototype\"],\"%Int16ArrayPrototype%\":[\"Int16Array\",\"prototype\"],\"%Int32ArrayPrototype%\":[\"Int32Array\",\"prototype\"],\"%JSONParse%\":[\"JSON\",\"parse\"],\"%JSONStringify%\":[\"JSON\",\"stringify\"],\"%MapPrototype%\":[\"Map\",\"prototype\"],\"%NumberPrototype%\":[\"Number\",\"prototype\"],\"%ObjectPrototype%\":[\"Object\",\"prototype\"],\"%ObjProto_toString%\":[\"Object\",\"prototype\",\"toString\"],\"%ObjProto_valueOf%\":[\"Object\",\"prototype\",\"valueOf\"],\"%PromisePrototype%\":[\"Promise\",\"prototype\"],\"%PromiseProto_then%\":[\"Promise\",\"prototype\",\"then\"],\"%Promise_all%\":[\"Promise\",\"all\"],\"%Promise_reject%\":[\"Promise\",\"reject\"],\"%Promise_resolve%\":[\"Promise\",\"resolve\"],\"%RangeErrorPrototype%\":[\"RangeError\",\"prototype\"],\"%ReferenceErrorPrototype%\":[\"ReferenceError\",\"prototype\"],\"%RegExpPrototype%\":[\"RegExp\",\"prototype\"],\"%SetPrototype%\":[\"Set\",\"prototype\"],\"%SharedArrayBufferPrototype%\":[\"SharedArrayBuffer\",\"prototype\"],\"%StringPrototype%\":[\"String\",\"prototype\"],\"%SymbolPrototype%\":[\"Symbol\",\"prototype\"],\"%SyntaxErrorPrototype%\":[\"SyntaxError\",\"prototype\"],\"%TypedArrayPrototype%\":[\"TypedArray\",\"prototype\"],\"%TypeErrorPrototype%\":[\"TypeError\",\"prototype\"],\"%Uint8ArrayPrototype%\":[\"Uint8Array\",\"prototype\"],\"%Uint8ClampedArrayPrototype%\":[\"Uint8ClampedArray\",\"prototype\"],\"%Uint16ArrayPrototype%\":[\"Uint16Array\",\"prototype\"],\"%Uint32ArrayPrototype%\":[\"Uint32Array\",\"prototype\"],\"%URIErrorPrototype%\":[\"URIError\",\"prototype\"],\"%WeakMapPrototype%\":[\"WeakMap\",\"prototype\"],\"%WeakSetPrototype%\":[\"WeakSet\",\"prototype\"]};var v=t(174);var b=t(101);var A=v.call(Function.call,Array.prototype.concat);var m=v.call(Function.apply,Array.prototype.splice);var S=v.call(Function.call,String.prototype.replace);var h=v.call(Function.call,String.prototype.slice);var P=v.call(Function.call,RegExp.prototype.exec);var O=/[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;var w=/\\\\(\\\\)?/g;var j=function stringToPath(r){var e=h(r,0,1);var t=h(r,-1);if(e===\"%\"&&t!==\"%\"){throw new n(\"invalid intrinsic syntax, expected closing `%`\")}else if(t===\"%\"&&e!==\"%\"){throw new n(\"invalid intrinsic syntax, expected opening `%`\")}var o=[];S(r,O,(function(r,e,t,n){o[o.length]=t?S(n,w,\"$1\"):e||r}));return o};var E=function getBaseIntrinsic(r,e){var t=r;var o;if(b(g,t)){o=g[t];t=\"%\"+o[0]+\"%\"}if(b(l,t)){var i=l[t];if(i===s){i=d(t)}if(typeof i===\"undefined\"&&!e){throw new a(\"intrinsic \"+r+\" exists, but is not available. Please file an issue!\")}return{alias:o,name:t,value:i}}throw new n(\"intrinsic \"+r+\" does not exist!\")};r.exports=function GetIntrinsic(r,e){if(typeof r!==\"string\"||r.length===0){throw new a(\"intrinsic name must be a non-empty string\")}if(arguments.length>1&&typeof e!==\"boolean\"){throw new a('\"allowMissing\" argument must be a boolean')}if(P(/^%?[^%]*%?$/g,r)===null){throw new n(\"`%` may not be present anywhere but at the beginning and end of the intrinsic name\")}var t=j(r);var i=t.length>0?t[0]:\"\";var f=E(\"%\"+i+\"%\",e);var p=f.name;var u=f.value;var s=false;var c=f.alias;if(c){i=c[0];m(t,A([0,1],c))}for(var d=1,g=true;d<t.length;d+=1){var v=t[d];var S=h(v,0,1);var O=h(v,-1);if((S==='\"'||S===\"'\"||S===\"`\"||(O==='\"'||O===\"'\"||O===\"`\"))&&S!==O){throw new n(\"property names with quotes must have matching quotes\")}if(v===\"constructor\"||!g){s=true}i+=\".\"+v;p=\"%\"+i+\"%\";if(b(l,p)){u=l[p]}else if(u!=null){if(!(v in u)){if(!e){throw new a(\"base intrinsic for \"+r+\" exists, but the property is not available.\")}return void o}if(y&&d+1>=t.length){var w=y(u,v);g=!!w;if(g&&\"get\"in w&&!(\"originalValue\"in w.get)){u=w.get}else{u=u[v]}}else{g=b(u,v);u=u[v]}if(g&&!s){l[p]=u}}}return u}},925:function(r,e,t){\"use strict\";var o;var n=SyntaxError;var i=Function;var a=TypeError;var getEvalledConstructor=function(r){try{return i('\"use strict\"; return ('+r+\").constructor;\")()}catch(r){}};var y=Object.getOwnPropertyDescriptor;if(y){try{y({},\"\")}catch(r){y=null}}var throwTypeError=function(){throw new a};var f=y?function(){try{arguments.callee;return throwTypeError}catch(r){try{return y(arguments,\"callee\").get}catch(r){return throwTypeError}}}():throwTypeError;var p=t(115)();var u=t(504)();var s=Object.getPrototypeOf||(u?function(r){return r.__proto__}:null);var c={};var l=typeof Uint8Array===\"undefined\"||!s?o:s(Uint8Array);var d={\"%AggregateError%\":typeof AggregateError===\"undefined\"?o:AggregateError,\"%Array%\":Array,\"%ArrayBuffer%\":typeof ArrayBuffer===\"undefined\"?o:ArrayBuffer,\"%ArrayIteratorPrototype%\":p&&s?s([][Symbol.iterator]()):o,\"%AsyncFromSyncIteratorPrototype%\":o,\"%AsyncFunction%\":c,\"%AsyncGenerator%\":c,\"%AsyncGeneratorFunction%\":c,\"%AsyncIteratorPrototype%\":c,\"%Atomics%\":typeof Atomics===\"undefined\"?o:Atomics,\"%BigInt%\":typeof BigInt===\"undefined\"?o:BigInt,\"%BigInt64Array%\":typeof BigInt64Array===\"undefined\"?o:BigInt64Array,\"%BigUint64Array%\":typeof BigUint64Array===\"undefined\"?o:BigUint64Array,\"%Boolean%\":Boolean,\"%DataView%\":typeof DataView===\"undefined\"?o:DataView,\"%Date%\":Date,\"%decodeURI%\":decodeURI,\"%decodeURIComponent%\":decodeURIComponent,\"%encodeURI%\":encodeURI,\"%encodeURIComponent%\":encodeURIComponent,\"%Error%\":Error,\"%eval%\":eval,\"%EvalError%\":EvalError,\"%Float32Array%\":typeof Float32Array===\"undefined\"?o:Float32Array,\"%Float64Array%\":typeof Float64Array===\"undefined\"?o:Float64Array,\"%FinalizationRegistry%\":typeof FinalizationRegistry===\"undefined\"?o:FinalizationRegistry,\"%Function%\":i,\"%GeneratorFunction%\":c,\"%Int8Array%\":typeof Int8Array===\"undefined\"?o:Int8Array,\"%Int16Array%\":typeof Int16Array===\"undefined\"?o:Int16Array,\"%Int32Array%\":typeof Int32Array===\"undefined\"?o:Int32Array,\"%isFinite%\":isFinite,\"%isNaN%\":isNaN,\"%IteratorPrototype%\":p&&s?s(s([][Symbol.iterator]())):o,\"%JSON%\":typeof JSON===\"object\"?JSON:o,\"%Map%\":typeof Map===\"undefined\"?o:Map,\"%MapIteratorPrototype%\":typeof Map===\"undefined\"||!p||!s?o:s((new Map)[Symbol.iterator]()),\"%Math%\":Math,\"%Number%\":Number,\"%Object%\":Object,\"%parseFloat%\":parseFloat,\"%parseInt%\":parseInt,\"%Promise%\":typeof Promise===\"undefined\"?o:Promise,\"%Proxy%\":typeof Proxy===\"undefined\"?o:Proxy,\"%RangeError%\":RangeError,\"%ReferenceError%\":ReferenceError,\"%Reflect%\":typeof Reflect===\"undefined\"?o:Reflect,\"%RegExp%\":RegExp,\"%Set%\":typeof Set===\"undefined\"?o:Set,\"%SetIteratorPrototype%\":typeof Set===\"undefined\"||!p||!s?o:s((new Set)[Symbol.iterator]()),\"%SharedArrayBuffer%\":typeof SharedArrayBuffer===\"undefined\"?o:SharedArrayBuffer,\"%String%\":String,\"%StringIteratorPrototype%\":p&&s?s(\"\"[Symbol.iterator]()):o,\"%Symbol%\":p?Symbol:o,\"%SyntaxError%\":n,\"%ThrowTypeError%\":f,\"%TypedArray%\":l,\"%TypeError%\":a,\"%Uint8Array%\":typeof Uint8Array===\"undefined\"?o:Uint8Array,\"%Uint8ClampedArray%\":typeof Uint8ClampedArray===\"undefined\"?o:Uint8ClampedArray,\"%Uint16Array%\":typeof Uint16Array===\"undefined\"?o:Uint16Array,\"%Uint32Array%\":typeof Uint32Array===\"undefined\"?o:Uint32Array,\"%URIError%\":URIError,\"%WeakMap%\":typeof WeakMap===\"undefined\"?o:WeakMap,\"%WeakRef%\":typeof WeakRef===\"undefined\"?o:WeakRef,\"%WeakSet%\":typeof WeakSet===\"undefined\"?o:WeakSet};if(s){try{null.error}catch(r){var g=s(s(r));d[\"%Error.prototype%\"]=g}}var v=function doEval(r){var e;if(r===\"%AsyncFunction%\"){e=getEvalledConstructor(\"async function () {}\")}else if(r===\"%GeneratorFunction%\"){e=getEvalledConstructor(\"function* () {}\")}else if(r===\"%AsyncGeneratorFunction%\"){e=getEvalledConstructor(\"async function* () {}\")}else if(r===\"%AsyncGenerator%\"){var t=doEval(\"%AsyncGeneratorFunction%\");if(t){e=t.prototype}}else if(r===\"%AsyncIteratorPrototype%\"){var o=doEval(\"%AsyncGenerator%\");if(o&&s){e=s(o.prototype)}}d[r]=e;return e};var b={\"%ArrayBufferPrototype%\":[\"ArrayBuffer\",\"prototype\"],\"%ArrayPrototype%\":[\"Array\",\"prototype\"],\"%ArrayProto_entries%\":[\"Array\",\"prototype\",\"entries\"],\"%ArrayProto_forEach%\":[\"Array\",\"prototype\",\"forEach\"],\"%ArrayProto_keys%\":[\"Array\",\"prototype\",\"keys\"],\"%ArrayProto_values%\":[\"Array\",\"prototype\",\"values\"],\"%AsyncFunctionPrototype%\":[\"AsyncFunction\",\"prototype\"],\"%AsyncGenerator%\":[\"AsyncGeneratorFunction\",\"prototype\"],\"%AsyncGeneratorPrototype%\":[\"AsyncGeneratorFunction\",\"prototype\",\"prototype\"],\"%BooleanPrototype%\":[\"Boolean\",\"prototype\"],\"%DataViewPrototype%\":[\"DataView\",\"prototype\"],\"%DatePrototype%\":[\"Date\",\"prototype\"],\"%ErrorPrototype%\":[\"Error\",\"prototype\"],\"%EvalErrorPrototype%\":[\"EvalError\",\"prototype\"],\"%Float32ArrayPrototype%\":[\"Float32Array\",\"prototype\"],\"%Float64ArrayPrototype%\":[\"Float64Array\",\"prototype\"],\"%FunctionPrototype%\":[\"Function\",\"prototype\"],\"%Generator%\":[\"GeneratorFunction\",\"prototype\"],\"%GeneratorPrototype%\":[\"GeneratorFunction\",\"prototype\",\"prototype\"],\"%Int8ArrayPrototype%\":[\"Int8Array\",\"prototype\"],\"%Int16ArrayPrototype%\":[\"Int16Array\",\"prototype\"],\"%Int32ArrayPrototype%\":[\"Int32Array\",\"prototype\"],\"%JSONParse%\":[\"JSON\",\"parse\"],\"%JSONStringify%\":[\"JSON\",\"stringify\"],\"%MapPrototype%\":[\"Map\",\"prototype\"],\"%NumberPrototype%\":[\"Number\",\"prototype\"],\"%ObjectPrototype%\":[\"Object\",\"prototype\"],\"%ObjProto_toString%\":[\"Object\",\"prototype\",\"toString\"],\"%ObjProto_valueOf%\":[\"Object\",\"prototype\",\"valueOf\"],\"%PromisePrototype%\":[\"Promise\",\"prototype\"],\"%PromiseProto_then%\":[\"Promise\",\"prototype\",\"then\"],\"%Promise_all%\":[\"Promise\",\"all\"],\"%Promise_reject%\":[\"Promise\",\"reject\"],\"%Promise_resolve%\":[\"Promise\",\"resolve\"],\"%RangeErrorPrototype%\":[\"RangeError\",\"prototype\"],\"%ReferenceErrorPrototype%\":[\"ReferenceError\",\"prototype\"],\"%RegExpPrototype%\":[\"RegExp\",\"prototype\"],\"%SetPrototype%\":[\"Set\",\"prototype\"],\"%SharedArrayBufferPrototype%\":[\"SharedArrayBuffer\",\"prototype\"],\"%StringPrototype%\":[\"String\",\"prototype\"],\"%SymbolPrototype%\":[\"Symbol\",\"prototype\"],\"%SyntaxErrorPrototype%\":[\"SyntaxError\",\"prototype\"],\"%TypedArrayPrototype%\":[\"TypedArray\",\"prototype\"],\"%TypeErrorPrototype%\":[\"TypeError\",\"prototype\"],\"%Uint8ArrayPrototype%\":[\"Uint8Array\",\"prototype\"],\"%Uint8ClampedArrayPrototype%\":[\"Uint8ClampedArray\",\"prototype\"],\"%Uint16ArrayPrototype%\":[\"Uint16Array\",\"prototype\"],\"%Uint32ArrayPrototype%\":[\"Uint32Array\",\"prototype\"],\"%URIErrorPrototype%\":[\"URIError\",\"prototype\"],\"%WeakMapPrototype%\":[\"WeakMap\",\"prototype\"],\"%WeakSetPrototype%\":[\"WeakSet\",\"prototype\"]};var A=t(174);var m=t(101);var S=A.call(Function.call,Array.prototype.concat);var h=A.call(Function.apply,Array.prototype.splice);var P=A.call(Function.call,String.prototype.replace);var O=A.call(Function.call,String.prototype.slice);var w=A.call(Function.call,RegExp.prototype.exec);var j=/[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;var E=/\\\\(\\\\)?/g;var I=function stringToPath(r){var e=O(r,0,1);var t=O(r,-1);if(e===\"%\"&&t!==\"%\"){throw new n(\"invalid intrinsic syntax, expected closing `%`\")}else if(t===\"%\"&&e!==\"%\"){throw new n(\"invalid intrinsic syntax, expected opening `%`\")}var o=[];P(r,j,(function(r,e,t,n){o[o.length]=t?P(n,E,\"$1\"):e||r}));return o};var B=function getBaseIntrinsic(r,e){var t=r;var o;if(m(b,t)){o=b[t];t=\"%\"+o[0]+\"%\"}if(m(d,t)){var i=d[t];if(i===c){i=v(t)}if(typeof i===\"undefined\"&&!e){throw new a(\"intrinsic \"+r+\" exists, but is not available. Please file an issue!\")}return{alias:o,name:t,value:i}}throw new n(\"intrinsic \"+r+\" does not exist!\")};r.exports=function GetIntrinsic(r,e){if(typeof r!==\"string\"||r.length===0){throw new a(\"intrinsic name must be a non-empty string\")}if(arguments.length>1&&typeof e!==\"boolean\"){throw new a('\"allowMissing\" argument must be a boolean')}if(w(/^%?[^%]*%?$/,r)===null){throw new n(\"`%` may not be present anywhere but at the beginning and end of the intrinsic name\")}var t=I(r);var i=t.length>0?t[0]:\"\";var f=B(\"%\"+i+\"%\",e);var p=f.name;var u=f.value;var s=false;var c=f.alias;if(c){i=c[0];h(t,S([0,1],c))}for(var l=1,g=true;l<t.length;l+=1){var v=t[l];var b=O(v,0,1);var A=O(v,-1);if((b==='\"'||b===\"'\"||b===\"`\"||(A==='\"'||A===\"'\"||A===\"`\"))&&b!==A){throw new n(\"property names with quotes must have matching quotes\")}if(v===\"constructor\"||!g){s=true}i+=\".\"+v;p=\"%\"+i+\"%\";if(m(d,p)){u=d[p]}else if(u!=null){if(!(v in u)){if(!e){throw new a(\"base intrinsic for \"+r+\" exists, but the property is not available.\")}return void o}if(y&&l+1>=t.length){var P=y(u,v);g=!!P;if(g&&\"get\"in P&&!(\"originalValue\"in P.get)){u=P.get}else{u=u[v]}}else{g=m(u,v);u=u[v]}if(g&&!s){d[p]=u}}}return u}},504:function(r){\"use strict\";var e={foo:{}};var t=Object;r.exports=function hasProto(){return{__proto__:e}.foo===e.foo&&!({__proto__:null}instanceof t)}},942:function(r,e,t){\"use strict\";var o=typeof Symbol!==\"undefined\"&&Symbol;var n=t(773);r.exports=function hasNativeSymbols(){if(typeof o!==\"function\"){return false}if(typeof Symbol!==\"function\"){return false}if(typeof o(\"foo\")!==\"symbol\"){return false}if(typeof Symbol(\"bar\")!==\"symbol\"){return false}return n()}},773:function(r){\"use strict\";r.exports=function hasSymbols(){if(typeof Symbol!==\"function\"||typeof Object.getOwnPropertySymbols!==\"function\"){return false}if(typeof Symbol.iterator===\"symbol\"){return true}var r={};var e=Symbol(\"test\");var t=Object(e);if(typeof e===\"string\"){return false}if(Object.prototype.toString.call(e)!==\"[object Symbol]\"){return false}if(Object.prototype.toString.call(t)!==\"[object Symbol]\"){return false}var o=42;r[e]=o;for(e in r){return false}if(typeof Object.keys===\"function\"&&Object.keys(r).length!==0){return false}if(typeof Object.getOwnPropertyNames===\"function\"&&Object.getOwnPropertyNames(r).length!==0){return false}var n=Object.getOwnPropertySymbols(r);if(n.length!==1||n[0]!==e){return false}if(!Object.prototype.propertyIsEnumerable.call(r,e)){return false}if(typeof Object.getOwnPropertyDescriptor===\"function\"){var i=Object.getOwnPropertyDescriptor(r,e);if(i.value!==o||i.enumerable!==true){return false}}return true}},115:function(r,e,t){\"use strict\";var o=typeof Symbol!==\"undefined\"&&Symbol;var n=t(832);r.exports=function hasNativeSymbols(){if(typeof o!==\"function\"){return false}if(typeof Symbol!==\"function\"){return false}if(typeof o(\"foo\")!==\"symbol\"){return false}if(typeof Symbol(\"bar\")!==\"symbol\"){return false}return n()}},832:function(r){\"use strict\";r.exports=function hasSymbols(){if(typeof Symbol!==\"function\"||typeof Object.getOwnPropertySymbols!==\"function\"){return false}if(typeof Symbol.iterator===\"symbol\"){return true}var r={};var e=Symbol(\"test\");var t=Object(e);if(typeof e===\"string\"){return false}if(Object.prototype.toString.call(e)!==\"[object Symbol]\"){return false}if(Object.prototype.toString.call(t)!==\"[object Symbol]\"){return false}var o=42;r[e]=o;for(e in r){return false}if(typeof Object.keys===\"function\"&&Object.keys(r).length!==0){return false}if(typeof Object.getOwnPropertyNames===\"function\"&&Object.getOwnPropertyNames(r).length!==0){return false}var n=Object.getOwnPropertySymbols(r);if(n.length!==1||n[0]!==e){return false}if(!Object.prototype.propertyIsEnumerable.call(r,e)){return false}if(typeof Object.getOwnPropertyDescriptor===\"function\"){var i=Object.getOwnPropertyDescriptor(r,e);if(i.value!==o||i.enumerable!==true){return false}}return true}},101:function(r,e,t){\"use strict\";var o=t(174);r.exports=o.call(Function.call,Object.prototype.hasOwnProperty)},782:function(r){if(typeof Object.create===\"function\"){r.exports=function inherits(r,e){if(e){r.super_=e;r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:false,writable:true,configurable:true}})}}}else{r.exports=function inherits(r,e){if(e){r.super_=e;var TempCtor=function(){};TempCtor.prototype=e.prototype;r.prototype=new TempCtor;r.prototype.constructor=r}}}},157:function(r){\"use strict\";var e=typeof Symbol===\"function\"&&typeof Symbol.toStringTag===\"symbol\";var t=Object.prototype.toString;var o=function isArguments(r){if(e&&r&&typeof r===\"object\"&&Symbol.toStringTag in r){return false}return t.call(r)===\"[object Arguments]\"};var n=function isArguments(r){if(o(r)){return true}return r!==null&&typeof r===\"object\"&&typeof r.length===\"number\"&&r.length>=0&&t.call(r)!==\"[object Array]\"&&t.call(r.callee)===\"[object Function]\"};var i=function(){return o(arguments)}();o.isLegacyArguments=n;r.exports=i?o:n},391:function(r){\"use strict\";var e=Object.prototype.toString;var t=Function.prototype.toString;var o=/^\\s*(?:function)?\\*/;var n=typeof Symbol===\"function\"&&typeof Symbol.toStringTag===\"symbol\";var i=Object.getPrototypeOf;var getGeneratorFunc=function(){if(!n){return false}try{return Function(\"return function*() {}\")()}catch(r){}};var a=getGeneratorFunc();var y=a?i(a):{};r.exports=function isGeneratorFunction(r){if(typeof r!==\"function\"){return false}if(o.test(t.call(r))){return true}if(!n){var a=e.call(r);return a===\"[object GeneratorFunction]\"}return i(r)===y}},994:function(r,e,t){\"use strict\";var o=t(144);var n=t(349);var i=t(256);var a=i(\"Object.prototype.toString\");var y=t(942)();var f=y&&typeof Symbol.toStringTag===\"symbol\";var p=n();var u=i(\"Array.prototype.indexOf\",true)||function indexOf(r,e){for(var t=0;t<r.length;t+=1){if(r[t]===e){return t}}return-1};var s=i(\"String.prototype.slice\");var c={};var l=t(24);var d=Object.getPrototypeOf;if(f&&l&&d){o(p,(function(r){var e=new __webpack_require__.g[r];if(!(Symbol.toStringTag in e)){throw new EvalError(\"this engine has support for Symbol.toStringTag, but \"+r+\" does not have the property! Please report this.\")}var t=d(e);var o=l(t,Symbol.toStringTag);if(!o){var n=d(t);o=l(n,Symbol.toStringTag)}c[r]=o.get}))}var g=function tryAllTypedArrays(r){var e=false;o(c,(function(t,o){if(!e){try{e=t.call(r)===o}catch(r){}}}));return e};r.exports=function isTypedArray(r){if(!r||typeof r!==\"object\"){return false}if(!f){var e=s(a(r),8,-1);return u(p,e)>-1}if(!l){return false}return g(r)}},369:function(r){r.exports=function isBuffer(r){return r instanceof Buffer}},584:function(r,e,t){\"use strict\";var o=t(157);var n=t(391);var i=t(490);var a=t(994);function uncurryThis(r){return r.call.bind(r)}var y=typeof BigInt!==\"undefined\";var f=typeof Symbol!==\"undefined\";var p=uncurryThis(Object.prototype.toString);var u=uncurryThis(Number.prototype.valueOf);var s=uncurryThis(String.prototype.valueOf);var c=uncurryThis(Boolean.prototype.valueOf);if(y){var l=uncurryThis(BigInt.prototype.valueOf)}if(f){var d=uncurryThis(Symbol.prototype.valueOf)}function checkBoxedPrimitive(r,e){if(typeof r!==\"object\"){return false}try{e(r);return true}catch(r){return false}}e.isArgumentsObject=o;e.isGeneratorFunction=n;e.isTypedArray=a;function isPromise(r){return typeof Promise!==\"undefined\"&&r instanceof Promise||r!==null&&typeof r===\"object\"&&typeof r.then===\"function\"&&typeof r.catch===\"function\"}e.isPromise=isPromise;function isArrayBufferView(r){if(typeof ArrayBuffer!==\"undefined\"&&ArrayBuffer.isView){return ArrayBuffer.isView(r)}return a(r)||isDataView(r)}e.isArrayBufferView=isArrayBufferView;function isUint8Array(r){return i(r)===\"Uint8Array\"}e.isUint8Array=isUint8Array;function isUint8ClampedArray(r){return i(r)===\"Uint8ClampedArray\"}e.isUint8ClampedArray=isUint8ClampedArray;function isUint16Array(r){return i(r)===\"Uint16Array\"}e.isUint16Array=isUint16Array;function isUint32Array(r){return i(r)===\"Uint32Array\"}e.isUint32Array=isUint32Array;function isInt8Array(r){return i(r)===\"Int8Array\"}e.isInt8Array=isInt8Array;function isInt16Array(r){return i(r)===\"Int16Array\"}e.isInt16Array=isInt16Array;function isInt32Array(r){return i(r)===\"Int32Array\"}e.isInt32Array=isInt32Array;function isFloat32Array(r){return i(r)===\"Float32Array\"}e.isFloat32Array=isFloat32Array;function isFloat64Array(r){return i(r)===\"Float64Array\"}e.isFloat64Array=isFloat64Array;function isBigInt64Array(r){return i(r)===\"BigInt64Array\"}e.isBigInt64Array=isBigInt64Array;function isBigUint64Array(r){return i(r)===\"BigUint64Array\"}e.isBigUint64Array=isBigUint64Array;function isMapToString(r){return p(r)===\"[object Map]\"}isMapToString.working=typeof Map!==\"undefined\"&&isMapToString(new Map);function isMap(r){if(typeof Map===\"undefined\"){return false}return isMapToString.working?isMapToString(r):r instanceof Map}e.isMap=isMap;function isSetToString(r){return p(r)===\"[object Set]\"}isSetToString.working=typeof Set!==\"undefined\"&&isSetToString(new Set);function isSet(r){if(typeof Set===\"undefined\"){return false}return isSetToString.working?isSetToString(r):r instanceof Set}e.isSet=isSet;function isWeakMapToString(r){return p(r)===\"[object WeakMap]\"}isWeakMapToString.working=typeof WeakMap!==\"undefined\"&&isWeakMapToString(new WeakMap);function isWeakMap(r){if(typeof WeakMap===\"undefined\"){return false}return isWeakMapToString.working?isWeakMapToString(r):r instanceof WeakMap}e.isWeakMap=isWeakMap;function isWeakSetToString(r){return p(r)===\"[object WeakSet]\"}isWeakSetToString.working=typeof WeakSet!==\"undefined\"&&isWeakSetToString(new WeakSet);function isWeakSet(r){return isWeakSetToString(r)}e.isWeakSet=isWeakSet;function isArrayBufferToString(r){return p(r)===\"[object ArrayBuffer]\"}isArrayBufferToString.working=typeof ArrayBuffer!==\"undefined\"&&isArrayBufferToString(new ArrayBuffer);function isArrayBuffer(r){if(typeof ArrayBuffer===\"undefined\"){return false}return isArrayBufferToString.working?isArrayBufferToString(r):r instanceof ArrayBuffer}e.isArrayBuffer=isArrayBuffer;function isDataViewToString(r){return p(r)===\"[object DataView]\"}isDataViewToString.working=typeof ArrayBuffer!==\"undefined\"&&typeof DataView!==\"undefined\"&&isDataViewToString(new DataView(new ArrayBuffer(1),0,1));function isDataView(r){if(typeof DataView===\"undefined\"){return false}return isDataViewToString.working?isDataViewToString(r):r instanceof DataView}e.isDataView=isDataView;var g=typeof SharedArrayBuffer!==\"undefined\"?SharedArrayBuffer:undefined;function isSharedArrayBufferToString(r){return p(r)===\"[object SharedArrayBuffer]\"}function isSharedArrayBuffer(r){if(typeof g===\"undefined\"){return false}if(typeof isSharedArrayBufferToString.working===\"undefined\"){isSharedArrayBufferToString.working=isSharedArrayBufferToString(new g)}return isSharedArrayBufferToString.working?isSharedArrayBufferToString(r):r instanceof g}e.isSharedArrayBuffer=isSharedArrayBuffer;function isAsyncFunction(r){return p(r)===\"[object AsyncFunction]\"}e.isAsyncFunction=isAsyncFunction;function isMapIterator(r){return p(r)===\"[object Map Iterator]\"}e.isMapIterator=isMapIterator;function isSetIterator(r){return p(r)===\"[object Set Iterator]\"}e.isSetIterator=isSetIterator;function isGeneratorObject(r){return p(r)===\"[object Generator]\"}e.isGeneratorObject=isGeneratorObject;function isWebAssemblyCompiledModule(r){return p(r)===\"[object WebAssembly.Module]\"}e.isWebAssemblyCompiledModule=isWebAssemblyCompiledModule;function isNumberObject(r){return checkBoxedPrimitive(r,u)}e.isNumberObject=isNumberObject;function isStringObject(r){return checkBoxedPrimitive(r,s)}e.isStringObject=isStringObject;function isBooleanObject(r){return checkBoxedPrimitive(r,c)}e.isBooleanObject=isBooleanObject;function isBigIntObject(r){return y&&checkBoxedPrimitive(r,l)}e.isBigIntObject=isBigIntObject;function isSymbolObject(r){return f&&checkBoxedPrimitive(r,d)}e.isSymbolObject=isSymbolObject;function isBoxedPrimitive(r){return isNumberObject(r)||isStringObject(r)||isBooleanObject(r)||isBigIntObject(r)||isSymbolObject(r)}e.isBoxedPrimitive=isBoxedPrimitive;function isAnyArrayBuffer(r){return typeof Uint8Array!==\"undefined\"&&(isArrayBuffer(r)||isSharedArrayBuffer(r))}e.isAnyArrayBuffer=isAnyArrayBuffer;[\"isProxy\",\"isExternal\",\"isModuleNamespaceObject\"].forEach((function(r){Object.defineProperty(e,r,{enumerable:false,value:function(){throw new Error(r+\" is not supported in userland\")}})}))},177:function(r,e,t){var o=Object.getOwnPropertyDescriptors||function getOwnPropertyDescriptors(r){var e=Object.keys(r);var t={};for(var o=0;o<e.length;o++){t[e[o]]=Object.getOwnPropertyDescriptor(r,e[o])}return t};var n=/%[sdj%]/g;e.format=function(r){if(!isString(r)){var e=[];for(var t=0;t<arguments.length;t++){e.push(inspect(arguments[t]))}return e.join(\" \")}var t=1;var o=arguments;var i=o.length;var a=String(r).replace(n,(function(r){if(r===\"%%\")return\"%\";if(t>=i)return r;switch(r){case\"%s\":return String(o[t++]);case\"%d\":return Number(o[t++]);case\"%j\":try{return JSON.stringify(o[t++])}catch(r){return\"[Circular]\"}default:return r}}));for(var y=o[t];t<i;y=o[++t]){if(isNull(y)||!isObject(y)){a+=\" \"+y}else{a+=\" \"+inspect(y)}}return a};e.deprecate=function(r,t){if(typeof process!==\"undefined\"&&process.noDeprecation===true){return r}if(typeof process===\"undefined\"){return function(){return e.deprecate(r,t).apply(this,arguments)}}var o=false;function deprecated(){if(!o){if(process.throwDeprecation){throw new Error(t)}else if(process.traceDeprecation){console.trace(t)}else{console.error(t)}o=true}return r.apply(this,arguments)}return deprecated};var i={};var a=/^$/;if(process.env.NODE_DEBUG){var y=process.env.NODE_DEBUG;y=y.replace(/[|\\\\{}()[\\]^$+?.]/g,\"\\\\$&\").replace(/\\*/g,\".*\").replace(/,/g,\"$|^\").toUpperCase();a=new RegExp(\"^\"+y+\"$\",\"i\")}e.debuglog=function(r){r=r.toUpperCase();if(!i[r]){if(a.test(r)){var t=process.pid;i[r]=function(){var o=e.format.apply(e,arguments);console.error(\"%s %d: %s\",r,t,o)}}else{i[r]=function(){}}}return i[r]};function inspect(r,t){var o={seen:[],stylize:stylizeNoColor};if(arguments.length>=3)o.depth=arguments[2];if(arguments.length>=4)o.colors=arguments[3];if(isBoolean(t)){o.showHidden=t}else if(t){e._extend(o,t)}if(isUndefined(o.showHidden))o.showHidden=false;if(isUndefined(o.depth))o.depth=2;if(isUndefined(o.colors))o.colors=false;if(isUndefined(o.customInspect))o.customInspect=true;if(o.colors)o.stylize=stylizeWithColor;return formatValue(o,r,o.depth)}e.inspect=inspect;inspect.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]};inspect.styles={special:\"cyan\",number:\"yellow\",boolean:\"yellow\",undefined:\"grey\",null:\"bold\",string:\"green\",date:\"magenta\",regexp:\"red\"};function stylizeWithColor(r,e){var t=inspect.styles[e];if(t){return\"\u001b[\"+inspect.colors[t][0]+\"m\"+r+\"\u001b[\"+inspect.colors[t][1]+\"m\"}else{return r}}function stylizeNoColor(r,e){return r}function arrayToHash(r){var e={};r.forEach((function(r,t){e[r]=true}));return e}function formatValue(r,t,o){if(r.customInspect&&t&&isFunction(t.inspect)&&t.inspect!==e.inspect&&!(t.constructor&&t.constructor.prototype===t)){var n=t.inspect(o,r);if(!isString(n)){n=formatValue(r,n,o)}return n}var i=formatPrimitive(r,t);if(i){return i}var a=Object.keys(t);var y=arrayToHash(a);if(r.showHidden){a=Object.getOwnPropertyNames(t)}if(isError(t)&&(a.indexOf(\"message\")>=0||a.indexOf(\"description\")>=0)){return formatError(t)}if(a.length===0){if(isFunction(t)){var f=t.name?\": \"+t.name:\"\";return r.stylize(\"[Function\"+f+\"]\",\"special\")}if(isRegExp(t)){return r.stylize(RegExp.prototype.toString.call(t),\"regexp\")}if(isDate(t)){return r.stylize(Date.prototype.toString.call(t),\"date\")}if(isError(t)){return formatError(t)}}var p=\"\",u=false,s=[\"{\",\"}\"];if(isArray(t)){u=true;s=[\"[\",\"]\"]}if(isFunction(t)){var c=t.name?\": \"+t.name:\"\";p=\" [Function\"+c+\"]\"}if(isRegExp(t)){p=\" \"+RegExp.prototype.toString.call(t)}if(isDate(t)){p=\" \"+Date.prototype.toUTCString.call(t)}if(isError(t)){p=\" \"+formatError(t)}if(a.length===0&&(!u||t.length==0)){return s[0]+p+s[1]}if(o<0){if(isRegExp(t)){return r.stylize(RegExp.prototype.toString.call(t),\"regexp\")}else{return r.stylize(\"[Object]\",\"special\")}}r.seen.push(t);var l;if(u){l=formatArray(r,t,o,y,a)}else{l=a.map((function(e){return formatProperty(r,t,o,y,e,u)}))}r.seen.pop();return reduceToSingleString(l,p,s)}function formatPrimitive(r,e){if(isUndefined(e))return r.stylize(\"undefined\",\"undefined\");if(isString(e)){var t=\"'\"+JSON.stringify(e).replace(/^\"|\"$/g,\"\").replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"')+\"'\";return r.stylize(t,\"string\")}if(isNumber(e))return r.stylize(\"\"+e,\"number\");if(isBoolean(e))return r.stylize(\"\"+e,\"boolean\");if(isNull(e))return r.stylize(\"null\",\"null\")}function formatError(r){return\"[\"+Error.prototype.toString.call(r)+\"]\"}function formatArray(r,e,t,o,n){var i=[];for(var a=0,y=e.length;a<y;++a){if(hasOwnProperty(e,String(a))){i.push(formatProperty(r,e,t,o,String(a),true))}else{i.push(\"\")}}n.forEach((function(n){if(!n.match(/^\\d+$/)){i.push(formatProperty(r,e,t,o,n,true))}}));return i}function formatProperty(r,e,t,o,n,i){var a,y,f;f=Object.getOwnPropertyDescriptor(e,n)||{value:e[n]};if(f.get){if(f.set){y=r.stylize(\"[Getter/Setter]\",\"special\")}else{y=r.stylize(\"[Getter]\",\"special\")}}else{if(f.set){y=r.stylize(\"[Setter]\",\"special\")}}if(!hasOwnProperty(o,n)){a=\"[\"+n+\"]\"}if(!y){if(r.seen.indexOf(f.value)<0){if(isNull(t)){y=formatValue(r,f.value,null)}else{y=formatValue(r,f.value,t-1)}if(y.indexOf(\"\\n\")>-1){if(i){y=y.split(\"\\n\").map((function(r){return\"  \"+r})).join(\"\\n\").substr(2)}else{y=\"\\n\"+y.split(\"\\n\").map((function(r){return\"   \"+r})).join(\"\\n\")}}}else{y=r.stylize(\"[Circular]\",\"special\")}}if(isUndefined(a)){if(i&&n.match(/^\\d+$/)){return y}a=JSON.stringify(\"\"+n);if(a.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)){a=a.substr(1,a.length-2);a=r.stylize(a,\"name\")}else{a=a.replace(/'/g,\"\\\\'\").replace(/\\\\\"/g,'\"').replace(/(^\"|\"$)/g,\"'\");a=r.stylize(a,\"string\")}}return a+\": \"+y}function reduceToSingleString(r,e,t){var o=0;var n=r.reduce((function(r,e){o++;if(e.indexOf(\"\\n\")>=0)o++;return r+e.replace(/\\u001b\\[\\d\\d?m/g,\"\").length+1}),0);if(n>60){return t[0]+(e===\"\"?\"\":e+\"\\n \")+\" \"+r.join(\",\\n  \")+\" \"+t[1]}return t[0]+e+\" \"+r.join(\", \")+\" \"+t[1]}e.types=t(584);function isArray(r){return Array.isArray(r)}e.isArray=isArray;function isBoolean(r){return typeof r===\"boolean\"}e.isBoolean=isBoolean;function isNull(r){return r===null}e.isNull=isNull;function isNullOrUndefined(r){return r==null}e.isNullOrUndefined=isNullOrUndefined;function isNumber(r){return typeof r===\"number\"}e.isNumber=isNumber;function isString(r){return typeof r===\"string\"}e.isString=isString;function isSymbol(r){return typeof r===\"symbol\"}e.isSymbol=isSymbol;function isUndefined(r){return r===void 0}e.isUndefined=isUndefined;function isRegExp(r){return isObject(r)&&objectToString(r)===\"[object RegExp]\"}e.isRegExp=isRegExp;e.types.isRegExp=isRegExp;function isObject(r){return typeof r===\"object\"&&r!==null}e.isObject=isObject;function isDate(r){return isObject(r)&&objectToString(r)===\"[object Date]\"}e.isDate=isDate;e.types.isDate=isDate;function isError(r){return isObject(r)&&(objectToString(r)===\"[object Error]\"||r instanceof Error)}e.isError=isError;e.types.isNativeError=isError;function isFunction(r){return typeof r===\"function\"}e.isFunction=isFunction;function isPrimitive(r){return r===null||typeof r===\"boolean\"||typeof r===\"number\"||typeof r===\"string\"||typeof r===\"symbol\"||typeof r===\"undefined\"}e.isPrimitive=isPrimitive;e.isBuffer=t(369);function objectToString(r){return Object.prototype.toString.call(r)}function pad(r){return r<10?\"0\"+r.toString(10):r.toString(10)}var f=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];function timestamp(){var r=new Date;var e=[pad(r.getHours()),pad(r.getMinutes()),pad(r.getSeconds())].join(\":\");return[r.getDate(),f[r.getMonth()],e].join(\" \")}e.log=function(){console.log(\"%s - %s\",timestamp(),e.format.apply(e,arguments))};e.inherits=t(782);e._extend=function(r,e){if(!e||!isObject(e))return r;var t=Object.keys(e);var o=t.length;while(o--){r[t[o]]=e[t[o]]}return r};function hasOwnProperty(r,e){return Object.prototype.hasOwnProperty.call(r,e)}var p=typeof Symbol!==\"undefined\"?Symbol(\"util.promisify.custom\"):undefined;e.promisify=function promisify(r){if(typeof r!==\"function\")throw new TypeError('The \"original\" argument must be of type Function');if(p&&r[p]){var e=r[p];if(typeof e!==\"function\"){throw new TypeError('The \"util.promisify.custom\" argument must be of type Function')}Object.defineProperty(e,p,{value:e,enumerable:false,writable:false,configurable:true});return e}function e(){var e,t;var o=new Promise((function(r,o){e=r;t=o}));var n=[];for(var i=0;i<arguments.length;i++){n.push(arguments[i])}n.push((function(r,o){if(r){t(r)}else{e(o)}}));try{r.apply(this,n)}catch(r){t(r)}return o}Object.setPrototypeOf(e,Object.getPrototypeOf(r));if(p)Object.defineProperty(e,p,{value:e,enumerable:false,writable:false,configurable:true});return Object.defineProperties(e,o(r))};e.promisify.custom=p;function callbackifyOnRejected(r,e){if(!r){var t=new Error(\"Promise was rejected with a falsy value\");t.reason=r;r=t}return e(r)}function callbackify(r){if(typeof r!==\"function\"){throw new TypeError('The \"original\" argument must be of type Function')}function callbackified(){var e=[];for(var t=0;t<arguments.length;t++){e.push(arguments[t])}var o=e.pop();if(typeof o!==\"function\"){throw new TypeError(\"The last argument must be of type Function\")}var n=this;var cb=function(){return o.apply(n,arguments)};r.apply(this,e).then((function(r){process.nextTick(cb.bind(null,null,r))}),(function(r){process.nextTick(callbackifyOnRejected.bind(null,r,cb))}))}Object.setPrototypeOf(callbackified,Object.getPrototypeOf(r));Object.defineProperties(callbackified,o(r));return callbackified}e.callbackify=callbackify},490:function(r,e,t){\"use strict\";var o=t(144);var n=t(349);var i=t(256);var a=i(\"Object.prototype.toString\");var y=t(942)();var f=y&&typeof Symbol.toStringTag===\"symbol\";var p=n();var u=i(\"String.prototype.slice\");var s={};var c=t(24);var l=Object.getPrototypeOf;if(f&&c&&l){o(p,(function(r){if(typeof __webpack_require__.g[r]===\"function\"){var e=new __webpack_require__.g[r];if(!(Symbol.toStringTag in e)){throw new EvalError(\"this engine has support for Symbol.toStringTag, but \"+r+\" does not have the property! Please report this.\")}var t=l(e);var o=c(t,Symbol.toStringTag);if(!o){var n=l(t);o=c(n,Symbol.toStringTag)}s[r]=o.get}}))}var d=function tryAllTypedArrays(r){var e=false;o(s,(function(t,o){if(!e){try{var n=t.call(r);if(n===o){e=n}}catch(r){}}}));return e};var g=t(994);r.exports=function whichTypedArray(r){if(!g(r)){return false}if(!f){return u(a(r),8,-1)}return d(r)}},349:function(r,e,t){\"use strict\";var o=t(992);r.exports=function availableTypedArrays(){return o([\"BigInt64Array\",\"BigUint64Array\",\"Float32Array\",\"Float64Array\",\"Int16Array\",\"Int32Array\",\"Int8Array\",\"Uint16Array\",\"Uint32Array\",\"Uint8Array\",\"Uint8ClampedArray\"],(function(r){return typeof __webpack_require__.g[r]===\"function\"}))}},24:function(r,e,t){\"use strict\";var o=t(500);var n=o(\"%Object.getOwnPropertyDescriptor%\",true);if(n){try{n([],\"length\")}catch(r){n=null}}r.exports=n}};var e={};function __nccwpck_require__(t){var o=e[t];if(o!==undefined){return o.exports}var n=e[t]={exports:{}};var i=true;try{r[t](n,n.exports,__nccwpck_require__);i=false}finally{if(i)delete e[t]}return n.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(177);module.exports=t})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/util/util.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/vm-browserify/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/next/dist/compiled/vm-browserify/index.js ***!
  \****************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var __dirname = \"/\";\n(function(){var __webpack_modules__={950:function(__unused_webpack_module,exports){var indexOf=function(e,t){if(e.indexOf)return e.indexOf(t);else for(var r=0;r<e.length;r++){if(e[r]===t)return r}return-1};var Object_keys=function(e){if(Object.keys)return Object.keys(e);else{var t=[];for(var r in e)t.push(r);return t}};var forEach=function(e,t){if(e.forEach)return e.forEach(t);else for(var r=0;r<e.length;r++){t(e[r],r,e)}};var defineProp=function(){try{Object.defineProperty({},\"_\",{});return function(e,t,r){Object.defineProperty(e,t,{writable:true,enumerable:false,configurable:true,value:r})}}catch(e){return function(e,t,r){e[t]=r}}}();var globals=[\"Array\",\"Boolean\",\"Date\",\"Error\",\"EvalError\",\"Function\",\"Infinity\",\"JSON\",\"Math\",\"NaN\",\"Number\",\"Object\",\"RangeError\",\"ReferenceError\",\"RegExp\",\"String\",\"SyntaxError\",\"TypeError\",\"URIError\",\"decodeURI\",\"decodeURIComponent\",\"encodeURI\",\"encodeURIComponent\",\"escape\",\"eval\",\"isFinite\",\"isNaN\",\"parseFloat\",\"parseInt\",\"undefined\",\"unescape\"];function Context(){}Context.prototype={};var Script=exports.Script=function NodeScript(e){if(!(this instanceof Script))return new Script(e);this.code=e};Script.prototype.runInContext=function(e){if(!(e instanceof Context)){throw new TypeError(\"needs a 'context' argument.\")}var t=document.createElement(\"iframe\");if(!t.style)t.style={};t.style.display=\"none\";document.body.appendChild(t);var r=t.contentWindow;var n=r.eval,o=r.execScript;if(!n&&o){o.call(r,\"null\");n=r.eval}forEach(Object_keys(e),(function(t){r[t]=e[t]}));forEach(globals,(function(t){if(e[t]){r[t]=e[t]}}));var c=Object_keys(r);var i=n.call(r,this.code);forEach(Object_keys(r),(function(t){if(t in e||indexOf(c,t)===-1){e[t]=r[t]}}));forEach(globals,(function(t){if(!(t in e)){defineProp(e,t,r[t])}}));document.body.removeChild(t);return i};Script.prototype.runInThisContext=function(){return eval(this.code)};Script.prototype.runInNewContext=function(e){var t=Script.createContext(e);var r=this.runInContext(t);if(e){forEach(Object_keys(t),(function(r){e[r]=t[r]}))}return r};forEach(Object_keys(Script.prototype),(function(e){exports[e]=Script[e]=function(t){var r=Script(t);return r[e].apply(r,[].slice.call(arguments,1))}}));exports.isContext=function(e){return e instanceof Context};exports.createScript=function(e){return exports.Script(e)};exports.createContext=Script.createContext=function(e){var t=new Context;if(typeof e===\"object\"){forEach(Object_keys(e),(function(r){t[r]=e[r]}))}return t}}};if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var __nested_webpack_exports__={};__webpack_modules__[950](0,__nested_webpack_exports__);module.exports=__nested_webpack_exports__})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvdm0tYnJvd3NlcmlmeS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsWUFBWSx5QkFBeUIsOENBQThDLDBCQUEwQixpQ0FBaUMsaUJBQWlCLFdBQVcsS0FBSyxxQkFBcUIsVUFBVSw0QkFBNEIscUNBQXFDLEtBQUssU0FBUyx5QkFBeUIsV0FBVywwQkFBMEIsaUNBQWlDLGlCQUFpQixXQUFXLEtBQUssY0FBYywwQkFBMEIsSUFBSSx3QkFBd0IsT0FBTyxFQUFFLHVCQUF1QiwyQkFBMkIseURBQXlELEdBQUcsU0FBUyx1QkFBdUIsU0FBUyxHQUFHLGdXQUFnVyxvQkFBb0IscUJBQXFCLGlEQUFpRCxrREFBa0QsYUFBYSwwQ0FBMEMsNEJBQTRCLG1EQUFtRCx1Q0FBdUMsdUJBQXVCLHVCQUF1Qiw2QkFBNkIsc0JBQXNCLDRCQUE0QixVQUFVLGlCQUFpQixTQUFTLG9DQUFvQyxVQUFVLEdBQUcsNkJBQTZCLFNBQVMsV0FBVyxHQUFHLHFCQUFxQiwwQkFBMEIsb0NBQW9DLDhCQUE4QixXQUFXLEdBQUcsNkJBQTZCLGNBQWMsc0JBQXNCLEdBQUcsNkJBQTZCLFVBQVUsNkNBQTZDLHdCQUF3Qiw2Q0FBNkMsOEJBQThCLDJCQUEyQixNQUFNLG9DQUFvQyxVQUFVLEdBQUcsVUFBVSxtREFBbUQsaUNBQWlDLGdCQUFnQixpREFBaUQsR0FBRyw4QkFBOEIsNkJBQTZCLGlDQUFpQywwQkFBMEIsdURBQXVELGtCQUFrQix3QkFBd0Isb0NBQW9DLFVBQVUsR0FBRyxZQUFZLG1FQUFtRSxTQUFTLEtBQUssSUFBSSwwQkFBbUIsSUFBSSwyQkFBMkIsMEJBQW1CLEVBQUUsZUFBZSwwQkFBbUIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NvbXBpbGVkL3ZtLWJyb3dzZXJpZnkvaW5kZXguanM/YjUyNiJdLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXt2YXIgX193ZWJwYWNrX21vZHVsZXNfXz17OTUwOmZ1bmN0aW9uKF9fdW51c2VkX3dlYnBhY2tfbW9kdWxlLGV4cG9ydHMpe3ZhciBpbmRleE9mPWZ1bmN0aW9uKGUsdCl7aWYoZS5pbmRleE9mKXJldHVybiBlLmluZGV4T2YodCk7ZWxzZSBmb3IodmFyIHI9MDtyPGUubGVuZ3RoO3IrKyl7aWYoZVtyXT09PXQpcmV0dXJuIHJ9cmV0dXJuLTF9O3ZhciBPYmplY3Rfa2V5cz1mdW5jdGlvbihlKXtpZihPYmplY3Qua2V5cylyZXR1cm4gT2JqZWN0LmtleXMoZSk7ZWxzZXt2YXIgdD1bXTtmb3IodmFyIHIgaW4gZSl0LnB1c2gocik7cmV0dXJuIHR9fTt2YXIgZm9yRWFjaD1mdW5jdGlvbihlLHQpe2lmKGUuZm9yRWFjaClyZXR1cm4gZS5mb3JFYWNoKHQpO2Vsc2UgZm9yKHZhciByPTA7cjxlLmxlbmd0aDtyKyspe3QoZVtyXSxyLGUpfX07dmFyIGRlZmluZVByb3A9ZnVuY3Rpb24oKXt0cnl7T2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LFwiX1wiLHt9KTtyZXR1cm4gZnVuY3Rpb24oZSx0LHIpe09iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3dyaXRhYmxlOnRydWUsZW51bWVyYWJsZTpmYWxzZSxjb25maWd1cmFibGU6dHJ1ZSx2YWx1ZTpyfSl9fWNhdGNoKGUpe3JldHVybiBmdW5jdGlvbihlLHQscil7ZVt0XT1yfX19KCk7dmFyIGdsb2JhbHM9W1wiQXJyYXlcIixcIkJvb2xlYW5cIixcIkRhdGVcIixcIkVycm9yXCIsXCJFdmFsRXJyb3JcIixcIkZ1bmN0aW9uXCIsXCJJbmZpbml0eVwiLFwiSlNPTlwiLFwiTWF0aFwiLFwiTmFOXCIsXCJOdW1iZXJcIixcIk9iamVjdFwiLFwiUmFuZ2VFcnJvclwiLFwiUmVmZXJlbmNlRXJyb3JcIixcIlJlZ0V4cFwiLFwiU3RyaW5nXCIsXCJTeW50YXhFcnJvclwiLFwiVHlwZUVycm9yXCIsXCJVUklFcnJvclwiLFwiZGVjb2RlVVJJXCIsXCJkZWNvZGVVUklDb21wb25lbnRcIixcImVuY29kZVVSSVwiLFwiZW5jb2RlVVJJQ29tcG9uZW50XCIsXCJlc2NhcGVcIixcImV2YWxcIixcImlzRmluaXRlXCIsXCJpc05hTlwiLFwicGFyc2VGbG9hdFwiLFwicGFyc2VJbnRcIixcInVuZGVmaW5lZFwiLFwidW5lc2NhcGVcIl07ZnVuY3Rpb24gQ29udGV4dCgpe31Db250ZXh0LnByb3RvdHlwZT17fTt2YXIgU2NyaXB0PWV4cG9ydHMuU2NyaXB0PWZ1bmN0aW9uIE5vZGVTY3JpcHQoZSl7aWYoISh0aGlzIGluc3RhbmNlb2YgU2NyaXB0KSlyZXR1cm4gbmV3IFNjcmlwdChlKTt0aGlzLmNvZGU9ZX07U2NyaXB0LnByb3RvdHlwZS5ydW5JbkNvbnRleHQ9ZnVuY3Rpb24oZSl7aWYoIShlIGluc3RhbmNlb2YgQ29udGV4dCkpe3Rocm93IG5ldyBUeXBlRXJyb3IoXCJuZWVkcyBhICdjb250ZXh0JyBhcmd1bWVudC5cIil9dmFyIHQ9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlmcmFtZVwiKTtpZighdC5zdHlsZSl0LnN0eWxlPXt9O3Quc3R5bGUuZGlzcGxheT1cIm5vbmVcIjtkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHQpO3ZhciByPXQuY29udGVudFdpbmRvdzt2YXIgbj1yLmV2YWwsbz1yLmV4ZWNTY3JpcHQ7aWYoIW4mJm8pe28uY2FsbChyLFwibnVsbFwiKTtuPXIuZXZhbH1mb3JFYWNoKE9iamVjdF9rZXlzKGUpLChmdW5jdGlvbih0KXtyW3RdPWVbdF19KSk7Zm9yRWFjaChnbG9iYWxzLChmdW5jdGlvbih0KXtpZihlW3RdKXtyW3RdPWVbdF19fSkpO3ZhciBjPU9iamVjdF9rZXlzKHIpO3ZhciBpPW4uY2FsbChyLHRoaXMuY29kZSk7Zm9yRWFjaChPYmplY3Rfa2V5cyhyKSwoZnVuY3Rpb24odCl7aWYodCBpbiBlfHxpbmRleE9mKGMsdCk9PT0tMSl7ZVt0XT1yW3RdfX0pKTtmb3JFYWNoKGdsb2JhbHMsKGZ1bmN0aW9uKHQpe2lmKCEodCBpbiBlKSl7ZGVmaW5lUHJvcChlLHQsclt0XSl9fSkpO2RvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodCk7cmV0dXJuIGl9O1NjcmlwdC5wcm90b3R5cGUucnVuSW5UaGlzQ29udGV4dD1mdW5jdGlvbigpe3JldHVybiBldmFsKHRoaXMuY29kZSl9O1NjcmlwdC5wcm90b3R5cGUucnVuSW5OZXdDb250ZXh0PWZ1bmN0aW9uKGUpe3ZhciB0PVNjcmlwdC5jcmVhdGVDb250ZXh0KGUpO3ZhciByPXRoaXMucnVuSW5Db250ZXh0KHQpO2lmKGUpe2ZvckVhY2goT2JqZWN0X2tleXModCksKGZ1bmN0aW9uKHIpe2Vbcl09dFtyXX0pKX1yZXR1cm4gcn07Zm9yRWFjaChPYmplY3Rfa2V5cyhTY3JpcHQucHJvdG90eXBlKSwoZnVuY3Rpb24oZSl7ZXhwb3J0c1tlXT1TY3JpcHRbZV09ZnVuY3Rpb24odCl7dmFyIHI9U2NyaXB0KHQpO3JldHVybiByW2VdLmFwcGx5KHIsW10uc2xpY2UuY2FsbChhcmd1bWVudHMsMSkpfX0pKTtleHBvcnRzLmlzQ29udGV4dD1mdW5jdGlvbihlKXtyZXR1cm4gZSBpbnN0YW5jZW9mIENvbnRleHR9O2V4cG9ydHMuY3JlYXRlU2NyaXB0PWZ1bmN0aW9uKGUpe3JldHVybiBleHBvcnRzLlNjcmlwdChlKX07ZXhwb3J0cy5jcmVhdGVDb250ZXh0PVNjcmlwdC5jcmVhdGVDb250ZXh0PWZ1bmN0aW9uKGUpe3ZhciB0PW5ldyBDb250ZXh0O2lmKHR5cGVvZiBlPT09XCJvYmplY3RcIil7Zm9yRWFjaChPYmplY3Rfa2V5cyhlKSwoZnVuY3Rpb24ocil7dFtyXT1lW3JdfSkpfXJldHVybiB0fX19O2lmKHR5cGVvZiBfX25jY3dwY2tfcmVxdWlyZV9fIT09XCJ1bmRlZmluZWRcIilfX25jY3dwY2tfcmVxdWlyZV9fLmFiPV9fZGlybmFtZStcIi9cIjt2YXIgX193ZWJwYWNrX2V4cG9ydHNfXz17fTtfX3dlYnBhY2tfbW9kdWxlc19fWzk1MF0oMCxfX3dlYnBhY2tfZXhwb3J0c19fKTttb2R1bGUuZXhwb3J0cz1fX3dlYnBhY2tfZXhwb3J0c19ffSkoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/vm-browserify/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/node-fetch/browser.js":
/*!********************************************!*\
  !*** ./node_modules/node-fetch/browser.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof __webpack_require__.g !== 'undefined') { return __webpack_require__.g; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports[\"default\"] = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9ub2RlLWZldGNoL2Jyb3dzZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQztBQUNwQyxzQ0FBc0M7QUFDdEMsWUFBWSxxQkFBTSxvQkFBb0IsT0FBTyxxQkFBTTtBQUNuRDtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7QUFDQSxDQUFDLGtCQUFlO0FBQ2hCOztBQUVBLGVBQWU7QUFDZixlQUFlO0FBQ2YsZ0JBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9ub2RlLWZldGNoL2Jyb3dzZXIuanM/MzgzNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLy8gcmVmOiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1nbG9iYWxcbnZhciBnZXRHbG9iYWwgPSBmdW5jdGlvbiAoKSB7XG5cdC8vIHRoZSBvbmx5IHJlbGlhYmxlIG1lYW5zIHRvIGdldCB0aGUgZ2xvYmFsIG9iamVjdCBpc1xuXHQvLyBgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKWBcblx0Ly8gSG93ZXZlciwgdGhpcyBjYXVzZXMgQ1NQIHZpb2xhdGlvbnMgaW4gQ2hyb21lIGFwcHMuXG5cdGlmICh0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHsgcmV0dXJuIHNlbGY7IH1cblx0aWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7IHJldHVybiB3aW5kb3c7IH1cblx0aWYgKHR5cGVvZiBnbG9iYWwgIT09ICd1bmRlZmluZWQnKSB7IHJldHVybiBnbG9iYWw7IH1cblx0dGhyb3cgbmV3IEVycm9yKCd1bmFibGUgdG8gbG9jYXRlIGdsb2JhbCBvYmplY3QnKTtcbn1cblxudmFyIGdsb2JhbE9iamVjdCA9IGdldEdsb2JhbCgpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHMgPSBnbG9iYWxPYmplY3QuZmV0Y2g7XG5cbi8vIE5lZWRlZCBmb3IgVHlwZVNjcmlwdCBhbmQgV2VicGFjay5cbmlmIChnbG9iYWxPYmplY3QuZmV0Y2gpIHtcblx0ZXhwb3J0cy5kZWZhdWx0ID0gZ2xvYmFsT2JqZWN0LmZldGNoLmJpbmQoZ2xvYmFsT2JqZWN0KTtcbn1cblxuZXhwb3J0cy5IZWFkZXJzID0gZ2xvYmFsT2JqZWN0LkhlYWRlcnM7XG5leHBvcnRzLlJlcXVlc3QgPSBnbG9iYWxPYmplY3QuUmVxdWVzdDtcbmV4cG9ydHMuUmVzcG9uc2UgPSBnbG9iYWxPYmplY3QuUmVzcG9uc2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/node-fetch/browser.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher-js/dist/web/pusher.js":
/*!***************************************************!*\
  !*** ./node_modules/pusher-js/dist/web/pusher.js ***!
  \***************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/*!\n * Pusher JavaScript Library v8.3.0\n * https://pusher.com/\n *\n * Copyright 2020, Pusher\n * Released under the MIT licence.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(window, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_669__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_669__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_669__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__nested_webpack_require_669__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__nested_webpack_require_669__.d = function(exports, name, getter) {\n/******/ \t\tif(!__nested_webpack_require_669__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__nested_webpack_require_669__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__nested_webpack_require_669__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __nested_webpack_require_669__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__nested_webpack_require_669__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __nested_webpack_require_669__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__nested_webpack_require_669__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__nested_webpack_require_669__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__nested_webpack_require_669__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__nested_webpack_require_669__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nested_webpack_require_669__(__nested_webpack_require_669__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package base64 implements Base64 encoding and decoding.\n */\n// Invalid character used in decoding to indicate\n// that the character to decode is out of range of\n// alphabet and cannot be decoded.\nvar INVALID_BYTE = 256;\n/**\n * Implements standard Base64 encoding.\n *\n * Operates in constant time.\n */\nvar Coder = /** @class */ (function () {\n    // TODO(dchest): methods to encode chunk-by-chunk.\n    function Coder(_paddingCharacter) {\n        if (_paddingCharacter === void 0) { _paddingCharacter = \"=\"; }\n        this._paddingCharacter = _paddingCharacter;\n    }\n    Coder.prototype.encodedLength = function (length) {\n        if (!this._paddingCharacter) {\n            return (length * 8 + 5) / 6 | 0;\n        }\n        return (length + 2) / 3 * 4 | 0;\n    };\n    Coder.prototype.encode = function (data) {\n        var out = \"\";\n        var i = 0;\n        for (; i < data.length - 2; i += 3) {\n            var c = (data[i] << 16) | (data[i + 1] << 8) | (data[i + 2]);\n            out += this._encodeByte((c >>> 3 * 6) & 63);\n            out += this._encodeByte((c >>> 2 * 6) & 63);\n            out += this._encodeByte((c >>> 1 * 6) & 63);\n            out += this._encodeByte((c >>> 0 * 6) & 63);\n        }\n        var left = data.length - i;\n        if (left > 0) {\n            var c = (data[i] << 16) | (left === 2 ? data[i + 1] << 8 : 0);\n            out += this._encodeByte((c >>> 3 * 6) & 63);\n            out += this._encodeByte((c >>> 2 * 6) & 63);\n            if (left === 2) {\n                out += this._encodeByte((c >>> 1 * 6) & 63);\n            }\n            else {\n                out += this._paddingCharacter || \"\";\n            }\n            out += this._paddingCharacter || \"\";\n        }\n        return out;\n    };\n    Coder.prototype.maxDecodedLength = function (length) {\n        if (!this._paddingCharacter) {\n            return (length * 6 + 7) / 8 | 0;\n        }\n        return length / 4 * 3 | 0;\n    };\n    Coder.prototype.decodedLength = function (s) {\n        return this.maxDecodedLength(s.length - this._getPaddingLength(s));\n    };\n    Coder.prototype.decode = function (s) {\n        if (s.length === 0) {\n            return new Uint8Array(0);\n        }\n        var paddingLength = this._getPaddingLength(s);\n        var length = s.length - paddingLength;\n        var out = new Uint8Array(this.maxDecodedLength(length));\n        var op = 0;\n        var i = 0;\n        var haveBad = 0;\n        var v0 = 0, v1 = 0, v2 = 0, v3 = 0;\n        for (; i < length - 4; i += 4) {\n            v0 = this._decodeChar(s.charCodeAt(i + 0));\n            v1 = this._decodeChar(s.charCodeAt(i + 1));\n            v2 = this._decodeChar(s.charCodeAt(i + 2));\n            v3 = this._decodeChar(s.charCodeAt(i + 3));\n            out[op++] = (v0 << 2) | (v1 >>> 4);\n            out[op++] = (v1 << 4) | (v2 >>> 2);\n            out[op++] = (v2 << 6) | v3;\n            haveBad |= v0 & INVALID_BYTE;\n            haveBad |= v1 & INVALID_BYTE;\n            haveBad |= v2 & INVALID_BYTE;\n            haveBad |= v3 & INVALID_BYTE;\n        }\n        if (i < length - 1) {\n            v0 = this._decodeChar(s.charCodeAt(i));\n            v1 = this._decodeChar(s.charCodeAt(i + 1));\n            out[op++] = (v0 << 2) | (v1 >>> 4);\n            haveBad |= v0 & INVALID_BYTE;\n            haveBad |= v1 & INVALID_BYTE;\n        }\n        if (i < length - 2) {\n            v2 = this._decodeChar(s.charCodeAt(i + 2));\n            out[op++] = (v1 << 4) | (v2 >>> 2);\n            haveBad |= v2 & INVALID_BYTE;\n        }\n        if (i < length - 3) {\n            v3 = this._decodeChar(s.charCodeAt(i + 3));\n            out[op++] = (v2 << 6) | v3;\n            haveBad |= v3 & INVALID_BYTE;\n        }\n        if (haveBad !== 0) {\n            throw new Error(\"Base64Coder: incorrect characters for decoding\");\n        }\n        return out;\n    };\n    // Standard encoding have the following encoded/decoded ranges,\n    // which we need to convert between.\n    //\n    // ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789  +   /\n    // Index:   0 - 25                    26 - 51              52 - 61   62  63\n    // ASCII:  65 - 90                    97 - 122             48 - 57   43  47\n    //\n    // Encode 6 bits in b into a new character.\n    Coder.prototype._encodeByte = function (b) {\n        // Encoding uses constant time operations as follows:\n        //\n        // 1. Define comparison of A with B using (A - B) >>> 8:\n        //          if A > B, then result is positive integer\n        //          if A <= B, then result is 0\n        //\n        // 2. Define selection of C or 0 using bitwise AND: X & C:\n        //          if X == 0, then result is 0\n        //          if X != 0, then result is C\n        //\n        // 3. Start with the smallest comparison (b >= 0), which is always\n        //    true, so set the result to the starting ASCII value (65).\n        //\n        // 4. Continue comparing b to higher ASCII values, and selecting\n        //    zero if comparison isn't true, otherwise selecting a value\n        //    to add to result, which:\n        //\n        //          a) undoes the previous addition\n        //          b) provides new value to add\n        //\n        var result = b;\n        // b >= 0\n        result += 65;\n        // b > 25\n        result += ((25 - b) >>> 8) & ((0 - 65) - 26 + 97);\n        // b > 51\n        result += ((51 - b) >>> 8) & ((26 - 97) - 52 + 48);\n        // b > 61\n        result += ((61 - b) >>> 8) & ((52 - 48) - 62 + 43);\n        // b > 62\n        result += ((62 - b) >>> 8) & ((62 - 43) - 63 + 47);\n        return String.fromCharCode(result);\n    };\n    // Decode a character code into a byte.\n    // Must return 256 if character is out of alphabet range.\n    Coder.prototype._decodeChar = function (c) {\n        // Decoding works similar to encoding: using the same comparison\n        // function, but now it works on ranges: result is always incremented\n        // by value, but this value becomes zero if the range is not\n        // satisfied.\n        //\n        // Decoding starts with invalid value, 256, which is then\n        // subtracted when the range is satisfied. If none of the ranges\n        // apply, the function returns 256, which is then checked by\n        // the caller to throw error.\n        var result = INVALID_BYTE; // start with invalid character\n        // c == 43 (c > 42 and c < 44)\n        result += (((42 - c) & (c - 44)) >>> 8) & (-INVALID_BYTE + c - 43 + 62);\n        // c == 47 (c > 46 and c < 48)\n        result += (((46 - c) & (c - 48)) >>> 8) & (-INVALID_BYTE + c - 47 + 63);\n        // c > 47 and c < 58\n        result += (((47 - c) & (c - 58)) >>> 8) & (-INVALID_BYTE + c - 48 + 52);\n        // c > 64 and c < 91\n        result += (((64 - c) & (c - 91)) >>> 8) & (-INVALID_BYTE + c - 65 + 0);\n        // c > 96 and c < 123\n        result += (((96 - c) & (c - 123)) >>> 8) & (-INVALID_BYTE + c - 97 + 26);\n        return result;\n    };\n    Coder.prototype._getPaddingLength = function (s) {\n        var paddingLength = 0;\n        if (this._paddingCharacter) {\n            for (var i = s.length - 1; i >= 0; i--) {\n                if (s[i] !== this._paddingCharacter) {\n                    break;\n                }\n                paddingLength++;\n            }\n            if (s.length < 4 || paddingLength > 2) {\n                throw new Error(\"Base64Coder: incorrect padding\");\n            }\n        }\n        return paddingLength;\n    };\n    return Coder;\n}());\nexports.Coder = Coder;\nvar stdCoder = new Coder();\nfunction encode(data) {\n    return stdCoder.encode(data);\n}\nexports.encode = encode;\nfunction decode(s) {\n    return stdCoder.decode(s);\n}\nexports.decode = decode;\n/**\n * Implements URL-safe Base64 encoding.\n * (Same as Base64, but '+' is replaced with '-', and '/' with '_').\n *\n * Operates in constant time.\n */\nvar URLSafeCoder = /** @class */ (function (_super) {\n    __extends(URLSafeCoder, _super);\n    function URLSafeCoder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // URL-safe encoding have the following encoded/decoded ranges:\n    //\n    // ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 0123456789  -   _\n    // Index:   0 - 25                    26 - 51              52 - 61   62  63\n    // ASCII:  65 - 90                    97 - 122             48 - 57   45  95\n    //\n    URLSafeCoder.prototype._encodeByte = function (b) {\n        var result = b;\n        // b >= 0\n        result += 65;\n        // b > 25\n        result += ((25 - b) >>> 8) & ((0 - 65) - 26 + 97);\n        // b > 51\n        result += ((51 - b) >>> 8) & ((26 - 97) - 52 + 48);\n        // b > 61\n        result += ((61 - b) >>> 8) & ((52 - 48) - 62 + 45);\n        // b > 62\n        result += ((62 - b) >>> 8) & ((62 - 45) - 63 + 95);\n        return String.fromCharCode(result);\n    };\n    URLSafeCoder.prototype._decodeChar = function (c) {\n        var result = INVALID_BYTE;\n        // c == 45 (c > 44 and c < 46)\n        result += (((44 - c) & (c - 46)) >>> 8) & (-INVALID_BYTE + c - 45 + 62);\n        // c == 95 (c > 94 and c < 96)\n        result += (((94 - c) & (c - 96)) >>> 8) & (-INVALID_BYTE + c - 95 + 63);\n        // c > 47 and c < 58\n        result += (((47 - c) & (c - 58)) >>> 8) & (-INVALID_BYTE + c - 48 + 52);\n        // c > 64 and c < 91\n        result += (((64 - c) & (c - 91)) >>> 8) & (-INVALID_BYTE + c - 65 + 0);\n        // c > 96 and c < 123\n        result += (((96 - c) & (c - 123)) >>> 8) & (-INVALID_BYTE + c - 97 + 26);\n        return result;\n    };\n    return URLSafeCoder;\n}(Coder));\nexports.URLSafeCoder = URLSafeCoder;\nvar urlSafeCoder = new URLSafeCoder();\nfunction encodeURLSafe(data) {\n    return urlSafeCoder.encode(data);\n}\nexports.encodeURLSafe = encodeURLSafe;\nfunction decodeURLSafe(s) {\n    return urlSafeCoder.decode(s);\n}\nexports.decodeURLSafe = decodeURLSafe;\nexports.encodedLength = function (length) {\n    return stdCoder.encodedLength(length);\n};\nexports.maxDecodedLength = function (length) {\n    return stdCoder.maxDecodedLength(length);\n};\nexports.decodedLength = function (s) {\n    return stdCoder.decodedLength(s);\n};\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n// Copyright (C) 2016 Dmitry Chestnykh\n// MIT License. See LICENSE file for details.\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Package utf8 implements UTF-8 encoding and decoding.\n */\nvar INVALID_UTF16 = \"utf8: invalid string\";\nvar INVALID_UTF8 = \"utf8: invalid source encoding\";\n/**\n * Encodes the given string into UTF-8 byte array.\n * Throws if the source string has invalid UTF-16 encoding.\n */\nfunction encode(s) {\n    // Calculate result length and allocate output array.\n    // encodedLength() also validates string and throws errors,\n    // so we don't need repeat validation here.\n    var arr = new Uint8Array(encodedLength(s));\n    var pos = 0;\n    for (var i = 0; i < s.length; i++) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            arr[pos++] = c;\n        }\n        else if (c < 0x800) {\n            arr[pos++] = 0xc0 | c >> 6;\n            arr[pos++] = 0x80 | c & 0x3f;\n        }\n        else if (c < 0xd800) {\n            arr[pos++] = 0xe0 | c >> 12;\n            arr[pos++] = 0x80 | (c >> 6) & 0x3f;\n            arr[pos++] = 0x80 | c & 0x3f;\n        }\n        else {\n            i++; // get one more character\n            c = (c & 0x3ff) << 10;\n            c |= s.charCodeAt(i) & 0x3ff;\n            c += 0x10000;\n            arr[pos++] = 0xf0 | c >> 18;\n            arr[pos++] = 0x80 | (c >> 12) & 0x3f;\n            arr[pos++] = 0x80 | (c >> 6) & 0x3f;\n            arr[pos++] = 0x80 | c & 0x3f;\n        }\n    }\n    return arr;\n}\nexports.encode = encode;\n/**\n * Returns the number of bytes required to encode the given string into UTF-8.\n * Throws if the source string has invalid UTF-16 encoding.\n */\nfunction encodedLength(s) {\n    var result = 0;\n    for (var i = 0; i < s.length; i++) {\n        var c = s.charCodeAt(i);\n        if (c < 0x80) {\n            result += 1;\n        }\n        else if (c < 0x800) {\n            result += 2;\n        }\n        else if (c < 0xd800) {\n            result += 3;\n        }\n        else if (c <= 0xdfff) {\n            if (i >= s.length - 1) {\n                throw new Error(INVALID_UTF16);\n            }\n            i++; // \"eat\" next character\n            result += 4;\n        }\n        else {\n            throw new Error(INVALID_UTF16);\n        }\n    }\n    return result;\n}\nexports.encodedLength = encodedLength;\n/**\n * Decodes the given byte array from UTF-8 into a string.\n * Throws if encoding is invalid.\n */\nfunction decode(arr) {\n    var chars = [];\n    for (var i = 0; i < arr.length; i++) {\n        var b = arr[i];\n        if (b & 0x80) {\n            var min = void 0;\n            if (b < 0xe0) {\n                // Need 1 more byte.\n                if (i >= arr.length) {\n                    throw new Error(INVALID_UTF8);\n                }\n                var n1 = arr[++i];\n                if ((n1 & 0xc0) !== 0x80) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b = (b & 0x1f) << 6 | (n1 & 0x3f);\n                min = 0x80;\n            }\n            else if (b < 0xf0) {\n                // Need 2 more bytes.\n                if (i >= arr.length - 1) {\n                    throw new Error(INVALID_UTF8);\n                }\n                var n1 = arr[++i];\n                var n2 = arr[++i];\n                if ((n1 & 0xc0) !== 0x80 || (n2 & 0xc0) !== 0x80) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b = (b & 0x0f) << 12 | (n1 & 0x3f) << 6 | (n2 & 0x3f);\n                min = 0x800;\n            }\n            else if (b < 0xf8) {\n                // Need 3 more bytes.\n                if (i >= arr.length - 2) {\n                    throw new Error(INVALID_UTF8);\n                }\n                var n1 = arr[++i];\n                var n2 = arr[++i];\n                var n3 = arr[++i];\n                if ((n1 & 0xc0) !== 0x80 || (n2 & 0xc0) !== 0x80 || (n3 & 0xc0) !== 0x80) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b = (b & 0x0f) << 18 | (n1 & 0x3f) << 12 | (n2 & 0x3f) << 6 | (n3 & 0x3f);\n                min = 0x10000;\n            }\n            else {\n                throw new Error(INVALID_UTF8);\n            }\n            if (b < min || (b >= 0xd800 && b <= 0xdfff)) {\n                throw new Error(INVALID_UTF8);\n            }\n            if (b >= 0x10000) {\n                // Surrogate pair.\n                if (b > 0x10ffff) {\n                    throw new Error(INVALID_UTF8);\n                }\n                b -= 0x10000;\n                chars.push(String.fromCharCode(0xd800 | (b >> 10)));\n                b = 0xdc00 | (b & 0x3ff);\n            }\n        }\n        chars.push(String.fromCharCode(b));\n    }\n    return chars.join(\"\");\n}\nexports.decode = decode;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __nested_webpack_require_19901__) {\n\n// required so we don't have to do require('pusher').default etc.\nmodule.exports = __nested_webpack_require_19901__(3).default;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __nested_webpack_exports__, __nested_webpack_require_20105__) {\n\n\"use strict\";\n// ESM COMPAT FLAG\n__nested_webpack_require_20105__.r(__nested_webpack_exports__);\n\n// CONCATENATED MODULE: ./src/runtimes/web/dom/script_receiver_factory.ts\nclass ScriptReceiverFactory {\n    constructor(prefix, name) {\n        this.lastId = 0;\n        this.prefix = prefix;\n        this.name = name;\n    }\n    create(callback) {\n        this.lastId++;\n        var number = this.lastId;\n        var id = this.prefix + number;\n        var name = this.name + '[' + number + ']';\n        var called = false;\n        var callbackWrapper = function () {\n            if (!called) {\n                callback.apply(null, arguments);\n                called = true;\n            }\n        };\n        this[number] = callbackWrapper;\n        return { number: number, id: id, name: name, callback: callbackWrapper };\n    }\n    remove(receiver) {\n        delete this[receiver.number];\n    }\n}\nvar ScriptReceivers = new ScriptReceiverFactory('_pusher_script_', 'Pusher.ScriptReceivers');\n\n// CONCATENATED MODULE: ./src/core/defaults.ts\nvar Defaults = {\n    VERSION: \"8.3.0\",\n    PROTOCOL: 7,\n    wsPort: 80,\n    wssPort: 443,\n    wsPath: '',\n    httpHost: 'sockjs.pusher.com',\n    httpPort: 80,\n    httpsPort: 443,\n    httpPath: '/pusher',\n    stats_host: 'stats.pusher.com',\n    authEndpoint: '/pusher/auth',\n    authTransport: 'ajax',\n    activityTimeout: 120000,\n    pongTimeout: 30000,\n    unavailableTimeout: 10000,\n    userAuthentication: {\n        endpoint: '/pusher/user-auth',\n        transport: 'ajax'\n    },\n    channelAuthorization: {\n        endpoint: '/pusher/auth',\n        transport: 'ajax'\n    },\n    cdn_http: \"http://js.pusher.com\",\n    cdn_https: \"https://js.pusher.com\",\n    dependency_suffix: \"\"\n};\n/* harmony default export */ var defaults = (Defaults);\n\n// CONCATENATED MODULE: ./src/runtimes/web/dom/dependency_loader.ts\n\n\nclass dependency_loader_DependencyLoader {\n    constructor(options) {\n        this.options = options;\n        this.receivers = options.receivers || ScriptReceivers;\n        this.loading = {};\n    }\n    load(name, options, callback) {\n        var self = this;\n        if (self.loading[name] && self.loading[name].length > 0) {\n            self.loading[name].push(callback);\n        }\n        else {\n            self.loading[name] = [callback];\n            var request = runtime.createScriptRequest(self.getPath(name, options));\n            var receiver = self.receivers.create(function (error) {\n                self.receivers.remove(receiver);\n                if (self.loading[name]) {\n                    var callbacks = self.loading[name];\n                    delete self.loading[name];\n                    var successCallback = function (wasSuccessful) {\n                        if (!wasSuccessful) {\n                            request.cleanup();\n                        }\n                    };\n                    for (var i = 0; i < callbacks.length; i++) {\n                        callbacks[i](error, successCallback);\n                    }\n                }\n            });\n            request.send(receiver);\n        }\n    }\n    getRoot(options) {\n        var cdn;\n        var protocol = runtime.getDocument().location.protocol;\n        if ((options && options.useTLS) || protocol === 'https:') {\n            cdn = this.options.cdn_https;\n        }\n        else {\n            cdn = this.options.cdn_http;\n        }\n        return cdn.replace(/\\/*$/, '') + '/' + this.options.version;\n    }\n    getPath(name, options) {\n        return this.getRoot(options) + '/' + name + this.options.suffix + '.js';\n    }\n}\n\n// CONCATENATED MODULE: ./src/runtimes/web/dom/dependencies.ts\n\n\n\nvar DependenciesReceivers = new ScriptReceiverFactory('_pusher_dependencies', 'Pusher.DependenciesReceivers');\nvar Dependencies = new dependency_loader_DependencyLoader({\n    cdn_http: defaults.cdn_http,\n    cdn_https: defaults.cdn_https,\n    version: defaults.VERSION,\n    suffix: defaults.dependency_suffix,\n    receivers: DependenciesReceivers\n});\n\n// CONCATENATED MODULE: ./src/core/utils/url_store.ts\nconst urlStore = {\n    baseUrl: 'https://pusher.com',\n    urls: {\n        authenticationEndpoint: {\n            path: '/docs/channels/server_api/authenticating_users'\n        },\n        authorizationEndpoint: {\n            path: '/docs/channels/server_api/authorizing-users/'\n        },\n        javascriptQuickStart: {\n            path: '/docs/javascript_quick_start'\n        },\n        triggeringClientEvents: {\n            path: '/docs/client_api_guide/client_events#trigger-events'\n        },\n        encryptedChannelSupport: {\n            fullUrl: 'https://github.com/pusher/pusher-js/tree/cc491015371a4bde5743d1c87a0fbac0feb53195#encrypted-channel-support'\n        }\n    }\n};\nconst buildLogSuffix = function (key) {\n    const urlPrefix = 'See:';\n    const urlObj = urlStore.urls[key];\n    if (!urlObj)\n        return '';\n    let url;\n    if (urlObj.fullUrl) {\n        url = urlObj.fullUrl;\n    }\n    else if (urlObj.path) {\n        url = urlStore.baseUrl + urlObj.path;\n    }\n    if (!url)\n        return '';\n    return `${urlPrefix} ${url}`;\n};\n/* harmony default export */ var url_store = ({ buildLogSuffix });\n\n// CONCATENATED MODULE: ./src/core/auth/options.ts\nvar AuthRequestType;\n(function (AuthRequestType) {\n    AuthRequestType[\"UserAuthentication\"] = \"user-authentication\";\n    AuthRequestType[\"ChannelAuthorization\"] = \"channel-authorization\";\n})(AuthRequestType || (AuthRequestType = {}));\n\n// CONCATENATED MODULE: ./src/core/errors.ts\nclass BadEventName extends Error {\n    constructor(msg) {\n        super(msg);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass BadChannelName extends Error {\n    constructor(msg) {\n        super(msg);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass RequestTimedOut extends Error {\n    constructor(msg) {\n        super(msg);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass TransportPriorityTooLow extends Error {\n    constructor(msg) {\n        super(msg);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass TransportClosed extends Error {\n    constructor(msg) {\n        super(msg);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass UnsupportedFeature extends Error {\n    constructor(msg) {\n        super(msg);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass UnsupportedTransport extends Error {\n    constructor(msg) {\n        super(msg);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass UnsupportedStrategy extends Error {\n    constructor(msg) {\n        super(msg);\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\nclass HTTPAuthError extends Error {\n    constructor(status, msg) {\n        super(msg);\n        this.status = status;\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n}\n\n// CONCATENATED MODULE: ./src/runtimes/isomorphic/auth/xhr_auth.ts\n\n\n\n\nconst ajax = function (context, query, authOptions, authRequestType, callback) {\n    const xhr = runtime.createXHR();\n    xhr.open('POST', authOptions.endpoint, true);\n    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    for (var headerName in authOptions.headers) {\n        xhr.setRequestHeader(headerName, authOptions.headers[headerName]);\n    }\n    if (authOptions.headersProvider != null) {\n        let dynamicHeaders = authOptions.headersProvider();\n        for (var headerName in dynamicHeaders) {\n            xhr.setRequestHeader(headerName, dynamicHeaders[headerName]);\n        }\n    }\n    xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n            if (xhr.status === 200) {\n                let data;\n                let parsed = false;\n                try {\n                    data = JSON.parse(xhr.responseText);\n                    parsed = true;\n                }\n                catch (e) {\n                    callback(new HTTPAuthError(200, `JSON returned from ${authRequestType.toString()} endpoint was invalid, yet status code was 200. Data was: ${xhr.responseText}`), null);\n                }\n                if (parsed) {\n                    callback(null, data);\n                }\n            }\n            else {\n                let suffix = '';\n                switch (authRequestType) {\n                    case AuthRequestType.UserAuthentication:\n                        suffix = url_store.buildLogSuffix('authenticationEndpoint');\n                        break;\n                    case AuthRequestType.ChannelAuthorization:\n                        suffix = `Clients must be authorized to join private or presence channels. ${url_store.buildLogSuffix('authorizationEndpoint')}`;\n                        break;\n                }\n                callback(new HTTPAuthError(xhr.status, `Unable to retrieve auth string from ${authRequestType.toString()} endpoint - ` +\n                    `received status: ${xhr.status} from ${authOptions.endpoint}. ${suffix}`), null);\n            }\n        }\n    };\n    xhr.send(query);\n    return xhr;\n};\n/* harmony default export */ var xhr_auth = (ajax);\n\n// CONCATENATED MODULE: ./src/core/base64.ts\nfunction encode(s) {\n    return btoa(utob(s));\n}\nvar fromCharCode = String.fromCharCode;\nvar b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nvar b64tab = {};\nfor (var base64_i = 0, l = b64chars.length; base64_i < l; base64_i++) {\n    b64tab[b64chars.charAt(base64_i)] = base64_i;\n}\nvar cb_utob = function (c) {\n    var cc = c.charCodeAt(0);\n    return cc < 0x80\n        ? c\n        : cc < 0x800\n            ? fromCharCode(0xc0 | (cc >>> 6)) + fromCharCode(0x80 | (cc & 0x3f))\n            : fromCharCode(0xe0 | ((cc >>> 12) & 0x0f)) +\n                fromCharCode(0x80 | ((cc >>> 6) & 0x3f)) +\n                fromCharCode(0x80 | (cc & 0x3f));\n};\nvar utob = function (u) {\n    return u.replace(/[^\\x00-\\x7F]/g, cb_utob);\n};\nvar cb_encode = function (ccc) {\n    var padlen = [0, 2, 1][ccc.length % 3];\n    var ord = (ccc.charCodeAt(0) << 16) |\n        ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8) |\n        (ccc.length > 2 ? ccc.charCodeAt(2) : 0);\n    var chars = [\n        b64chars.charAt(ord >>> 18),\n        b64chars.charAt((ord >>> 12) & 63),\n        padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n        padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n    ];\n    return chars.join('');\n};\nvar btoa = window.btoa ||\n    function (b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n\n// CONCATENATED MODULE: ./src/core/utils/timers/abstract_timer.ts\nclass Timer {\n    constructor(set, clear, delay, callback) {\n        this.clear = clear;\n        this.timer = set(() => {\n            if (this.timer) {\n                this.timer = callback(this.timer);\n            }\n        }, delay);\n    }\n    isRunning() {\n        return this.timer !== null;\n    }\n    ensureAborted() {\n        if (this.timer) {\n            this.clear(this.timer);\n            this.timer = null;\n        }\n    }\n}\n/* harmony default export */ var abstract_timer = (Timer);\n\n// CONCATENATED MODULE: ./src/core/utils/timers/index.ts\n\nfunction timers_clearTimeout(timer) {\n    window.clearTimeout(timer);\n}\nfunction timers_clearInterval(timer) {\n    window.clearInterval(timer);\n}\nclass timers_OneOffTimer extends abstract_timer {\n    constructor(delay, callback) {\n        super(setTimeout, timers_clearTimeout, delay, function (timer) {\n            callback();\n            return null;\n        });\n    }\n}\nclass timers_PeriodicTimer extends abstract_timer {\n    constructor(delay, callback) {\n        super(setInterval, timers_clearInterval, delay, function (timer) {\n            callback();\n            return timer;\n        });\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/util.ts\n\nvar Util = {\n    now() {\n        if (Date.now) {\n            return Date.now();\n        }\n        else {\n            return new Date().valueOf();\n        }\n    },\n    defer(callback) {\n        return new timers_OneOffTimer(0, callback);\n    },\n    method(name, ...args) {\n        var boundArguments = Array.prototype.slice.call(arguments, 1);\n        return function (object) {\n            return object[name].apply(object, boundArguments.concat(arguments));\n        };\n    }\n};\n/* harmony default export */ var util = (Util);\n\n// CONCATENATED MODULE: ./src/core/utils/collections.ts\n\n\nfunction extend(target, ...sources) {\n    for (var i = 0; i < sources.length; i++) {\n        var extensions = sources[i];\n        for (var property in extensions) {\n            if (extensions[property] &&\n                extensions[property].constructor &&\n                extensions[property].constructor === Object) {\n                target[property] = extend(target[property] || {}, extensions[property]);\n            }\n            else {\n                target[property] = extensions[property];\n            }\n        }\n    }\n    return target;\n}\nfunction stringify() {\n    var m = ['Pusher'];\n    for (var i = 0; i < arguments.length; i++) {\n        if (typeof arguments[i] === 'string') {\n            m.push(arguments[i]);\n        }\n        else {\n            m.push(safeJSONStringify(arguments[i]));\n        }\n    }\n    return m.join(' : ');\n}\nfunction arrayIndexOf(array, item) {\n    var nativeIndexOf = Array.prototype.indexOf;\n    if (array === null) {\n        return -1;\n    }\n    if (nativeIndexOf && array.indexOf === nativeIndexOf) {\n        return array.indexOf(item);\n    }\n    for (var i = 0, l = array.length; i < l; i++) {\n        if (array[i] === item) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction objectApply(object, f) {\n    for (var key in object) {\n        if (Object.prototype.hasOwnProperty.call(object, key)) {\n            f(object[key], key, object);\n        }\n    }\n}\nfunction keys(object) {\n    var keys = [];\n    objectApply(object, function (_, key) {\n        keys.push(key);\n    });\n    return keys;\n}\nfunction values(object) {\n    var values = [];\n    objectApply(object, function (value) {\n        values.push(value);\n    });\n    return values;\n}\nfunction apply(array, f, context) {\n    for (var i = 0; i < array.length; i++) {\n        f.call(context || window, array[i], i, array);\n    }\n}\nfunction map(array, f) {\n    var result = [];\n    for (var i = 0; i < array.length; i++) {\n        result.push(f(array[i], i, array, result));\n    }\n    return result;\n}\nfunction mapObject(object, f) {\n    var result = {};\n    objectApply(object, function (value, key) {\n        result[key] = f(value);\n    });\n    return result;\n}\nfunction filter(array, test) {\n    test =\n        test ||\n            function (value) {\n                return !!value;\n            };\n    var result = [];\n    for (var i = 0; i < array.length; i++) {\n        if (test(array[i], i, array, result)) {\n            result.push(array[i]);\n        }\n    }\n    return result;\n}\nfunction filterObject(object, test) {\n    var result = {};\n    objectApply(object, function (value, key) {\n        if ((test && test(value, key, object, result)) || Boolean(value)) {\n            result[key] = value;\n        }\n    });\n    return result;\n}\nfunction flatten(object) {\n    var result = [];\n    objectApply(object, function (value, key) {\n        result.push([key, value]);\n    });\n    return result;\n}\nfunction any(array, test) {\n    for (var i = 0; i < array.length; i++) {\n        if (test(array[i], i, array)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction collections_all(array, test) {\n    for (var i = 0; i < array.length; i++) {\n        if (!test(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction encodeParamsObject(data) {\n    return mapObject(data, function (value) {\n        if (typeof value === 'object') {\n            value = safeJSONStringify(value);\n        }\n        return encodeURIComponent(encode(value.toString()));\n    });\n}\nfunction buildQueryString(data) {\n    var params = filterObject(data, function (value) {\n        return value !== undefined;\n    });\n    var query = map(flatten(encodeParamsObject(params)), util.method('join', '=')).join('&');\n    return query;\n}\nfunction decycleObject(object) {\n    var objects = [], paths = [];\n    return (function derez(value, path) {\n        var i, name, nu;\n        switch (typeof value) {\n            case 'object':\n                if (!value) {\n                    return null;\n                }\n                for (i = 0; i < objects.length; i += 1) {\n                    if (objects[i] === value) {\n                        return { $ref: paths[i] };\n                    }\n                }\n                objects.push(value);\n                paths.push(path);\n                if (Object.prototype.toString.apply(value) === '[object Array]') {\n                    nu = [];\n                    for (i = 0; i < value.length; i += 1) {\n                        nu[i] = derez(value[i], path + '[' + i + ']');\n                    }\n                }\n                else {\n                    nu = {};\n                    for (name in value) {\n                        if (Object.prototype.hasOwnProperty.call(value, name)) {\n                            nu[name] = derez(value[name], path + '[' + JSON.stringify(name) + ']');\n                        }\n                    }\n                }\n                return nu;\n            case 'number':\n            case 'string':\n            case 'boolean':\n                return value;\n        }\n    })(object, '$');\n}\nfunction safeJSONStringify(source) {\n    try {\n        return JSON.stringify(source);\n    }\n    catch (e) {\n        return JSON.stringify(decycleObject(source));\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/logger.ts\n\n\nclass logger_Logger {\n    constructor() {\n        this.globalLog = (message) => {\n            if (window.console && window.console.log) {\n                window.console.log(message);\n            }\n        };\n    }\n    debug(...args) {\n        this.log(this.globalLog, args);\n    }\n    warn(...args) {\n        this.log(this.globalLogWarn, args);\n    }\n    error(...args) {\n        this.log(this.globalLogError, args);\n    }\n    globalLogWarn(message) {\n        if (window.console && window.console.warn) {\n            window.console.warn(message);\n        }\n        else {\n            this.globalLog(message);\n        }\n    }\n    globalLogError(message) {\n        if (window.console && window.console.error) {\n            window.console.error(message);\n        }\n        else {\n            this.globalLogWarn(message);\n        }\n    }\n    log(defaultLoggingFunction, ...args) {\n        var message = stringify.apply(this, arguments);\n        if (core_pusher.log) {\n            core_pusher.log(message);\n        }\n        else if (core_pusher.logToConsole) {\n            const log = defaultLoggingFunction.bind(this);\n            log(message);\n        }\n    }\n}\n/* harmony default export */ var logger = (new logger_Logger());\n\n// CONCATENATED MODULE: ./src/runtimes/web/auth/jsonp_auth.ts\n\nvar jsonp = function (context, query, authOptions, authRequestType, callback) {\n    if (authOptions.headers !== undefined ||\n        authOptions.headersProvider != null) {\n        logger.warn(`To send headers with the ${authRequestType.toString()} request, you must use AJAX, rather than JSONP.`);\n    }\n    var callbackName = context.nextAuthCallbackID.toString();\n    context.nextAuthCallbackID++;\n    var document = context.getDocument();\n    var script = document.createElement('script');\n    context.auth_callbacks[callbackName] = function (data) {\n        callback(null, data);\n    };\n    var callback_name = \"Pusher.auth_callbacks['\" + callbackName + \"']\";\n    script.src =\n        authOptions.endpoint +\n            '?callback=' +\n            encodeURIComponent(callback_name) +\n            '&' +\n            query;\n    var head = document.getElementsByTagName('head')[0] || document.documentElement;\n    head.insertBefore(script, head.firstChild);\n};\n/* harmony default export */ var jsonp_auth = (jsonp);\n\n// CONCATENATED MODULE: ./src/runtimes/web/dom/script_request.ts\nclass ScriptRequest {\n    constructor(src) {\n        this.src = src;\n    }\n    send(receiver) {\n        var self = this;\n        var errorString = 'Error loading ' + self.src;\n        self.script = document.createElement('script');\n        self.script.id = receiver.id;\n        self.script.src = self.src;\n        self.script.type = 'text/javascript';\n        self.script.charset = 'UTF-8';\n        if (self.script.addEventListener) {\n            self.script.onerror = function () {\n                receiver.callback(errorString);\n            };\n            self.script.onload = function () {\n                receiver.callback(null);\n            };\n        }\n        else {\n            self.script.onreadystatechange = function () {\n                if (self.script.readyState === 'loaded' ||\n                    self.script.readyState === 'complete') {\n                    receiver.callback(null);\n                }\n            };\n        }\n        if (self.script.async === undefined &&\n            document.attachEvent &&\n            /opera/i.test(navigator.userAgent)) {\n            self.errorScript = document.createElement('script');\n            self.errorScript.id = receiver.id + '_error';\n            self.errorScript.text = receiver.name + \"('\" + errorString + \"');\";\n            self.script.async = self.errorScript.async = false;\n        }\n        else {\n            self.script.async = true;\n        }\n        var head = document.getElementsByTagName('head')[0];\n        head.insertBefore(self.script, head.firstChild);\n        if (self.errorScript) {\n            head.insertBefore(self.errorScript, self.script.nextSibling);\n        }\n    }\n    cleanup() {\n        if (this.script) {\n            this.script.onload = this.script.onerror = null;\n            this.script.onreadystatechange = null;\n        }\n        if (this.script && this.script.parentNode) {\n            this.script.parentNode.removeChild(this.script);\n        }\n        if (this.errorScript && this.errorScript.parentNode) {\n            this.errorScript.parentNode.removeChild(this.errorScript);\n        }\n        this.script = null;\n        this.errorScript = null;\n    }\n}\n\n// CONCATENATED MODULE: ./src/runtimes/web/dom/jsonp_request.ts\n\n\nclass jsonp_request_JSONPRequest {\n    constructor(url, data) {\n        this.url = url;\n        this.data = data;\n    }\n    send(receiver) {\n        if (this.request) {\n            return;\n        }\n        var query = buildQueryString(this.data);\n        var url = this.url + '/' + receiver.number + '?' + query;\n        this.request = runtime.createScriptRequest(url);\n        this.request.send(receiver);\n    }\n    cleanup() {\n        if (this.request) {\n            this.request.cleanup();\n        }\n    }\n}\n\n// CONCATENATED MODULE: ./src/runtimes/web/timeline/jsonp_timeline.ts\n\n\nvar getAgent = function (sender, useTLS) {\n    return function (data, callback) {\n        var scheme = 'http' + (useTLS ? 's' : '') + '://';\n        var url = scheme + (sender.host || sender.options.host) + sender.options.path;\n        var request = runtime.createJSONPRequest(url, data);\n        var receiver = runtime.ScriptReceivers.create(function (error, result) {\n            ScriptReceivers.remove(receiver);\n            request.cleanup();\n            if (result && result.host) {\n                sender.host = result.host;\n            }\n            if (callback) {\n                callback(error, result);\n            }\n        });\n        request.send(receiver);\n    };\n};\nvar jsonp_timeline_jsonp = {\n    name: 'jsonp',\n    getAgent\n};\n/* harmony default export */ var jsonp_timeline = (jsonp_timeline_jsonp);\n\n// CONCATENATED MODULE: ./src/core/transports/url_schemes.ts\n\nfunction getGenericURL(baseScheme, params, path) {\n    var scheme = baseScheme + (params.useTLS ? 's' : '');\n    var host = params.useTLS ? params.hostTLS : params.hostNonTLS;\n    return scheme + '://' + host + path;\n}\nfunction getGenericPath(key, queryString) {\n    var path = '/app/' + key;\n    var query = '?protocol=' +\n        defaults.PROTOCOL +\n        '&client=js' +\n        '&version=' +\n        defaults.VERSION +\n        (queryString ? '&' + queryString : '');\n    return path + query;\n}\nvar ws = {\n    getInitial: function (key, params) {\n        var path = (params.httpPath || '') + getGenericPath(key, 'flash=false');\n        return getGenericURL('ws', params, path);\n    }\n};\nvar http = {\n    getInitial: function (key, params) {\n        var path = (params.httpPath || '/pusher') + getGenericPath(key);\n        return getGenericURL('http', params, path);\n    }\n};\nvar sockjs = {\n    getInitial: function (key, params) {\n        return getGenericURL('http', params, params.httpPath || '/pusher');\n    },\n    getPath: function (key, params) {\n        return getGenericPath(key);\n    }\n};\n\n// CONCATENATED MODULE: ./src/core/events/callback_registry.ts\n\nclass callback_registry_CallbackRegistry {\n    constructor() {\n        this._callbacks = {};\n    }\n    get(name) {\n        return this._callbacks[prefix(name)];\n    }\n    add(name, callback, context) {\n        var prefixedEventName = prefix(name);\n        this._callbacks[prefixedEventName] =\n            this._callbacks[prefixedEventName] || [];\n        this._callbacks[prefixedEventName].push({\n            fn: callback,\n            context: context\n        });\n    }\n    remove(name, callback, context) {\n        if (!name && !callback && !context) {\n            this._callbacks = {};\n            return;\n        }\n        var names = name ? [prefix(name)] : keys(this._callbacks);\n        if (callback || context) {\n            this.removeCallback(names, callback, context);\n        }\n        else {\n            this.removeAllCallbacks(names);\n        }\n    }\n    removeCallback(names, callback, context) {\n        apply(names, function (name) {\n            this._callbacks[name] = filter(this._callbacks[name] || [], function (binding) {\n                return ((callback && callback !== binding.fn) ||\n                    (context && context !== binding.context));\n            });\n            if (this._callbacks[name].length === 0) {\n                delete this._callbacks[name];\n            }\n        }, this);\n    }\n    removeAllCallbacks(names) {\n        apply(names, function (name) {\n            delete this._callbacks[name];\n        }, this);\n    }\n}\nfunction prefix(name) {\n    return '_' + name;\n}\n\n// CONCATENATED MODULE: ./src/core/events/dispatcher.ts\n\n\nclass dispatcher_Dispatcher {\n    constructor(failThrough) {\n        this.callbacks = new callback_registry_CallbackRegistry();\n        this.global_callbacks = [];\n        this.failThrough = failThrough;\n    }\n    bind(eventName, callback, context) {\n        this.callbacks.add(eventName, callback, context);\n        return this;\n    }\n    bind_global(callback) {\n        this.global_callbacks.push(callback);\n        return this;\n    }\n    unbind(eventName, callback, context) {\n        this.callbacks.remove(eventName, callback, context);\n        return this;\n    }\n    unbind_global(callback) {\n        if (!callback) {\n            this.global_callbacks = [];\n            return this;\n        }\n        this.global_callbacks = filter(this.global_callbacks || [], c => c !== callback);\n        return this;\n    }\n    unbind_all() {\n        this.unbind();\n        this.unbind_global();\n        return this;\n    }\n    emit(eventName, data, metadata) {\n        for (var i = 0; i < this.global_callbacks.length; i++) {\n            this.global_callbacks[i](eventName, data);\n        }\n        var callbacks = this.callbacks.get(eventName);\n        var args = [];\n        if (metadata) {\n            args.push(data, metadata);\n        }\n        else if (data) {\n            args.push(data);\n        }\n        if (callbacks && callbacks.length > 0) {\n            for (var i = 0; i < callbacks.length; i++) {\n                callbacks[i].fn.apply(callbacks[i].context || window, args);\n            }\n        }\n        else if (this.failThrough) {\n            this.failThrough(eventName, data);\n        }\n        return this;\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/transports/transport_connection.ts\n\n\n\n\n\nclass transport_connection_TransportConnection extends dispatcher_Dispatcher {\n    constructor(hooks, name, priority, key, options) {\n        super();\n        this.initialize = runtime.transportConnectionInitializer;\n        this.hooks = hooks;\n        this.name = name;\n        this.priority = priority;\n        this.key = key;\n        this.options = options;\n        this.state = 'new';\n        this.timeline = options.timeline;\n        this.activityTimeout = options.activityTimeout;\n        this.id = this.timeline.generateUniqueID();\n    }\n    handlesActivityChecks() {\n        return Boolean(this.hooks.handlesActivityChecks);\n    }\n    supportsPing() {\n        return Boolean(this.hooks.supportsPing);\n    }\n    connect() {\n        if (this.socket || this.state !== 'initialized') {\n            return false;\n        }\n        var url = this.hooks.urls.getInitial(this.key, this.options);\n        try {\n            this.socket = this.hooks.getSocket(url, this.options);\n        }\n        catch (e) {\n            util.defer(() => {\n                this.onError(e);\n                this.changeState('closed');\n            });\n            return false;\n        }\n        this.bindListeners();\n        logger.debug('Connecting', { transport: this.name, url });\n        this.changeState('connecting');\n        return true;\n    }\n    close() {\n        if (this.socket) {\n            this.socket.close();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    send(data) {\n        if (this.state === 'open') {\n            util.defer(() => {\n                if (this.socket) {\n                    this.socket.send(data);\n                }\n            });\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    ping() {\n        if (this.state === 'open' && this.supportsPing()) {\n            this.socket.ping();\n        }\n    }\n    onOpen() {\n        if (this.hooks.beforeOpen) {\n            this.hooks.beforeOpen(this.socket, this.hooks.urls.getPath(this.key, this.options));\n        }\n        this.changeState('open');\n        this.socket.onopen = undefined;\n    }\n    onError(error) {\n        this.emit('error', { type: 'WebSocketError', error: error });\n        this.timeline.error(this.buildTimelineMessage({ error: error.toString() }));\n    }\n    onClose(closeEvent) {\n        if (closeEvent) {\n            this.changeState('closed', {\n                code: closeEvent.code,\n                reason: closeEvent.reason,\n                wasClean: closeEvent.wasClean\n            });\n        }\n        else {\n            this.changeState('closed');\n        }\n        this.unbindListeners();\n        this.socket = undefined;\n    }\n    onMessage(message) {\n        this.emit('message', message);\n    }\n    onActivity() {\n        this.emit('activity');\n    }\n    bindListeners() {\n        this.socket.onopen = () => {\n            this.onOpen();\n        };\n        this.socket.onerror = error => {\n            this.onError(error);\n        };\n        this.socket.onclose = closeEvent => {\n            this.onClose(closeEvent);\n        };\n        this.socket.onmessage = message => {\n            this.onMessage(message);\n        };\n        if (this.supportsPing()) {\n            this.socket.onactivity = () => {\n                this.onActivity();\n            };\n        }\n    }\n    unbindListeners() {\n        if (this.socket) {\n            this.socket.onopen = undefined;\n            this.socket.onerror = undefined;\n            this.socket.onclose = undefined;\n            this.socket.onmessage = undefined;\n            if (this.supportsPing()) {\n                this.socket.onactivity = undefined;\n            }\n        }\n    }\n    changeState(state, params) {\n        this.state = state;\n        this.timeline.info(this.buildTimelineMessage({\n            state: state,\n            params: params\n        }));\n        this.emit(state, params);\n    }\n    buildTimelineMessage(message) {\n        return extend({ cid: this.id }, message);\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/transports/transport.ts\n\nclass transport_Transport {\n    constructor(hooks) {\n        this.hooks = hooks;\n    }\n    isSupported(environment) {\n        return this.hooks.isSupported(environment);\n    }\n    createConnection(name, priority, key, options) {\n        return new transport_connection_TransportConnection(this.hooks, name, priority, key, options);\n    }\n}\n\n// CONCATENATED MODULE: ./src/runtimes/isomorphic/transports/transports.ts\n\n\n\n\nvar WSTransport = new transport_Transport({\n    urls: ws,\n    handlesActivityChecks: false,\n    supportsPing: false,\n    isInitialized: function () {\n        return Boolean(runtime.getWebSocketAPI());\n    },\n    isSupported: function () {\n        return Boolean(runtime.getWebSocketAPI());\n    },\n    getSocket: function (url) {\n        return runtime.createWebSocket(url);\n    }\n});\nvar httpConfiguration = {\n    urls: http,\n    handlesActivityChecks: false,\n    supportsPing: true,\n    isInitialized: function () {\n        return true;\n    }\n};\nvar streamingConfiguration = extend({\n    getSocket: function (url) {\n        return runtime.HTTPFactory.createStreamingSocket(url);\n    }\n}, httpConfiguration);\nvar pollingConfiguration = extend({\n    getSocket: function (url) {\n        return runtime.HTTPFactory.createPollingSocket(url);\n    }\n}, httpConfiguration);\nvar xhrConfiguration = {\n    isSupported: function () {\n        return runtime.isXHRSupported();\n    }\n};\nvar XHRStreamingTransport = new transport_Transport((extend({}, streamingConfiguration, xhrConfiguration)));\nvar XHRPollingTransport = new transport_Transport(extend({}, pollingConfiguration, xhrConfiguration));\nvar Transports = {\n    ws: WSTransport,\n    xhr_streaming: XHRStreamingTransport,\n    xhr_polling: XHRPollingTransport\n};\n/* harmony default export */ var transports = (Transports);\n\n// CONCATENATED MODULE: ./src/runtimes/web/transports/transports.ts\n\n\n\n\n\n\nvar SockJSTransport = new transport_Transport({\n    file: 'sockjs',\n    urls: sockjs,\n    handlesActivityChecks: true,\n    supportsPing: false,\n    isSupported: function () {\n        return true;\n    },\n    isInitialized: function () {\n        return window.SockJS !== undefined;\n    },\n    getSocket: function (url, options) {\n        return new window.SockJS(url, null, {\n            js_path: Dependencies.getPath('sockjs', {\n                useTLS: options.useTLS\n            }),\n            ignore_null_origin: options.ignoreNullOrigin\n        });\n    },\n    beforeOpen: function (socket, path) {\n        socket.send(JSON.stringify({\n            path: path\n        }));\n    }\n});\nvar xdrConfiguration = {\n    isSupported: function (environment) {\n        var yes = runtime.isXDRSupported(environment.useTLS);\n        return yes;\n    }\n};\nvar XDRStreamingTransport = new transport_Transport((extend({}, streamingConfiguration, xdrConfiguration)));\nvar XDRPollingTransport = new transport_Transport(extend({}, pollingConfiguration, xdrConfiguration));\ntransports.xdr_streaming = XDRStreamingTransport;\ntransports.xdr_polling = XDRPollingTransport;\ntransports.sockjs = SockJSTransport;\n/* harmony default export */ var transports_transports = (transports);\n\n// CONCATENATED MODULE: ./src/runtimes/web/net_info.ts\n\nclass net_info_NetInfo extends dispatcher_Dispatcher {\n    constructor() {\n        super();\n        var self = this;\n        if (window.addEventListener !== undefined) {\n            window.addEventListener('online', function () {\n                self.emit('online');\n            }, false);\n            window.addEventListener('offline', function () {\n                self.emit('offline');\n            }, false);\n        }\n    }\n    isOnline() {\n        if (window.navigator.onLine === undefined) {\n            return true;\n        }\n        else {\n            return window.navigator.onLine;\n        }\n    }\n}\nvar net_info_Network = new net_info_NetInfo();\n\n// CONCATENATED MODULE: ./src/core/transports/assistant_to_the_transport_manager.ts\n\n\nclass assistant_to_the_transport_manager_AssistantToTheTransportManager {\n    constructor(manager, transport, options) {\n        this.manager = manager;\n        this.transport = transport;\n        this.minPingDelay = options.minPingDelay;\n        this.maxPingDelay = options.maxPingDelay;\n        this.pingDelay = undefined;\n    }\n    createConnection(name, priority, key, options) {\n        options = extend({}, options, {\n            activityTimeout: this.pingDelay\n        });\n        var connection = this.transport.createConnection(name, priority, key, options);\n        var openTimestamp = null;\n        var onOpen = function () {\n            connection.unbind('open', onOpen);\n            connection.bind('closed', onClosed);\n            openTimestamp = util.now();\n        };\n        var onClosed = closeEvent => {\n            connection.unbind('closed', onClosed);\n            if (closeEvent.code === 1002 || closeEvent.code === 1003) {\n                this.manager.reportDeath();\n            }\n            else if (!closeEvent.wasClean && openTimestamp) {\n                var lifespan = util.now() - openTimestamp;\n                if (lifespan < 2 * this.maxPingDelay) {\n                    this.manager.reportDeath();\n                    this.pingDelay = Math.max(lifespan / 2, this.minPingDelay);\n                }\n            }\n        };\n        connection.bind('open', onOpen);\n        return connection;\n    }\n    isSupported(environment) {\n        return this.manager.isAlive() && this.transport.isSupported(environment);\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/connection/protocol/protocol.ts\nconst Protocol = {\n    decodeMessage: function (messageEvent) {\n        try {\n            var messageData = JSON.parse(messageEvent.data);\n            var pusherEventData = messageData.data;\n            if (typeof pusherEventData === 'string') {\n                try {\n                    pusherEventData = JSON.parse(messageData.data);\n                }\n                catch (e) { }\n            }\n            var pusherEvent = {\n                event: messageData.event,\n                channel: messageData.channel,\n                data: pusherEventData\n            };\n            if (messageData.user_id) {\n                pusherEvent.user_id = messageData.user_id;\n            }\n            return pusherEvent;\n        }\n        catch (e) {\n            throw { type: 'MessageParseError', error: e, data: messageEvent.data };\n        }\n    },\n    encodeMessage: function (event) {\n        return JSON.stringify(event);\n    },\n    processHandshake: function (messageEvent) {\n        var message = Protocol.decodeMessage(messageEvent);\n        if (message.event === 'pusher:connection_established') {\n            if (!message.data.activity_timeout) {\n                throw 'No activity timeout specified in handshake';\n            }\n            return {\n                action: 'connected',\n                id: message.data.socket_id,\n                activityTimeout: message.data.activity_timeout * 1000\n            };\n        }\n        else if (message.event === 'pusher:error') {\n            return {\n                action: this.getCloseAction(message.data),\n                error: this.getCloseError(message.data)\n            };\n        }\n        else {\n            throw 'Invalid handshake';\n        }\n    },\n    getCloseAction: function (closeEvent) {\n        if (closeEvent.code < 4000) {\n            if (closeEvent.code >= 1002 && closeEvent.code <= 1004) {\n                return 'backoff';\n            }\n            else {\n                return null;\n            }\n        }\n        else if (closeEvent.code === 4000) {\n            return 'tls_only';\n        }\n        else if (closeEvent.code < 4100) {\n            return 'refused';\n        }\n        else if (closeEvent.code < 4200) {\n            return 'backoff';\n        }\n        else if (closeEvent.code < 4300) {\n            return 'retry';\n        }\n        else {\n            return 'refused';\n        }\n    },\n    getCloseError: function (closeEvent) {\n        if (closeEvent.code !== 1000 && closeEvent.code !== 1001) {\n            return {\n                type: 'PusherError',\n                data: {\n                    code: closeEvent.code,\n                    message: closeEvent.reason || closeEvent.message\n                }\n            };\n        }\n        else {\n            return null;\n        }\n    }\n};\n/* harmony default export */ var protocol_protocol = (Protocol);\n\n// CONCATENATED MODULE: ./src/core/connection/connection.ts\n\n\n\n\nclass connection_Connection extends dispatcher_Dispatcher {\n    constructor(id, transport) {\n        super();\n        this.id = id;\n        this.transport = transport;\n        this.activityTimeout = transport.activityTimeout;\n        this.bindListeners();\n    }\n    handlesActivityChecks() {\n        return this.transport.handlesActivityChecks();\n    }\n    send(data) {\n        return this.transport.send(data);\n    }\n    send_event(name, data, channel) {\n        var event = { event: name, data: data };\n        if (channel) {\n            event.channel = channel;\n        }\n        logger.debug('Event sent', event);\n        return this.send(protocol_protocol.encodeMessage(event));\n    }\n    ping() {\n        if (this.transport.supportsPing()) {\n            this.transport.ping();\n        }\n        else {\n            this.send_event('pusher:ping', {});\n        }\n    }\n    close() {\n        this.transport.close();\n    }\n    bindListeners() {\n        var listeners = {\n            message: (messageEvent) => {\n                var pusherEvent;\n                try {\n                    pusherEvent = protocol_protocol.decodeMessage(messageEvent);\n                }\n                catch (e) {\n                    this.emit('error', {\n                        type: 'MessageParseError',\n                        error: e,\n                        data: messageEvent.data\n                    });\n                }\n                if (pusherEvent !== undefined) {\n                    logger.debug('Event recd', pusherEvent);\n                    switch (pusherEvent.event) {\n                        case 'pusher:error':\n                            this.emit('error', {\n                                type: 'PusherError',\n                                data: pusherEvent.data\n                            });\n                            break;\n                        case 'pusher:ping':\n                            this.emit('ping');\n                            break;\n                        case 'pusher:pong':\n                            this.emit('pong');\n                            break;\n                    }\n                    this.emit('message', pusherEvent);\n                }\n            },\n            activity: () => {\n                this.emit('activity');\n            },\n            error: error => {\n                this.emit('error', error);\n            },\n            closed: closeEvent => {\n                unbindListeners();\n                if (closeEvent && closeEvent.code) {\n                    this.handleCloseEvent(closeEvent);\n                }\n                this.transport = null;\n                this.emit('closed');\n            }\n        };\n        var unbindListeners = () => {\n            objectApply(listeners, (listener, event) => {\n                this.transport.unbind(event, listener);\n            });\n        };\n        objectApply(listeners, (listener, event) => {\n            this.transport.bind(event, listener);\n        });\n    }\n    handleCloseEvent(closeEvent) {\n        var action = protocol_protocol.getCloseAction(closeEvent);\n        var error = protocol_protocol.getCloseError(closeEvent);\n        if (error) {\n            this.emit('error', error);\n        }\n        if (action) {\n            this.emit(action, { action: action, error: error });\n        }\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/connection/handshake/index.ts\n\n\n\nclass handshake_Handshake {\n    constructor(transport, callback) {\n        this.transport = transport;\n        this.callback = callback;\n        this.bindListeners();\n    }\n    close() {\n        this.unbindListeners();\n        this.transport.close();\n    }\n    bindListeners() {\n        this.onMessage = m => {\n            this.unbindListeners();\n            var result;\n            try {\n                result = protocol_protocol.processHandshake(m);\n            }\n            catch (e) {\n                this.finish('error', { error: e });\n                this.transport.close();\n                return;\n            }\n            if (result.action === 'connected') {\n                this.finish('connected', {\n                    connection: new connection_Connection(result.id, this.transport),\n                    activityTimeout: result.activityTimeout\n                });\n            }\n            else {\n                this.finish(result.action, { error: result.error });\n                this.transport.close();\n            }\n        };\n        this.onClosed = closeEvent => {\n            this.unbindListeners();\n            var action = protocol_protocol.getCloseAction(closeEvent) || 'backoff';\n            var error = protocol_protocol.getCloseError(closeEvent);\n            this.finish(action, { error: error });\n        };\n        this.transport.bind('message', this.onMessage);\n        this.transport.bind('closed', this.onClosed);\n    }\n    unbindListeners() {\n        this.transport.unbind('message', this.onMessage);\n        this.transport.unbind('closed', this.onClosed);\n    }\n    finish(action, params) {\n        this.callback(extend({ transport: this.transport, action: action }, params));\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/timeline/timeline_sender.ts\n\nclass timeline_sender_TimelineSender {\n    constructor(timeline, options) {\n        this.timeline = timeline;\n        this.options = options || {};\n    }\n    send(useTLS, callback) {\n        if (this.timeline.isEmpty()) {\n            return;\n        }\n        this.timeline.send(runtime.TimelineTransport.getAgent(this, useTLS), callback);\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/channels/channel.ts\n\n\n\n\n\nclass channel_Channel extends dispatcher_Dispatcher {\n    constructor(name, pusher) {\n        super(function (event, data) {\n            logger.debug('No callbacks on ' + name + ' for ' + event);\n        });\n        this.name = name;\n        this.pusher = pusher;\n        this.subscribed = false;\n        this.subscriptionPending = false;\n        this.subscriptionCancelled = false;\n    }\n    authorize(socketId, callback) {\n        return callback(null, { auth: '' });\n    }\n    trigger(event, data) {\n        if (event.indexOf('client-') !== 0) {\n            throw new BadEventName(\"Event '\" + event + \"' does not start with 'client-'\");\n        }\n        if (!this.subscribed) {\n            var suffix = url_store.buildLogSuffix('triggeringClientEvents');\n            logger.warn(`Client event triggered before channel 'subscription_succeeded' event . ${suffix}`);\n        }\n        return this.pusher.send_event(event, data, this.name);\n    }\n    disconnect() {\n        this.subscribed = false;\n        this.subscriptionPending = false;\n    }\n    handleEvent(event) {\n        var eventName = event.event;\n        var data = event.data;\n        if (eventName === 'pusher_internal:subscription_succeeded') {\n            this.handleSubscriptionSucceededEvent(event);\n        }\n        else if (eventName === 'pusher_internal:subscription_count') {\n            this.handleSubscriptionCountEvent(event);\n        }\n        else if (eventName.indexOf('pusher_internal:') !== 0) {\n            var metadata = {};\n            this.emit(eventName, data, metadata);\n        }\n    }\n    handleSubscriptionSucceededEvent(event) {\n        this.subscriptionPending = false;\n        this.subscribed = true;\n        if (this.subscriptionCancelled) {\n            this.pusher.unsubscribe(this.name);\n        }\n        else {\n            this.emit('pusher:subscription_succeeded', event.data);\n        }\n    }\n    handleSubscriptionCountEvent(event) {\n        if (event.data.subscription_count) {\n            this.subscriptionCount = event.data.subscription_count;\n        }\n        this.emit('pusher:subscription_count', event.data);\n    }\n    subscribe() {\n        if (this.subscribed) {\n            return;\n        }\n        this.subscriptionPending = true;\n        this.subscriptionCancelled = false;\n        this.authorize(this.pusher.connection.socket_id, (error, data) => {\n            if (error) {\n                this.subscriptionPending = false;\n                logger.error(error.toString());\n                this.emit('pusher:subscription_error', Object.assign({}, {\n                    type: 'AuthError',\n                    error: error.message\n                }, error instanceof HTTPAuthError ? { status: error.status } : {}));\n            }\n            else {\n                this.pusher.send_event('pusher:subscribe', {\n                    auth: data.auth,\n                    channel_data: data.channel_data,\n                    channel: this.name\n                });\n            }\n        });\n    }\n    unsubscribe() {\n        this.subscribed = false;\n        this.pusher.send_event('pusher:unsubscribe', {\n            channel: this.name\n        });\n    }\n    cancelSubscription() {\n        this.subscriptionCancelled = true;\n    }\n    reinstateSubscription() {\n        this.subscriptionCancelled = false;\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/channels/private_channel.ts\n\nclass private_channel_PrivateChannel extends channel_Channel {\n    authorize(socketId, callback) {\n        return this.pusher.config.channelAuthorizer({\n            channelName: this.name,\n            socketId: socketId\n        }, callback);\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/channels/members.ts\n\nclass members_Members {\n    constructor() {\n        this.reset();\n    }\n    get(id) {\n        if (Object.prototype.hasOwnProperty.call(this.members, id)) {\n            return {\n                id: id,\n                info: this.members[id]\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    each(callback) {\n        objectApply(this.members, (member, id) => {\n            callback(this.get(id));\n        });\n    }\n    setMyID(id) {\n        this.myID = id;\n    }\n    onSubscription(subscriptionData) {\n        this.members = subscriptionData.presence.hash;\n        this.count = subscriptionData.presence.count;\n        this.me = this.get(this.myID);\n    }\n    addMember(memberData) {\n        if (this.get(memberData.user_id) === null) {\n            this.count++;\n        }\n        this.members[memberData.user_id] = memberData.user_info;\n        return this.get(memberData.user_id);\n    }\n    removeMember(memberData) {\n        var member = this.get(memberData.user_id);\n        if (member) {\n            delete this.members[memberData.user_id];\n            this.count--;\n        }\n        return member;\n    }\n    reset() {\n        this.members = {};\n        this.count = 0;\n        this.myID = null;\n        this.me = null;\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/channels/presence_channel.ts\nvar __awaiter = ( false) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n\n\n\nclass presence_channel_PresenceChannel extends private_channel_PrivateChannel {\n    constructor(name, pusher) {\n        super(name, pusher);\n        this.members = new members_Members();\n    }\n    authorize(socketId, callback) {\n        super.authorize(socketId, (error, authData) => __awaiter(this, void 0, void 0, function* () {\n            if (!error) {\n                authData = authData;\n                if (authData.channel_data != null) {\n                    var channelData = JSON.parse(authData.channel_data);\n                    this.members.setMyID(channelData.user_id);\n                }\n                else {\n                    yield this.pusher.user.signinDonePromise;\n                    if (this.pusher.user.user_data != null) {\n                        this.members.setMyID(this.pusher.user.user_data.id);\n                    }\n                    else {\n                        let suffix = url_store.buildLogSuffix('authorizationEndpoint');\n                        logger.error(`Invalid auth response for channel '${this.name}', ` +\n                            `expected 'channel_data' field. ${suffix}, ` +\n                            `or the user should be signed in.`);\n                        callback('Invalid auth response');\n                        return;\n                    }\n                }\n            }\n            callback(error, authData);\n        }));\n    }\n    handleEvent(event) {\n        var eventName = event.event;\n        if (eventName.indexOf('pusher_internal:') === 0) {\n            this.handleInternalEvent(event);\n        }\n        else {\n            var data = event.data;\n            var metadata = {};\n            if (event.user_id) {\n                metadata.user_id = event.user_id;\n            }\n            this.emit(eventName, data, metadata);\n        }\n    }\n    handleInternalEvent(event) {\n        var eventName = event.event;\n        var data = event.data;\n        switch (eventName) {\n            case 'pusher_internal:subscription_succeeded':\n                this.handleSubscriptionSucceededEvent(event);\n                break;\n            case 'pusher_internal:subscription_count':\n                this.handleSubscriptionCountEvent(event);\n                break;\n            case 'pusher_internal:member_added':\n                var addedMember = this.members.addMember(data);\n                this.emit('pusher:member_added', addedMember);\n                break;\n            case 'pusher_internal:member_removed':\n                var removedMember = this.members.removeMember(data);\n                if (removedMember) {\n                    this.emit('pusher:member_removed', removedMember);\n                }\n                break;\n        }\n    }\n    handleSubscriptionSucceededEvent(event) {\n        this.subscriptionPending = false;\n        this.subscribed = true;\n        if (this.subscriptionCancelled) {\n            this.pusher.unsubscribe(this.name);\n        }\n        else {\n            this.members.onSubscription(event.data);\n            this.emit('pusher:subscription_succeeded', this.members);\n        }\n    }\n    disconnect() {\n        this.members.reset();\n        super.disconnect();\n    }\n}\n\n// EXTERNAL MODULE: ./node_modules/@stablelib/utf8/lib/utf8.js\nvar utf8 = __nested_webpack_require_20105__(1);\n\n// EXTERNAL MODULE: ./node_modules/@stablelib/base64/lib/base64.js\nvar base64 = __nested_webpack_require_20105__(0);\n\n// CONCATENATED MODULE: ./src/core/channels/encrypted_channel.ts\n\n\n\n\n\nclass encrypted_channel_EncryptedChannel extends private_channel_PrivateChannel {\n    constructor(name, pusher, nacl) {\n        super(name, pusher);\n        this.key = null;\n        this.nacl = nacl;\n    }\n    authorize(socketId, callback) {\n        super.authorize(socketId, (error, authData) => {\n            if (error) {\n                callback(error, authData);\n                return;\n            }\n            let sharedSecret = authData['shared_secret'];\n            if (!sharedSecret) {\n                callback(new Error(`No shared_secret key in auth payload for encrypted channel: ${this.name}`), null);\n                return;\n            }\n            this.key = Object(base64[\"decode\"])(sharedSecret);\n            delete authData['shared_secret'];\n            callback(null, authData);\n        });\n    }\n    trigger(event, data) {\n        throw new UnsupportedFeature('Client events are not currently supported for encrypted channels');\n    }\n    handleEvent(event) {\n        var eventName = event.event;\n        var data = event.data;\n        if (eventName.indexOf('pusher_internal:') === 0 ||\n            eventName.indexOf('pusher:') === 0) {\n            super.handleEvent(event);\n            return;\n        }\n        this.handleEncryptedEvent(eventName, data);\n    }\n    handleEncryptedEvent(event, data) {\n        if (!this.key) {\n            logger.debug('Received encrypted event before key has been retrieved from the authEndpoint');\n            return;\n        }\n        if (!data.ciphertext || !data.nonce) {\n            logger.error('Unexpected format for encrypted event, expected object with `ciphertext` and `nonce` fields, got: ' +\n                data);\n            return;\n        }\n        let cipherText = Object(base64[\"decode\"])(data.ciphertext);\n        if (cipherText.length < this.nacl.secretbox.overheadLength) {\n            logger.error(`Expected encrypted event ciphertext length to be ${this.nacl.secretbox.overheadLength}, got: ${cipherText.length}`);\n            return;\n        }\n        let nonce = Object(base64[\"decode\"])(data.nonce);\n        if (nonce.length < this.nacl.secretbox.nonceLength) {\n            logger.error(`Expected encrypted event nonce length to be ${this.nacl.secretbox.nonceLength}, got: ${nonce.length}`);\n            return;\n        }\n        let bytes = this.nacl.secretbox.open(cipherText, nonce, this.key);\n        if (bytes === null) {\n            logger.debug('Failed to decrypt an event, probably because it was encrypted with a different key. Fetching a new key from the authEndpoint...');\n            this.authorize(this.pusher.connection.socket_id, (error, authData) => {\n                if (error) {\n                    logger.error(`Failed to make a request to the authEndpoint: ${authData}. Unable to fetch new key, so dropping encrypted event`);\n                    return;\n                }\n                bytes = this.nacl.secretbox.open(cipherText, nonce, this.key);\n                if (bytes === null) {\n                    logger.error(`Failed to decrypt event with new key. Dropping encrypted event`);\n                    return;\n                }\n                this.emit(event, this.getDataToEmit(bytes));\n                return;\n            });\n            return;\n        }\n        this.emit(event, this.getDataToEmit(bytes));\n    }\n    getDataToEmit(bytes) {\n        let raw = Object(utf8[\"decode\"])(bytes);\n        try {\n            return JSON.parse(raw);\n        }\n        catch (_a) {\n            return raw;\n        }\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/connection/connection_manager.ts\n\n\n\n\n\nclass connection_manager_ConnectionManager extends dispatcher_Dispatcher {\n    constructor(key, options) {\n        super();\n        this.state = 'initialized';\n        this.connection = null;\n        this.key = key;\n        this.options = options;\n        this.timeline = this.options.timeline;\n        this.usingTLS = this.options.useTLS;\n        this.errorCallbacks = this.buildErrorCallbacks();\n        this.connectionCallbacks = this.buildConnectionCallbacks(this.errorCallbacks);\n        this.handshakeCallbacks = this.buildHandshakeCallbacks(this.errorCallbacks);\n        var Network = runtime.getNetwork();\n        Network.bind('online', () => {\n            this.timeline.info({ netinfo: 'online' });\n            if (this.state === 'connecting' || this.state === 'unavailable') {\n                this.retryIn(0);\n            }\n        });\n        Network.bind('offline', () => {\n            this.timeline.info({ netinfo: 'offline' });\n            if (this.connection) {\n                this.sendActivityCheck();\n            }\n        });\n        this.updateStrategy();\n    }\n    connect() {\n        if (this.connection || this.runner) {\n            return;\n        }\n        if (!this.strategy.isSupported()) {\n            this.updateState('failed');\n            return;\n        }\n        this.updateState('connecting');\n        this.startConnecting();\n        this.setUnavailableTimer();\n    }\n    send(data) {\n        if (this.connection) {\n            return this.connection.send(data);\n        }\n        else {\n            return false;\n        }\n    }\n    send_event(name, data, channel) {\n        if (this.connection) {\n            return this.connection.send_event(name, data, channel);\n        }\n        else {\n            return false;\n        }\n    }\n    disconnect() {\n        this.disconnectInternally();\n        this.updateState('disconnected');\n    }\n    isUsingTLS() {\n        return this.usingTLS;\n    }\n    startConnecting() {\n        var callback = (error, handshake) => {\n            if (error) {\n                this.runner = this.strategy.connect(0, callback);\n            }\n            else {\n                if (handshake.action === 'error') {\n                    this.emit('error', {\n                        type: 'HandshakeError',\n                        error: handshake.error\n                    });\n                    this.timeline.error({ handshakeError: handshake.error });\n                }\n                else {\n                    this.abortConnecting();\n                    this.handshakeCallbacks[handshake.action](handshake);\n                }\n            }\n        };\n        this.runner = this.strategy.connect(0, callback);\n    }\n    abortConnecting() {\n        if (this.runner) {\n            this.runner.abort();\n            this.runner = null;\n        }\n    }\n    disconnectInternally() {\n        this.abortConnecting();\n        this.clearRetryTimer();\n        this.clearUnavailableTimer();\n        if (this.connection) {\n            var connection = this.abandonConnection();\n            connection.close();\n        }\n    }\n    updateStrategy() {\n        this.strategy = this.options.getStrategy({\n            key: this.key,\n            timeline: this.timeline,\n            useTLS: this.usingTLS\n        });\n    }\n    retryIn(delay) {\n        this.timeline.info({ action: 'retry', delay: delay });\n        if (delay > 0) {\n            this.emit('connecting_in', Math.round(delay / 1000));\n        }\n        this.retryTimer = new timers_OneOffTimer(delay || 0, () => {\n            this.disconnectInternally();\n            this.connect();\n        });\n    }\n    clearRetryTimer() {\n        if (this.retryTimer) {\n            this.retryTimer.ensureAborted();\n            this.retryTimer = null;\n        }\n    }\n    setUnavailableTimer() {\n        this.unavailableTimer = new timers_OneOffTimer(this.options.unavailableTimeout, () => {\n            this.updateState('unavailable');\n        });\n    }\n    clearUnavailableTimer() {\n        if (this.unavailableTimer) {\n            this.unavailableTimer.ensureAborted();\n        }\n    }\n    sendActivityCheck() {\n        this.stopActivityCheck();\n        this.connection.ping();\n        this.activityTimer = new timers_OneOffTimer(this.options.pongTimeout, () => {\n            this.timeline.error({ pong_timed_out: this.options.pongTimeout });\n            this.retryIn(0);\n        });\n    }\n    resetActivityCheck() {\n        this.stopActivityCheck();\n        if (this.connection && !this.connection.handlesActivityChecks()) {\n            this.activityTimer = new timers_OneOffTimer(this.activityTimeout, () => {\n                this.sendActivityCheck();\n            });\n        }\n    }\n    stopActivityCheck() {\n        if (this.activityTimer) {\n            this.activityTimer.ensureAborted();\n        }\n    }\n    buildConnectionCallbacks(errorCallbacks) {\n        return extend({}, errorCallbacks, {\n            message: message => {\n                this.resetActivityCheck();\n                this.emit('message', message);\n            },\n            ping: () => {\n                this.send_event('pusher:pong', {});\n            },\n            activity: () => {\n                this.resetActivityCheck();\n            },\n            error: error => {\n                this.emit('error', error);\n            },\n            closed: () => {\n                this.abandonConnection();\n                if (this.shouldRetry()) {\n                    this.retryIn(1000);\n                }\n            }\n        });\n    }\n    buildHandshakeCallbacks(errorCallbacks) {\n        return extend({}, errorCallbacks, {\n            connected: (handshake) => {\n                this.activityTimeout = Math.min(this.options.activityTimeout, handshake.activityTimeout, handshake.connection.activityTimeout || Infinity);\n                this.clearUnavailableTimer();\n                this.setConnection(handshake.connection);\n                this.socket_id = this.connection.id;\n                this.updateState('connected', { socket_id: this.socket_id });\n            }\n        });\n    }\n    buildErrorCallbacks() {\n        let withErrorEmitted = callback => {\n            return (result) => {\n                if (result.error) {\n                    this.emit('error', { type: 'WebSocketError', error: result.error });\n                }\n                callback(result);\n            };\n        };\n        return {\n            tls_only: withErrorEmitted(() => {\n                this.usingTLS = true;\n                this.updateStrategy();\n                this.retryIn(0);\n            }),\n            refused: withErrorEmitted(() => {\n                this.disconnect();\n            }),\n            backoff: withErrorEmitted(() => {\n                this.retryIn(1000);\n            }),\n            retry: withErrorEmitted(() => {\n                this.retryIn(0);\n            })\n        };\n    }\n    setConnection(connection) {\n        this.connection = connection;\n        for (var event in this.connectionCallbacks) {\n            this.connection.bind(event, this.connectionCallbacks[event]);\n        }\n        this.resetActivityCheck();\n    }\n    abandonConnection() {\n        if (!this.connection) {\n            return;\n        }\n        this.stopActivityCheck();\n        for (var event in this.connectionCallbacks) {\n            this.connection.unbind(event, this.connectionCallbacks[event]);\n        }\n        var connection = this.connection;\n        this.connection = null;\n        return connection;\n    }\n    updateState(newState, data) {\n        var previousState = this.state;\n        this.state = newState;\n        if (previousState !== newState) {\n            var newStateDescription = newState;\n            if (newStateDescription === 'connected') {\n                newStateDescription += ' with new socket ID ' + data.socket_id;\n            }\n            logger.debug('State changed', previousState + ' -> ' + newStateDescription);\n            this.timeline.info({ state: newState, params: data });\n            this.emit('state_change', { previous: previousState, current: newState });\n            this.emit(newState, data);\n        }\n    }\n    shouldRetry() {\n        return this.state === 'connecting' || this.state === 'connected';\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/channels/channels.ts\n\n\n\n\nclass channels_Channels {\n    constructor() {\n        this.channels = {};\n    }\n    add(name, pusher) {\n        if (!this.channels[name]) {\n            this.channels[name] = createChannel(name, pusher);\n        }\n        return this.channels[name];\n    }\n    all() {\n        return values(this.channels);\n    }\n    find(name) {\n        return this.channels[name];\n    }\n    remove(name) {\n        var channel = this.channels[name];\n        delete this.channels[name];\n        return channel;\n    }\n    disconnect() {\n        objectApply(this.channels, function (channel) {\n            channel.disconnect();\n        });\n    }\n}\nfunction createChannel(name, pusher) {\n    if (name.indexOf('private-encrypted-') === 0) {\n        if (pusher.config.nacl) {\n            return factory.createEncryptedChannel(name, pusher, pusher.config.nacl);\n        }\n        let errMsg = 'Tried to subscribe to a private-encrypted- channel but no nacl implementation available';\n        let suffix = url_store.buildLogSuffix('encryptedChannelSupport');\n        throw new UnsupportedFeature(`${errMsg}. ${suffix}`);\n    }\n    else if (name.indexOf('private-') === 0) {\n        return factory.createPrivateChannel(name, pusher);\n    }\n    else if (name.indexOf('presence-') === 0) {\n        return factory.createPresenceChannel(name, pusher);\n    }\n    else if (name.indexOf('#') === 0) {\n        throw new BadChannelName('Cannot create a channel with name \"' + name + '\".');\n    }\n    else {\n        return factory.createChannel(name, pusher);\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/utils/factory.ts\n\n\n\n\n\n\n\n\n\nvar Factory = {\n    createChannels() {\n        return new channels_Channels();\n    },\n    createConnectionManager(key, options) {\n        return new connection_manager_ConnectionManager(key, options);\n    },\n    createChannel(name, pusher) {\n        return new channel_Channel(name, pusher);\n    },\n    createPrivateChannel(name, pusher) {\n        return new private_channel_PrivateChannel(name, pusher);\n    },\n    createPresenceChannel(name, pusher) {\n        return new presence_channel_PresenceChannel(name, pusher);\n    },\n    createEncryptedChannel(name, pusher, nacl) {\n        return new encrypted_channel_EncryptedChannel(name, pusher, nacl);\n    },\n    createTimelineSender(timeline, options) {\n        return new timeline_sender_TimelineSender(timeline, options);\n    },\n    createHandshake(transport, callback) {\n        return new handshake_Handshake(transport, callback);\n    },\n    createAssistantToTheTransportManager(manager, transport, options) {\n        return new assistant_to_the_transport_manager_AssistantToTheTransportManager(manager, transport, options);\n    }\n};\n/* harmony default export */ var factory = (Factory);\n\n// CONCATENATED MODULE: ./src/core/transports/transport_manager.ts\n\nclass transport_manager_TransportManager {\n    constructor(options) {\n        this.options = options || {};\n        this.livesLeft = this.options.lives || Infinity;\n    }\n    getAssistant(transport) {\n        return factory.createAssistantToTheTransportManager(this, transport, {\n            minPingDelay: this.options.minPingDelay,\n            maxPingDelay: this.options.maxPingDelay\n        });\n    }\n    isAlive() {\n        return this.livesLeft > 0;\n    }\n    reportDeath() {\n        this.livesLeft -= 1;\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/strategies/sequential_strategy.ts\n\n\n\nclass sequential_strategy_SequentialStrategy {\n    constructor(strategies, options) {\n        this.strategies = strategies;\n        this.loop = Boolean(options.loop);\n        this.failFast = Boolean(options.failFast);\n        this.timeout = options.timeout;\n        this.timeoutLimit = options.timeoutLimit;\n    }\n    isSupported() {\n        return any(this.strategies, util.method('isSupported'));\n    }\n    connect(minPriority, callback) {\n        var strategies = this.strategies;\n        var current = 0;\n        var timeout = this.timeout;\n        var runner = null;\n        var tryNextStrategy = (error, handshake) => {\n            if (handshake) {\n                callback(null, handshake);\n            }\n            else {\n                current = current + 1;\n                if (this.loop) {\n                    current = current % strategies.length;\n                }\n                if (current < strategies.length) {\n                    if (timeout) {\n                        timeout = timeout * 2;\n                        if (this.timeoutLimit) {\n                            timeout = Math.min(timeout, this.timeoutLimit);\n                        }\n                    }\n                    runner = this.tryStrategy(strategies[current], minPriority, { timeout, failFast: this.failFast }, tryNextStrategy);\n                }\n                else {\n                    callback(true);\n                }\n            }\n        };\n        runner = this.tryStrategy(strategies[current], minPriority, { timeout: timeout, failFast: this.failFast }, tryNextStrategy);\n        return {\n            abort: function () {\n                runner.abort();\n            },\n            forceMinPriority: function (p) {\n                minPriority = p;\n                if (runner) {\n                    runner.forceMinPriority(p);\n                }\n            }\n        };\n    }\n    tryStrategy(strategy, minPriority, options, callback) {\n        var timer = null;\n        var runner = null;\n        if (options.timeout > 0) {\n            timer = new timers_OneOffTimer(options.timeout, function () {\n                runner.abort();\n                callback(true);\n            });\n        }\n        runner = strategy.connect(minPriority, function (error, handshake) {\n            if (error && timer && timer.isRunning() && !options.failFast) {\n                return;\n            }\n            if (timer) {\n                timer.ensureAborted();\n            }\n            callback(error, handshake);\n        });\n        return {\n            abort: function () {\n                if (timer) {\n                    timer.ensureAborted();\n                }\n                runner.abort();\n            },\n            forceMinPriority: function (p) {\n                runner.forceMinPriority(p);\n            }\n        };\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/strategies/best_connected_ever_strategy.ts\n\n\nclass best_connected_ever_strategy_BestConnectedEverStrategy {\n    constructor(strategies) {\n        this.strategies = strategies;\n    }\n    isSupported() {\n        return any(this.strategies, util.method('isSupported'));\n    }\n    connect(minPriority, callback) {\n        return connect(this.strategies, minPriority, function (i, runners) {\n            return function (error, handshake) {\n                runners[i].error = error;\n                if (error) {\n                    if (allRunnersFailed(runners)) {\n                        callback(true);\n                    }\n                    return;\n                }\n                apply(runners, function (runner) {\n                    runner.forceMinPriority(handshake.transport.priority);\n                });\n                callback(null, handshake);\n            };\n        });\n    }\n}\nfunction connect(strategies, minPriority, callbackBuilder) {\n    var runners = map(strategies, function (strategy, i, _, rs) {\n        return strategy.connect(minPriority, callbackBuilder(i, rs));\n    });\n    return {\n        abort: function () {\n            apply(runners, abortRunner);\n        },\n        forceMinPriority: function (p) {\n            apply(runners, function (runner) {\n                runner.forceMinPriority(p);\n            });\n        }\n    };\n}\nfunction allRunnersFailed(runners) {\n    return collections_all(runners, function (runner) {\n        return Boolean(runner.error);\n    });\n}\nfunction abortRunner(runner) {\n    if (!runner.error && !runner.aborted) {\n        runner.abort();\n        runner.aborted = true;\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/strategies/websocket_prioritized_cached_strategy.ts\n\n\n\n\nclass websocket_prioritized_cached_strategy_WebSocketPrioritizedCachedStrategy {\n    constructor(strategy, transports, options) {\n        this.strategy = strategy;\n        this.transports = transports;\n        this.ttl = options.ttl || 1800 * 1000;\n        this.usingTLS = options.useTLS;\n        this.timeline = options.timeline;\n    }\n    isSupported() {\n        return this.strategy.isSupported();\n    }\n    connect(minPriority, callback) {\n        var usingTLS = this.usingTLS;\n        var info = fetchTransportCache(usingTLS);\n        var cacheSkipCount = info && info.cacheSkipCount ? info.cacheSkipCount : 0;\n        var strategies = [this.strategy];\n        if (info && info.timestamp + this.ttl >= util.now()) {\n            var transport = this.transports[info.transport];\n            if (transport) {\n                if (['ws', 'wss'].includes(info.transport) || cacheSkipCount > 3) {\n                    this.timeline.info({\n                        cached: true,\n                        transport: info.transport,\n                        latency: info.latency\n                    });\n                    strategies.push(new sequential_strategy_SequentialStrategy([transport], {\n                        timeout: info.latency * 2 + 1000,\n                        failFast: true\n                    }));\n                }\n                else {\n                    cacheSkipCount++;\n                }\n            }\n        }\n        var startTimestamp = util.now();\n        var runner = strategies\n            .pop()\n            .connect(minPriority, function cb(error, handshake) {\n            if (error) {\n                flushTransportCache(usingTLS);\n                if (strategies.length > 0) {\n                    startTimestamp = util.now();\n                    runner = strategies.pop().connect(minPriority, cb);\n                }\n                else {\n                    callback(error);\n                }\n            }\n            else {\n                storeTransportCache(usingTLS, handshake.transport.name, util.now() - startTimestamp, cacheSkipCount);\n                callback(null, handshake);\n            }\n        });\n        return {\n            abort: function () {\n                runner.abort();\n            },\n            forceMinPriority: function (p) {\n                minPriority = p;\n                if (runner) {\n                    runner.forceMinPriority(p);\n                }\n            }\n        };\n    }\n}\nfunction getTransportCacheKey(usingTLS) {\n    return 'pusherTransport' + (usingTLS ? 'TLS' : 'NonTLS');\n}\nfunction fetchTransportCache(usingTLS) {\n    var storage = runtime.getLocalStorage();\n    if (storage) {\n        try {\n            var serializedCache = storage[getTransportCacheKey(usingTLS)];\n            if (serializedCache) {\n                return JSON.parse(serializedCache);\n            }\n        }\n        catch (e) {\n            flushTransportCache(usingTLS);\n        }\n    }\n    return null;\n}\nfunction storeTransportCache(usingTLS, transport, latency, cacheSkipCount) {\n    var storage = runtime.getLocalStorage();\n    if (storage) {\n        try {\n            storage[getTransportCacheKey(usingTLS)] = safeJSONStringify({\n                timestamp: util.now(),\n                transport: transport,\n                latency: latency,\n                cacheSkipCount: cacheSkipCount\n            });\n        }\n        catch (e) {\n        }\n    }\n}\nfunction flushTransportCache(usingTLS) {\n    var storage = runtime.getLocalStorage();\n    if (storage) {\n        try {\n            delete storage[getTransportCacheKey(usingTLS)];\n        }\n        catch (e) {\n        }\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/strategies/delayed_strategy.ts\n\nclass delayed_strategy_DelayedStrategy {\n    constructor(strategy, { delay: number }) {\n        this.strategy = strategy;\n        this.options = { delay: number };\n    }\n    isSupported() {\n        return this.strategy.isSupported();\n    }\n    connect(minPriority, callback) {\n        var strategy = this.strategy;\n        var runner;\n        var timer = new timers_OneOffTimer(this.options.delay, function () {\n            runner = strategy.connect(minPriority, callback);\n        });\n        return {\n            abort: function () {\n                timer.ensureAborted();\n                if (runner) {\n                    runner.abort();\n                }\n            },\n            forceMinPriority: function (p) {\n                minPriority = p;\n                if (runner) {\n                    runner.forceMinPriority(p);\n                }\n            }\n        };\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/strategies/if_strategy.ts\nclass IfStrategy {\n    constructor(test, trueBranch, falseBranch) {\n        this.test = test;\n        this.trueBranch = trueBranch;\n        this.falseBranch = falseBranch;\n    }\n    isSupported() {\n        var branch = this.test() ? this.trueBranch : this.falseBranch;\n        return branch.isSupported();\n    }\n    connect(minPriority, callback) {\n        var branch = this.test() ? this.trueBranch : this.falseBranch;\n        return branch.connect(minPriority, callback);\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/strategies/first_connected_strategy.ts\nclass FirstConnectedStrategy {\n    constructor(strategy) {\n        this.strategy = strategy;\n    }\n    isSupported() {\n        return this.strategy.isSupported();\n    }\n    connect(minPriority, callback) {\n        var runner = this.strategy.connect(minPriority, function (error, handshake) {\n            if (handshake) {\n                runner.abort();\n            }\n            callback(error, handshake);\n        });\n        return runner;\n    }\n}\n\n// CONCATENATED MODULE: ./src/runtimes/web/default_strategy.ts\n\n\n\n\n\n\n\nfunction testSupportsStrategy(strategy) {\n    return function () {\n        return strategy.isSupported();\n    };\n}\nvar getDefaultStrategy = function (config, baseOptions, defineTransport) {\n    var definedTransports = {};\n    function defineTransportStrategy(name, type, priority, options, manager) {\n        var transport = defineTransport(config, name, type, priority, options, manager);\n        definedTransports[name] = transport;\n        return transport;\n    }\n    var ws_options = Object.assign({}, baseOptions, {\n        hostNonTLS: config.wsHost + ':' + config.wsPort,\n        hostTLS: config.wsHost + ':' + config.wssPort,\n        httpPath: config.wsPath\n    });\n    var wss_options = Object.assign({}, ws_options, {\n        useTLS: true\n    });\n    var sockjs_options = Object.assign({}, baseOptions, {\n        hostNonTLS: config.httpHost + ':' + config.httpPort,\n        hostTLS: config.httpHost + ':' + config.httpsPort,\n        httpPath: config.httpPath\n    });\n    var timeouts = {\n        loop: true,\n        timeout: 15000,\n        timeoutLimit: 60000\n    };\n    var ws_manager = new transport_manager_TransportManager({\n        minPingDelay: 10000,\n        maxPingDelay: config.activityTimeout\n    });\n    var streaming_manager = new transport_manager_TransportManager({\n        lives: 2,\n        minPingDelay: 10000,\n        maxPingDelay: config.activityTimeout\n    });\n    var ws_transport = defineTransportStrategy('ws', 'ws', 3, ws_options, ws_manager);\n    var wss_transport = defineTransportStrategy('wss', 'ws', 3, wss_options, ws_manager);\n    var sockjs_transport = defineTransportStrategy('sockjs', 'sockjs', 1, sockjs_options);\n    var xhr_streaming_transport = defineTransportStrategy('xhr_streaming', 'xhr_streaming', 1, sockjs_options, streaming_manager);\n    var xdr_streaming_transport = defineTransportStrategy('xdr_streaming', 'xdr_streaming', 1, sockjs_options, streaming_manager);\n    var xhr_polling_transport = defineTransportStrategy('xhr_polling', 'xhr_polling', 1, sockjs_options);\n    var xdr_polling_transport = defineTransportStrategy('xdr_polling', 'xdr_polling', 1, sockjs_options);\n    var ws_loop = new sequential_strategy_SequentialStrategy([ws_transport], timeouts);\n    var wss_loop = new sequential_strategy_SequentialStrategy([wss_transport], timeouts);\n    var sockjs_loop = new sequential_strategy_SequentialStrategy([sockjs_transport], timeouts);\n    var streaming_loop = new sequential_strategy_SequentialStrategy([\n        new IfStrategy(testSupportsStrategy(xhr_streaming_transport), xhr_streaming_transport, xdr_streaming_transport)\n    ], timeouts);\n    var polling_loop = new sequential_strategy_SequentialStrategy([\n        new IfStrategy(testSupportsStrategy(xhr_polling_transport), xhr_polling_transport, xdr_polling_transport)\n    ], timeouts);\n    var http_loop = new sequential_strategy_SequentialStrategy([\n        new IfStrategy(testSupportsStrategy(streaming_loop), new best_connected_ever_strategy_BestConnectedEverStrategy([\n            streaming_loop,\n            new delayed_strategy_DelayedStrategy(polling_loop, { delay: 4000 })\n        ]), polling_loop)\n    ], timeouts);\n    var http_fallback_loop = new IfStrategy(testSupportsStrategy(http_loop), http_loop, sockjs_loop);\n    var wsStrategy;\n    if (baseOptions.useTLS) {\n        wsStrategy = new best_connected_ever_strategy_BestConnectedEverStrategy([\n            ws_loop,\n            new delayed_strategy_DelayedStrategy(http_fallback_loop, { delay: 2000 })\n        ]);\n    }\n    else {\n        wsStrategy = new best_connected_ever_strategy_BestConnectedEverStrategy([\n            ws_loop,\n            new delayed_strategy_DelayedStrategy(wss_loop, { delay: 2000 }),\n            new delayed_strategy_DelayedStrategy(http_fallback_loop, { delay: 5000 })\n        ]);\n    }\n    return new websocket_prioritized_cached_strategy_WebSocketPrioritizedCachedStrategy(new FirstConnectedStrategy(new IfStrategy(testSupportsStrategy(ws_transport), wsStrategy, http_fallback_loop)), definedTransports, {\n        ttl: 1800000,\n        timeline: baseOptions.timeline,\n        useTLS: baseOptions.useTLS\n    });\n};\n/* harmony default export */ var default_strategy = (getDefaultStrategy);\n\n// CONCATENATED MODULE: ./src/runtimes/web/transports/transport_connection_initializer.ts\n\n/* harmony default export */ var transport_connection_initializer = (function () {\n    var self = this;\n    self.timeline.info(self.buildTimelineMessage({\n        transport: self.name + (self.options.useTLS ? 's' : '')\n    }));\n    if (self.hooks.isInitialized()) {\n        self.changeState('initialized');\n    }\n    else if (self.hooks.file) {\n        self.changeState('initializing');\n        Dependencies.load(self.hooks.file, { useTLS: self.options.useTLS }, function (error, callback) {\n            if (self.hooks.isInitialized()) {\n                self.changeState('initialized');\n                callback(true);\n            }\n            else {\n                if (error) {\n                    self.onError(error);\n                }\n                self.onClose();\n                callback(false);\n            }\n        });\n    }\n    else {\n        self.onClose();\n    }\n});\n\n// CONCATENATED MODULE: ./src/runtimes/web/http/http_xdomain_request.ts\n\nvar http_xdomain_request_hooks = {\n    getRequest: function (socket) {\n        var xdr = new window.XDomainRequest();\n        xdr.ontimeout = function () {\n            socket.emit('error', new RequestTimedOut());\n            socket.close();\n        };\n        xdr.onerror = function (e) {\n            socket.emit('error', e);\n            socket.close();\n        };\n        xdr.onprogress = function () {\n            if (xdr.responseText && xdr.responseText.length > 0) {\n                socket.onChunk(200, xdr.responseText);\n            }\n        };\n        xdr.onload = function () {\n            if (xdr.responseText && xdr.responseText.length > 0) {\n                socket.onChunk(200, xdr.responseText);\n            }\n            socket.emit('finished', 200);\n            socket.close();\n        };\n        return xdr;\n    },\n    abortRequest: function (xdr) {\n        xdr.ontimeout = xdr.onerror = xdr.onprogress = xdr.onload = null;\n        xdr.abort();\n    }\n};\n/* harmony default export */ var http_xdomain_request = (http_xdomain_request_hooks);\n\n// CONCATENATED MODULE: ./src/core/http/http_request.ts\n\n\nconst MAX_BUFFER_LENGTH = 256 * 1024;\nclass http_request_HTTPRequest extends dispatcher_Dispatcher {\n    constructor(hooks, method, url) {\n        super();\n        this.hooks = hooks;\n        this.method = method;\n        this.url = url;\n    }\n    start(payload) {\n        this.position = 0;\n        this.xhr = this.hooks.getRequest(this);\n        this.unloader = () => {\n            this.close();\n        };\n        runtime.addUnloadListener(this.unloader);\n        this.xhr.open(this.method, this.url, true);\n        if (this.xhr.setRequestHeader) {\n            this.xhr.setRequestHeader('Content-Type', 'application/json');\n        }\n        this.xhr.send(payload);\n    }\n    close() {\n        if (this.unloader) {\n            runtime.removeUnloadListener(this.unloader);\n            this.unloader = null;\n        }\n        if (this.xhr) {\n            this.hooks.abortRequest(this.xhr);\n            this.xhr = null;\n        }\n    }\n    onChunk(status, data) {\n        while (true) {\n            var chunk = this.advanceBuffer(data);\n            if (chunk) {\n                this.emit('chunk', { status: status, data: chunk });\n            }\n            else {\n                break;\n            }\n        }\n        if (this.isBufferTooLong(data)) {\n            this.emit('buffer_too_long');\n        }\n    }\n    advanceBuffer(buffer) {\n        var unreadData = buffer.slice(this.position);\n        var endOfLinePosition = unreadData.indexOf('\\n');\n        if (endOfLinePosition !== -1) {\n            this.position += endOfLinePosition + 1;\n            return unreadData.slice(0, endOfLinePosition);\n        }\n        else {\n            return null;\n        }\n    }\n    isBufferTooLong(buffer) {\n        return this.position === buffer.length && buffer.length > MAX_BUFFER_LENGTH;\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/http/state.ts\nvar State;\n(function (State) {\n    State[State[\"CONNECTING\"] = 0] = \"CONNECTING\";\n    State[State[\"OPEN\"] = 1] = \"OPEN\";\n    State[State[\"CLOSED\"] = 3] = \"CLOSED\";\n})(State || (State = {}));\n/* harmony default export */ var state = (State);\n\n// CONCATENATED MODULE: ./src/core/http/http_socket.ts\n\n\n\nvar autoIncrement = 1;\nclass http_socket_HTTPSocket {\n    constructor(hooks, url) {\n        this.hooks = hooks;\n        this.session = randomNumber(1000) + '/' + randomString(8);\n        this.location = getLocation(url);\n        this.readyState = state.CONNECTING;\n        this.openStream();\n    }\n    send(payload) {\n        return this.sendRaw(JSON.stringify([payload]));\n    }\n    ping() {\n        this.hooks.sendHeartbeat(this);\n    }\n    close(code, reason) {\n        this.onClose(code, reason, true);\n    }\n    sendRaw(payload) {\n        if (this.readyState === state.OPEN) {\n            try {\n                runtime.createSocketRequest('POST', getUniqueURL(getSendURL(this.location, this.session))).start(payload);\n                return true;\n            }\n            catch (e) {\n                return false;\n            }\n        }\n        else {\n            return false;\n        }\n    }\n    reconnect() {\n        this.closeStream();\n        this.openStream();\n    }\n    onClose(code, reason, wasClean) {\n        this.closeStream();\n        this.readyState = state.CLOSED;\n        if (this.onclose) {\n            this.onclose({\n                code: code,\n                reason: reason,\n                wasClean: wasClean\n            });\n        }\n    }\n    onChunk(chunk) {\n        if (chunk.status !== 200) {\n            return;\n        }\n        if (this.readyState === state.OPEN) {\n            this.onActivity();\n        }\n        var payload;\n        var type = chunk.data.slice(0, 1);\n        switch (type) {\n            case 'o':\n                payload = JSON.parse(chunk.data.slice(1) || '{}');\n                this.onOpen(payload);\n                break;\n            case 'a':\n                payload = JSON.parse(chunk.data.slice(1) || '[]');\n                for (var i = 0; i < payload.length; i++) {\n                    this.onEvent(payload[i]);\n                }\n                break;\n            case 'm':\n                payload = JSON.parse(chunk.data.slice(1) || 'null');\n                this.onEvent(payload);\n                break;\n            case 'h':\n                this.hooks.onHeartbeat(this);\n                break;\n            case 'c':\n                payload = JSON.parse(chunk.data.slice(1) || '[]');\n                this.onClose(payload[0], payload[1], true);\n                break;\n        }\n    }\n    onOpen(options) {\n        if (this.readyState === state.CONNECTING) {\n            if (options && options.hostname) {\n                this.location.base = replaceHost(this.location.base, options.hostname);\n            }\n            this.readyState = state.OPEN;\n            if (this.onopen) {\n                this.onopen();\n            }\n        }\n        else {\n            this.onClose(1006, 'Server lost session', true);\n        }\n    }\n    onEvent(event) {\n        if (this.readyState === state.OPEN && this.onmessage) {\n            this.onmessage({ data: event });\n        }\n    }\n    onActivity() {\n        if (this.onactivity) {\n            this.onactivity();\n        }\n    }\n    onError(error) {\n        if (this.onerror) {\n            this.onerror(error);\n        }\n    }\n    openStream() {\n        this.stream = runtime.createSocketRequest('POST', getUniqueURL(this.hooks.getReceiveURL(this.location, this.session)));\n        this.stream.bind('chunk', chunk => {\n            this.onChunk(chunk);\n        });\n        this.stream.bind('finished', status => {\n            this.hooks.onFinished(this, status);\n        });\n        this.stream.bind('buffer_too_long', () => {\n            this.reconnect();\n        });\n        try {\n            this.stream.start();\n        }\n        catch (error) {\n            util.defer(() => {\n                this.onError(error);\n                this.onClose(1006, 'Could not start streaming', false);\n            });\n        }\n    }\n    closeStream() {\n        if (this.stream) {\n            this.stream.unbind_all();\n            this.stream.close();\n            this.stream = null;\n        }\n    }\n}\nfunction getLocation(url) {\n    var parts = /([^\\?]*)\\/*(\\??.*)/.exec(url);\n    return {\n        base: parts[1],\n        queryString: parts[2]\n    };\n}\nfunction getSendURL(url, session) {\n    return url.base + '/' + session + '/xhr_send';\n}\nfunction getUniqueURL(url) {\n    var separator = url.indexOf('?') === -1 ? '?' : '&';\n    return url + separator + 't=' + +new Date() + '&n=' + autoIncrement++;\n}\nfunction replaceHost(url, hostname) {\n    var urlParts = /(https?:\\/\\/)([^\\/:]+)((\\/|:)?.*)/.exec(url);\n    return urlParts[1] + hostname + urlParts[3];\n}\nfunction randomNumber(max) {\n    return runtime.randomInt(max);\n}\nfunction randomString(length) {\n    var result = [];\n    for (var i = 0; i < length; i++) {\n        result.push(randomNumber(32).toString(32));\n    }\n    return result.join('');\n}\n/* harmony default export */ var http_socket = (http_socket_HTTPSocket);\n\n// CONCATENATED MODULE: ./src/core/http/http_streaming_socket.ts\nvar http_streaming_socket_hooks = {\n    getReceiveURL: function (url, session) {\n        return url.base + '/' + session + '/xhr_streaming' + url.queryString;\n    },\n    onHeartbeat: function (socket) {\n        socket.sendRaw('[]');\n    },\n    sendHeartbeat: function (socket) {\n        socket.sendRaw('[]');\n    },\n    onFinished: function (socket, status) {\n        socket.onClose(1006, 'Connection interrupted (' + status + ')', false);\n    }\n};\n/* harmony default export */ var http_streaming_socket = (http_streaming_socket_hooks);\n\n// CONCATENATED MODULE: ./src/core/http/http_polling_socket.ts\nvar http_polling_socket_hooks = {\n    getReceiveURL: function (url, session) {\n        return url.base + '/' + session + '/xhr' + url.queryString;\n    },\n    onHeartbeat: function () {\n    },\n    sendHeartbeat: function (socket) {\n        socket.sendRaw('[]');\n    },\n    onFinished: function (socket, status) {\n        if (status === 200) {\n            socket.reconnect();\n        }\n        else {\n            socket.onClose(1006, 'Connection interrupted (' + status + ')', false);\n        }\n    }\n};\n/* harmony default export */ var http_polling_socket = (http_polling_socket_hooks);\n\n// CONCATENATED MODULE: ./src/runtimes/isomorphic/http/http_xhr_request.ts\n\nvar http_xhr_request_hooks = {\n    getRequest: function (socket) {\n        var Constructor = runtime.getXHRAPI();\n        var xhr = new Constructor();\n        xhr.onreadystatechange = xhr.onprogress = function () {\n            switch (xhr.readyState) {\n                case 3:\n                    if (xhr.responseText && xhr.responseText.length > 0) {\n                        socket.onChunk(xhr.status, xhr.responseText);\n                    }\n                    break;\n                case 4:\n                    if (xhr.responseText && xhr.responseText.length > 0) {\n                        socket.onChunk(xhr.status, xhr.responseText);\n                    }\n                    socket.emit('finished', xhr.status);\n                    socket.close();\n                    break;\n            }\n        };\n        return xhr;\n    },\n    abortRequest: function (xhr) {\n        xhr.onreadystatechange = null;\n        xhr.abort();\n    }\n};\n/* harmony default export */ var http_xhr_request = (http_xhr_request_hooks);\n\n// CONCATENATED MODULE: ./src/runtimes/isomorphic/http/http.ts\n\n\n\n\n\nvar HTTP = {\n    createStreamingSocket(url) {\n        return this.createSocket(http_streaming_socket, url);\n    },\n    createPollingSocket(url) {\n        return this.createSocket(http_polling_socket, url);\n    },\n    createSocket(hooks, url) {\n        return new http_socket(hooks, url);\n    },\n    createXHR(method, url) {\n        return this.createRequest(http_xhr_request, method, url);\n    },\n    createRequest(hooks, method, url) {\n        return new http_request_HTTPRequest(hooks, method, url);\n    }\n};\n/* harmony default export */ var http_http = (HTTP);\n\n// CONCATENATED MODULE: ./src/runtimes/web/http/http.ts\n\n\nhttp_http.createXDR = function (method, url) {\n    return this.createRequest(http_xdomain_request, method, url);\n};\n/* harmony default export */ var web_http_http = (http_http);\n\n// CONCATENATED MODULE: ./src/runtimes/web/runtime.ts\n\n\n\n\n\n\n\n\n\n\n\n\nvar Runtime = {\n    nextAuthCallbackID: 1,\n    auth_callbacks: {},\n    ScriptReceivers: ScriptReceivers,\n    DependenciesReceivers: DependenciesReceivers,\n    getDefaultStrategy: default_strategy,\n    Transports: transports_transports,\n    transportConnectionInitializer: transport_connection_initializer,\n    HTTPFactory: web_http_http,\n    TimelineTransport: jsonp_timeline,\n    getXHRAPI() {\n        return window.XMLHttpRequest;\n    },\n    getWebSocketAPI() {\n        return window.WebSocket || window.MozWebSocket;\n    },\n    setup(PusherClass) {\n        window.Pusher = PusherClass;\n        var initializeOnDocumentBody = () => {\n            this.onDocumentBody(PusherClass.ready);\n        };\n        if (!window.JSON) {\n            Dependencies.load('json2', {}, initializeOnDocumentBody);\n        }\n        else {\n            initializeOnDocumentBody();\n        }\n    },\n    getDocument() {\n        return document;\n    },\n    getProtocol() {\n        return this.getDocument().location.protocol;\n    },\n    getAuthorizers() {\n        return { ajax: xhr_auth, jsonp: jsonp_auth };\n    },\n    onDocumentBody(callback) {\n        if (document.body) {\n            callback();\n        }\n        else {\n            setTimeout(() => {\n                this.onDocumentBody(callback);\n            }, 0);\n        }\n    },\n    createJSONPRequest(url, data) {\n        return new jsonp_request_JSONPRequest(url, data);\n    },\n    createScriptRequest(src) {\n        return new ScriptRequest(src);\n    },\n    getLocalStorage() {\n        try {\n            return window.localStorage;\n        }\n        catch (e) {\n            return undefined;\n        }\n    },\n    createXHR() {\n        if (this.getXHRAPI()) {\n            return this.createXMLHttpRequest();\n        }\n        else {\n            return this.createMicrosoftXHR();\n        }\n    },\n    createXMLHttpRequest() {\n        var Constructor = this.getXHRAPI();\n        return new Constructor();\n    },\n    createMicrosoftXHR() {\n        return new ActiveXObject('Microsoft.XMLHTTP');\n    },\n    getNetwork() {\n        return net_info_Network;\n    },\n    createWebSocket(url) {\n        var Constructor = this.getWebSocketAPI();\n        return new Constructor(url);\n    },\n    createSocketRequest(method, url) {\n        if (this.isXHRSupported()) {\n            return this.HTTPFactory.createXHR(method, url);\n        }\n        else if (this.isXDRSupported(url.indexOf('https:') === 0)) {\n            return this.HTTPFactory.createXDR(method, url);\n        }\n        else {\n            throw 'Cross-origin HTTP requests are not supported';\n        }\n    },\n    isXHRSupported() {\n        var Constructor = this.getXHRAPI();\n        return (Boolean(Constructor) && new Constructor().withCredentials !== undefined);\n    },\n    isXDRSupported(useTLS) {\n        var protocol = useTLS ? 'https:' : 'http:';\n        var documentProtocol = this.getProtocol();\n        return (Boolean(window['XDomainRequest']) && documentProtocol === protocol);\n    },\n    addUnloadListener(listener) {\n        if (window.addEventListener !== undefined) {\n            window.addEventListener('unload', listener, false);\n        }\n        else if (window.attachEvent !== undefined) {\n            window.attachEvent('onunload', listener);\n        }\n    },\n    removeUnloadListener(listener) {\n        if (window.addEventListener !== undefined) {\n            window.removeEventListener('unload', listener, false);\n        }\n        else if (window.detachEvent !== undefined) {\n            window.detachEvent('onunload', listener);\n        }\n    },\n    randomInt(max) {\n        const random = function () {\n            const crypto = window.crypto || window['msCrypto'];\n            const random = crypto.getRandomValues(new Uint32Array(1))[0];\n            return random / Math.pow(2, 32);\n        };\n        return Math.floor(random() * max);\n    }\n};\n/* harmony default export */ var runtime = (Runtime);\n\n// CONCATENATED MODULE: ./src/core/timeline/level.ts\nvar TimelineLevel;\n(function (TimelineLevel) {\n    TimelineLevel[TimelineLevel[\"ERROR\"] = 3] = \"ERROR\";\n    TimelineLevel[TimelineLevel[\"INFO\"] = 6] = \"INFO\";\n    TimelineLevel[TimelineLevel[\"DEBUG\"] = 7] = \"DEBUG\";\n})(TimelineLevel || (TimelineLevel = {}));\n/* harmony default export */ var timeline_level = (TimelineLevel);\n\n// CONCATENATED MODULE: ./src/core/timeline/timeline.ts\n\n\n\nclass timeline_Timeline {\n    constructor(key, session, options) {\n        this.key = key;\n        this.session = session;\n        this.events = [];\n        this.options = options || {};\n        this.sent = 0;\n        this.uniqueID = 0;\n    }\n    log(level, event) {\n        if (level <= this.options.level) {\n            this.events.push(extend({}, event, { timestamp: util.now() }));\n            if (this.options.limit && this.events.length > this.options.limit) {\n                this.events.shift();\n            }\n        }\n    }\n    error(event) {\n        this.log(timeline_level.ERROR, event);\n    }\n    info(event) {\n        this.log(timeline_level.INFO, event);\n    }\n    debug(event) {\n        this.log(timeline_level.DEBUG, event);\n    }\n    isEmpty() {\n        return this.events.length === 0;\n    }\n    send(sendfn, callback) {\n        var data = extend({\n            session: this.session,\n            bundle: this.sent + 1,\n            key: this.key,\n            lib: 'js',\n            version: this.options.version,\n            cluster: this.options.cluster,\n            features: this.options.features,\n            timeline: this.events\n        }, this.options.params);\n        this.events = [];\n        sendfn(data, (error, result) => {\n            if (!error) {\n                this.sent++;\n            }\n            if (callback) {\n                callback(error, result);\n            }\n        });\n        return true;\n    }\n    generateUniqueID() {\n        this.uniqueID++;\n        return this.uniqueID;\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/strategies/transport_strategy.ts\n\n\n\n\nclass transport_strategy_TransportStrategy {\n    constructor(name, priority, transport, options) {\n        this.name = name;\n        this.priority = priority;\n        this.transport = transport;\n        this.options = options || {};\n    }\n    isSupported() {\n        return this.transport.isSupported({\n            useTLS: this.options.useTLS\n        });\n    }\n    connect(minPriority, callback) {\n        if (!this.isSupported()) {\n            return failAttempt(new UnsupportedStrategy(), callback);\n        }\n        else if (this.priority < minPriority) {\n            return failAttempt(new TransportPriorityTooLow(), callback);\n        }\n        var connected = false;\n        var transport = this.transport.createConnection(this.name, this.priority, this.options.key, this.options);\n        var handshake = null;\n        var onInitialized = function () {\n            transport.unbind('initialized', onInitialized);\n            transport.connect();\n        };\n        var onOpen = function () {\n            handshake = factory.createHandshake(transport, function (result) {\n                connected = true;\n                unbindListeners();\n                callback(null, result);\n            });\n        };\n        var onError = function (error) {\n            unbindListeners();\n            callback(error);\n        };\n        var onClosed = function () {\n            unbindListeners();\n            var serializedTransport;\n            serializedTransport = safeJSONStringify(transport);\n            callback(new TransportClosed(serializedTransport));\n        };\n        var unbindListeners = function () {\n            transport.unbind('initialized', onInitialized);\n            transport.unbind('open', onOpen);\n            transport.unbind('error', onError);\n            transport.unbind('closed', onClosed);\n        };\n        transport.bind('initialized', onInitialized);\n        transport.bind('open', onOpen);\n        transport.bind('error', onError);\n        transport.bind('closed', onClosed);\n        transport.initialize();\n        return {\n            abort: () => {\n                if (connected) {\n                    return;\n                }\n                unbindListeners();\n                if (handshake) {\n                    handshake.close();\n                }\n                else {\n                    transport.close();\n                }\n            },\n            forceMinPriority: p => {\n                if (connected) {\n                    return;\n                }\n                if (this.priority < p) {\n                    if (handshake) {\n                        handshake.close();\n                    }\n                    else {\n                        transport.close();\n                    }\n                }\n            }\n        };\n    }\n}\nfunction failAttempt(error, callback) {\n    util.defer(function () {\n        callback(error);\n    });\n    return {\n        abort: function () { },\n        forceMinPriority: function () { }\n    };\n}\n\n// CONCATENATED MODULE: ./src/core/strategies/strategy_builder.ts\n\n\n\n\n\nconst { Transports: strategy_builder_Transports } = runtime;\nvar strategy_builder_defineTransport = function (config, name, type, priority, options, manager) {\n    var transportClass = strategy_builder_Transports[type];\n    if (!transportClass) {\n        throw new UnsupportedTransport(type);\n    }\n    var enabled = (!config.enabledTransports ||\n        arrayIndexOf(config.enabledTransports, name) !== -1) &&\n        (!config.disabledTransports ||\n            arrayIndexOf(config.disabledTransports, name) === -1);\n    var transport;\n    if (enabled) {\n        options = Object.assign({ ignoreNullOrigin: config.ignoreNullOrigin }, options);\n        transport = new transport_strategy_TransportStrategy(name, priority, manager ? manager.getAssistant(transportClass) : transportClass, options);\n    }\n    else {\n        transport = strategy_builder_UnsupportedStrategy;\n    }\n    return transport;\n};\nvar strategy_builder_UnsupportedStrategy = {\n    isSupported: function () {\n        return false;\n    },\n    connect: function (_, callback) {\n        var deferred = util.defer(function () {\n            callback(new UnsupportedStrategy());\n        });\n        return {\n            abort: function () {\n                deferred.ensureAborted();\n            },\n            forceMinPriority: function () { }\n        };\n    }\n};\n\n// CONCATENATED MODULE: ./src/core/options.ts\n\nfunction validateOptions(options) {\n    if (options == null) {\n        throw 'You must pass an options object';\n    }\n    if (options.cluster == null) {\n        throw 'Options object must provide a cluster';\n    }\n    if ('disableStats' in options) {\n        logger.warn('The disableStats option is deprecated in favor of enableStats');\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/auth/user_authenticator.ts\n\n\nconst composeChannelQuery = (params, authOptions) => {\n    var query = 'socket_id=' + encodeURIComponent(params.socketId);\n    for (var key in authOptions.params) {\n        query +=\n            '&' +\n                encodeURIComponent(key) +\n                '=' +\n                encodeURIComponent(authOptions.params[key]);\n    }\n    if (authOptions.paramsProvider != null) {\n        let dynamicParams = authOptions.paramsProvider();\n        for (var key in dynamicParams) {\n            query +=\n                '&' +\n                    encodeURIComponent(key) +\n                    '=' +\n                    encodeURIComponent(dynamicParams[key]);\n        }\n    }\n    return query;\n};\nconst UserAuthenticator = (authOptions) => {\n    if (typeof runtime.getAuthorizers()[authOptions.transport] === 'undefined') {\n        throw `'${authOptions.transport}' is not a recognized auth transport`;\n    }\n    return (params, callback) => {\n        const query = composeChannelQuery(params, authOptions);\n        runtime.getAuthorizers()[authOptions.transport](runtime, query, authOptions, AuthRequestType.UserAuthentication, callback);\n    };\n};\n/* harmony default export */ var user_authenticator = (UserAuthenticator);\n\n// CONCATENATED MODULE: ./src/core/auth/channel_authorizer.ts\n\n\nconst channel_authorizer_composeChannelQuery = (params, authOptions) => {\n    var query = 'socket_id=' + encodeURIComponent(params.socketId);\n    query += '&channel_name=' + encodeURIComponent(params.channelName);\n    for (var key in authOptions.params) {\n        query +=\n            '&' +\n                encodeURIComponent(key) +\n                '=' +\n                encodeURIComponent(authOptions.params[key]);\n    }\n    if (authOptions.paramsProvider != null) {\n        let dynamicParams = authOptions.paramsProvider();\n        for (var key in dynamicParams) {\n            query +=\n                '&' +\n                    encodeURIComponent(key) +\n                    '=' +\n                    encodeURIComponent(dynamicParams[key]);\n        }\n    }\n    return query;\n};\nconst ChannelAuthorizer = (authOptions) => {\n    if (typeof runtime.getAuthorizers()[authOptions.transport] === 'undefined') {\n        throw `'${authOptions.transport}' is not a recognized auth transport`;\n    }\n    return (params, callback) => {\n        const query = channel_authorizer_composeChannelQuery(params, authOptions);\n        runtime.getAuthorizers()[authOptions.transport](runtime, query, authOptions, AuthRequestType.ChannelAuthorization, callback);\n    };\n};\n/* harmony default export */ var channel_authorizer = (ChannelAuthorizer);\n\n// CONCATENATED MODULE: ./src/core/auth/deprecated_channel_authorizer.ts\nconst ChannelAuthorizerProxy = (pusher, authOptions, channelAuthorizerGenerator) => {\n    const deprecatedAuthorizerOptions = {\n        authTransport: authOptions.transport,\n        authEndpoint: authOptions.endpoint,\n        auth: {\n            params: authOptions.params,\n            headers: authOptions.headers\n        }\n    };\n    return (params, callback) => {\n        const channel = pusher.channel(params.channelName);\n        const channelAuthorizer = channelAuthorizerGenerator(channel, deprecatedAuthorizerOptions);\n        channelAuthorizer.authorize(params.socketId, callback);\n    };\n};\n\n// CONCATENATED MODULE: ./src/core/config.ts\n\n\n\n\n\nfunction getConfig(opts, pusher) {\n    let config = {\n        activityTimeout: opts.activityTimeout || defaults.activityTimeout,\n        cluster: opts.cluster,\n        httpPath: opts.httpPath || defaults.httpPath,\n        httpPort: opts.httpPort || defaults.httpPort,\n        httpsPort: opts.httpsPort || defaults.httpsPort,\n        pongTimeout: opts.pongTimeout || defaults.pongTimeout,\n        statsHost: opts.statsHost || defaults.stats_host,\n        unavailableTimeout: opts.unavailableTimeout || defaults.unavailableTimeout,\n        wsPath: opts.wsPath || defaults.wsPath,\n        wsPort: opts.wsPort || defaults.wsPort,\n        wssPort: opts.wssPort || defaults.wssPort,\n        enableStats: getEnableStatsConfig(opts),\n        httpHost: getHttpHost(opts),\n        useTLS: shouldUseTLS(opts),\n        wsHost: getWebsocketHost(opts),\n        userAuthenticator: buildUserAuthenticator(opts),\n        channelAuthorizer: buildChannelAuthorizer(opts, pusher)\n    };\n    if ('disabledTransports' in opts)\n        config.disabledTransports = opts.disabledTransports;\n    if ('enabledTransports' in opts)\n        config.enabledTransports = opts.enabledTransports;\n    if ('ignoreNullOrigin' in opts)\n        config.ignoreNullOrigin = opts.ignoreNullOrigin;\n    if ('timelineParams' in opts)\n        config.timelineParams = opts.timelineParams;\n    if ('nacl' in opts) {\n        config.nacl = opts.nacl;\n    }\n    return config;\n}\nfunction getHttpHost(opts) {\n    if (opts.httpHost) {\n        return opts.httpHost;\n    }\n    if (opts.cluster) {\n        return `sockjs-${opts.cluster}.pusher.com`;\n    }\n    return defaults.httpHost;\n}\nfunction getWebsocketHost(opts) {\n    if (opts.wsHost) {\n        return opts.wsHost;\n    }\n    return getWebsocketHostFromCluster(opts.cluster);\n}\nfunction getWebsocketHostFromCluster(cluster) {\n    return `ws-${cluster}.pusher.com`;\n}\nfunction shouldUseTLS(opts) {\n    if (runtime.getProtocol() === 'https:') {\n        return true;\n    }\n    else if (opts.forceTLS === false) {\n        return false;\n    }\n    return true;\n}\nfunction getEnableStatsConfig(opts) {\n    if ('enableStats' in opts) {\n        return opts.enableStats;\n    }\n    if ('disableStats' in opts) {\n        return !opts.disableStats;\n    }\n    return false;\n}\nfunction buildUserAuthenticator(opts) {\n    const userAuthentication = Object.assign(Object.assign({}, defaults.userAuthentication), opts.userAuthentication);\n    if ('customHandler' in userAuthentication &&\n        userAuthentication['customHandler'] != null) {\n        return userAuthentication['customHandler'];\n    }\n    return user_authenticator(userAuthentication);\n}\nfunction buildChannelAuth(opts, pusher) {\n    let channelAuthorization;\n    if ('channelAuthorization' in opts) {\n        channelAuthorization = Object.assign(Object.assign({}, defaults.channelAuthorization), opts.channelAuthorization);\n    }\n    else {\n        channelAuthorization = {\n            transport: opts.authTransport || defaults.authTransport,\n            endpoint: opts.authEndpoint || defaults.authEndpoint\n        };\n        if ('auth' in opts) {\n            if ('params' in opts.auth)\n                channelAuthorization.params = opts.auth.params;\n            if ('headers' in opts.auth)\n                channelAuthorization.headers = opts.auth.headers;\n        }\n        if ('authorizer' in opts)\n            channelAuthorization.customHandler = ChannelAuthorizerProxy(pusher, channelAuthorization, opts.authorizer);\n    }\n    return channelAuthorization;\n}\nfunction buildChannelAuthorizer(opts, pusher) {\n    const channelAuthorization = buildChannelAuth(opts, pusher);\n    if ('customHandler' in channelAuthorization &&\n        channelAuthorization['customHandler'] != null) {\n        return channelAuthorization['customHandler'];\n    }\n    return channel_authorizer(channelAuthorization);\n}\n\n// CONCATENATED MODULE: ./src/core/watchlist.ts\n\n\nclass watchlist_WatchlistFacade extends dispatcher_Dispatcher {\n    constructor(pusher) {\n        super(function (eventName, data) {\n            logger.debug(`No callbacks on watchlist events for ${eventName}`);\n        });\n        this.pusher = pusher;\n        this.bindWatchlistInternalEvent();\n    }\n    handleEvent(pusherEvent) {\n        pusherEvent.data.events.forEach(watchlistEvent => {\n            this.emit(watchlistEvent.name, watchlistEvent);\n        });\n    }\n    bindWatchlistInternalEvent() {\n        this.pusher.connection.bind('message', pusherEvent => {\n            var eventName = pusherEvent.event;\n            if (eventName === 'pusher_internal:watchlist_events') {\n                this.handleEvent(pusherEvent);\n            }\n        });\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/utils/flat_promise.ts\nfunction flatPromise() {\n    let resolve, reject;\n    const promise = new Promise((res, rej) => {\n        resolve = res;\n        reject = rej;\n    });\n    return { promise, resolve, reject };\n}\n/* harmony default export */ var flat_promise = (flatPromise);\n\n// CONCATENATED MODULE: ./src/core/user.ts\n\n\n\n\n\nclass user_UserFacade extends dispatcher_Dispatcher {\n    constructor(pusher) {\n        super(function (eventName, data) {\n            logger.debug('No callbacks on user for ' + eventName);\n        });\n        this.signin_requested = false;\n        this.user_data = null;\n        this.serverToUserChannel = null;\n        this.signinDonePromise = null;\n        this._signinDoneResolve = null;\n        this._onAuthorize = (err, authData) => {\n            if (err) {\n                logger.warn(`Error during signin: ${err}`);\n                this._cleanup();\n                return;\n            }\n            this.pusher.send_event('pusher:signin', {\n                auth: authData.auth,\n                user_data: authData.user_data\n            });\n        };\n        this.pusher = pusher;\n        this.pusher.connection.bind('state_change', ({ previous, current }) => {\n            if (previous !== 'connected' && current === 'connected') {\n                this._signin();\n            }\n            if (previous === 'connected' && current !== 'connected') {\n                this._cleanup();\n                this._newSigninPromiseIfNeeded();\n            }\n        });\n        this.watchlist = new watchlist_WatchlistFacade(pusher);\n        this.pusher.connection.bind('message', event => {\n            var eventName = event.event;\n            if (eventName === 'pusher:signin_success') {\n                this._onSigninSuccess(event.data);\n            }\n            if (this.serverToUserChannel &&\n                this.serverToUserChannel.name === event.channel) {\n                this.serverToUserChannel.handleEvent(event);\n            }\n        });\n    }\n    signin() {\n        if (this.signin_requested) {\n            return;\n        }\n        this.signin_requested = true;\n        this._signin();\n    }\n    _signin() {\n        if (!this.signin_requested) {\n            return;\n        }\n        this._newSigninPromiseIfNeeded();\n        if (this.pusher.connection.state !== 'connected') {\n            return;\n        }\n        this.pusher.config.userAuthenticator({\n            socketId: this.pusher.connection.socket_id\n        }, this._onAuthorize);\n    }\n    _onSigninSuccess(data) {\n        try {\n            this.user_data = JSON.parse(data.user_data);\n        }\n        catch (e) {\n            logger.error(`Failed parsing user data after signin: ${data.user_data}`);\n            this._cleanup();\n            return;\n        }\n        if (typeof this.user_data.id !== 'string' || this.user_data.id === '') {\n            logger.error(`user_data doesn't contain an id. user_data: ${this.user_data}`);\n            this._cleanup();\n            return;\n        }\n        this._signinDoneResolve();\n        this._subscribeChannels();\n    }\n    _subscribeChannels() {\n        const ensure_subscribed = channel => {\n            if (channel.subscriptionPending && channel.subscriptionCancelled) {\n                channel.reinstateSubscription();\n            }\n            else if (!channel.subscriptionPending &&\n                this.pusher.connection.state === 'connected') {\n                channel.subscribe();\n            }\n        };\n        this.serverToUserChannel = new channel_Channel(`#server-to-user-${this.user_data.id}`, this.pusher);\n        this.serverToUserChannel.bind_global((eventName, data) => {\n            if (eventName.indexOf('pusher_internal:') === 0 ||\n                eventName.indexOf('pusher:') === 0) {\n                return;\n            }\n            this.emit(eventName, data);\n        });\n        ensure_subscribed(this.serverToUserChannel);\n    }\n    _cleanup() {\n        this.user_data = null;\n        if (this.serverToUserChannel) {\n            this.serverToUserChannel.unbind_all();\n            this.serverToUserChannel.disconnect();\n            this.serverToUserChannel = null;\n        }\n        if (this.signin_requested) {\n            this._signinDoneResolve();\n        }\n    }\n    _newSigninPromiseIfNeeded() {\n        if (!this.signin_requested) {\n            return;\n        }\n        if (this.signinDonePromise && !this.signinDonePromise.done) {\n            return;\n        }\n        const { promise, resolve, reject: _ } = flat_promise();\n        promise.done = false;\n        const setDone = () => {\n            promise.done = true;\n        };\n        promise.then(setDone).catch(setDone);\n        this.signinDonePromise = promise;\n        this._signinDoneResolve = resolve;\n    }\n}\n\n// CONCATENATED MODULE: ./src/core/pusher.ts\n\n\n\n\n\n\n\n\n\n\n\n\n\nclass pusher_Pusher {\n    static ready() {\n        pusher_Pusher.isReady = true;\n        for (var i = 0, l = pusher_Pusher.instances.length; i < l; i++) {\n            pusher_Pusher.instances[i].connect();\n        }\n    }\n    static getClientFeatures() {\n        return keys(filterObject({ ws: runtime.Transports.ws }, function (t) {\n            return t.isSupported({});\n        }));\n    }\n    constructor(app_key, options) {\n        checkAppKey(app_key);\n        validateOptions(options);\n        this.key = app_key;\n        this.config = getConfig(options, this);\n        this.channels = factory.createChannels();\n        this.global_emitter = new dispatcher_Dispatcher();\n        this.sessionID = runtime.randomInt(1000000000);\n        this.timeline = new timeline_Timeline(this.key, this.sessionID, {\n            cluster: this.config.cluster,\n            features: pusher_Pusher.getClientFeatures(),\n            params: this.config.timelineParams || {},\n            limit: 50,\n            level: timeline_level.INFO,\n            version: defaults.VERSION\n        });\n        if (this.config.enableStats) {\n            this.timelineSender = factory.createTimelineSender(this.timeline, {\n                host: this.config.statsHost,\n                path: '/timeline/v2/' + runtime.TimelineTransport.name\n            });\n        }\n        var getStrategy = (options) => {\n            return runtime.getDefaultStrategy(this.config, options, strategy_builder_defineTransport);\n        };\n        this.connection = factory.createConnectionManager(this.key, {\n            getStrategy: getStrategy,\n            timeline: this.timeline,\n            activityTimeout: this.config.activityTimeout,\n            pongTimeout: this.config.pongTimeout,\n            unavailableTimeout: this.config.unavailableTimeout,\n            useTLS: Boolean(this.config.useTLS)\n        });\n        this.connection.bind('connected', () => {\n            this.subscribeAll();\n            if (this.timelineSender) {\n                this.timelineSender.send(this.connection.isUsingTLS());\n            }\n        });\n        this.connection.bind('message', event => {\n            var eventName = event.event;\n            var internal = eventName.indexOf('pusher_internal:') === 0;\n            if (event.channel) {\n                var channel = this.channel(event.channel);\n                if (channel) {\n                    channel.handleEvent(event);\n                }\n            }\n            if (!internal) {\n                this.global_emitter.emit(event.event, event.data);\n            }\n        });\n        this.connection.bind('connecting', () => {\n            this.channels.disconnect();\n        });\n        this.connection.bind('disconnected', () => {\n            this.channels.disconnect();\n        });\n        this.connection.bind('error', err => {\n            logger.warn(err);\n        });\n        pusher_Pusher.instances.push(this);\n        this.timeline.info({ instances: pusher_Pusher.instances.length });\n        this.user = new user_UserFacade(this);\n        if (pusher_Pusher.isReady) {\n            this.connect();\n        }\n    }\n    channel(name) {\n        return this.channels.find(name);\n    }\n    allChannels() {\n        return this.channels.all();\n    }\n    connect() {\n        this.connection.connect();\n        if (this.timelineSender) {\n            if (!this.timelineSenderTimer) {\n                var usingTLS = this.connection.isUsingTLS();\n                var timelineSender = this.timelineSender;\n                this.timelineSenderTimer = new timers_PeriodicTimer(60000, function () {\n                    timelineSender.send(usingTLS);\n                });\n            }\n        }\n    }\n    disconnect() {\n        this.connection.disconnect();\n        if (this.timelineSenderTimer) {\n            this.timelineSenderTimer.ensureAborted();\n            this.timelineSenderTimer = null;\n        }\n    }\n    bind(event_name, callback, context) {\n        this.global_emitter.bind(event_name, callback, context);\n        return this;\n    }\n    unbind(event_name, callback, context) {\n        this.global_emitter.unbind(event_name, callback, context);\n        return this;\n    }\n    bind_global(callback) {\n        this.global_emitter.bind_global(callback);\n        return this;\n    }\n    unbind_global(callback) {\n        this.global_emitter.unbind_global(callback);\n        return this;\n    }\n    unbind_all(callback) {\n        this.global_emitter.unbind_all();\n        return this;\n    }\n    subscribeAll() {\n        var channelName;\n        for (channelName in this.channels.channels) {\n            if (this.channels.channels.hasOwnProperty(channelName)) {\n                this.subscribe(channelName);\n            }\n        }\n    }\n    subscribe(channel_name) {\n        var channel = this.channels.add(channel_name, this);\n        if (channel.subscriptionPending && channel.subscriptionCancelled) {\n            channel.reinstateSubscription();\n        }\n        else if (!channel.subscriptionPending &&\n            this.connection.state === 'connected') {\n            channel.subscribe();\n        }\n        return channel;\n    }\n    unsubscribe(channel_name) {\n        var channel = this.channels.find(channel_name);\n        if (channel && channel.subscriptionPending) {\n            channel.cancelSubscription();\n        }\n        else {\n            channel = this.channels.remove(channel_name);\n            if (channel && channel.subscribed) {\n                channel.unsubscribe();\n            }\n        }\n    }\n    send_event(event_name, data, channel) {\n        return this.connection.send_event(event_name, data, channel);\n    }\n    shouldUseTLS() {\n        return this.config.useTLS;\n    }\n    signin() {\n        this.user.signin();\n    }\n}\npusher_Pusher.instances = [];\npusher_Pusher.isReady = false;\npusher_Pusher.logToConsole = false;\npusher_Pusher.Runtime = runtime;\npusher_Pusher.ScriptReceivers = runtime.ScriptReceivers;\npusher_Pusher.DependenciesReceivers = runtime.DependenciesReceivers;\npusher_Pusher.auth_callbacks = runtime.auth_callbacks;\n/* harmony default export */ var core_pusher = __nested_webpack_exports__[\"default\"] = (pusher_Pusher);\nfunction checkAppKey(key) {\n    if (key === null || key === undefined) {\n        throw 'You must pass your app key when you instantiate Pusher.';\n    }\n}\nruntime.setup(pusher_Pusher);\n\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pusher.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher-js/dist/web/pusher.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/auth.js":
/*!*****************************************!*\
  !*** ./node_modules/pusher/lib/auth.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nconst util = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/pusher/lib/util.js\")\n\nfunction getSocketSignatureForUser(token, socketId, userData) {\n  const serializedUserData = JSON.stringify(userData)\n  const signature = token.sign(`${socketId}::user::${serializedUserData}`)\n  return {\n    auth: `${token.key}:${signature}`,\n    user_data: serializedUserData,\n  }\n}\n\nfunction getSocketSignature(pusher, token, channel, socketID, data) {\n  const result = {}\n\n  const signatureData = [socketID, channel]\n  if (data) {\n    const serializedData = JSON.stringify(data)\n    signatureData.push(serializedData)\n    result.channel_data = serializedData\n  }\n\n  result.auth = token.key + \":\" + token.sign(signatureData.join(\":\"))\n\n  if (util.isEncryptedChannel(channel)) {\n    if (pusher.config.encryptionMasterKey === undefined) {\n      throw new Error(\n        \"Cannot generate shared_secret because encryptionMasterKey is not set\"\n      )\n    }\n    result.shared_secret = Buffer.from(\n      pusher.channelSharedSecret(channel)\n    ).toString(\"base64\")\n  }\n\n  return result\n}\n\nexports.getSocketSignatureForUser = getSocketSignatureForUser\nexports.getSocketSignature = getSocketSignature\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL2F1dGguanMiLCJtYXBwaW5ncyI6IjtBQUFBLGFBQWEsbUJBQU8sQ0FBQyxxRUFBUTs7QUFFN0I7QUFDQTtBQUNBLGtDQUFrQyxTQUFTLFVBQVUsbUJBQW1CO0FBQ3hFO0FBQ0EsYUFBYSxVQUFVLEdBQUcsVUFBVTtBQUNwQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLE1BQU07QUFDakM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsaUNBQWlDO0FBQ2pDLDBCQUEwQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi9hdXRoLmpzPzIwODYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdXRpbCA9IHJlcXVpcmUoXCIuL3V0aWxcIilcblxuZnVuY3Rpb24gZ2V0U29ja2V0U2lnbmF0dXJlRm9yVXNlcih0b2tlbiwgc29ja2V0SWQsIHVzZXJEYXRhKSB7XG4gIGNvbnN0IHNlcmlhbGl6ZWRVc2VyRGF0YSA9IEpTT04uc3RyaW5naWZ5KHVzZXJEYXRhKVxuICBjb25zdCBzaWduYXR1cmUgPSB0b2tlbi5zaWduKGAke3NvY2tldElkfTo6dXNlcjo6JHtzZXJpYWxpemVkVXNlckRhdGF9YClcbiAgcmV0dXJuIHtcbiAgICBhdXRoOiBgJHt0b2tlbi5rZXl9OiR7c2lnbmF0dXJlfWAsXG4gICAgdXNlcl9kYXRhOiBzZXJpYWxpemVkVXNlckRhdGEsXG4gIH1cbn1cblxuZnVuY3Rpb24gZ2V0U29ja2V0U2lnbmF0dXJlKHB1c2hlciwgdG9rZW4sIGNoYW5uZWwsIHNvY2tldElELCBkYXRhKSB7XG4gIGNvbnN0IHJlc3VsdCA9IHt9XG5cbiAgY29uc3Qgc2lnbmF0dXJlRGF0YSA9IFtzb2NrZXRJRCwgY2hhbm5lbF1cbiAgaWYgKGRhdGEpIHtcbiAgICBjb25zdCBzZXJpYWxpemVkRGF0YSA9IEpTT04uc3RyaW5naWZ5KGRhdGEpXG4gICAgc2lnbmF0dXJlRGF0YS5wdXNoKHNlcmlhbGl6ZWREYXRhKVxuICAgIHJlc3VsdC5jaGFubmVsX2RhdGEgPSBzZXJpYWxpemVkRGF0YVxuICB9XG5cbiAgcmVzdWx0LmF1dGggPSB0b2tlbi5rZXkgKyBcIjpcIiArIHRva2VuLnNpZ24oc2lnbmF0dXJlRGF0YS5qb2luKFwiOlwiKSlcblxuICBpZiAodXRpbC5pc0VuY3J5cHRlZENoYW5uZWwoY2hhbm5lbCkpIHtcbiAgICBpZiAocHVzaGVyLmNvbmZpZy5lbmNyeXB0aW9uTWFzdGVyS2V5ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgXCJDYW5ub3QgZ2VuZXJhdGUgc2hhcmVkX3NlY3JldCBiZWNhdXNlIGVuY3J5cHRpb25NYXN0ZXJLZXkgaXMgbm90IHNldFwiXG4gICAgICApXG4gICAgfVxuICAgIHJlc3VsdC5zaGFyZWRfc2VjcmV0ID0gQnVmZmVyLmZyb20oXG4gICAgICBwdXNoZXIuY2hhbm5lbFNoYXJlZFNlY3JldChjaGFubmVsKVxuICAgICkudG9TdHJpbmcoXCJiYXNlNjRcIilcbiAgfVxuXG4gIHJldHVybiByZXN1bHRcbn1cblxuZXhwb3J0cy5nZXRTb2NrZXRTaWduYXR1cmVGb3JVc2VyID0gZ2V0U29ja2V0U2lnbmF0dXJlRm9yVXNlclxuZXhwb3J0cy5nZXRTb2NrZXRTaWduYXR1cmUgPSBnZXRTb2NrZXRTaWduYXR1cmVcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/auth.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/config.js":
/*!*******************************************!*\
  !*** ./node_modules/pusher/lib/config.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nconst Token = __webpack_require__(/*! ./token */ \"(app-pages-browser)/./node_modules/pusher/lib/token.js\")\nconst isBase64 = __webpack_require__(/*! is-base64 */ \"(app-pages-browser)/./node_modules/is-base64/is-base64.js\")\n\nfunction Config(options) {\n  options = options || {}\n\n  let useTLS = false\n  if (options.useTLS !== undefined && options.encrypted !== undefined) {\n    throw new Error(\n      \"Cannot set both `useTLS` and `encrypted` configuration options\"\n    )\n  } else if (options.useTLS !== undefined) {\n    useTLS = options.useTLS\n  } else if (options.encrypted !== undefined) {\n    // `encrypted` deprecated in favor of `useTLS`\n    console.warn(\"`encrypted` option is deprecated in favor of `useTLS`\")\n    useTLS = options.encrypted\n  }\n  this.scheme = options.scheme || (useTLS ? \"https\" : \"http\")\n  this.port = options.port\n\n  this.appId = options.appId\n  this.token = new Token(options.key, options.secret)\n\n  this.timeout = options.timeout\n  this.agent = options.agent\n\n  // Handle deprecated raw 32 byte string as key\n  if (options.encryptionMasterKey !== undefined) {\n    if (options.encryptionMasterKeyBase64 !== undefined) {\n      throw new Error(\n        \"Do not specify both encryptionMasterKey and encryptionMasterKeyBase64. \" +\n          \"encryptionMasterKey is deprecated, please specify only encryptionMasterKeyBase64.\"\n      )\n    }\n    console.warn(\n      \"`encryptionMasterKey` option is deprecated in favor of `encryptionMasterKeyBase64`\"\n    )\n    if (typeof options.encryptionMasterKey !== \"string\") {\n      throw new Error(\"encryptionMasterKey must be a string\")\n    }\n    if (options.encryptionMasterKey.length !== 32) {\n      throw new Error(\n        \"encryptionMasterKey must be 32 bytes long, but the string '\" +\n          options.encryptionMasterKey +\n          \"' is \" +\n          options.encryptionMasterKey.length +\n          \" bytes long\"\n      )\n    }\n\n    this.encryptionMasterKey = Buffer.from(options.encryptionMasterKey)\n  }\n\n  // Handle base64 encoded 32 byte key to encourage use of the full range of byte values\n  if (options.encryptionMasterKeyBase64 !== undefined) {\n    if (typeof options.encryptionMasterKeyBase64 !== \"string\") {\n      throw new Error(\"encryptionMasterKeyBase64 must be a string\")\n    }\n    if (!isBase64(options.encryptionMasterKeyBase64)) {\n      throw new Error(\"encryptionMasterKeyBase64 must be valid base64\")\n    }\n\n    const decodedKey = Buffer.from(options.encryptionMasterKeyBase64, \"base64\")\n    if (decodedKey.length !== 32) {\n      throw new Error(\n        \"encryptionMasterKeyBase64 must decode to 32 bytes, but the string \" +\n          options.encryptionMasterKeyBase64 +\n          \"' decodes to \" +\n          decodedKey.length +\n          \" bytes\"\n      )\n    }\n\n    this.encryptionMasterKey = decodedKey\n  }\n}\n\nConfig.prototype.prefixPath = function () {\n  throw \"NotImplementedError: #prefixPath should be implemented by subclasses\"\n}\n\nConfig.prototype.getBaseURL = function () {\n  const port = this.port ? \":\" + this.port : \"\"\n  return this.scheme + \"://\" + this.host + port\n}\n\nmodule.exports = Config\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL2NvbmZpZy5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsY0FBYyxtQkFBTyxDQUFDLHVFQUFTO0FBQy9CLGlCQUFpQixtQkFBTyxDQUFDLDRFQUFXOztBQUVwQztBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLCtCQUErQixNQUFNO0FBQ3JDOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsdUJBQXVCLE1BQU07QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3B1c2hlci9saWIvY29uZmlnLmpzPzc5NmUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVG9rZW4gPSByZXF1aXJlKFwiLi90b2tlblwiKVxuY29uc3QgaXNCYXNlNjQgPSByZXF1aXJlKFwiaXMtYmFzZTY0XCIpXG5cbmZ1bmN0aW9uIENvbmZpZyhvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG5cbiAgbGV0IHVzZVRMUyA9IGZhbHNlXG4gIGlmIChvcHRpb25zLnVzZVRMUyAhPT0gdW5kZWZpbmVkICYmIG9wdGlvbnMuZW5jcnlwdGVkICE9PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIkNhbm5vdCBzZXQgYm90aCBgdXNlVExTYCBhbmQgYGVuY3J5cHRlZGAgY29uZmlndXJhdGlvbiBvcHRpb25zXCJcbiAgICApXG4gIH0gZWxzZSBpZiAob3B0aW9ucy51c2VUTFMgIT09IHVuZGVmaW5lZCkge1xuICAgIHVzZVRMUyA9IG9wdGlvbnMudXNlVExTXG4gIH0gZWxzZSBpZiAob3B0aW9ucy5lbmNyeXB0ZWQgIT09IHVuZGVmaW5lZCkge1xuICAgIC8vIGBlbmNyeXB0ZWRgIGRlcHJlY2F0ZWQgaW4gZmF2b3Igb2YgYHVzZVRMU2BcbiAgICBjb25zb2xlLndhcm4oXCJgZW5jcnlwdGVkYCBvcHRpb24gaXMgZGVwcmVjYXRlZCBpbiBmYXZvciBvZiBgdXNlVExTYFwiKVxuICAgIHVzZVRMUyA9IG9wdGlvbnMuZW5jcnlwdGVkXG4gIH1cbiAgdGhpcy5zY2hlbWUgPSBvcHRpb25zLnNjaGVtZSB8fCAodXNlVExTID8gXCJodHRwc1wiIDogXCJodHRwXCIpXG4gIHRoaXMucG9ydCA9IG9wdGlvbnMucG9ydFxuXG4gIHRoaXMuYXBwSWQgPSBvcHRpb25zLmFwcElkXG4gIHRoaXMudG9rZW4gPSBuZXcgVG9rZW4ob3B0aW9ucy5rZXksIG9wdGlvbnMuc2VjcmV0KVxuXG4gIHRoaXMudGltZW91dCA9IG9wdGlvbnMudGltZW91dFxuICB0aGlzLmFnZW50ID0gb3B0aW9ucy5hZ2VudFxuXG4gIC8vIEhhbmRsZSBkZXByZWNhdGVkIHJhdyAzMiBieXRlIHN0cmluZyBhcyBrZXlcbiAgaWYgKG9wdGlvbnMuZW5jcnlwdGlvbk1hc3RlcktleSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgaWYgKG9wdGlvbnMuZW5jcnlwdGlvbk1hc3RlcktleUJhc2U2NCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgIFwiRG8gbm90IHNwZWNpZnkgYm90aCBlbmNyeXB0aW9uTWFzdGVyS2V5IGFuZCBlbmNyeXB0aW9uTWFzdGVyS2V5QmFzZTY0LiBcIiArXG4gICAgICAgICAgXCJlbmNyeXB0aW9uTWFzdGVyS2V5IGlzIGRlcHJlY2F0ZWQsIHBsZWFzZSBzcGVjaWZ5IG9ubHkgZW5jcnlwdGlvbk1hc3RlcktleUJhc2U2NC5cIlxuICAgICAgKVxuICAgIH1cbiAgICBjb25zb2xlLndhcm4oXG4gICAgICBcImBlbmNyeXB0aW9uTWFzdGVyS2V5YCBvcHRpb24gaXMgZGVwcmVjYXRlZCBpbiBmYXZvciBvZiBgZW5jcnlwdGlvbk1hc3RlcktleUJhc2U2NGBcIlxuICAgIClcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMuZW5jcnlwdGlvbk1hc3RlcktleSAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZW5jcnlwdGlvbk1hc3RlcktleSBtdXN0IGJlIGEgc3RyaW5nXCIpXG4gICAgfVxuICAgIGlmIChvcHRpb25zLmVuY3J5cHRpb25NYXN0ZXJLZXkubGVuZ3RoICE9PSAzMikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcImVuY3J5cHRpb25NYXN0ZXJLZXkgbXVzdCBiZSAzMiBieXRlcyBsb25nLCBidXQgdGhlIHN0cmluZyAnXCIgK1xuICAgICAgICAgIG9wdGlvbnMuZW5jcnlwdGlvbk1hc3RlcktleSArXG4gICAgICAgICAgXCInIGlzIFwiICtcbiAgICAgICAgICBvcHRpb25zLmVuY3J5cHRpb25NYXN0ZXJLZXkubGVuZ3RoICtcbiAgICAgICAgICBcIiBieXRlcyBsb25nXCJcbiAgICAgIClcbiAgICB9XG5cbiAgICB0aGlzLmVuY3J5cHRpb25NYXN0ZXJLZXkgPSBCdWZmZXIuZnJvbShvcHRpb25zLmVuY3J5cHRpb25NYXN0ZXJLZXkpXG4gIH1cblxuICAvLyBIYW5kbGUgYmFzZTY0IGVuY29kZWQgMzIgYnl0ZSBrZXkgdG8gZW5jb3VyYWdlIHVzZSBvZiB0aGUgZnVsbCByYW5nZSBvZiBieXRlIHZhbHVlc1xuICBpZiAob3B0aW9ucy5lbmNyeXB0aW9uTWFzdGVyS2V5QmFzZTY0ICE9PSB1bmRlZmluZWQpIHtcbiAgICBpZiAodHlwZW9mIG9wdGlvbnMuZW5jcnlwdGlvbk1hc3RlcktleUJhc2U2NCAhPT0gXCJzdHJpbmdcIikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZW5jcnlwdGlvbk1hc3RlcktleUJhc2U2NCBtdXN0IGJlIGEgc3RyaW5nXCIpXG4gICAgfVxuICAgIGlmICghaXNCYXNlNjQob3B0aW9ucy5lbmNyeXB0aW9uTWFzdGVyS2V5QmFzZTY0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZW5jcnlwdGlvbk1hc3RlcktleUJhc2U2NCBtdXN0IGJlIHZhbGlkIGJhc2U2NFwiKVxuICAgIH1cblxuICAgIGNvbnN0IGRlY29kZWRLZXkgPSBCdWZmZXIuZnJvbShvcHRpb25zLmVuY3J5cHRpb25NYXN0ZXJLZXlCYXNlNjQsIFwiYmFzZTY0XCIpXG4gICAgaWYgKGRlY29kZWRLZXkubGVuZ3RoICE9PSAzMikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICBcImVuY3J5cHRpb25NYXN0ZXJLZXlCYXNlNjQgbXVzdCBkZWNvZGUgdG8gMzIgYnl0ZXMsIGJ1dCB0aGUgc3RyaW5nIFwiICtcbiAgICAgICAgICBvcHRpb25zLmVuY3J5cHRpb25NYXN0ZXJLZXlCYXNlNjQgK1xuICAgICAgICAgIFwiJyBkZWNvZGVzIHRvIFwiICtcbiAgICAgICAgICBkZWNvZGVkS2V5Lmxlbmd0aCArXG4gICAgICAgICAgXCIgYnl0ZXNcIlxuICAgICAgKVxuICAgIH1cblxuICAgIHRoaXMuZW5jcnlwdGlvbk1hc3RlcktleSA9IGRlY29kZWRLZXlcbiAgfVxufVxuXG5Db25maWcucHJvdG90eXBlLnByZWZpeFBhdGggPSBmdW5jdGlvbiAoKSB7XG4gIHRocm93IFwiTm90SW1wbGVtZW50ZWRFcnJvcjogI3ByZWZpeFBhdGggc2hvdWxkIGJlIGltcGxlbWVudGVkIGJ5IHN1YmNsYXNzZXNcIlxufVxuXG5Db25maWcucHJvdG90eXBlLmdldEJhc2VVUkwgPSBmdW5jdGlvbiAoKSB7XG4gIGNvbnN0IHBvcnQgPSB0aGlzLnBvcnQgPyBcIjpcIiArIHRoaXMucG9ydCA6IFwiXCJcbiAgcmV0dXJuIHRoaXMuc2NoZW1lICsgXCI6Ly9cIiArIHRoaXMuaG9zdCArIHBvcnRcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBDb25maWdcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/config.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/errors.js":
/*!*******************************************!*\
  !*** ./node_modules/pusher/lib/errors.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/** Contains information about an HTTP request error.\n *\n * @constructor\n * @extends Error\n * @param {String} message error message\n * @param {String} url request URL\n * @param [error] optional error cause\n * @param {Integer} [status] response status code, if received\n * @param {String} [body] response body, if received\n */\nfunction RequestError(message, url, error, status, body) {\n  this.name = \"PusherRequestError\"\n  this.stack = new Error().stack\n\n  /** @member {String} error message */\n  this.message = message\n  /** @member {String} request URL */\n  this.url = url\n  /** @member optional error cause */\n  this.error = error\n  /** @member {Integer} response status code, if received */\n  this.status = status\n  /** @member {String} response body, if received */\n  this.body = body\n}\nRequestError.prototype = new Error()\n\n/** Contains information about a WebHook error.\n *\n * @constructor\n * @extends Error\n * @param {String} message error message\n * @param {String} contentType WebHook content type\n * @param {String} body WebHook body\n * @param {String} signature WebHook signature\n */\nfunction WebHookError(message, contentType, body, signature) {\n  this.name = \"PusherWebHookError\"\n  this.stack = new Error().stack\n\n  /** @member {String} error message */\n  this.message = message\n  /** @member {String} WebHook content type */\n  this.contentType = contentType\n  /** @member {String} WebHook body */\n  this.body = body\n  /** @member {String} WebHook signature */\n  this.signature = signature\n}\nWebHookError.prototype = new Error()\n\nexports.RequestError = RequestError\nexports.WebHookError = WebHookError\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxlQUFlLFNBQVM7QUFDeEI7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBLGVBQWUsUUFBUTtBQUN2QjtBQUNBO0FBQ0E7O0FBRUEsb0JBQW9CO0FBQ3BCLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi9lcnJvcnMuanM/MmIyMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQ29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgYW4gSFRUUCByZXF1ZXN0IGVycm9yLlxuICpcbiAqIEBjb25zdHJ1Y3RvclxuICogQGV4dGVuZHMgRXJyb3JcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlIGVycm9yIG1lc3NhZ2VcbiAqIEBwYXJhbSB7U3RyaW5nfSB1cmwgcmVxdWVzdCBVUkxcbiAqIEBwYXJhbSBbZXJyb3JdIG9wdGlvbmFsIGVycm9yIGNhdXNlXG4gKiBAcGFyYW0ge0ludGVnZXJ9IFtzdGF0dXNdIHJlc3BvbnNlIHN0YXR1cyBjb2RlLCBpZiByZWNlaXZlZFxuICogQHBhcmFtIHtTdHJpbmd9IFtib2R5XSByZXNwb25zZSBib2R5LCBpZiByZWNlaXZlZFxuICovXG5mdW5jdGlvbiBSZXF1ZXN0RXJyb3IobWVzc2FnZSwgdXJsLCBlcnJvciwgc3RhdHVzLCBib2R5KSB7XG4gIHRoaXMubmFtZSA9IFwiUHVzaGVyUmVxdWVzdEVycm9yXCJcbiAgdGhpcy5zdGFjayA9IG5ldyBFcnJvcigpLnN0YWNrXG5cbiAgLyoqIEBtZW1iZXIge1N0cmluZ30gZXJyb3IgbWVzc2FnZSAqL1xuICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlXG4gIC8qKiBAbWVtYmVyIHtTdHJpbmd9IHJlcXVlc3QgVVJMICovXG4gIHRoaXMudXJsID0gdXJsXG4gIC8qKiBAbWVtYmVyIG9wdGlvbmFsIGVycm9yIGNhdXNlICovXG4gIHRoaXMuZXJyb3IgPSBlcnJvclxuICAvKiogQG1lbWJlciB7SW50ZWdlcn0gcmVzcG9uc2Ugc3RhdHVzIGNvZGUsIGlmIHJlY2VpdmVkICovXG4gIHRoaXMuc3RhdHVzID0gc3RhdHVzXG4gIC8qKiBAbWVtYmVyIHtTdHJpbmd9IHJlc3BvbnNlIGJvZHksIGlmIHJlY2VpdmVkICovXG4gIHRoaXMuYm9keSA9IGJvZHlcbn1cblJlcXVlc3RFcnJvci5wcm90b3R5cGUgPSBuZXcgRXJyb3IoKVxuXG4vKiogQ29udGFpbnMgaW5mb3JtYXRpb24gYWJvdXQgYSBXZWJIb29rIGVycm9yLlxuICpcbiAqIEBjb25zdHJ1Y3RvclxuICogQGV4dGVuZHMgRXJyb3JcbiAqIEBwYXJhbSB7U3RyaW5nfSBtZXNzYWdlIGVycm9yIG1lc3NhZ2VcbiAqIEBwYXJhbSB7U3RyaW5nfSBjb250ZW50VHlwZSBXZWJIb29rIGNvbnRlbnQgdHlwZVxuICogQHBhcmFtIHtTdHJpbmd9IGJvZHkgV2ViSG9vayBib2R5XG4gKiBAcGFyYW0ge1N0cmluZ30gc2lnbmF0dXJlIFdlYkhvb2sgc2lnbmF0dXJlXG4gKi9cbmZ1bmN0aW9uIFdlYkhvb2tFcnJvcihtZXNzYWdlLCBjb250ZW50VHlwZSwgYm9keSwgc2lnbmF0dXJlKSB7XG4gIHRoaXMubmFtZSA9IFwiUHVzaGVyV2ViSG9va0Vycm9yXCJcbiAgdGhpcy5zdGFjayA9IG5ldyBFcnJvcigpLnN0YWNrXG5cbiAgLyoqIEBtZW1iZXIge1N0cmluZ30gZXJyb3IgbWVzc2FnZSAqL1xuICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlXG4gIC8qKiBAbWVtYmVyIHtTdHJpbmd9IFdlYkhvb2sgY29udGVudCB0eXBlICovXG4gIHRoaXMuY29udGVudFR5cGUgPSBjb250ZW50VHlwZVxuICAvKiogQG1lbWJlciB7U3RyaW5nfSBXZWJIb29rIGJvZHkgKi9cbiAgdGhpcy5ib2R5ID0gYm9keVxuICAvKiogQG1lbWJlciB7U3RyaW5nfSBXZWJIb29rIHNpZ25hdHVyZSAqL1xuICB0aGlzLnNpZ25hdHVyZSA9IHNpZ25hdHVyZVxufVxuV2ViSG9va0Vycm9yLnByb3RvdHlwZSA9IG5ldyBFcnJvcigpXG5cbmV4cG9ydHMuUmVxdWVzdEVycm9yID0gUmVxdWVzdEVycm9yXG5leHBvcnRzLldlYkhvb2tFcnJvciA9IFdlYkhvb2tFcnJvclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/errors.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/events.js":
/*!*******************************************!*\
  !*** ./node_modules/pusher/lib/events.js ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("const util = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/pusher/lib/util.js\")\nconst nacl = __webpack_require__(/*! tweetnacl */ \"(app-pages-browser)/./node_modules/tweetnacl/nacl-fast.js\")\nconst naclUtil = __webpack_require__(/*! tweetnacl-util */ \"(app-pages-browser)/./node_modules/tweetnacl-util/nacl-util.js\")\n\nfunction encrypt(pusher, channel, data) {\n  if (pusher.config.encryptionMasterKey === undefined) {\n    throw new Error(\n      \"Set encryptionMasterKey before triggering events on encrypted channels\"\n    )\n  }\n\n  const nonceBytes = nacl.randomBytes(24)\n\n  const ciphertextBytes = nacl.secretbox(\n    naclUtil.decodeUTF8(JSON.stringify(data)),\n    nonceBytes,\n    pusher.channelSharedSecret(channel)\n  )\n\n  return JSON.stringify({\n    nonce: naclUtil.encodeBase64(nonceBytes),\n    ciphertext: naclUtil.encodeBase64(ciphertextBytes),\n  })\n}\n\nexports.trigger = function (pusher, channels, eventName, data, params) {\n  if (channels.length === 1 && util.isEncryptedChannel(channels[0])) {\n    const channel = channels[0]\n    const event = {\n      name: eventName,\n      data: encrypt(pusher, channel, data),\n      channels: [channel],\n      ...params,\n    }\n    return pusher.post({ path: \"/events\", body: event })\n  } else {\n    for (let i = 0; i < channels.length; i++) {\n      if (util.isEncryptedChannel(channels[i])) {\n        // For rationale, see limitations of end-to-end encryption in the README\n        throw new Error(\n          \"You cannot trigger to multiple channels when using encrypted channels\"\n        )\n      }\n    }\n\n    const event = {\n      name: eventName,\n      data: ensureJSON(data),\n      channels: channels,\n      ...params,\n    }\n    return pusher.post({ path: \"/events\", body: event })\n  }\n}\n\nexports.triggerBatch = function (pusher, batch) {\n  for (let i = 0; i < batch.length; i++) {\n    batch[i].data = util.isEncryptedChannel(batch[i].channel)\n      ? encrypt(pusher, batch[i].channel, batch[i].data)\n      : ensureJSON(batch[i].data)\n  }\n  return pusher.post({ path: \"/batch_events\", body: { batch: batch } })\n}\n\nfunction ensureJSON(data) {\n  return typeof data === \"string\" ? data : JSON.stringify(data)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL2V2ZW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBQSxhQUFhLG1CQUFPLENBQUMscUVBQVE7QUFDN0IsYUFBYSxtQkFBTyxDQUFDLDRFQUFXO0FBQ2hDLGlCQUFpQixtQkFBTyxDQUFDLHNGQUFnQjs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIOztBQUVBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDhCQUE4QjtBQUN2RCxJQUFJO0FBQ0osb0JBQW9CLHFCQUFxQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsOEJBQThCO0FBQ3ZEO0FBQ0E7O0FBRUEsb0JBQW9CO0FBQ3BCLGtCQUFrQixrQkFBa0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsK0JBQStCLGdCQUFnQjtBQUN0RTs7QUFFQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3B1c2hlci9saWIvZXZlbnRzLmpzPzliM2MiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgdXRpbCA9IHJlcXVpcmUoXCIuL3V0aWxcIilcbmNvbnN0IG5hY2wgPSByZXF1aXJlKFwidHdlZXRuYWNsXCIpXG5jb25zdCBuYWNsVXRpbCA9IHJlcXVpcmUoXCJ0d2VldG5hY2wtdXRpbFwiKVxuXG5mdW5jdGlvbiBlbmNyeXB0KHB1c2hlciwgY2hhbm5lbCwgZGF0YSkge1xuICBpZiAocHVzaGVyLmNvbmZpZy5lbmNyeXB0aW9uTWFzdGVyS2V5ID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBcIlNldCBlbmNyeXB0aW9uTWFzdGVyS2V5IGJlZm9yZSB0cmlnZ2VyaW5nIGV2ZW50cyBvbiBlbmNyeXB0ZWQgY2hhbm5lbHNcIlxuICAgIClcbiAgfVxuXG4gIGNvbnN0IG5vbmNlQnl0ZXMgPSBuYWNsLnJhbmRvbUJ5dGVzKDI0KVxuXG4gIGNvbnN0IGNpcGhlcnRleHRCeXRlcyA9IG5hY2wuc2VjcmV0Ym94KFxuICAgIG5hY2xVdGlsLmRlY29kZVVURjgoSlNPTi5zdHJpbmdpZnkoZGF0YSkpLFxuICAgIG5vbmNlQnl0ZXMsXG4gICAgcHVzaGVyLmNoYW5uZWxTaGFyZWRTZWNyZXQoY2hhbm5lbClcbiAgKVxuXG4gIHJldHVybiBKU09OLnN0cmluZ2lmeSh7XG4gICAgbm9uY2U6IG5hY2xVdGlsLmVuY29kZUJhc2U2NChub25jZUJ5dGVzKSxcbiAgICBjaXBoZXJ0ZXh0OiBuYWNsVXRpbC5lbmNvZGVCYXNlNjQoY2lwaGVydGV4dEJ5dGVzKSxcbiAgfSlcbn1cblxuZXhwb3J0cy50cmlnZ2VyID0gZnVuY3Rpb24gKHB1c2hlciwgY2hhbm5lbHMsIGV2ZW50TmFtZSwgZGF0YSwgcGFyYW1zKSB7XG4gIGlmIChjaGFubmVscy5sZW5ndGggPT09IDEgJiYgdXRpbC5pc0VuY3J5cHRlZENoYW5uZWwoY2hhbm5lbHNbMF0pKSB7XG4gICAgY29uc3QgY2hhbm5lbCA9IGNoYW5uZWxzWzBdXG4gICAgY29uc3QgZXZlbnQgPSB7XG4gICAgICBuYW1lOiBldmVudE5hbWUsXG4gICAgICBkYXRhOiBlbmNyeXB0KHB1c2hlciwgY2hhbm5lbCwgZGF0YSksXG4gICAgICBjaGFubmVsczogW2NoYW5uZWxdLFxuICAgICAgLi4ucGFyYW1zLFxuICAgIH1cbiAgICByZXR1cm4gcHVzaGVyLnBvc3QoeyBwYXRoOiBcIi9ldmVudHNcIiwgYm9keTogZXZlbnQgfSlcbiAgfSBlbHNlIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoYW5uZWxzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBpZiAodXRpbC5pc0VuY3J5cHRlZENoYW5uZWwoY2hhbm5lbHNbaV0pKSB7XG4gICAgICAgIC8vIEZvciByYXRpb25hbGUsIHNlZSBsaW1pdGF0aW9ucyBvZiBlbmQtdG8tZW5kIGVuY3J5cHRpb24gaW4gdGhlIFJFQURNRVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICAgICAgXCJZb3UgY2Fubm90IHRyaWdnZXIgdG8gbXVsdGlwbGUgY2hhbm5lbHMgd2hlbiB1c2luZyBlbmNyeXB0ZWQgY2hhbm5lbHNcIlxuICAgICAgICApXG4gICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZXZlbnQgPSB7XG4gICAgICBuYW1lOiBldmVudE5hbWUsXG4gICAgICBkYXRhOiBlbnN1cmVKU09OKGRhdGEpLFxuICAgICAgY2hhbm5lbHM6IGNoYW5uZWxzLFxuICAgICAgLi4ucGFyYW1zLFxuICAgIH1cbiAgICByZXR1cm4gcHVzaGVyLnBvc3QoeyBwYXRoOiBcIi9ldmVudHNcIiwgYm9keTogZXZlbnQgfSlcbiAgfVxufVxuXG5leHBvcnRzLnRyaWdnZXJCYXRjaCA9IGZ1bmN0aW9uIChwdXNoZXIsIGJhdGNoKSB7XG4gIGZvciAobGV0IGkgPSAwOyBpIDwgYmF0Y2gubGVuZ3RoOyBpKyspIHtcbiAgICBiYXRjaFtpXS5kYXRhID0gdXRpbC5pc0VuY3J5cHRlZENoYW5uZWwoYmF0Y2hbaV0uY2hhbm5lbClcbiAgICAgID8gZW5jcnlwdChwdXNoZXIsIGJhdGNoW2ldLmNoYW5uZWwsIGJhdGNoW2ldLmRhdGEpXG4gICAgICA6IGVuc3VyZUpTT04oYmF0Y2hbaV0uZGF0YSlcbiAgfVxuICByZXR1cm4gcHVzaGVyLnBvc3QoeyBwYXRoOiBcIi9iYXRjaF9ldmVudHNcIiwgYm9keTogeyBiYXRjaDogYmF0Y2ggfSB9KVxufVxuXG5mdW5jdGlvbiBlbnN1cmVKU09OKGRhdGEpIHtcbiAgcmV0dXJuIHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiID8gZGF0YSA6IEpTT04uc3RyaW5naWZ5KGRhdGEpXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/events.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/notification_client.js":
/*!********************************************************!*\
  !*** ./node_modules/pusher/lib/notification_client.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("const requests = __webpack_require__(/*! ./requests */ \"(app-pages-browser)/./node_modules/pusher/lib/requests.js\")\nconst NotificationConfig = __webpack_require__(/*! ./notification_config */ \"(app-pages-browser)/./node_modules/pusher/lib/notification_config.js\")\n\nfunction NotificationClient(options) {\n  this.config = new NotificationConfig(options)\n}\n\nNotificationClient.prototype.notify = function (interests, notification) {\n  if (!Array.isArray(interests)) {\n    throw new Error(\"Interests must be an array\")\n  }\n\n  if (interests.length == 0) {\n    throw new Error(\"Interests array must not be empty\")\n  }\n\n  const body = Object.assign({ interests: interests }, notification)\n  return requests.send(this.config, {\n    method: \"POST\",\n    body: body,\n    path: \"/notifications\",\n  })\n}\n\nmodule.exports = NotificationClient\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL25vdGlmaWNhdGlvbl9jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLG1CQUFPLENBQUMsNkVBQVk7QUFDckMsMkJBQTJCLG1CQUFPLENBQUMsbUdBQXVCOztBQUUxRDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLCtCQUErQixzQkFBc0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3B1c2hlci9saWIvbm90aWZpY2F0aW9uX2NsaWVudC5qcz80ZGQyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJlcXVlc3RzID0gcmVxdWlyZShcIi4vcmVxdWVzdHNcIilcbmNvbnN0IE5vdGlmaWNhdGlvbkNvbmZpZyA9IHJlcXVpcmUoXCIuL25vdGlmaWNhdGlvbl9jb25maWdcIilcblxuZnVuY3Rpb24gTm90aWZpY2F0aW9uQ2xpZW50KG9wdGlvbnMpIHtcbiAgdGhpcy5jb25maWcgPSBuZXcgTm90aWZpY2F0aW9uQ29uZmlnKG9wdGlvbnMpXG59XG5cbk5vdGlmaWNhdGlvbkNsaWVudC5wcm90b3R5cGUubm90aWZ5ID0gZnVuY3Rpb24gKGludGVyZXN0cywgbm90aWZpY2F0aW9uKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShpbnRlcmVzdHMpKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW50ZXJlc3RzIG11c3QgYmUgYW4gYXJyYXlcIilcbiAgfVxuXG4gIGlmIChpbnRlcmVzdHMubGVuZ3RoID09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnRlcmVzdHMgYXJyYXkgbXVzdCBub3QgYmUgZW1wdHlcIilcbiAgfVxuXG4gIGNvbnN0IGJvZHkgPSBPYmplY3QuYXNzaWduKHsgaW50ZXJlc3RzOiBpbnRlcmVzdHMgfSwgbm90aWZpY2F0aW9uKVxuICByZXR1cm4gcmVxdWVzdHMuc2VuZCh0aGlzLmNvbmZpZywge1xuICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgYm9keTogYm9keSxcbiAgICBwYXRoOiBcIi9ub3RpZmljYXRpb25zXCIsXG4gIH0pXG59XG5cbm1vZHVsZS5leHBvcnRzID0gTm90aWZpY2F0aW9uQ2xpZW50XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/notification_client.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/notification_config.js":
/*!********************************************************!*\
  !*** ./node_modules/pusher/lib/notification_config.js ***!
  \********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("const Config = __webpack_require__(/*! ./config */ \"(app-pages-browser)/./node_modules/pusher/lib/config.js\")\n\nconst DEFAULT_HOST = \"nativepush-cluster1.pusher.com\"\nconst API_PREFIX = \"server_api\"\nconst API_VERSION = \"v1\"\n\nfunction NotificationConfig(options) {\n  Config.call(this, options)\n  this.host = options.host || DEFAULT_HOST\n}\n\nObject.assign(NotificationConfig.prototype, Config.prototype)\n\nNotificationConfig.prototype.prefixPath = function (subPath) {\n  return \"/\" + API_PREFIX + \"/\" + API_VERSION + \"/apps/\" + this.appId + subPath\n}\n\nmodule.exports = NotificationConfig\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL25vdGlmaWNhdGlvbl9jb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHlFQUFVOztBQUVqQztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL25vdGlmaWNhdGlvbl9jb25maWcuanM/NjNjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBDb25maWcgPSByZXF1aXJlKFwiLi9jb25maWdcIilcblxuY29uc3QgREVGQVVMVF9IT1NUID0gXCJuYXRpdmVwdXNoLWNsdXN0ZXIxLnB1c2hlci5jb21cIlxuY29uc3QgQVBJX1BSRUZJWCA9IFwic2VydmVyX2FwaVwiXG5jb25zdCBBUElfVkVSU0lPTiA9IFwidjFcIlxuXG5mdW5jdGlvbiBOb3RpZmljYXRpb25Db25maWcob3B0aW9ucykge1xuICBDb25maWcuY2FsbCh0aGlzLCBvcHRpb25zKVxuICB0aGlzLmhvc3QgPSBvcHRpb25zLmhvc3QgfHwgREVGQVVMVF9IT1NUXG59XG5cbk9iamVjdC5hc3NpZ24oTm90aWZpY2F0aW9uQ29uZmlnLnByb3RvdHlwZSwgQ29uZmlnLnByb3RvdHlwZSlcblxuTm90aWZpY2F0aW9uQ29uZmlnLnByb3RvdHlwZS5wcmVmaXhQYXRoID0gZnVuY3Rpb24gKHN1YlBhdGgpIHtcbiAgcmV0dXJuIFwiL1wiICsgQVBJX1BSRUZJWCArIFwiL1wiICsgQVBJX1ZFUlNJT04gKyBcIi9hcHBzL1wiICsgdGhpcy5hcHBJZCArIHN1YlBhdGhcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBOb3RpZmljYXRpb25Db25maWdcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/notification_config.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/pusher.js":
/*!*******************************************!*\
  !*** ./node_modules/pusher/lib/pusher.js ***!
  \*******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nconst crypto = __webpack_require__(/*! crypto */ \"(app-pages-browser)/./node_modules/next/dist/compiled/crypto-browserify/index.js\")\nconst url = __webpack_require__(/*! url */ \"(app-pages-browser)/./node_modules/next/dist/compiled/native-url/index.js\")\n\nconst auth = __webpack_require__(/*! ./auth */ \"(app-pages-browser)/./node_modules/pusher/lib/auth.js\")\nconst errors = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/pusher/lib/errors.js\")\nconst events = __webpack_require__(/*! ./events */ \"(app-pages-browser)/./node_modules/pusher/lib/events.js\")\nconst requests = __webpack_require__(/*! ./requests */ \"(app-pages-browser)/./node_modules/pusher/lib/requests.js\")\n\nconst PusherConfig = __webpack_require__(/*! ./pusher_config */ \"(app-pages-browser)/./node_modules/pusher/lib/pusher_config.js\")\nconst Token = __webpack_require__(/*! ./token */ \"(app-pages-browser)/./node_modules/pusher/lib/token.js\")\nconst WebHook = __webpack_require__(/*! ./webhook */ \"(app-pages-browser)/./node_modules/pusher/lib/webhook.js\")\nconst NotificationClient = __webpack_require__(/*! ./notification_client */ \"(app-pages-browser)/./node_modules/pusher/lib/notification_client.js\")\n\nconst validateChannel = function (channel) {\n  if (\n    typeof channel !== \"string\" ||\n    channel === \"\" ||\n    channel.match(/[^A-Za-z0-9_\\-=@,.;]/)\n  ) {\n    throw new Error(\"Invalid channel name: '\" + channel + \"'\")\n  }\n  if (channel.length > 200) {\n    throw new Error(\"Channel name too long: '\" + channel + \"'\")\n  }\n}\n\nconst validateSocketId = function (socketId) {\n  if (\n    typeof socketId !== \"string\" ||\n    socketId === \"\" ||\n    !socketId.match(/^\\d+\\.\\d+$/)\n  ) {\n    throw new Error(\"Invalid socket id: '\" + socketId + \"'\")\n  }\n}\n\nconst validateUserId = function (userId) {\n  if (typeof userId !== \"string\" || userId === \"\") {\n    throw new Error(\"Invalid user id: '\" + userId + \"'\")\n  }\n}\n\nconst validateUserData = function (userData) {\n  if (userData == null || typeof userData !== \"object\") {\n    throw new Error(\"Invalid user data: '\" + userData + \"'\")\n  }\n  validateUserId(userData.id)\n}\n\n/** Provides access to Pusher's REST API, WebHooks and authentication.\n *\n * @constructor\n * @param {Object} options\n * @param {String} [options.host=\"api.pusherapp.com\"] API hostname\n * @param {String} [options.notification_host=\"api.pusherapp.com\"] Notification API hostname\n * @param {Boolean} [options.useTLS=false] whether to use TLS\n * @param {Boolean} [options.encrypted=false] deprecated; renamed to `useTLS`\n * @param {Boolean} [options.notification_encrypted=false] whether to use TLS for notifications\n * @param {Integer} [options.port] port, default depends on the scheme\n * @param {Integer} options.appId application ID\n * @param {String} options.key application key\n * @param {String} options.secret application secret\n * @param {Integer} [options.timeout] request timeout in milliseconds\n * @param {Agent} [options.agent] http agent to use\n */\nfunction Pusher(options) {\n  this.config = new PusherConfig(options)\n  const notificationOptions = Object.assign({}, options, {\n    host: options.notificationHost,\n    encrypted: options.notificationEncrypted,\n  })\n  this.notificationClient = new NotificationClient(notificationOptions)\n}\n\n/** Create a Pusher instance using a URL.\n *\n * URL should be in SCHEME://APP_KEY:SECRET_KEY@HOST:PORT/apps/APP_ID form.\n *\n * @param {String} pusherUrl URL containing endpoint and app details\n * @param {Object} [options] options, see the {@link Pusher} for details\n * @returns {Pusher} instance configured for the URL and options\n */\nPusher.forURL = function (pusherUrl, options) {\n  const apiUrl = url.parse(pusherUrl)\n  const apiPath = apiUrl.pathname.split(\"/\")\n  const apiAuth = apiUrl.auth.split(\":\")\n\n  return new Pusher(\n    Object.assign({}, options || {}, {\n      scheme: apiUrl.protocol.replace(/:$/, \"\"),\n      host: apiUrl.hostname,\n      port: parseInt(apiUrl.port, 10) || undefined,\n      appId: parseInt(apiPath[apiPath.length - 1], 10),\n      key: apiAuth[0],\n      secret: apiAuth[1],\n    })\n  )\n}\n\n/** Create a Pusher instance using a cluster name.\n *\n * @param {String} cluster cluster name\n * @param {Object} [options] options, see the {@link Pusher} for details\n * @returns {Pusher} instance configured for the cluster and options\n */\nPusher.forCluster = function (cluster, options) {\n  return new Pusher(\n    Object.assign({}, options || {}, {\n      host: \"api-\" + cluster + \".pusher.com\",\n    })\n  )\n}\n\n/** Returns a signature for given socket id, channel and socket data.\n *\n * @param {String} socketId socket id\n * @param {String} channel channel name\n * @param {Object} [data] additional socket data\n * @returns {String} authorization signature\n */\nPusher.prototype.authorizeChannel = function (socketId, channel, data) {\n  validateSocketId(socketId)\n  validateChannel(channel)\n\n  return auth.getSocketSignature(\n    this,\n    this.config.token,\n    channel,\n    socketId,\n    data\n  )\n}\n\n/** Returns a signature for given socket id, channel and socket data.\n *\n *  DEPRECATED. Use authorizeChannel.\n *\n * @param {String} socketId socket id\n * @param {String} channel channel name\n * @param {Object} [data] additional socket data\n * @returns {String} authorization signature\n */\nPusher.prototype.authenticate = Pusher.prototype.authorizeChannel\n\n/** Returns a signature for given socket id and user data.\n *\n * @param {String} socketId socket id\n * @param {Object} userData user data\n * @returns {String} authentication signature\n */\nPusher.prototype.authenticateUser = function (socketId, userData) {\n  validateSocketId(socketId)\n  validateUserData(userData)\n\n  return auth.getSocketSignatureForUser(this.config.token, socketId, userData)\n}\n\n/** Sends an event to a user.\n *\n * Event name can be at most 200 characters long.\n *\n * @param {String} userId user id\n * @param {String} event event name\n * @param data event data, objects are JSON-encoded\n * @returns {Promise} a promise resolving to a response, or rejecting to a RequestError.\n * @see RequestError\n */\nPusher.prototype.sendToUser = function (userId, event, data) {\n  if (event.length > 200) {\n    throw new Error(\"Too long event name: '\" + event + \"'\")\n  }\n  validateUserId(userId)\n  return events.trigger(this, [`#server-to-user-${userId}`], event, data)\n}\n\n/** Terminate users's connections.\n *\n *\n * @param {String} userId user id\n * @returns {Promise} a promise resolving to a response, or rejecting to a RequestError.\n * @see RequestError\n */\nPusher.prototype.terminateUserConnections = function (userId) {\n  validateUserId(userId)\n  return this.post({ path: `/users/${userId}/terminate_connections`, body: {} })\n}\n\n/** Triggers an event.\n *\n * Channel names can contain only characters which are alphanumeric, '_' or '-'\n * and have to be at most 200 characters long.\n *\n * Event name can be at most 200 characters long.\n *\n * Returns a promise resolving to a response, or rejecting to a RequestError.\n *\n * @param {String|String[]} channel list of at most 100 channels\n * @param {String} event event name\n * @param data event data, objects are JSON-encoded\n * @param {Object} [params] additional optional request body parameters\n * @param {String} [params.socket_id] id of a socket that should not receive the event\n * @param {String} [params.info] a comma separate list of attributes to be returned in the response. Experimental, see https://pusher.com/docs/lab#experimental-program\n * @see RequestError\n */\nPusher.prototype.trigger = function (channels, event, data, params) {\n  if (params && params.socket_id) {\n    validateSocketId(params.socket_id)\n  }\n  if (!(channels instanceof Array)) {\n    // add single channel to array for multi trigger compatibility\n    channels = [channels]\n  }\n  if (event.length > 200) {\n    throw new Error(\"Too long event name: '\" + event + \"'\")\n  }\n  if (channels.length > 100) {\n    throw new Error(\"Can't trigger a message to more than 100 channels\")\n  }\n  for (let i = 0; i < channels.length; i++) {\n    validateChannel(channels[i])\n  }\n  return events.trigger(this, channels, event, data, params)\n}\n\n/* Triggers a batch of events\n *\n * @param {Event[]} An array of events, where Event is\n * {\n *   name: string,\n *   channel: string,\n *   data: any JSON-encodable data,\n *   socket_id: [optional] string,\n *   info: [optional] string experimental, see https://pusher.com/docs/lab#experimental-program\n * }\n */\nPusher.prototype.triggerBatch = function (batch) {\n  return events.triggerBatch(this, batch)\n}\n\nPusher.prototype.notify = function () {\n  this.notificationClient.notify.apply(this.notificationClient, arguments)\n}\n\n/** Makes a POST request to Pusher, handles the authentication.\n *\n * Returns a promise resolving to a response, or rejecting to a RequestError.\n *\n * @param {Object} options\n * @param {String} options.path request path\n * @param {Object} options.params query params\n * @param {String} options.body request body\n * @see RequestError\n */\nPusher.prototype.post = function (options) {\n  return requests.send(\n    this.config,\n    Object.assign({}, options, { method: \"POST\" })\n  )\n}\n\n/** Makes a GET request to Pusher, handles the authentication.\n *\n * Returns a promise resolving to a response, or rejecting to a RequestError.\n *\n * @param {Object} options\n * @param {String} options.path request path\n * @param {Object} options.params query params\n * @see RequestError\n */\nPusher.prototype.get = function (options) {\n  return requests.send(\n    this.config,\n    Object.assign({}, options, { method: \"GET\" })\n  )\n}\n\n/** Creates a WebHook object for a given request.\n *\n * @param {Object} request\n * @param {Object} request.headers WebHook HTTP headers with lower-case keys\n * @param {String} request.rawBody raw WebHook body\n * @returns {WebHook}\n */\nPusher.prototype.webhook = function (request) {\n  return new WebHook(this.config.token, request)\n}\n\n/** Builds a signed query string that can be used in a request to Pusher.\n *\n * @param {Object} options\n * @param {String} options.method request method\n * @param {String} options.path request path\n * @param {Object} options.params query params\n * @param {String} options.body request body\n * @returns {String} signed query string\n */\nPusher.prototype.createSignedQueryString = function (options) {\n  return requests.createSignedQueryString(this.config.token, options)\n}\n\nPusher.prototype.channelSharedSecret = function (channel) {\n  return crypto\n    .createHash(\"sha256\")\n    .update(\n      Buffer.concat([Buffer.from(channel), this.config.encryptionMasterKey])\n    )\n    .digest()\n}\n\n/** Exported {@link Token} constructor. */\nPusher.Token = Token\n/** Exported {@link RequestError} constructor. */\nPusher.RequestError = errors.RequestError\n/** Exported {@link WebHookError} constructor. */\nPusher.WebHookError = errors.WebHookError\n\nmodule.exports = Pusher\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL3B1c2hlci5qcyIsIm1hcHBpbmdzIjoiO0FBQUEsZUFBZSxtQkFBTyxDQUFDLGdHQUFRO0FBQy9CLFlBQVksbUJBQU8sQ0FBQyxzRkFBSzs7QUFFekIsYUFBYSxtQkFBTyxDQUFDLHFFQUFRO0FBQzdCLGVBQWUsbUJBQU8sQ0FBQyx5RUFBVTtBQUNqQyxlQUFlLG1CQUFPLENBQUMseUVBQVU7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsNkVBQVk7O0FBRXJDLHFCQUFxQixtQkFBTyxDQUFDLHVGQUFpQjtBQUM5QyxjQUFjLG1CQUFPLENBQUMsdUVBQVM7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsMkVBQVc7QUFDbkMsMkJBQTJCLG1CQUFPLENBQUMsbUdBQXVCOztBQUUxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUyxzQ0FBc0M7QUFDMUQsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVM7QUFDcEIsV0FBVyxPQUFPO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBLDhDQUE4QztBQUM5QztBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRLDRCQUE0QixjQUFjO0FBQzdELGFB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bm9kZV9tb2R1bGVzL3B1c2hlci9saWIvcHVzaGVyLmpzPzgyNzgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgY3J5cHRvID0gcmVxdWlyZShcImNyeXB0b1wiKVxuY29uc3QgdXJsID0gcmVxdWlyZShcInVybFwiKVxuXG5jb25zdCBhdXRoID0gcmVxdWlyZShcIi4vYXV0aFwiKVxuY29uc3QgZXJyb3JzID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpXG5jb25zdCBldmVudHMgPSByZXF1aXJlKFwiLi9ldmVudHNcIilcbmNvbnN0IHJlcXVlc3RzID0gcmVxdWlyZShcIi4vcmVxdWVzdHNcIilcblxuY29uc3QgUHVzaGVyQ29uZmlnID0gcmVxdWlyZShcIi4vcHVzaGVyX2NvbmZpZ1wiKVxuY29uc3QgVG9rZW4gPSByZXF1aXJlKFwiLi90b2tlblwiKVxuY29uc3QgV2ViSG9vayA9IHJlcXVpcmUoXCIuL3dlYmhvb2tcIilcbmNvbnN0IE5vdGlmaWNhdGlvbkNsaWVudCA9IHJlcXVpcmUoXCIuL25vdGlmaWNhdGlvbl9jbGllbnRcIilcblxuY29uc3QgdmFsaWRhdGVDaGFubmVsID0gZnVuY3Rpb24gKGNoYW5uZWwpIHtcbiAgaWYgKFxuICAgIHR5cGVvZiBjaGFubmVsICE9PSBcInN0cmluZ1wiIHx8XG4gICAgY2hhbm5lbCA9PT0gXCJcIiB8fFxuICAgIGNoYW5uZWwubWF0Y2goL1teQS1aYS16MC05X1xcLT1ALC47XS8pXG4gICkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgY2hhbm5lbCBuYW1lOiAnXCIgKyBjaGFubmVsICsgXCInXCIpXG4gIH1cbiAgaWYgKGNoYW5uZWwubGVuZ3RoID4gMjAwKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ2hhbm5lbCBuYW1lIHRvbyBsb25nOiAnXCIgKyBjaGFubmVsICsgXCInXCIpXG4gIH1cbn1cblxuY29uc3QgdmFsaWRhdGVTb2NrZXRJZCA9IGZ1bmN0aW9uIChzb2NrZXRJZCkge1xuICBpZiAoXG4gICAgdHlwZW9mIHNvY2tldElkICE9PSBcInN0cmluZ1wiIHx8XG4gICAgc29ja2V0SWQgPT09IFwiXCIgfHxcbiAgICAhc29ja2V0SWQubWF0Y2goL15cXGQrXFwuXFxkKyQvKVxuICApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIHNvY2tldCBpZDogJ1wiICsgc29ja2V0SWQgKyBcIidcIilcbiAgfVxufVxuXG5jb25zdCB2YWxpZGF0ZVVzZXJJZCA9IGZ1bmN0aW9uICh1c2VySWQpIHtcbiAgaWYgKHR5cGVvZiB1c2VySWQgIT09IFwic3RyaW5nXCIgfHwgdXNlcklkID09PSBcIlwiKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCB1c2VyIGlkOiAnXCIgKyB1c2VySWQgKyBcIidcIilcbiAgfVxufVxuXG5jb25zdCB2YWxpZGF0ZVVzZXJEYXRhID0gZnVuY3Rpb24gKHVzZXJEYXRhKSB7XG4gIGlmICh1c2VyRGF0YSA9PSBudWxsIHx8IHR5cGVvZiB1c2VyRGF0YSAhPT0gXCJvYmplY3RcIikge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgdXNlciBkYXRhOiAnXCIgKyB1c2VyRGF0YSArIFwiJ1wiKVxuICB9XG4gIHZhbGlkYXRlVXNlcklkKHVzZXJEYXRhLmlkKVxufVxuXG4vKiogUHJvdmlkZXMgYWNjZXNzIHRvIFB1c2hlcidzIFJFU1QgQVBJLCBXZWJIb29rcyBhbmQgYXV0aGVudGljYXRpb24uXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9uc1xuICogQHBhcmFtIHtTdHJpbmd9IFtvcHRpb25zLmhvc3Q9XCJhcGkucHVzaGVyYXBwLmNvbVwiXSBBUEkgaG9zdG5hbWVcbiAqIEBwYXJhbSB7U3RyaW5nfSBbb3B0aW9ucy5ub3RpZmljYXRpb25faG9zdD1cImFwaS5wdXNoZXJhcHAuY29tXCJdIE5vdGlmaWNhdGlvbiBBUEkgaG9zdG5hbWVcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMudXNlVExTPWZhbHNlXSB3aGV0aGVyIHRvIHVzZSBUTFNcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW29wdGlvbnMuZW5jcnlwdGVkPWZhbHNlXSBkZXByZWNhdGVkOyByZW5hbWVkIHRvIGB1c2VUTFNgXG4gKiBAcGFyYW0ge0Jvb2xlYW59IFtvcHRpb25zLm5vdGlmaWNhdGlvbl9lbmNyeXB0ZWQ9ZmFsc2VdIHdoZXRoZXIgdG8gdXNlIFRMUyBmb3Igbm90aWZpY2F0aW9uc1xuICogQHBhcmFtIHtJbnRlZ2VyfSBbb3B0aW9ucy5wb3J0XSBwb3J0LCBkZWZhdWx0IGRlcGVuZHMgb24gdGhlIHNjaGVtZVxuICogQHBhcmFtIHtJbnRlZ2VyfSBvcHRpb25zLmFwcElkIGFwcGxpY2F0aW9uIElEXG4gKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy5rZXkgYXBwbGljYXRpb24ga2V5XG4gKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy5zZWNyZXQgYXBwbGljYXRpb24gc2VjcmV0XG4gKiBAcGFyYW0ge0ludGVnZXJ9IFtvcHRpb25zLnRpbWVvdXRdIHJlcXVlc3QgdGltZW91dCBpbiBtaWxsaXNlY29uZHNcbiAqIEBwYXJhbSB7QWdlbnR9IFtvcHRpb25zLmFnZW50XSBodHRwIGFnZW50IHRvIHVzZVxuICovXG5mdW5jdGlvbiBQdXNoZXIob3B0aW9ucykge1xuICB0aGlzLmNvbmZpZyA9IG5ldyBQdXNoZXJDb25maWcob3B0aW9ucylcbiAgY29uc3Qgbm90aWZpY2F0aW9uT3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbnMsIHtcbiAgICBob3N0OiBvcHRpb25zLm5vdGlmaWNhdGlvbkhvc3QsXG4gICAgZW5jcnlwdGVkOiBvcHRpb25zLm5vdGlmaWNhdGlvbkVuY3J5cHRlZCxcbiAgfSlcbiAgdGhpcy5ub3RpZmljYXRpb25DbGllbnQgPSBuZXcgTm90aWZpY2F0aW9uQ2xpZW50KG5vdGlmaWNhdGlvbk9wdGlvbnMpXG59XG5cbi8qKiBDcmVhdGUgYSBQdXNoZXIgaW5zdGFuY2UgdXNpbmcgYSBVUkwuXG4gKlxuICogVVJMIHNob3VsZCBiZSBpbiBTQ0hFTUU6Ly9BUFBfS0VZOlNFQ1JFVF9LRVlASE9TVDpQT1JUL2FwcHMvQVBQX0lEIGZvcm0uXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IHB1c2hlclVybCBVUkwgY29udGFpbmluZyBlbmRwb2ludCBhbmQgYXBwIGRldGFpbHNcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gb3B0aW9ucywgc2VlIHRoZSB7QGxpbmsgUHVzaGVyfSBmb3IgZGV0YWlsc1xuICogQHJldHVybnMge1B1c2hlcn0gaW5zdGFuY2UgY29uZmlndXJlZCBmb3IgdGhlIFVSTCBhbmQgb3B0aW9uc1xuICovXG5QdXNoZXIuZm9yVVJMID0gZnVuY3Rpb24gKHB1c2hlclVybCwgb3B0aW9ucykge1xuICBjb25zdCBhcGlVcmwgPSB1cmwucGFyc2UocHVzaGVyVXJsKVxuICBjb25zdCBhcGlQYXRoID0gYXBpVXJsLnBhdGhuYW1lLnNwbGl0KFwiL1wiKVxuICBjb25zdCBhcGlBdXRoID0gYXBpVXJsLmF1dGguc3BsaXQoXCI6XCIpXG5cbiAgcmV0dXJuIG5ldyBQdXNoZXIoXG4gICAgT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucyB8fCB7fSwge1xuICAgICAgc2NoZW1lOiBhcGlVcmwucHJvdG9jb2wucmVwbGFjZSgvOiQvLCBcIlwiKSxcbiAgICAgIGhvc3Q6IGFwaVVybC5ob3N0bmFtZSxcbiAgICAgIHBvcnQ6IHBhcnNlSW50KGFwaVVybC5wb3J0LCAxMCkgfHwgdW5kZWZpbmVkLFxuICAgICAgYXBwSWQ6IHBhcnNlSW50KGFwaVBhdGhbYXBpUGF0aC5sZW5ndGggLSAxXSwgMTApLFxuICAgICAga2V5OiBhcGlBdXRoWzBdLFxuICAgICAgc2VjcmV0OiBhcGlBdXRoWzFdLFxuICAgIH0pXG4gIClcbn1cblxuLyoqIENyZWF0ZSBhIFB1c2hlciBpbnN0YW5jZSB1c2luZyBhIGNsdXN0ZXIgbmFtZS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gY2x1c3RlciBjbHVzdGVyIG5hbWVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gb3B0aW9ucywgc2VlIHRoZSB7QGxpbmsgUHVzaGVyfSBmb3IgZGV0YWlsc1xuICogQHJldHVybnMge1B1c2hlcn0gaW5zdGFuY2UgY29uZmlndXJlZCBmb3IgdGhlIGNsdXN0ZXIgYW5kIG9wdGlvbnNcbiAqL1xuUHVzaGVyLmZvckNsdXN0ZXIgPSBmdW5jdGlvbiAoY2x1c3Rlciwgb3B0aW9ucykge1xuICByZXR1cm4gbmV3IFB1c2hlcihcbiAgICBPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zIHx8IHt9LCB7XG4gICAgICBob3N0OiBcImFwaS1cIiArIGNsdXN0ZXIgKyBcIi5wdXNoZXIuY29tXCIsXG4gICAgfSlcbiAgKVxufVxuXG4vKiogUmV0dXJucyBhIHNpZ25hdHVyZSBmb3IgZ2l2ZW4gc29ja2V0IGlkLCBjaGFubmVsIGFuZCBzb2NrZXQgZGF0YS5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc29ja2V0SWQgc29ja2V0IGlkXG4gKiBAcGFyYW0ge1N0cmluZ30gY2hhbm5lbCBjaGFubmVsIG5hbWVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbZGF0YV0gYWRkaXRpb25hbCBzb2NrZXQgZGF0YVxuICogQHJldHVybnMge1N0cmluZ30gYXV0aG9yaXphdGlvbiBzaWduYXR1cmVcbiAqL1xuUHVzaGVyLnByb3RvdHlwZS5hdXRob3JpemVDaGFubmVsID0gZnVuY3Rpb24gKHNvY2tldElkLCBjaGFubmVsLCBkYXRhKSB7XG4gIHZhbGlkYXRlU29ja2V0SWQoc29ja2V0SWQpXG4gIHZhbGlkYXRlQ2hhbm5lbChjaGFubmVsKVxuXG4gIHJldHVybiBhdXRoLmdldFNvY2tldFNpZ25hdHVyZShcbiAgICB0aGlzLFxuICAgIHRoaXMuY29uZmlnLnRva2VuLFxuICAgIGNoYW5uZWwsXG4gICAgc29ja2V0SWQsXG4gICAgZGF0YVxuICApXG59XG5cbi8qKiBSZXR1cm5zIGEgc2lnbmF0dXJlIGZvciBnaXZlbiBzb2NrZXQgaWQsIGNoYW5uZWwgYW5kIHNvY2tldCBkYXRhLlxuICpcbiAqICBERVBSRUNBVEVELiBVc2UgYXV0aG9yaXplQ2hhbm5lbC5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gc29ja2V0SWQgc29ja2V0IGlkXG4gKiBAcGFyYW0ge1N0cmluZ30gY2hhbm5lbCBjaGFubmVsIG5hbWVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbZGF0YV0gYWRkaXRpb25hbCBzb2NrZXQgZGF0YVxuICogQHJldHVybnMge1N0cmluZ30gYXV0aG9yaXphdGlvbiBzaWduYXR1cmVcbiAqL1xuUHVzaGVyLnByb3RvdHlwZS5hdXRoZW50aWNhdGUgPSBQdXNoZXIucHJvdG90eXBlLmF1dGhvcml6ZUNoYW5uZWxcblxuLyoqIFJldHVybnMgYSBzaWduYXR1cmUgZm9yIGdpdmVuIHNvY2tldCBpZCBhbmQgdXNlciBkYXRhLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBzb2NrZXRJZCBzb2NrZXQgaWRcbiAqIEBwYXJhbSB7T2JqZWN0fSB1c2VyRGF0YSB1c2VyIGRhdGFcbiAqIEByZXR1cm5zIHtTdHJpbmd9IGF1dGhlbnRpY2F0aW9uIHNpZ25hdHVyZVxuICovXG5QdXNoZXIucHJvdG90eXBlLmF1dGhlbnRpY2F0ZVVzZXIgPSBmdW5jdGlvbiAoc29ja2V0SWQsIHVzZXJEYXRhKSB7XG4gIHZhbGlkYXRlU29ja2V0SWQoc29ja2V0SWQpXG4gIHZhbGlkYXRlVXNlckRhdGEodXNlckRhdGEpXG5cbiAgcmV0dXJuIGF1dGguZ2V0U29ja2V0U2lnbmF0dXJlRm9yVXNlcih0aGlzLmNvbmZpZy50b2tlbiwgc29ja2V0SWQsIHVzZXJEYXRhKVxufVxuXG4vKiogU2VuZHMgYW4gZXZlbnQgdG8gYSB1c2VyLlxuICpcbiAqIEV2ZW50IG5hbWUgY2FuIGJlIGF0IG1vc3QgMjAwIGNoYXJhY3RlcnMgbG9uZy5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXNlcklkIHVzZXIgaWRcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudCBldmVudCBuYW1lXG4gKiBAcGFyYW0gZGF0YSBldmVudCBkYXRhLCBvYmplY3RzIGFyZSBKU09OLWVuY29kZWRcbiAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UgcmVzb2x2aW5nIHRvIGEgcmVzcG9uc2UsIG9yIHJlamVjdGluZyB0byBhIFJlcXVlc3RFcnJvci5cbiAqIEBzZWUgUmVxdWVzdEVycm9yXG4gKi9cblB1c2hlci5wcm90b3R5cGUuc2VuZFRvVXNlciA9IGZ1bmN0aW9uICh1c2VySWQsIGV2ZW50LCBkYXRhKSB7XG4gIGlmIChldmVudC5sZW5ndGggPiAyMDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJUb28gbG9uZyBldmVudCBuYW1lOiAnXCIgKyBldmVudCArIFwiJ1wiKVxuICB9XG4gIHZhbGlkYXRlVXNlcklkKHVzZXJJZClcbiAgcmV0dXJuIGV2ZW50cy50cmlnZ2VyKHRoaXMsIFtgI3NlcnZlci10by11c2VyLSR7dXNlcklkfWBdLCBldmVudCwgZGF0YSlcbn1cblxuLyoqIFRlcm1pbmF0ZSB1c2VycydzIGNvbm5lY3Rpb25zLlxuICpcbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gdXNlcklkIHVzZXIgaWRcbiAqIEByZXR1cm5zIHtQcm9taXNlfSBhIHByb21pc2UgcmVzb2x2aW5nIHRvIGEgcmVzcG9uc2UsIG9yIHJlamVjdGluZyB0byBhIFJlcXVlc3RFcnJvci5cbiAqIEBzZWUgUmVxdWVzdEVycm9yXG4gKi9cblB1c2hlci5wcm90b3R5cGUudGVybWluYXRlVXNlckNvbm5lY3Rpb25zID0gZnVuY3Rpb24gKHVzZXJJZCkge1xuICB2YWxpZGF0ZVVzZXJJZCh1c2VySWQpXG4gIHJldHVybiB0aGlzLnBvc3QoeyBwYXRoOiBgL3VzZXJzLyR7dXNlcklkfS90ZXJtaW5hdGVfY29ubmVjdGlvbnNgLCBib2R5OiB7fSB9KVxufVxuXG4vKiogVHJpZ2dlcnMgYW4gZXZlbnQuXG4gKlxuICogQ2hhbm5lbCBuYW1lcyBjYW4gY29udGFpbiBvbmx5IGNoYXJhY3RlcnMgd2hpY2ggYXJlIGFscGhhbnVtZXJpYywgJ18nIG9yICctJ1xuICogYW5kIGhhdmUgdG8gYmUgYXQgbW9zdCAyMDAgY2hhcmFjdGVycyBsb25nLlxuICpcbiAqIEV2ZW50IG5hbWUgY2FuIGJlIGF0IG1vc3QgMjAwIGNoYXJhY3RlcnMgbG9uZy5cbiAqXG4gKiBSZXR1cm5zIGEgcHJvbWlzZSByZXNvbHZpbmcgdG8gYSByZXNwb25zZSwgb3IgcmVqZWN0aW5nIHRvIGEgUmVxdWVzdEVycm9yLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfFN0cmluZ1tdfSBjaGFubmVsIGxpc3Qgb2YgYXQgbW9zdCAxMDAgY2hhbm5lbHNcbiAqIEBwYXJhbSB7U3RyaW5nfSBldmVudCBldmVudCBuYW1lXG4gKiBAcGFyYW0gZGF0YSBldmVudCBkYXRhLCBvYmplY3RzIGFyZSBKU09OLWVuY29kZWRcbiAqIEBwYXJhbSB7T2JqZWN0fSBbcGFyYW1zXSBhZGRpdGlvbmFsIG9wdGlvbmFsIHJlcXVlc3QgYm9keSBwYXJhbWV0ZXJzXG4gKiBAcGFyYW0ge1N0cmluZ30gW3BhcmFtcy5zb2NrZXRfaWRdIGlkIG9mIGEgc29ja2V0IHRoYXQgc2hvdWxkIG5vdCByZWNlaXZlIHRoZSBldmVudFxuICogQHBhcmFtIHtTdHJpbmd9IFtwYXJhbXMuaW5mb10gYSBjb21tYSBzZXBhcmF0ZSBsaXN0IG9mIGF0dHJpYnV0ZXMgdG8gYmUgcmV0dXJuZWQgaW4gdGhlIHJlc3BvbnNlLiBFeHBlcmltZW50YWwsIHNlZSBodHRwczovL3B1c2hlci5jb20vZG9jcy9sYWIjZXhwZXJpbWVudGFsLXByb2dyYW1cbiAqIEBzZWUgUmVxdWVzdEVycm9yXG4gKi9cblB1c2hlci5wcm90b3R5cGUudHJpZ2dlciA9IGZ1bmN0aW9uIChjaGFubmVscywgZXZlbnQsIGRhdGEsIHBhcmFtcykge1xuICBpZiAocGFyYW1zICYmIHBhcmFtcy5zb2NrZXRfaWQpIHtcbiAgICB2YWxpZGF0ZVNvY2tldElkKHBhcmFtcy5zb2NrZXRfaWQpXG4gIH1cbiAgaWYgKCEoY2hhbm5lbHMgaW5zdGFuY2VvZiBBcnJheSkpIHtcbiAgICAvLyBhZGQgc2luZ2xlIGNoYW5uZWwgdG8gYXJyYXkgZm9yIG11bHRpIHRyaWdnZXIgY29tcGF0aWJpbGl0eVxuICAgIGNoYW5uZWxzID0gW2NoYW5uZWxzXVxuICB9XG4gIGlmIChldmVudC5sZW5ndGggPiAyMDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJUb28gbG9uZyBldmVudCBuYW1lOiAnXCIgKyBldmVudCArIFwiJ1wiKVxuICB9XG4gIGlmIChjaGFubmVscy5sZW5ndGggPiAxMDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW4ndCB0cmlnZ2VyIGEgbWVzc2FnZSB0byBtb3JlIHRoYW4gMTAwIGNoYW5uZWxzXCIpXG4gIH1cbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGFubmVscy5sZW5ndGg7IGkrKykge1xuICAgIHZhbGlkYXRlQ2hhbm5lbChjaGFubmVsc1tpXSlcbiAgfVxuICByZXR1cm4gZXZlbnRzLnRyaWdnZXIodGhpcywgY2hhbm5lbHMsIGV2ZW50LCBkYXRhLCBwYXJhbXMpXG59XG5cbi8qIFRyaWdnZXJzIGEgYmF0Y2ggb2YgZXZlbnRzXG4gKlxuICogQHBhcmFtIHtFdmVudFtdfSBBbiBhcnJheSBvZiBldmVudHMsIHdoZXJlIEV2ZW50IGlzXG4gKiB7XG4gKiAgIG5hbWU6IHN0cmluZyxcbiAqICAgY2hhbm5lbDogc3RyaW5nLFxuICogICBkYXRhOiBhbnkgSlNPTi1lbmNvZGFibGUgZGF0YSxcbiAqICAgc29ja2V0X2lkOiBbb3B0aW9uYWxdIHN0cmluZyxcbiAqICAgaW5mbzogW29wdGlvbmFsXSBzdHJpbmcgZXhwZXJpbWVudGFsLCBzZWUgaHR0cHM6Ly9wdXNoZXIuY29tL2RvY3MvbGFiI2V4cGVyaW1lbnRhbC1wcm9ncmFtXG4gKiB9XG4gKi9cblB1c2hlci5wcm90b3R5cGUudHJpZ2dlckJhdGNoID0gZnVuY3Rpb24gKGJhdGNoKSB7XG4gIHJldHVybiBldmVudHMudHJpZ2dlckJhdGNoKHRoaXMsIGJhdGNoKVxufVxuXG5QdXNoZXIucHJvdG90eXBlLm5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgdGhpcy5ub3RpZmljYXRpb25DbGllbnQubm90aWZ5LmFwcGx5KHRoaXMubm90aWZpY2F0aW9uQ2xpZW50LCBhcmd1bWVudHMpXG59XG5cbi8qKiBNYWtlcyBhIFBPU1QgcmVxdWVzdCB0byBQdXNoZXIsIGhhbmRsZXMgdGhlIGF1dGhlbnRpY2F0aW9uLlxuICpcbiAqIFJldHVybnMgYSBwcm9taXNlIHJlc29sdmluZyB0byBhIHJlc3BvbnNlLCBvciByZWplY3RpbmcgdG8gYSBSZXF1ZXN0RXJyb3IuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7U3RyaW5nfSBvcHRpb25zLnBhdGggcmVxdWVzdCBwYXRoXG4gKiBAcGFyYW0ge09iamVjdH0gb3B0aW9ucy5wYXJhbXMgcXVlcnkgcGFyYW1zXG4gKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy5ib2R5IHJlcXVlc3QgYm9keVxuICogQHNlZSBSZXF1ZXN0RXJyb3JcbiAqL1xuUHVzaGVyLnByb3RvdHlwZS5wb3N0ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcbiAgcmV0dXJuIHJlcXVlc3RzLnNlbmQoXG4gICAgdGhpcy5jb25maWcsXG4gICAgT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9ucywgeyBtZXRob2Q6IFwiUE9TVFwiIH0pXG4gIClcbn1cblxuLyoqIE1ha2VzIGEgR0VUIHJlcXVlc3QgdG8gUHVzaGVyLCBoYW5kbGVzIHRoZSBhdXRoZW50aWNhdGlvbi5cbiAqXG4gKiBSZXR1cm5zIGEgcHJvbWlzZSByZXNvbHZpbmcgdG8gYSByZXNwb25zZSwgb3IgcmVqZWN0aW5nIHRvIGEgUmVxdWVzdEVycm9yLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zXG4gKiBAcGFyYW0ge1N0cmluZ30gb3B0aW9ucy5wYXRoIHJlcXVlc3QgcGF0aFxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnMucGFyYW1zIHF1ZXJ5IHBhcmFtc1xuICogQHNlZSBSZXF1ZXN0RXJyb3JcbiAqL1xuUHVzaGVyLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICByZXR1cm4gcmVxdWVzdHMuc2VuZChcbiAgICB0aGlzLmNvbmZpZyxcbiAgICBPYmplY3QuYXNzaWduKHt9LCBvcHRpb25zLCB7IG1ldGhvZDogXCJHRVRcIiB9KVxuICApXG59XG5cbi8qKiBDcmVhdGVzIGEgV2ViSG9vayBvYmplY3QgZm9yIGEgZ2l2ZW4gcmVxdWVzdC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gcmVxdWVzdFxuICogQHBhcmFtIHtPYmplY3R9IHJlcXVlc3QuaGVhZGVycyBXZWJIb29rIEhUVFAgaGVhZGVycyB3aXRoIGxvd2VyLWNhc2Uga2V5c1xuICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3QucmF3Qm9keSByYXcgV2ViSG9vayBib2R5XG4gKiBAcmV0dXJucyB7V2ViSG9va31cbiAqL1xuUHVzaGVyLnByb3RvdHlwZS53ZWJob29rID0gZnVuY3Rpb24gKHJlcXVlc3QpIHtcbiAgcmV0dXJuIG5ldyBXZWJIb29rKHRoaXMuY29uZmlnLnRva2VuLCByZXF1ZXN0KVxufVxuXG4vKiogQnVpbGRzIGEgc2lnbmVkIHF1ZXJ5IHN0cmluZyB0aGF0IGNhbiBiZSB1c2VkIGluIGEgcmVxdWVzdCB0byBQdXNoZXIuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IG9wdGlvbnNcbiAqIEBwYXJhbSB7U3RyaW5nfSBvcHRpb25zLm1ldGhvZCByZXF1ZXN0IG1ldGhvZFxuICogQHBhcmFtIHtTdHJpbmd9IG9wdGlvbnMucGF0aCByZXF1ZXN0IHBhdGhcbiAqIEBwYXJhbSB7T2JqZWN0fSBvcHRpb25zLnBhcmFtcyBxdWVyeSBwYXJhbXNcbiAqIEBwYXJhbSB7U3RyaW5nfSBvcHRpb25zLmJvZHkgcmVxdWVzdCBib2R5XG4gKiBAcmV0dXJucyB7U3RyaW5nfSBzaWduZWQgcXVlcnkgc3RyaW5nXG4gKi9cblB1c2hlci5wcm90b3R5cGUuY3JlYXRlU2lnbmVkUXVlcnlTdHJpbmcgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICByZXR1cm4gcmVxdWVzdHMuY3JlYXRlU2lnbmVkUXVlcnlTdHJpbmcodGhpcy5jb25maWcudG9rZW4sIG9wdGlvbnMpXG59XG5cblB1c2hlci5wcm90b3R5cGUuY2hhbm5lbFNoYXJlZFNlY3JldCA9IGZ1bmN0aW9uIChjaGFubmVsKSB7XG4gIHJldHVybiBjcnlwdG9cbiAgICAuY3JlYXRlSGFzaChcInNoYTI1NlwiKVxuICAgIC51cGRhdGUoXG4gICAgICBCdWZmZXIuY29uY2F0KFtCdWZmZXIuZnJvbShjaGFubmVsKSwgdGhpcy5jb25maWcuZW5jcnlwdGlvbk1hc3RlcktleV0pXG4gICAgKVxuICAgIC5kaWdlc3QoKVxufVxuXG4vKiogRXhwb3J0ZWQge0BsaW5rIFRva2VufSBjb25zdHJ1Y3Rvci4gKi9cblB1c2hlci5Ub2tlbiA9IFRva2VuXG4vKiogRXhwb3J0ZWQge0BsaW5rIFJlcXVlc3RFcnJvcn0gY29uc3RydWN0b3IuICovXG5QdXNoZXIuUmVxdWVzdEVycm9yID0gZXJyb3JzLlJlcXVlc3RFcnJvclxuLyoqIEV4cG9ydGVkIHtAbGluayBXZWJIb29rRXJyb3J9IGNvbnN0cnVjdG9yLiAqL1xuUHVzaGVyLldlYkhvb2tFcnJvciA9IGVycm9ycy5XZWJIb29rRXJyb3JcblxubW9kdWxlLmV4cG9ydHMgPSBQdXNoZXJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/pusher.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/pusher_config.js":
/*!**************************************************!*\
  !*** ./node_modules/pusher/lib/pusher_config.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("const Config = __webpack_require__(/*! ./config */ \"(app-pages-browser)/./node_modules/pusher/lib/config.js\")\n\nfunction PusherConfig(options) {\n  Config.call(this, options)\n\n  if (options.host) {\n    this.host = options.host\n  } else if (options.cluster) {\n    this.host = \"api-\" + options.cluster + \".pusher.com\"\n  } else {\n    this.host = \"api.pusherapp.com\"\n  }\n}\n\nObject.assign(PusherConfig.prototype, Config.prototype)\n\nPusherConfig.prototype.prefixPath = function (subPath) {\n  return \"/apps/\" + this.appId + subPath\n}\n\nmodule.exports = PusherConfig\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL3B1c2hlcl9jb25maWcuanMiLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHlFQUFVOztBQUVqQztBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi9wdXNoZXJfY29uZmlnLmpzP2EzNGMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgQ29uZmlnID0gcmVxdWlyZShcIi4vY29uZmlnXCIpXG5cbmZ1bmN0aW9uIFB1c2hlckNvbmZpZyhvcHRpb25zKSB7XG4gIENvbmZpZy5jYWxsKHRoaXMsIG9wdGlvbnMpXG5cbiAgaWYgKG9wdGlvbnMuaG9zdCkge1xuICAgIHRoaXMuaG9zdCA9IG9wdGlvbnMuaG9zdFxuICB9IGVsc2UgaWYgKG9wdGlvbnMuY2x1c3Rlcikge1xuICAgIHRoaXMuaG9zdCA9IFwiYXBpLVwiICsgb3B0aW9ucy5jbHVzdGVyICsgXCIucHVzaGVyLmNvbVwiXG4gIH0gZWxzZSB7XG4gICAgdGhpcy5ob3N0ID0gXCJhcGkucHVzaGVyYXBwLmNvbVwiXG4gIH1cbn1cblxuT2JqZWN0LmFzc2lnbihQdXNoZXJDb25maWcucHJvdG90eXBlLCBDb25maWcucHJvdG90eXBlKVxuXG5QdXNoZXJDb25maWcucHJvdG90eXBlLnByZWZpeFBhdGggPSBmdW5jdGlvbiAoc3ViUGF0aCkge1xuICByZXR1cm4gXCIvYXBwcy9cIiArIHRoaXMuYXBwSWQgKyBzdWJQYXRoXG59XG5cbm1vZHVsZS5leHBvcnRzID0gUHVzaGVyQ29uZmlnXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/pusher_config.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/requests.js":
/*!*********************************************!*\
  !*** ./node_modules/pusher/lib/requests.js ***!
  \*********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("// Redundant default as a workaround for this WebPack bug:\n// https://github.com/webpack/webpack/issues/4742\nconst fetch = (__webpack_require__(/*! node-fetch */ \"(app-pages-browser)/./node_modules/node-fetch/browser.js\")[\"default\"])\nconst AbortController = (__webpack_require__(/*! abort-controller */ \"(app-pages-browser)/./node_modules/abort-controller/browser.js\")[\"default\"])\n\nconst errors = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/pusher/lib/errors.js\")\nconst util = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/pusher/lib/util.js\")\n\nconst pusherLibraryVersion = __webpack_require__(/*! ./version */ \"(app-pages-browser)/./node_modules/pusher/lib/version.js\")\n\nconst RESERVED_QUERY_KEYS = {\n  auth_key: true,\n  auth_timestamp: true,\n  auth_version: true,\n  auth_signature: true,\n  body_md5: true,\n}\n\nfunction send(config, options) {\n  const method = options.method\n  const path = config.prefixPath(options.path)\n  const body = options.body ? JSON.stringify(options.body) : undefined\n\n  const url = `${config.getBaseURL()}${path}?${createSignedQueryString(\n    config.token,\n    {\n      method,\n      path,\n      params: options.params,\n      body: body,\n    }\n  )}`\n\n  const headers = {\n    \"x-pusher-library\": \"pusher-http-node \" + pusherLibraryVersion,\n  }\n\n  if (body) {\n    headers[\"content-type\"] = \"application/json\"\n  }\n\n  let signal\n  let timeout\n  if (config.timeout) {\n    const controller = new AbortController()\n    timeout = setTimeout(() => controller.abort(), config.timeout)\n    signal = controller.signal\n  }\n\n  return fetch(url, {\n    method,\n    body,\n    headers,\n    signal,\n    agent: config.agent,\n  }).then(\n    (res) => {\n      clearTimeout(timeout)\n      if (res.status >= 400) {\n        return res.text().then((body) => {\n          throw new errors.RequestError(\n            \"Unexpected status code \" + res.status,\n            url,\n            undefined,\n            res.status,\n            body\n          )\n        })\n      }\n      return res\n    },\n    (err) => {\n      clearTimeout(timeout)\n      throw new errors.RequestError(\"Request failed with an error\", url, err)\n    }\n  )\n}\n\nfunction createSignedQueryString(token, request) {\n  const timestamp = (Date.now() / 1000) | 0\n\n  const params = {\n    auth_key: token.key,\n    auth_timestamp: timestamp,\n    auth_version: \"1.0\",\n  }\n\n  if (request.body) {\n    params.body_md5 = util.getMD5(request.body)\n  }\n\n  if (request.params) {\n    for (const key in request.params) {\n      if (RESERVED_QUERY_KEYS[key] !== undefined) {\n        throw Error(key + \" is a required parameter and cannot be overidden\")\n      }\n      params[key] = request.params[key]\n    }\n  }\n\n  const method = request.method.toUpperCase()\n  const sortedKeyVal = util.toOrderedArray(params)\n  let queryString = sortedKeyVal.join(\"&\")\n\n  const signData = [method, request.path, queryString].join(\"\\n\")\n  queryString += \"&auth_signature=\" + token.sign(signData)\n\n  return queryString\n}\n\nexports.send = send\nexports.createSignedQueryString = createSignedQueryString\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL3JlcXVlc3RzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSxjQUFjLDhHQUE2QjtBQUMzQyx3QkFBd0IsMEhBQW1DOztBQUUzRCxlQUFlLG1CQUFPLENBQUMseUVBQVU7QUFDakMsYUFBYSxtQkFBTyxDQUFDLHFFQUFROztBQUU3Qiw2QkFBNkIsbUJBQU8sQ0FBQywyRUFBVzs7QUFFaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUJBQWlCLG9CQUFvQixFQUFFLEtBQUssR0FBRztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7O0FBRUo7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxZQUFZO0FBQ1osK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL3JlcXVlc3RzLmpzPzk2YTQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gUmVkdW5kYW50IGRlZmF1bHQgYXMgYSB3b3JrYXJvdW5kIGZvciB0aGlzIFdlYlBhY2sgYnVnOlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2svd2VicGFjay9pc3N1ZXMvNDc0MlxuY29uc3QgZmV0Y2ggPSByZXF1aXJlKFwibm9kZS1mZXRjaFwiKS5kZWZhdWx0XG5jb25zdCBBYm9ydENvbnRyb2xsZXIgPSByZXF1aXJlKFwiYWJvcnQtY29udHJvbGxlclwiKS5kZWZhdWx0XG5cbmNvbnN0IGVycm9ycyA9IHJlcXVpcmUoXCIuL2Vycm9yc1wiKVxuY29uc3QgdXRpbCA9IHJlcXVpcmUoXCIuL3V0aWxcIilcblxuY29uc3QgcHVzaGVyTGlicmFyeVZlcnNpb24gPSByZXF1aXJlKFwiLi92ZXJzaW9uXCIpXG5cbmNvbnN0IFJFU0VSVkVEX1FVRVJZX0tFWVMgPSB7XG4gIGF1dGhfa2V5OiB0cnVlLFxuICBhdXRoX3RpbWVzdGFtcDogdHJ1ZSxcbiAgYXV0aF92ZXJzaW9uOiB0cnVlLFxuICBhdXRoX3NpZ25hdHVyZTogdHJ1ZSxcbiAgYm9keV9tZDU6IHRydWUsXG59XG5cbmZ1bmN0aW9uIHNlbmQoY29uZmlnLCBvcHRpb25zKSB7XG4gIGNvbnN0IG1ldGhvZCA9IG9wdGlvbnMubWV0aG9kXG4gIGNvbnN0IHBhdGggPSBjb25maWcucHJlZml4UGF0aChvcHRpb25zLnBhdGgpXG4gIGNvbnN0IGJvZHkgPSBvcHRpb25zLmJvZHkgPyBKU09OLnN0cmluZ2lmeShvcHRpb25zLmJvZHkpIDogdW5kZWZpbmVkXG5cbiAgY29uc3QgdXJsID0gYCR7Y29uZmlnLmdldEJhc2VVUkwoKX0ke3BhdGh9PyR7Y3JlYXRlU2lnbmVkUXVlcnlTdHJpbmcoXG4gICAgY29uZmlnLnRva2VuLFxuICAgIHtcbiAgICAgIG1ldGhvZCxcbiAgICAgIHBhdGgsXG4gICAgICBwYXJhbXM6IG9wdGlvbnMucGFyYW1zLFxuICAgICAgYm9keTogYm9keSxcbiAgICB9XG4gICl9YFxuXG4gIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgXCJ4LXB1c2hlci1saWJyYXJ5XCI6IFwicHVzaGVyLWh0dHAtbm9kZSBcIiArIHB1c2hlckxpYnJhcnlWZXJzaW9uLFxuICB9XG5cbiAgaWYgKGJvZHkpIHtcbiAgICBoZWFkZXJzW1wiY29udGVudC10eXBlXCJdID0gXCJhcHBsaWNhdGlvbi9qc29uXCJcbiAgfVxuXG4gIGxldCBzaWduYWxcbiAgbGV0IHRpbWVvdXRcbiAgaWYgKGNvbmZpZy50aW1lb3V0KSB7XG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKVxuICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IGNvbnRyb2xsZXIuYWJvcnQoKSwgY29uZmlnLnRpbWVvdXQpXG4gICAgc2lnbmFsID0gY29udHJvbGxlci5zaWduYWxcbiAgfVxuXG4gIHJldHVybiBmZXRjaCh1cmwsIHtcbiAgICBtZXRob2QsXG4gICAgYm9keSxcbiAgICBoZWFkZXJzLFxuICAgIHNpZ25hbCxcbiAgICBhZ2VudDogY29uZmlnLmFnZW50LFxuICB9KS50aGVuKFxuICAgIChyZXMpID0+IHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KVxuICAgICAgaWYgKHJlcy5zdGF0dXMgPj0gNDAwKSB7XG4gICAgICAgIHJldHVybiByZXMudGV4dCgpLnRoZW4oKGJvZHkpID0+IHtcbiAgICAgICAgICB0aHJvdyBuZXcgZXJyb3JzLlJlcXVlc3RFcnJvcihcbiAgICAgICAgICAgIFwiVW5leHBlY3RlZCBzdGF0dXMgY29kZSBcIiArIHJlcy5zdGF0dXMsXG4gICAgICAgICAgICB1cmwsXG4gICAgICAgICAgICB1bmRlZmluZWQsXG4gICAgICAgICAgICByZXMuc3RhdHVzLFxuICAgICAgICAgICAgYm9keVxuICAgICAgICAgIClcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXNcbiAgICB9LFxuICAgIChlcnIpID0+IHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0KVxuICAgICAgdGhyb3cgbmV3IGVycm9ycy5SZXF1ZXN0RXJyb3IoXCJSZXF1ZXN0IGZhaWxlZCB3aXRoIGFuIGVycm9yXCIsIHVybCwgZXJyKVxuICAgIH1cbiAgKVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTaWduZWRRdWVyeVN0cmluZyh0b2tlbiwgcmVxdWVzdCkge1xuICBjb25zdCB0aW1lc3RhbXAgPSAoRGF0ZS5ub3coKSAvIDEwMDApIHwgMFxuXG4gIGNvbnN0IHBhcmFtcyA9IHtcbiAgICBhdXRoX2tleTogdG9rZW4ua2V5LFxuICAgIGF1dGhfdGltZXN0YW1wOiB0aW1lc3RhbXAsXG4gICAgYXV0aF92ZXJzaW9uOiBcIjEuMFwiLFxuICB9XG5cbiAgaWYgKHJlcXVlc3QuYm9keSkge1xuICAgIHBhcmFtcy5ib2R5X21kNSA9IHV0aWwuZ2V0TUQ1KHJlcXVlc3QuYm9keSlcbiAgfVxuXG4gIGlmIChyZXF1ZXN0LnBhcmFtcykge1xuICAgIGZvciAoY29uc3Qga2V5IGluIHJlcXVlc3QucGFyYW1zKSB7XG4gICAgICBpZiAoUkVTRVJWRURfUVVFUllfS0VZU1trZXldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgRXJyb3Ioa2V5ICsgXCIgaXMgYSByZXF1aXJlZCBwYXJhbWV0ZXIgYW5kIGNhbm5vdCBiZSBvdmVyaWRkZW5cIilcbiAgICAgIH1cbiAgICAgIHBhcmFtc1trZXldID0gcmVxdWVzdC5wYXJhbXNba2V5XVxuICAgIH1cbiAgfVxuXG4gIGNvbnN0IG1ldGhvZCA9IHJlcXVlc3QubWV0aG9kLnRvVXBwZXJDYXNlKClcbiAgY29uc3Qgc29ydGVkS2V5VmFsID0gdXRpbC50b09yZGVyZWRBcnJheShwYXJhbXMpXG4gIGxldCBxdWVyeVN0cmluZyA9IHNvcnRlZEtleVZhbC5qb2luKFwiJlwiKVxuXG4gIGNvbnN0IHNpZ25EYXRhID0gW21ldGhvZCwgcmVxdWVzdC5wYXRoLCBxdWVyeVN0cmluZ10uam9pbihcIlxcblwiKVxuICBxdWVyeVN0cmluZyArPSBcIiZhdXRoX3NpZ25hdHVyZT1cIiArIHRva2VuLnNpZ24oc2lnbkRhdGEpXG5cbiAgcmV0dXJuIHF1ZXJ5U3RyaW5nXG59XG5cbmV4cG9ydHMuc2VuZCA9IHNlbmRcbmV4cG9ydHMuY3JlYXRlU2lnbmVkUXVlcnlTdHJpbmcgPSBjcmVhdGVTaWduZWRRdWVyeVN0cmluZ1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/requests.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/token.js":
/*!******************************************!*\
  !*** ./node_modules/pusher/lib/token.js ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")[\"Buffer\"];\nconst crypto = __webpack_require__(/*! crypto */ \"(app-pages-browser)/./node_modules/next/dist/compiled/crypto-browserify/index.js\")\nconst util = __webpack_require__(/*! ./util */ \"(app-pages-browser)/./node_modules/pusher/lib/util.js\")\n\n/** Verifies and signs data against the key and secret.\n *\n * @constructor\n * @param {String} key app key\n * @param {String} secret app secret\n */\nclass Token {\n  constructor(key, secret) {\n    this.key = key\n    this.secret = secret\n  }\n  /** Signs the string using the secret.\n   *\n   * @param {String} string\n   * @returns {String}\n   */\n  sign(string) {\n    return crypto\n      .createHmac(\"sha256\", this.secret)\n      .update(Buffer.from(string))\n      .digest(\"hex\")\n  }\n  /** Checks if the string has correct signature.\n   *\n   * @param {String} string\n   * @param {String} signature\n   * @returns {Boolean}\n   */\n  verify(string, signature) {\n    return util.secureCompare(this.sign(string), signature)\n  }\n}\n\nmodule.exports = Token\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL3Rva2VuLmpzIiwibWFwcGluZ3MiOiI7QUFBQSxlQUFlLG1CQUFPLENBQUMsZ0dBQVE7QUFDL0IsYUFBYSxtQkFBTyxDQUFDLHFFQUFROztBQUU3QjtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFFBQVE7QUFDckIsZUFBZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxNQUFNO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi90b2tlbi5qcz9mYjI5Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIilcbmNvbnN0IHV0aWwgPSByZXF1aXJlKFwiLi91dGlsXCIpXG5cbi8qKiBWZXJpZmllcyBhbmQgc2lnbnMgZGF0YSBhZ2FpbnN0IHRoZSBrZXkgYW5kIHNlY3JldC5cbiAqXG4gKiBAY29uc3RydWN0b3JcbiAqIEBwYXJhbSB7U3RyaW5nfSBrZXkgYXBwIGtleVxuICogQHBhcmFtIHtTdHJpbmd9IHNlY3JldCBhcHAgc2VjcmV0XG4gKi9cbmNsYXNzIFRva2VuIHtcbiAgY29uc3RydWN0b3Ioa2V5LCBzZWNyZXQpIHtcbiAgICB0aGlzLmtleSA9IGtleVxuICAgIHRoaXMuc2VjcmV0ID0gc2VjcmV0XG4gIH1cbiAgLyoqIFNpZ25zIHRoZSBzdHJpbmcgdXNpbmcgdGhlIHNlY3JldC5cbiAgICpcbiAgICogQHBhcmFtIHtTdHJpbmd9IHN0cmluZ1xuICAgKiBAcmV0dXJucyB7U3RyaW5nfVxuICAgKi9cbiAgc2lnbihzdHJpbmcpIHtcbiAgICByZXR1cm4gY3J5cHRvXG4gICAgICAuY3JlYXRlSG1hYyhcInNoYTI1NlwiLCB0aGlzLnNlY3JldClcbiAgICAgIC51cGRhdGUoQnVmZmVyLmZyb20oc3RyaW5nKSlcbiAgICAgIC5kaWdlc3QoXCJoZXhcIilcbiAgfVxuICAvKiogQ2hlY2tzIGlmIHRoZSBzdHJpbmcgaGFzIGNvcnJlY3Qgc2lnbmF0dXJlLlxuICAgKlxuICAgKiBAcGFyYW0ge1N0cmluZ30gc3RyaW5nXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBzaWduYXR1cmVcbiAgICogQHJldHVybnMge0Jvb2xlYW59XG4gICAqL1xuICB2ZXJpZnkoc3RyaW5nLCBzaWduYXR1cmUpIHtcbiAgICByZXR1cm4gdXRpbC5zZWN1cmVDb21wYXJlKHRoaXMuc2lnbihzdHJpbmcpLCBzaWduYXR1cmUpXG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBUb2tlblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/token.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/util.js":
/*!*****************************************!*\
  !*** ./node_modules/pusher/lib/util.js ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval(__webpack_require__.ts("const crypto = __webpack_require__(/*! crypto */ \"(app-pages-browser)/./node_modules/next/dist/compiled/crypto-browserify/index.js\")\n\nfunction toOrderedArray(map) {\n  return Object.keys(map)\n    .map(function (key) {\n      return [key, map[key]]\n    })\n    .sort(function (a, b) {\n      if (a[0] < b[0]) {\n        return -1\n      }\n      if (a[0] > b[0]) {\n        return 1\n      }\n      return 0\n    })\n    .map(function (pair) {\n      return pair[0] + \"=\" + pair[1]\n    })\n}\n\nfunction getMD5(body) {\n  return crypto.createHash(\"md5\").update(body, \"utf8\").digest(\"hex\")\n}\n\nfunction secureCompare(a, b) {\n  if (a.length !== b.length) {\n    return false\n  }\n  let result = 0\n  for (const i in a) {\n    result |= a.charCodeAt(i) ^ b.charCodeAt(i)\n  }\n  return result === 0\n}\n\nfunction isEncryptedChannel(channel) {\n  return channel.startsWith(\"private-encrypted-\")\n}\n\nexports.toOrderedArray = toOrderedArray\nexports.getMD5 = getMD5\nexports.secureCompare = secureCompare\nexports.isEncryptedChannel = isEncryptedChannel\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL3V0aWwuanMiLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLGdHQUFROztBQUUvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQSxzQkFBc0I7QUFDdEIsY0FBYztBQUNkLHFCQUFxQjtBQUNyQiwwQkFBMEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3B1c2hlci9saWIvdXRpbC5qcz9lZGIyIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGNyeXB0byA9IHJlcXVpcmUoXCJjcnlwdG9cIilcblxuZnVuY3Rpb24gdG9PcmRlcmVkQXJyYXkobWFwKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhtYXApXG4gICAgLm1hcChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICByZXR1cm4gW2tleSwgbWFwW2tleV1dXG4gICAgfSlcbiAgICAuc29ydChmdW5jdGlvbiAoYSwgYikge1xuICAgICAgaWYgKGFbMF0gPCBiWzBdKSB7XG4gICAgICAgIHJldHVybiAtMVxuICAgICAgfVxuICAgICAgaWYgKGFbMF0gPiBiWzBdKSB7XG4gICAgICAgIHJldHVybiAxXG4gICAgICB9XG4gICAgICByZXR1cm4gMFxuICAgIH0pXG4gICAgLm1hcChmdW5jdGlvbiAocGFpcikge1xuICAgICAgcmV0dXJuIHBhaXJbMF0gKyBcIj1cIiArIHBhaXJbMV1cbiAgICB9KVxufVxuXG5mdW5jdGlvbiBnZXRNRDUoYm9keSkge1xuICByZXR1cm4gY3J5cHRvLmNyZWF0ZUhhc2goXCJtZDVcIikudXBkYXRlKGJvZHksIFwidXRmOFwiKS5kaWdlc3QoXCJoZXhcIilcbn1cblxuZnVuY3Rpb24gc2VjdXJlQ29tcGFyZShhLCBiKSB7XG4gIGlmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuICBsZXQgcmVzdWx0ID0gMFxuICBmb3IgKGNvbnN0IGkgaW4gYSkge1xuICAgIHJlc3VsdCB8PSBhLmNoYXJDb2RlQXQoaSkgXiBiLmNoYXJDb2RlQXQoaSlcbiAgfVxuICByZXR1cm4gcmVzdWx0ID09PSAwXG59XG5cbmZ1bmN0aW9uIGlzRW5jcnlwdGVkQ2hhbm5lbChjaGFubmVsKSB7XG4gIHJldHVybiBjaGFubmVsLnN0YXJ0c1dpdGgoXCJwcml2YXRlLWVuY3J5cHRlZC1cIilcbn1cblxuZXhwb3J0cy50b09yZGVyZWRBcnJheSA9IHRvT3JkZXJlZEFycmF5XG5leHBvcnRzLmdldE1ENSA9IGdldE1ENVxuZXhwb3J0cy5zZWN1cmVDb21wYXJlID0gc2VjdXJlQ29tcGFyZVxuZXhwb3J0cy5pc0VuY3J5cHRlZENoYW5uZWwgPSBpc0VuY3J5cHRlZENoYW5uZWxcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/util.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/version.js":
/*!********************************************!*\
  !*** ./node_modules/pusher/lib/version.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("module.exports = __webpack_require__(/*! ../package.json */ \"(app-pages-browser)/./node_modules/pusher/package.json\").version\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQUEsNkhBQW1EIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL3ZlcnNpb24uanM/YjZiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi9wYWNrYWdlLmpzb25cIikudmVyc2lvblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/version.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/lib/webhook.js":
/*!********************************************!*\
  !*** ./node_modules/pusher/lib/webhook.js ***!
  \********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("const errors = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./node_modules/pusher/lib/errors.js\")\nconst Token = __webpack_require__(/*! ./token */ \"(app-pages-browser)/./node_modules/pusher/lib/token.js\")\n\n/** Provides validation and access methods for a WebHook.\n *\n * Before accessing WebHook data, check if it's valid. Otherwise, exceptions\n * will be raised from access methods.\n *\n * @constructor\n * @param {Token} primary token\n * @param {Object} request\n * @param {Object} request.headers WebHook HTTP headers with lower-case keys\n * @param {String} request.rawBody raw WebHook body\n */\nfunction WebHook(token, request) {\n  this.token = token\n\n  this.key = request.headers[\"x-pusher-key\"]\n  this.signature = request.headers[\"x-pusher-signature\"]\n  this.contentType = request.headers[\"content-type\"]\n  this.body = request.rawBody\n\n  if (this.isContentTypeValid()) {\n    try {\n      // Try to parse as JSON\n      this.data = JSON.parse(this.body)\n    } catch (e) {\n      // Do nothing\n    }\n  }\n}\n\n/** Checks whether the WebHook has valid body and signature.\n *\n * @param {Token|Token[]} list of additional tokens to be validated against\n * @returns {Boolean}\n */\nWebHook.prototype.isValid = function (extraTokens) {\n  if (!this.isBodyValid()) {\n    return false\n  }\n\n  extraTokens = extraTokens || []\n  if (!(extraTokens instanceof Array)) {\n    extraTokens = [extraTokens]\n  }\n\n  const tokens = [this.token].concat(extraTokens)\n  for (const i in tokens) {\n    let token = tokens[i]\n    if (token instanceof Token === false) {\n      token = new Token(token.key, token.secret)\n    }\n    if (this.key == token.key && token.verify(this.body, this.signature)) {\n      return true\n    }\n  }\n  return false\n}\n\n/** Checks whether the WebHook content type is valid.\n *\n * For now, the only valid WebHooks have content type of application/json.\n *\n * @returns {Boolean}\n */\nWebHook.prototype.isContentTypeValid = function () {\n  return this.contentType === \"application/json\"\n}\n\n/** Checks whether the WebHook content type and body is JSON.\n *\n * @returns {Boolean}\n */\nWebHook.prototype.isBodyValid = function () {\n  return this.data !== undefined\n}\n\n/** Returns all WebHook data.\n *\n * @throws WebHookError when WebHook is invalid\n * @returns {Object}\n */\nWebHook.prototype.getData = function () {\n  if (!this.isBodyValid()) {\n    throw new errors.WebHookError(\n      \"Invalid WebHook body\",\n      this.contentType,\n      this.body,\n      this.signature\n    )\n  }\n  return this.data\n}\n\n/** Returns WebHook events array.\n *\n * @throws WebHookError when WebHook is invalid\n * @returns {Object[]}\n */\nWebHook.prototype.getEvents = function () {\n  return this.getData().events\n}\n\n/** Returns WebHook timestamp.\n *\n * @throws WebHookError when WebHook is invalid\n * @returns {Date}\n */\nWebHook.prototype.getTime = function () {\n  return new Date(this.getData().time_ms)\n}\n\nmodule.exports = WebHook\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9wdXNoZXIvbGliL3dlYmhvb2suanMiLCJtYXBwaW5ncyI6IkFBQUEsZUFBZSxtQkFBTyxDQUFDLHlFQUFVO0FBQ2pDLGNBQWMsbUJBQU8sQ0FBQyx1RUFBUzs7QUFFL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxPQUFPO0FBQ2xCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvcHVzaGVyL2xpYi93ZWJob29rLmpzPzcwNTYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXJyb3JzID0gcmVxdWlyZShcIi4vZXJyb3JzXCIpXG5jb25zdCBUb2tlbiA9IHJlcXVpcmUoXCIuL3Rva2VuXCIpXG5cbi8qKiBQcm92aWRlcyB2YWxpZGF0aW9uIGFuZCBhY2Nlc3MgbWV0aG9kcyBmb3IgYSBXZWJIb29rLlxuICpcbiAqIEJlZm9yZSBhY2Nlc3NpbmcgV2ViSG9vayBkYXRhLCBjaGVjayBpZiBpdCdzIHZhbGlkLiBPdGhlcndpc2UsIGV4Y2VwdGlvbnNcbiAqIHdpbGwgYmUgcmFpc2VkIGZyb20gYWNjZXNzIG1ldGhvZHMuXG4gKlxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge1Rva2VufSBwcmltYXJ5IHRva2VuXG4gKiBAcGFyYW0ge09iamVjdH0gcmVxdWVzdFxuICogQHBhcmFtIHtPYmplY3R9IHJlcXVlc3QuaGVhZGVycyBXZWJIb29rIEhUVFAgaGVhZGVycyB3aXRoIGxvd2VyLWNhc2Uga2V5c1xuICogQHBhcmFtIHtTdHJpbmd9IHJlcXVlc3QucmF3Qm9keSByYXcgV2ViSG9vayBib2R5XG4gKi9cbmZ1bmN0aW9uIFdlYkhvb2sodG9rZW4sIHJlcXVlc3QpIHtcbiAgdGhpcy50b2tlbiA9IHRva2VuXG5cbiAgdGhpcy5rZXkgPSByZXF1ZXN0LmhlYWRlcnNbXCJ4LXB1c2hlci1rZXlcIl1cbiAgdGhpcy5zaWduYXR1cmUgPSByZXF1ZXN0LmhlYWRlcnNbXCJ4LXB1c2hlci1zaWduYXR1cmVcIl1cbiAgdGhpcy5jb250ZW50VHlwZSA9IHJlcXVlc3QuaGVhZGVyc1tcImNvbnRlbnQtdHlwZVwiXVxuICB0aGlzLmJvZHkgPSByZXF1ZXN0LnJhd0JvZHlcblxuICBpZiAodGhpcy5pc0NvbnRlbnRUeXBlVmFsaWQoKSkge1xuICAgIHRyeSB7XG4gICAgICAvLyBUcnkgdG8gcGFyc2UgYXMgSlNPTlxuICAgICAgdGhpcy5kYXRhID0gSlNPTi5wYXJzZSh0aGlzLmJvZHkpXG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgLy8gRG8gbm90aGluZ1xuICAgIH1cbiAgfVxufVxuXG4vKiogQ2hlY2tzIHdoZXRoZXIgdGhlIFdlYkhvb2sgaGFzIHZhbGlkIGJvZHkgYW5kIHNpZ25hdHVyZS5cbiAqXG4gKiBAcGFyYW0ge1Rva2VufFRva2VuW119IGxpc3Qgb2YgYWRkaXRpb25hbCB0b2tlbnMgdG8gYmUgdmFsaWRhdGVkIGFnYWluc3RcbiAqIEByZXR1cm5zIHtCb29sZWFufVxuICovXG5XZWJIb29rLnByb3RvdHlwZS5pc1ZhbGlkID0gZnVuY3Rpb24gKGV4dHJhVG9rZW5zKSB7XG4gIGlmICghdGhpcy5pc0JvZHlWYWxpZCgpKSB7XG4gICAgcmV0dXJuIGZhbHNlXG4gIH1cblxuICBleHRyYVRva2VucyA9IGV4dHJhVG9rZW5zIHx8IFtdXG4gIGlmICghKGV4dHJhVG9rZW5zIGluc3RhbmNlb2YgQXJyYXkpKSB7XG4gICAgZXh0cmFUb2tlbnMgPSBbZXh0cmFUb2tlbnNdXG4gIH1cblxuICBjb25zdCB0b2tlbnMgPSBbdGhpcy50b2tlbl0uY29uY2F0KGV4dHJhVG9rZW5zKVxuICBmb3IgKGNvbnN0IGkgaW4gdG9rZW5zKSB7XG4gICAgbGV0IHRva2VuID0gdG9rZW5zW2ldXG4gICAgaWYgKHRva2VuIGluc3RhbmNlb2YgVG9rZW4gPT09IGZhbHNlKSB7XG4gICAgICB0b2tlbiA9IG5ldyBUb2tlbih0b2tlbi5rZXksIHRva2VuLnNlY3JldClcbiAgICB9XG4gICAgaWYgKHRoaXMua2V5ID09IHRva2VuLmtleSAmJiB0b2tlbi52ZXJpZnkodGhpcy5ib2R5LCB0aGlzLnNpZ25hdHVyZSkpIHtcbiAgICAgIHJldHVybiB0cnVlXG4gICAgfVxuICB9XG4gIHJldHVybiBmYWxzZVxufVxuXG4vKiogQ2hlY2tzIHdoZXRoZXIgdGhlIFdlYkhvb2sgY29udGVudCB0eXBlIGlzIHZhbGlkLlxuICpcbiAqIEZvciBub3csIHRoZSBvbmx5IHZhbGlkIFdlYkhvb2tzIGhhdmUgY29udGVudCB0eXBlIG9mIGFwcGxpY2F0aW9uL2pzb24uXG4gKlxuICogQHJldHVybnMge0Jvb2xlYW59XG4gKi9cbldlYkhvb2sucHJvdG90eXBlLmlzQ29udGVudFR5cGVWYWxpZCA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIHRoaXMuY29udGVudFR5cGUgPT09IFwiYXBwbGljYXRpb24vanNvblwiXG59XG5cbi8qKiBDaGVja3Mgd2hldGhlciB0aGUgV2ViSG9vayBjb250ZW50IHR5cGUgYW5kIGJvZHkgaXMgSlNPTi5cbiAqXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAqL1xuV2ViSG9vay5wcm90b3R5cGUuaXNCb2R5VmFsaWQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzLmRhdGEgIT09IHVuZGVmaW5lZFxufVxuXG4vKiogUmV0dXJucyBhbGwgV2ViSG9vayBkYXRhLlxuICpcbiAqIEB0aHJvd3MgV2ViSG9va0Vycm9yIHdoZW4gV2ViSG9vayBpcyBpbnZhbGlkXG4gKiBAcmV0dXJucyB7T2JqZWN0fVxuICovXG5XZWJIb29rLnByb3RvdHlwZS5nZXREYXRhID0gZnVuY3Rpb24gKCkge1xuICBpZiAoIXRoaXMuaXNCb2R5VmFsaWQoKSkge1xuICAgIHRocm93IG5ldyBlcnJvcnMuV2ViSG9va0Vycm9yKFxuICAgICAgXCJJbnZhbGlkIFdlYkhvb2sgYm9keVwiLFxuICAgICAgdGhpcy5jb250ZW50VHlwZSxcbiAgICAgIHRoaXMuYm9keSxcbiAgICAgIHRoaXMuc2lnbmF0dXJlXG4gICAgKVxuICB9XG4gIHJldHVybiB0aGlzLmRhdGFcbn1cblxuLyoqIFJldHVybnMgV2ViSG9vayBldmVudHMgYXJyYXkuXG4gKlxuICogQHRocm93cyBXZWJIb29rRXJyb3Igd2hlbiBXZWJIb29rIGlzIGludmFsaWRcbiAqIEByZXR1cm5zIHtPYmplY3RbXX1cbiAqL1xuV2ViSG9vay5wcm90b3R5cGUuZ2V0RXZlbnRzID0gZnVuY3Rpb24gKCkge1xuICByZXR1cm4gdGhpcy5nZXREYXRhKCkuZXZlbnRzXG59XG5cbi8qKiBSZXR1cm5zIFdlYkhvb2sgdGltZXN0YW1wLlxuICpcbiAqIEB0aHJvd3MgV2ViSG9va0Vycm9yIHdoZW4gV2ViSG9vayBpcyBpbnZhbGlkXG4gKiBAcmV0dXJucyB7RGF0ZX1cbiAqL1xuV2ViSG9vay5wcm90b3R5cGUuZ2V0VGltZSA9IGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKHRoaXMuZ2V0RGF0YSgpLnRpbWVfbXMpXG59XG5cbm1vZHVsZS5leHBvcnRzID0gV2ViSG9va1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/pusher/lib/webhook.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = __webpack_require__(/*! buffer */ \"(app-pages-browser)/./node_modules/next/dist/compiled/buffer/index.js\")\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zYWZlLWJ1ZmZlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0EsYUFBYSxtQkFBTyxDQUFDLHFGQUFRO0FBQzdCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQTtBQUNBLEVBQUUsY0FBYztBQUNoQjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3NhZmUtYnVmZmVyL2luZGV4LmpzPzZlYmYiXSwic291cmNlc0NvbnRlbnQiOlsiLyohIHNhZmUtYnVmZmVyLiBNSVQgTGljZW5zZS4gRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnL29wZW5zb3VyY2U+ICovXG4vKiBlc2xpbnQtZGlzYWJsZSBub2RlL25vLWRlcHJlY2F0ZWQtYXBpICovXG52YXIgYnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyJylcbnZhciBCdWZmZXIgPSBidWZmZXIuQnVmZmVyXG5cbi8vIGFsdGVybmF0aXZlIHRvIHVzaW5nIE9iamVjdC5rZXlzIGZvciBvbGQgYnJvd3NlcnNcbmZ1bmN0aW9uIGNvcHlQcm9wcyAoc3JjLCBkc3QpIHtcbiAgZm9yICh2YXIga2V5IGluIHNyYykge1xuICAgIGRzdFtrZXldID0gc3JjW2tleV1cbiAgfVxufVxuaWYgKEJ1ZmZlci5mcm9tICYmIEJ1ZmZlci5hbGxvYyAmJiBCdWZmZXIuYWxsb2NVbnNhZmUgJiYgQnVmZmVyLmFsbG9jVW5zYWZlU2xvdykge1xuICBtb2R1bGUuZXhwb3J0cyA9IGJ1ZmZlclxufSBlbHNlIHtcbiAgLy8gQ29weSBwcm9wZXJ0aWVzIGZyb20gcmVxdWlyZSgnYnVmZmVyJylcbiAgY29weVByb3BzKGJ1ZmZlciwgZXhwb3J0cylcbiAgZXhwb3J0cy5CdWZmZXIgPSBTYWZlQnVmZmVyXG59XG5cbmZ1bmN0aW9uIFNhZmVCdWZmZXIgKGFyZywgZW5jb2RpbmdPck9mZnNldCwgbGVuZ3RoKSB7XG4gIHJldHVybiBCdWZmZXIoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG59XG5cblNhZmVCdWZmZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShCdWZmZXIucHJvdG90eXBlKVxuXG4vLyBDb3B5IHN0YXRpYyBtZXRob2RzIGZyb20gQnVmZmVyXG5jb3B5UHJvcHMoQnVmZmVyLCBTYWZlQnVmZmVyKVxuXG5TYWZlQnVmZmVyLmZyb20gPSBmdW5jdGlvbiAoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpIHtcbiAgaWYgKHR5cGVvZiBhcmcgPT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHJldHVybiBCdWZmZXIoYXJnLCBlbmNvZGluZ09yT2Zmc2V0LCBsZW5ndGgpXG59XG5cblNhZmVCdWZmZXIuYWxsb2MgPSBmdW5jdGlvbiAoc2l6ZSwgZmlsbCwgZW5jb2RpbmcpIHtcbiAgaWYgKHR5cGVvZiBzaXplICE9PSAnbnVtYmVyJykge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0FyZ3VtZW50IG11c3QgYmUgYSBudW1iZXInKVxuICB9XG4gIHZhciBidWYgPSBCdWZmZXIoc2l6ZSlcbiAgaWYgKGZpbGwgIT09IHVuZGVmaW5lZCkge1xuICAgIGlmICh0eXBlb2YgZW5jb2RpbmcgPT09ICdzdHJpbmcnKSB7XG4gICAgICBidWYuZmlsbChmaWxsLCBlbmNvZGluZylcbiAgICB9IGVsc2Uge1xuICAgICAgYnVmLmZpbGwoZmlsbClcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgYnVmLmZpbGwoMClcbiAgfVxuICByZXR1cm4gYnVmXG59XG5cblNhZmVCdWZmZXIuYWxsb2NVbnNhZmUgPSBmdW5jdGlvbiAoc2l6ZSkge1xuICBpZiAodHlwZW9mIHNpemUgIT09ICdudW1iZXInKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcignQXJndW1lbnQgbXVzdCBiZSBhIG51bWJlcicpXG4gIH1cbiAgcmV0dXJuIEJ1ZmZlcihzaXplKVxufVxuXG5TYWZlQnVmZmVyLmFsbG9jVW5zYWZlU2xvdyA9IGZ1bmN0aW9uIChzaXplKSB7XG4gIGlmICh0eXBlb2Ygc2l6ZSAhPT0gJ251bWJlcicpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJylcbiAgfVxuICByZXR1cm4gYnVmZmVyLlNsb3dCdWZmZXIoc2l6ZSlcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/safe-buffer/index.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/string_decoder/lib/string_decoder.js":
/*!***********************************************************!*\
  !*** ./node_modules/string_decoder/lib/string_decoder.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n/*<replacement>*/\n\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(app-pages-browser)/./node_modules/safe-buffer/index.js\").Buffer);\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/string_decoder/lib/string_decoder.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tweetnacl-util/nacl-util.js":
/*!**************************************************!*\
  !*** ./node_modules/tweetnacl-util/nacl-util.js ***!
  \**************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"?da34\")[\"Buffer\"];\n// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if ( true && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy90d2VldG5hY2wtdXRpbC9uYWNsLXV0aWwuanMiLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxLQUE2QjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEOztBQUVBOztBQUVBO0FBQ0EsOEJBQThCLEVBQUUsZUFBZSxFQUFFLG9CQUFvQixFQUFFLGtCQUFrQixFQUFFO0FBQzNGO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsY0FBYztBQUM5QjtBQUNBOztBQUVBO0FBQ0E7QUFDQSxnQkFBZ0IsZ0JBQWdCO0FBQ2hDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxlQUFlLE1BQU07QUFDckI7QUFDQSwyQ0FBMkM7QUFDM0MsaUJBQWlCLE1BQU07QUFDdkI7O0FBRUE7QUFDQTtBQUNBLHlEQUF5RCxNQUFNO0FBQy9EOztBQUVBLE1BQU07QUFDTjtBQUNBLDJDQUEyQztBQUMzQyxvQkFBb0IsTUFBTTtBQUMxQjs7QUFFQTtBQUNBO0FBQ0EsNkRBQTZELE1BQU07QUFDbkU7QUFDQTs7QUFFQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTtBQUNBLGtCQUFrQixTQUFTO0FBQzNCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWM7QUFDaEM7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy90d2VldG5hY2wtdXRpbC9uYWNsLXV0aWwuanM/YzNlNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBXcml0dGVuIGluIDIwMTQtMjAxNiBieSBEbWl0cnkgQ2hlc3RueWtoIGFuZCBEZXZpIE1hbmRpcmkuXG4vLyBQdWJsaWMgZG9tYWluLlxuKGZ1bmN0aW9uKHJvb3QsIGYpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIG1vZHVsZS5leHBvcnRzID0gZigpO1xuICBlbHNlIGlmIChyb290Lm5hY2wpIHJvb3QubmFjbC51dGlsID0gZigpO1xuICBlbHNlIHtcbiAgICByb290Lm5hY2wgPSB7fTtcbiAgICByb290Lm5hY2wudXRpbCA9IGYoKTtcbiAgfVxufSh0aGlzLCBmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIHZhciB1dGlsID0ge307XG5cbiAgZnVuY3Rpb24gdmFsaWRhdGVCYXNlNjQocykge1xuICAgIGlmICghKC9eKD86W0EtWmEtejAtOStcXC9dezJ9W0EtWmEtejAtOStcXC9dezJ9KSooPzpbQS1aYS16MC05K1xcL117Mn09PXxbQS1aYS16MC05K1xcL117M309KT8kLy50ZXN0KHMpKSkge1xuICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignaW52YWxpZCBlbmNvZGluZycpO1xuICAgIH1cbiAgfVxuXG4gIHV0aWwuZGVjb2RlVVRGOCA9IGZ1bmN0aW9uKHMpIHtcbiAgICBpZiAodHlwZW9mIHMgIT09ICdzdHJpbmcnKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdleHBlY3RlZCBzdHJpbmcnKTtcbiAgICB2YXIgaSwgZCA9IHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChzKSksIGIgPSBuZXcgVWludDhBcnJheShkLmxlbmd0aCk7XG4gICAgZm9yIChpID0gMDsgaSA8IGQubGVuZ3RoOyBpKyspIGJbaV0gPSBkLmNoYXJDb2RlQXQoaSk7XG4gICAgcmV0dXJuIGI7XG4gIH07XG5cbiAgdXRpbC5lbmNvZGVVVEY4ID0gZnVuY3Rpb24oYXJyKSB7XG4gICAgdmFyIGksIHMgPSBbXTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSBzLnB1c2goU3RyaW5nLmZyb21DaGFyQ29kZShhcnJbaV0pKTtcbiAgICByZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZShzLmpvaW4oJycpKSk7XG4gIH07XG5cbiAgaWYgKHR5cGVvZiBhdG9iID09PSAndW5kZWZpbmVkJykge1xuICAgIC8vIE5vZGUuanNcblxuICAgIGlmICh0eXBlb2YgQnVmZmVyLmZyb20gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgLy8gTm9kZSB2NiBhbmQgbGF0ZXJcbiAgICAgIHV0aWwuZW5jb2RlQmFzZTY0ID0gZnVuY3Rpb24gKGFycikgeyAvLyB2NiBhbmQgbGF0ZXJcbiAgICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oYXJyKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgICB9O1xuXG4gICAgICB1dGlsLmRlY29kZUJhc2U2NCA9IGZ1bmN0aW9uIChzKSB7XG4gICAgICAgIHZhbGlkYXRlQmFzZTY0KHMpO1xuICAgICAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoQnVmZmVyLmZyb20ocywgJ2Jhc2U2NCcpLCAwKSk7XG4gICAgICB9O1xuXG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIE5vZGUgZWFybGllciB0aGFuIHY2XG4gICAgICB1dGlsLmVuY29kZUJhc2U2NCA9IGZ1bmN0aW9uIChhcnIpIHsgLy8gdjYgYW5kIGxhdGVyXG4gICAgICAgIHJldHVybiAobmV3IEJ1ZmZlcihhcnIpKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgICB9O1xuXG4gICAgICB1dGlsLmRlY29kZUJhc2U2NCA9IGZ1bmN0aW9uKHMpIHtcbiAgICAgICAgdmFsaWRhdGVCYXNlNjQocyk7XG4gICAgICAgIHJldHVybiBuZXcgVWludDhBcnJheShBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChuZXcgQnVmZmVyKHMsICdiYXNlNjQnKSwgMCkpO1xuICAgICAgfTtcbiAgICB9XG5cbiAgfSBlbHNlIHtcbiAgICAvLyBCcm93c2Vyc1xuXG4gICAgdXRpbC5lbmNvZGVCYXNlNjQgPSBmdW5jdGlvbihhcnIpIHtcbiAgICAgIHZhciBpLCBzID0gW10sIGxlbiA9IGFyci5sZW5ndGg7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgbGVuOyBpKyspIHMucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGFycltpXSkpO1xuICAgICAgcmV0dXJuIGJ0b2Eocy5qb2luKCcnKSk7XG4gICAgfTtcblxuICAgIHV0aWwuZGVjb2RlQmFzZTY0ID0gZnVuY3Rpb24ocykge1xuICAgICAgdmFsaWRhdGVCYXNlNjQocyk7XG4gICAgICB2YXIgaSwgZCA9IGF0b2IocyksIGIgPSBuZXcgVWludDhBcnJheShkLmxlbmd0aCk7XG4gICAgICBmb3IgKGkgPSAwOyBpIDwgZC5sZW5ndGg7IGkrKykgYltpXSA9IGQuY2hhckNvZGVBdChpKTtcbiAgICAgIHJldHVybiBiO1xuICAgIH07XG5cbiAgfVxuXG4gIHJldHVybiB1dGlsO1xuXG59KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tweetnacl-util/nacl-util.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/tweetnacl/nacl-fast.js":
/*!*********************************************!*\
  !*** ./node_modules/tweetnacl/nacl-fast.js ***!
  \*********************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (true) {\n    // Node.js.\n    crypto = __webpack_require__(/*! crypto */ \"?5ddf\");\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})( true && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/tweetnacl/nacl-fast.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/pusher/package.json":
/*!******************************************!*\
  !*** ./node_modules/pusher/package.json ***!
  \******************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
module.exports = JSON.parse('{"name":"pusher","description":"Node.js client to interact with the Pusher Channels REST API","version":"5.1.3","author":"Pusher <support@pusher.com>","contributors":[{"name":"fabrik42","email":"fabrik42@gmail.com"},{"name":"Jaewoong Kim","email":"jwoongkim@gmail.com"},{"name":"Phil Leggetter","email":"phil@leggetter.co.uk"},{"name":"Paweł Ledwoń","email":"me@ludvik.pl"}],"dependencies":{"abort-controller":"^3.0.0","is-base64":"^1.1.0","node-fetch":"^2.6.1","tweetnacl":"^1.0.0","tweetnacl-util":"^0.15.0","@types/node-fetch":"^2.5.7"},"devDependencies":{"@types/node":"^14.14.6","eslint":"^7.11.0","expect.js":"=0.3.1","express":"^4.17.1","https-proxy-agent":"^5.0.0","mocha":"^7.2.0","nock":"^12.0.3","prettier":"2.1.2","sinon":"=1.10.2","webpack":"^4.42.1","webpack-cli":"^3.3.11"},"scripts":{"local-test":"npx mocha \'tests/integration/**/*.js\'","test":"npx mocha \'tests/{integration,remote}/**/*.js\'","lint":"npx eslint . && npx prettier --check .","format":"npx prettier --write ."},"keywords":["pusher","websockets","realtime"],"license":"MIT","repository":"git://github.com/pusher/pusher-http-node","main":"lib/pusher","typings":"index.d.ts","engines":{"node":">= 4.0.0"}}');

/***/ })

});